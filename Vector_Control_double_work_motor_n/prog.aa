// Aa code produced by llvm2aa (version 1.0)
$pipe in_data : $float<8,23> $depth 1
$pipe out_data : $float<8,23> $depth 1
$module [fpmul32f] 
$in (x : $float<8,23> y : $float<8,23> )
$out (ret_val__ : $float<8,23>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    ret_val__ := (x * y)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [fpadd32f] 
$in (x : $float<8,23> y : $float<8,23> )
$out (ret_val__ : $float<8,23>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    ret_val__ := (x + y)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [fpsub32f] 
$in (x : $float<8,23> y : $float<8,23> )
$out (ret_val__ : $float<8,23>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    ret_val__ := (x - y)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [fpadd32fi] 
$in (x : $uint<32> y : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    ret_val__ := (y + x)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [fpsub32fi] 
$in (x : $uint<32> y : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    ret_val__ := (x - y)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [udiv32] 
$in (dividend : $uint<32> divisor : $uint<32> )
$out (ret_val__ : $uint<32>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $switch divisor
    $when _b00000000000000000000000000000000 $then 
    $place [bb_0_xx_xloopexit]
    $when _b00000000000000000000000000000001 $then 
    $place [bb_0_bb_1]
    $default 
    $place [bb_0_bb_2]
    $endswitch
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    $place [bb_1_UnifiedReturnBlock]
    //begin: basic-block bb_2
    $merge bb_0_bb_2
    $endmerge
    // compare instruction
    iNsTr_1 := (divisor > dividend )
    // compare instruction
    iNsTr_2 := (dividend < divisor )
    orx_xcond := (iNsTr_1 | iNsTr_2)
    $if orx_xcond $then  $place [bb_2_xx_xloopexit] $else $place [bb_2_bbx_xnph7x_xpreheader] $endif 
    //begin: basic-block bbx_xnph7x_xpreheader
    $merge bb_2_bbx_xnph7x_xpreheader
    $endmerge
    $place [bbx_xnph7x_xpreheader_bbx_xnph7]
    //begin: basic-block bbx_xnph7
    $merge bbx_xnph7x_xpreheader_bbx_xnph7 xx_x_crit_edge_bbx_xnph7
    $phi xx_x016 :=  ( $cast ($uint<32>) iNsTr_13) $on xx_x_crit_edge_bbx_xnph7 ( $cast ($uint<32>) dividend) $on bbx_xnph7x_xpreheader_bbx_xnph7 
    $phi quotientx_x05 :=  ( $cast ($uint<32>) iNsTr_12) $on xx_x_crit_edge_bbx_xnph7 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xpreheader_bbx_xnph7 
    $endmerge
    iNsTr_8 := (xx_x016 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_9 := (iNsTr_8 > divisor )
    $if iNsTr_9 $then  $place [bbx_xnph7_bbx_xnphx_xpreheader] $else $place [bbx_xnph7_xx_x_crit_edge] $endif 
    //begin: basic-block bbx_xnphx_xpreheader
    $merge bbx_xnph7_bbx_xnphx_xpreheader
    $endmerge
    $place [bbx_xnphx_xpreheader_bbx_xnph]
    //begin: basic-block bbx_xnph
    $merge bbx_xnph_bbx_xnph bbx_xnphx_xpreheader_bbx_xnph
    $phi shifted_divisorx_x03 :=  ( $cast ($uint<32>) iNsTr_16) $on bbx_xnph_bbx_xnph ( $cast ($uint<32>) divisor) $on bbx_xnphx_xpreheader_bbx_xnph 
    $phi curr_quotientx_x02 :=  ( $cast ($uint<32>) iNsTr_17) $on bbx_xnph_bbx_xnph ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xpreheader_bbx_xnph 
    $endmerge
    iNsTr_16 := (shifted_divisorx_x03 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_17 := (curr_quotientx_x02 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_18 := (iNsTr_16 < iNsTr_8 )
    $if iNsTr_18 $then  $place [bbx_xnph_bbx_xnph] $else $place [bbx_xnph_xx_x_crit_edgex_xloopexit] $endif 
    //begin: basic-block xx_x_crit_edgex_xloopexit
    $merge bbx_xnph_xx_x_crit_edgex_xloopexit
    $phi xx_xlcssa1 :=  ( $cast ($uint<32>) iNsTr_17) $on bbx_xnph_xx_x_crit_edgex_xloopexit 
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_16) $on bbx_xnph_xx_x_crit_edgex_xloopexit 
    $endmerge
    $place [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
    //begin: basic-block xx_x_crit_edge
    $merge bbx_xnph7_xx_x_crit_edge xx_x_crit_edgex_xloopexit_xx_x_crit_edge
    $phi shifted_divisorx_x0x_xlcssa :=  ( $cast ($uint<32>) divisor) $on bbx_xnph7_xx_x_crit_edge ( $cast ($uint<32>) xx_xlcssa) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge 
    $phi curr_quotientx_x0x_xlcssa :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph7_xx_x_crit_edge ( $cast ($uint<32>) xx_xlcssa1) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge 
    $endmerge
    iNsTr_12 := (curr_quotientx_x0x_xlcssa + quotientx_x05)
    iNsTr_13 := (xx_x016 - shifted_divisorx_x0x_xlcssa)
    // compare instruction
    iNsTr_14 := (iNsTr_13 < divisor )
    $if iNsTr_14 $then  $place [xx_x_crit_edge_xx_xloopexitx_xloopexit] $else $place [xx_x_crit_edge_bbx_xnph7] $endif 
    //begin: basic-block xx_xloopexitx_xloopexit
    $merge xx_x_crit_edge_xx_xloopexitx_xloopexit
    $phi xx_xlcssa2 :=  ( $cast ($uint<32>) iNsTr_12) $on xx_x_crit_edge_xx_xloopexitx_xloopexit 
    $endmerge
    $place [xx_xloopexitx_xloopexit_xx_xloopexit]
    //begin: basic-block xx_xloopexit
    $merge bb_0_xx_xloopexit bb_2_xx_xloopexit xx_xloopexitx_xloopexit_xx_xloopexit
    $phi xx_x0 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ) $on bb_0_xx_xloopexit ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bb_2_xx_xloopexit ( $cast ($uint<32>) xx_xlcssa2) $on xx_xloopexitx_xloopexit_xx_xloopexit 
    $endmerge
    $place [xx_xloopexit_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_1_UnifiedReturnBlock xx_xloopexit_UnifiedReturnBlock
    $phi ret_val__ :=  ( $cast ($uint<32>) dividend) $on bb_1_UnifiedReturnBlock ( $cast ($uint<32>) xx_x0) $on xx_xloopexit_UnifiedReturnBlock 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [fdiv32] 
$in (a : $float<8,23> b : $float<8,23> )
$out (ret_val__ : $float<8,23>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    tmp10 := ($bitcast ($uint<32>) a)
    tmp6 := ($bitcast ($uint<32>) b)
    // compare instruction
    iNsTr_0 := (a == ( $bitcast ($float<8,23> ) _f0.000000e+00 )  )
    $if iNsTr_0 $then  $place [bb_0_bb_15] $else $place [bb_0_bb_1] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_3 := (tmp10 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_4 := (iNsTr_3 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_5 := (tmp6 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_6 := (iNsTr_5 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_7 := (tmp10 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_8 := (iNsTr_7 & ( $bitcast ($uint<32> ) _b00111111111111111111111110000000 ) )
    iNsTr_9 := (iNsTr_8 | ( $bitcast ($uint<32> ) _b01000000000000000000000000000000 ) )
    iNsTr_10 := (tmp6 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_11 := (iNsTr_10 & ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_12 := (iNsTr_11 | ( $bitcast ($uint<32> ) _b00000000000000010000000000000000 ) )
    iNsTr_13 := (tmp6 ^ tmp10)
    iNsTr_14 := (iNsTr_13 & ( $bitcast ($uint<32> ) _b10000000000000000000000000000000 ) )
    iNsTr_15 := (iNsTr_4 - iNsTr_6)
    $switch iNsTr_12
    $when _b00000000000000000000000000000000 $then 
    $place [bb_1_xx_xloopexitx_xi]
    $when _b00000000000000000000000000000001 $then 
    $place [bb_1_udiv32x_xexitx_xpreheader]
    $default 
    $place [bb_1_bbx_xnph7x_xix_xpreheader]
    $endswitch
    //begin: basic-block bbx_xnph7x_xix_xpreheader
    $merge bb_1_bbx_xnph7x_xix_xpreheader
    $endmerge
    $place [bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi]
    //begin: basic-block bbx_xnph7x_xi
    $merge bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi xx_x_crit_edgex_xi_bbx_xnph7x_xi
    $phi xx_x016x_xi :=  ( $cast ($uint<32>) iNsTr_36) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi ( $cast ($uint<32>) iNsTr_9) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi 
    $phi quotientx_x05x_xi :=  ( $cast ($uint<32>) iNsTr_35) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi 
    $endmerge
    iNsTr_24 := (xx_x016x_xi >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_25 := (iNsTr_24 > iNsTr_12 )
    $if iNsTr_25 $then  $place [bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader] $else $place [bbx_xnph7x_xi_xx_x_crit_edgex_xi] $endif 
    //begin: basic-block bbx_xnphx_xix_xpreheader
    $merge bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xix_xpreheader_bbx_xnphx_xi]
    //begin: basic-block bbx_xnphx_xi
    $merge bbx_xnphx_xi_bbx_xnphx_xi bbx_xnphx_xix_xpreheader_bbx_xnphx_xi
    $phi shifted_divisorx_x03x_xi :=  ( $cast ($uint<32>) iNsTr_45) $on bbx_xnphx_xi_bbx_xnphx_xi ( $cast ($uint<32>) iNsTr_12) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi 
    $phi curr_quotientx_x02x_xi :=  ( $cast ($uint<32>) iNsTr_46) $on bbx_xnphx_xi_bbx_xnphx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi 
    $endmerge
    iNsTr_45 := (shifted_divisorx_x03x_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_46 := (curr_quotientx_x02x_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_47 := (iNsTr_45 < iNsTr_24 )
    $if iNsTr_47 $then  $place [bbx_xnphx_xi_bbx_xnphx_xi] $else $place [bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xloopexit
    $merge bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit
    $phi xx_xlcssa2 :=  ( $cast ($uint<32>) iNsTr_46) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit 
    $phi xx_xlcssa1 :=  ( $cast ($uint<32>) iNsTr_45) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit 
    $endmerge
    $place [xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi]
    //begin: basic-block xx_x_crit_edgex_xi
    $merge bbx_xnph7x_xi_xx_x_crit_edgex_xi xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi
    $phi shifted_divisorx_x0x_xlcssax_xi :=  ( $cast ($uint<32>) iNsTr_12) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi ( $cast ($uint<32>) xx_xlcssa1) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi 
    $phi curr_quotientx_x0x_xlcssax_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi ( $cast ($uint<32>) xx_xlcssa2) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi 
    $endmerge
    iNsTr_35 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
    iNsTr_36 := (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
    // compare instruction
    iNsTr_37 := (iNsTr_36 < iNsTr_12 )
    $if iNsTr_37 $then  $place [xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit] $else $place [xx_x_crit_edgex_xi_bbx_xnph7x_xi] $endif 
    //begin: basic-block xx_xloopexitx_xix_xloopexit
    $merge xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit
    $phi xx_xlcssa3 :=  ( $cast ($uint<32>) iNsTr_35) $on xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit 
    $endmerge
    $place [xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi]
    //begin: basic-block xx_xloopexitx_xi
    $merge bb_1_xx_xloopexitx_xi xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi
    $phi xx_x0x_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ) $on bb_1_xx_xloopexitx_xi ( $cast ($uint<32>) xx_xlcssa3) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi 
    $endmerge
    $place [xx_xloopexitx_xi_udiv32x_xexitx_xpreheader]
    //begin: basic-block udiv32x_xexitx_xpreheader
    $merge bb_1_udiv32x_xexitx_xpreheader xx_xloopexitx_xi_udiv32x_xexitx_xpreheader
    $phi tempx_x0x_xph :=  ( $cast ($uint<32>) xx_x0x_xi) $on xx_xloopexitx_xi_udiv32x_xexitx_xpreheader ( $cast ($uint<32>) iNsTr_9) $on bb_1_udiv32x_xexitx_xpreheader 
    $endmerge
    iNsTr_20 := (tempx_x0x_xph & ( $bitcast ($uint<32> ) _b00000000100000000000000000000000 ) )
    // compare instruction
    iNsTr_21 := (iNsTr_20 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // compare instruction
    iNsTr_22 := ( ($bitcast ( $int<32>) tempx_x0x_xph) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcond11 := (iNsTr_21 & iNsTr_22)
    $if orx_xcond11 $then  $place [udiv32x_xexitx_xpreheader_bbx_xnph] $else $place [udiv32x_xexitx_xpreheader_xx_xcritedge] $endif 
    //begin: basic-block bbx_xnph
    $merge udiv32x_xexitx_xpreheader_bbx_xnph
    $endmerge
    tmp21 := (iNsTr_4 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
    $place [bbx_xnph_udiv32x_xexit]
    //begin: basic-block udiv32x_xexit
    $merge bbx_xnph_udiv32x_xexit udiv32x_xexit_udiv32x_xexit
    $phi iNsTr_39 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph_udiv32x_xexit ( $cast ($uint<32>) indvarx_xnext) $on udiv32x_xexit_udiv32x_xexit 
    $phi tempx_x012 :=  ( $cast ($uint<32>) tempx_x0x_xph) $on bbx_xnph_udiv32x_xexit ( $cast ($uint<32>) iNsTr_40) $on udiv32x_xexit_udiv32x_xexit 
    $endmerge
    iNsTr_40 := (tempx_x012 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_41 := (iNsTr_40 & ( $bitcast ($uint<32> ) _b00000000100000000000000000000000 ) )
    // compare instruction
    iNsTr_42 := (iNsTr_41 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // compare instruction
    iNsTr_43 := ( ($bitcast ( $int<32>) iNsTr_40) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcond := (iNsTr_42 & iNsTr_43)
    indvarx_xnext := (iNsTr_39 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if orx_xcond $then  $place [udiv32x_xexit_udiv32x_xexit] $else $place [udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge] $endif 
    //begin: basic-block udiv32x_xexitx_xx_xcritedge_crit_edge
    $merge udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_40) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge 
    $phi indvarx_xlcssa :=  ( $cast ($uint<32>) iNsTr_39) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge 
    $endmerge
    tmp25 := (tmp21 - iNsTr_6)
    tmp26 := (tmp25 - indvarx_xlcssa)
    $place [udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge]
    //begin: basic-block xx_xcritedge
    $merge udiv32x_xexitx_xpreheader_xx_xcritedge udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge
    $phi expx_x0x_xlcssa :=  ( $cast ($uint<32>) tmp26) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge ( $cast ($uint<32>) iNsTr_15) $on udiv32x_xexitx_xpreheader_xx_xcritedge 
    $phi tempx_x0x_xlcssa :=  ( $cast ($uint<32>) xx_xlcssa) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge ( $cast ($uint<32>) tempx_x0x_xph) $on udiv32x_xexitx_xpreheader_xx_xcritedge 
    $endmerge
    iNsTr_28 := (tempx_x0x_xlcssa & ( $bitcast ($uint<32> ) _b00000000011111111111111111111111 ) )
    iNsTr_29 := (expx_x0x_xlcssa << ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_30 := (iNsTr_29 + ( $bitcast ($uint<32> ) _b01000100000000000000000000000000 ) )
    iNsTr_31 := (iNsTr_28 | iNsTr_14)
    iNsTr_32 := (iNsTr_31 | iNsTr_30)
    tmp3 := ($bitcast ($float<8,23>) iNsTr_32)
    $place [xx_xcritedge_UnifiedReturnBlock]
    //begin: basic-block bb_15
    $merge bb_0_bb_15
    $endmerge
    $place [bb_15_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge bb_15_UnifiedReturnBlock xx_xcritedge_UnifiedReturnBlock
    $phi ret_val__ :=  ( $cast ($float<8,23>) tmp3) $on xx_xcritedge_UnifiedReturnBlock ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on bb_15_UnifiedReturnBlock 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [rotor_flux_calc] 
$in (id : $float<8,23> flux_rotor_prev : $float<8,23> )
$out (ret_val__ : $float<8,23>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (flux_rotor_prev * ( $bitcast ($float<8,23> ) _f9.995200e-01 ) )
    iNsTr_1 := (id * ( $bitcast ($float<8,23> ) _f3.886080e-04 ) )
    ret_val__ := (iNsTr_1 + iNsTr_0)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [omega_calc] 
$in (iq : $float<8,23> flux_rotor : $float<8,23> )
$out (ret_val__ : $float<8,23>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (iq * ( $bitcast ($float<8,23> ) _f7.790627e+00 ) )
    tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0)
    tmp6x_xi := ($bitcast ($uint<32>) flux_rotor)
    // compare instruction
    iNsTr_1 := (iNsTr_0 == ( $bitcast ($float<8,23> ) _f0.000000e+00 )  )
    $if iNsTr_1 $then  $place [bb_0_fdiv32x_xexit] $else $place [bb_0_bb_1] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_4 := (tmp10x_xi >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_5 := (iNsTr_4 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_6 := (tmp6x_xi >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_7 := (iNsTr_6 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_8 := (tmp10x_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_9 := (iNsTr_8 & ( $bitcast ($uint<32> ) _b00111111111111111111111110000000 ) )
    iNsTr_10 := (iNsTr_9 | ( $bitcast ($uint<32> ) _b01000000000000000000000000000000 ) )
    iNsTr_11 := (tmp6x_xi >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_12 := (iNsTr_11 & ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_13 := (iNsTr_12 | ( $bitcast ($uint<32> ) _b00000000000000010000000000000000 ) )
    iNsTr_14 := (tmp6x_xi ^ tmp10x_xi)
    iNsTr_15 := (iNsTr_14 & ( $bitcast ($uint<32> ) _b10000000000000000000000000000000 ) )
    iNsTr_16 := (iNsTr_5 - iNsTr_7)
    $switch iNsTr_13
    $when _b00000000000000000000000000000000 $then 
    $place [bb_1_xx_xloopexitx_xix_xi]
    $when _b00000000000000000000000000000001 $then 
    $place [bb_1_udiv32x_xexitx_xpreheaderx_xi]
    $default 
    $place [bb_1_bbx_xnph7x_xix_xix_xpreheader]
    $endswitch
    //begin: basic-block bbx_xnph7x_xix_xix_xpreheader
    $merge bb_1_bbx_xnph7x_xix_xix_xpreheader
    $endmerge
    $place [bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi]
    //begin: basic-block bbx_xnph7x_xix_xi
    $merge bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi
    $phi xx_x016x_xix_xi :=  ( $cast ($uint<32>) iNsTr_37) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi ( $cast ($uint<32>) iNsTr_10) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi 
    $phi quotientx_x05x_xix_xi :=  ( $cast ($uint<32>) iNsTr_36) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi 
    $endmerge
    iNsTr_25 := (xx_x016x_xix_xi >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_26 := (iNsTr_25 > iNsTr_13 )
    $if iNsTr_26 $then  $place [bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader] $else $place [bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi] $endif 
    //begin: basic-block bbx_xnphx_xix_xix_xpreheader
    $merge bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
    //begin: basic-block bbx_xnphx_xix_xi
    $merge bbx_xnphx_xix_xi_bbx_xnphx_xix_xi bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi
    $phi shifted_divisorx_x03x_xix_xi :=  ( $cast ($uint<32>) iNsTr_46) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi ( $cast ($uint<32>) iNsTr_13) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi 
    $phi curr_quotientx_x02x_xix_xi :=  ( $cast ($uint<32>) iNsTr_47) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi 
    $endmerge
    iNsTr_46 := (shifted_divisorx_x03x_xix_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_47 := (curr_quotientx_x02x_xix_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_48 := (iNsTr_46 < iNsTr_25 )
    $if iNsTr_48 $then  $place [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi] $else $place [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xix_xloopexit
    $merge bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit
    $phi xx_xlcssa3 :=  ( $cast ($uint<32>) iNsTr_47) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit 
    $phi xx_xlcssa2 :=  ( $cast ($uint<32>) iNsTr_46) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit 
    $endmerge
    $place [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
    //begin: basic-block xx_x_crit_edgex_xix_xi
    $merge bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi
    $phi shifted_divisorx_x0x_xlcssax_xix_xi :=  ( $cast ($uint<32>) iNsTr_13) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi ( $cast ($uint<32>) xx_xlcssa2) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi 
    $phi curr_quotientx_x0x_xlcssax_xix_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi ( $cast ($uint<32>) xx_xlcssa3) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi 
    $endmerge
    iNsTr_36 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    iNsTr_37 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    // compare instruction
    iNsTr_38 := (iNsTr_37 < iNsTr_13 )
    $if iNsTr_38 $then  $place [xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit] $else $place [xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi] $endif 
    //begin: basic-block xx_xloopexitx_xix_xix_xloopexit
    $merge xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit
    $phi xx_xlcssa4 :=  ( $cast ($uint<32>) iNsTr_36) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit 
    $endmerge
    $place [xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi]
    //begin: basic-block xx_xloopexitx_xix_xi
    $merge bb_1_xx_xloopexitx_xix_xi xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi
    $phi xx_x0x_xix_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ) $on bb_1_xx_xloopexitx_xix_xi ( $cast ($uint<32>) xx_xlcssa4) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi 
    $endmerge
    $place [xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi]
    //begin: basic-block udiv32x_xexitx_xpreheaderx_xi
    $merge bb_1_udiv32x_xexitx_xpreheaderx_xi xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi
    $phi tempx_x0x_xphx_xi :=  ( $cast ($uint<32>) xx_x0x_xix_xi) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi ( $cast ($uint<32>) iNsTr_10) $on bb_1_udiv32x_xexitx_xpreheaderx_xi 
    $endmerge
    iNsTr_21 := (tempx_x0x_xphx_xi & ( $bitcast ($uint<32> ) _b00000000100000000000000000000000 ) )
    // compare instruction
    iNsTr_22 := (iNsTr_21 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // compare instruction
    iNsTr_23 := ( ($bitcast ( $int<32>) tempx_x0x_xphx_xi) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcond11x_xi := (iNsTr_22 & iNsTr_23)
    $if orx_xcond11x_xi $then  $place [udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader] $else $place [udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi] $endif 
    //begin: basic-block udiv32x_xexitx_xix_xpreheader
    $merge udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader
    $endmerge
    $place [udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi]
    //begin: basic-block udiv32x_xexitx_xi
    $merge udiv32x_xexitx_xi_udiv32x_xexitx_xi udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi
    $phi iNsTr_40 :=  ( $cast ($uint<32>) indvarx_xnextx_xi) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi 
    $phi tempx_x012x_xi :=  ( $cast ($uint<32>) iNsTr_41) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi ( $cast ($uint<32>) tempx_x0x_xphx_xi) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi 
    $endmerge
    iNsTr_41 := (tempx_x012x_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_42 := (iNsTr_41 & ( $bitcast ($uint<32> ) _b00000000100000000000000000000000 ) )
    // compare instruction
    iNsTr_43 := (iNsTr_42 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // compare instruction
    iNsTr_44 := ( ($bitcast ( $int<32>) iNsTr_41) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
    indvarx_xnextx_xi := (iNsTr_40 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if orx_xcondx_xi $then  $place [udiv32x_xexitx_xi_udiv32x_xexitx_xi] $else $place [udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi] $endif 
    //begin: basic-block udiv32x_xexitx_xx_xcritedge_crit_edgex_xi
    $merge udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi
    $phi xx_xlcssa1 :=  ( $cast ($uint<32>) iNsTr_41) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi 
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_40) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi 
    $endmerge
    xx_xnot := (iNsTr_6 | ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    tmp21x_xi := (xx_xnot ^ ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    tmp25x_xi := (tmp21x_xi + iNsTr_5)
    tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    $place [udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi]
    //begin: basic-block xx_xcritedgex_xi
    $merge udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi
    $phi expx_x0x_xlcssax_xi :=  ( $cast ($uint<32>) tmp26x_xi) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi ( $cast ($uint<32>) iNsTr_16) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi 
    $phi tempx_x0x_xlcssax_xi :=  ( $cast ($uint<32>) xx_xlcssa1) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi ( $cast ($uint<32>) tempx_x0x_xphx_xi) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi 
    $endmerge
    iNsTr_29 := (tempx_x0x_xlcssax_xi & ( $bitcast ($uint<32> ) _b00000000011111111111111111111111 ) )
    iNsTr_30 := (expx_x0x_xlcssax_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_31 := (iNsTr_30 + ( $bitcast ($uint<32> ) _b01000100000000000000000000000000 ) )
    iNsTr_32 := (iNsTr_31 | iNsTr_15)
    iNsTr_33 := (iNsTr_32 | iNsTr_29)
    tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_33)
    $place [xx_xcritedgex_xi_UnifiedReturnBlock]
    //begin: basic-block fdiv32x_xexit
    $merge bb_0_fdiv32x_xexit
    $endmerge
    $place [fdiv32x_xexit_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge fdiv32x_xexit_UnifiedReturnBlock xx_xcritedgex_xi_UnifiedReturnBlock
    $phi ret_val__ :=  ( $cast ($float<8,23>) tmp3x_xi) $on xx_xcritedgex_xi_UnifiedReturnBlock ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [theta_calc] 
$in (omega_r : $float<8,23> omega_m : $float<8,23> theta_prev : $float<8,23> del_t : $float<8,23> )
$out (ret_val__ : $float<8,23>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (omega_r + omega_m)
    iNsTr_1 := (iNsTr_0 * del_t)
    ret_val__ := (iNsTr_1 + theta_prev)
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [iq_err_calc] 
$in (torque_ref : $float<8,23> flux_rotor : $float<8,23> )
$out (ret_val__ : $float<8,23>)
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    iNsTr_0 := (torque_ref * ( $bitcast ($float<8,23> ) _f3.465703e-01 ) )
    tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0)
    tmp6x_xi := ($bitcast ($uint<32>) flux_rotor)
    // compare instruction
    iNsTr_1 := (iNsTr_0 == ( $bitcast ($float<8,23> ) _f0.000000e+00 )  )
    $if iNsTr_1 $then  $place [bb_0_fdiv32x_xexit] $else $place [bb_0_bb_1] $endif 
    //begin: basic-block bb_1
    $merge bb_0_bb_1
    $endmerge
    iNsTr_4 := (tmp10x_xi >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_5 := (iNsTr_4 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_6 := (tmp6x_xi >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_7 := (iNsTr_6 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_8 := (tmp10x_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_9 := (iNsTr_8 & ( $bitcast ($uint<32> ) _b00111111111111111111111110000000 ) )
    iNsTr_10 := (iNsTr_9 | ( $bitcast ($uint<32> ) _b01000000000000000000000000000000 ) )
    iNsTr_11 := (tmp6x_xi >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_12 := (iNsTr_11 & ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_13 := (iNsTr_12 | ( $bitcast ($uint<32> ) _b00000000000000010000000000000000 ) )
    iNsTr_14 := (tmp6x_xi ^ tmp10x_xi)
    iNsTr_15 := (iNsTr_14 & ( $bitcast ($uint<32> ) _b10000000000000000000000000000000 ) )
    iNsTr_16 := (iNsTr_5 - iNsTr_7)
    $switch iNsTr_13
    $when _b00000000000000000000000000000000 $then 
    $place [bb_1_xx_xloopexitx_xix_xi]
    $when _b00000000000000000000000000000001 $then 
    $place [bb_1_udiv32x_xexitx_xpreheaderx_xi]
    $default 
    $place [bb_1_bbx_xnph7x_xix_xix_xpreheader]
    $endswitch
    //begin: basic-block bbx_xnph7x_xix_xix_xpreheader
    $merge bb_1_bbx_xnph7x_xix_xix_xpreheader
    $endmerge
    $place [bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi]
    //begin: basic-block bbx_xnph7x_xix_xi
    $merge bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi
    $phi xx_x016x_xix_xi :=  ( $cast ($uint<32>) iNsTr_37) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi ( $cast ($uint<32>) iNsTr_10) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi 
    $phi quotientx_x05x_xix_xi :=  ( $cast ($uint<32>) iNsTr_36) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi 
    $endmerge
    iNsTr_25 := (xx_x016x_xix_xi >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_26 := (iNsTr_25 > iNsTr_13 )
    $if iNsTr_26 $then  $place [bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader] $else $place [bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi] $endif 
    //begin: basic-block bbx_xnphx_xix_xix_xpreheader
    $merge bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
    //begin: basic-block bbx_xnphx_xix_xi
    $merge bbx_xnphx_xix_xi_bbx_xnphx_xix_xi bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi
    $phi shifted_divisorx_x03x_xix_xi :=  ( $cast ($uint<32>) iNsTr_46) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi ( $cast ($uint<32>) iNsTr_13) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi 
    $phi curr_quotientx_x02x_xix_xi :=  ( $cast ($uint<32>) iNsTr_47) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi 
    $endmerge
    iNsTr_46 := (shifted_divisorx_x03x_xix_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_47 := (curr_quotientx_x02x_xix_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_48 := (iNsTr_46 < iNsTr_25 )
    $if iNsTr_48 $then  $place [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi] $else $place [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xix_xloopexit
    $merge bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit
    $phi xx_xlcssa3 :=  ( $cast ($uint<32>) iNsTr_47) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit 
    $phi xx_xlcssa2 :=  ( $cast ($uint<32>) iNsTr_46) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit 
    $endmerge
    $place [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
    //begin: basic-block xx_x_crit_edgex_xix_xi
    $merge bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi
    $phi shifted_divisorx_x0x_xlcssax_xix_xi :=  ( $cast ($uint<32>) iNsTr_13) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi ( $cast ($uint<32>) xx_xlcssa2) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi 
    $phi curr_quotientx_x0x_xlcssax_xix_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi ( $cast ($uint<32>) xx_xlcssa3) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi 
    $endmerge
    iNsTr_36 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    iNsTr_37 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    // compare instruction
    iNsTr_38 := (iNsTr_37 < iNsTr_13 )
    $if iNsTr_38 $then  $place [xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit] $else $place [xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi] $endif 
    //begin: basic-block xx_xloopexitx_xix_xix_xloopexit
    $merge xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit
    $phi xx_xlcssa4 :=  ( $cast ($uint<32>) iNsTr_36) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit 
    $endmerge
    $place [xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi]
    //begin: basic-block xx_xloopexitx_xix_xi
    $merge bb_1_xx_xloopexitx_xix_xi xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi
    $phi xx_x0x_xix_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ) $on bb_1_xx_xloopexitx_xix_xi ( $cast ($uint<32>) xx_xlcssa4) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi 
    $endmerge
    $place [xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi]
    //begin: basic-block udiv32x_xexitx_xpreheaderx_xi
    $merge bb_1_udiv32x_xexitx_xpreheaderx_xi xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi
    $phi tempx_x0x_xphx_xi :=  ( $cast ($uint<32>) xx_x0x_xix_xi) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi ( $cast ($uint<32>) iNsTr_10) $on bb_1_udiv32x_xexitx_xpreheaderx_xi 
    $endmerge
    iNsTr_21 := (tempx_x0x_xphx_xi & ( $bitcast ($uint<32> ) _b00000000100000000000000000000000 ) )
    // compare instruction
    iNsTr_22 := (iNsTr_21 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // compare instruction
    iNsTr_23 := ( ($bitcast ( $int<32>) tempx_x0x_xphx_xi) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcond11x_xi := (iNsTr_22 & iNsTr_23)
    $if orx_xcond11x_xi $then  $place [udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader] $else $place [udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi] $endif 
    //begin: basic-block udiv32x_xexitx_xix_xpreheader
    $merge udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader
    $endmerge
    $place [udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi]
    //begin: basic-block udiv32x_xexitx_xi
    $merge udiv32x_xexitx_xi_udiv32x_xexitx_xi udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi
    $phi iNsTr_40 :=  ( $cast ($uint<32>) indvarx_xnextx_xi) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi 
    $phi tempx_x012x_xi :=  ( $cast ($uint<32>) iNsTr_41) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi ( $cast ($uint<32>) tempx_x0x_xphx_xi) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi 
    $endmerge
    iNsTr_41 := (tempx_x012x_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_42 := (iNsTr_41 & ( $bitcast ($uint<32> ) _b00000000100000000000000000000000 ) )
    // compare instruction
    iNsTr_43 := (iNsTr_42 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // compare instruction
    iNsTr_44 := ( ($bitcast ( $int<32>) iNsTr_41) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
    indvarx_xnextx_xi := (iNsTr_40 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if orx_xcondx_xi $then  $place [udiv32x_xexitx_xi_udiv32x_xexitx_xi] $else $place [udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi] $endif 
    //begin: basic-block udiv32x_xexitx_xx_xcritedge_crit_edgex_xi
    $merge udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi
    $phi xx_xlcssa1 :=  ( $cast ($uint<32>) iNsTr_41) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi 
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_40) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi 
    $endmerge
    xx_xnot := (iNsTr_6 | ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    tmp21x_xi := (xx_xnot ^ ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    tmp25x_xi := (tmp21x_xi + iNsTr_5)
    tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    $place [udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi]
    //begin: basic-block xx_xcritedgex_xi
    $merge udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi
    $phi expx_x0x_xlcssax_xi :=  ( $cast ($uint<32>) tmp26x_xi) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi ( $cast ($uint<32>) iNsTr_16) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi 
    $phi tempx_x0x_xlcssax_xi :=  ( $cast ($uint<32>) xx_xlcssa1) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi ( $cast ($uint<32>) tempx_x0x_xphx_xi) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi 
    $endmerge
    iNsTr_29 := (tempx_x0x_xlcssax_xi & ( $bitcast ($uint<32> ) _b00000000011111111111111111111111 ) )
    iNsTr_30 := (expx_x0x_xlcssax_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_31 := (iNsTr_30 + ( $bitcast ($uint<32> ) _b01000100000000000000000000000000 ) )
    iNsTr_32 := (iNsTr_31 | iNsTr_15)
    iNsTr_33 := (iNsTr_32 | iNsTr_29)
    tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_33)
    $place [xx_xcritedgex_xi_UnifiedReturnBlock]
    //begin: basic-block fdiv32x_xexit
    $merge bb_0_fdiv32x_xexit
    $endmerge
    $place [fdiv32x_xexit_UnifiedReturnBlock]
    //begin: basic-block UnifiedReturnBlock
    $merge fdiv32x_xexit_UnifiedReturnBlock xx_xcritedgex_xi_UnifiedReturnBlock
    $phi ret_val__ :=  ( $cast ($float<8,23>) tmp3x_xi) $on xx_xcritedgex_xi_UnifiedReturnBlock ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock 
    $endmerge
    $place [return__]
    $merge return__ $endmerge
  }
}
$module [vector_control_daemon] 
$in ()
$out ()
$is 
{
  $branchblock [body] 
  {
    //begin: basic-block bb_0
    $place [bb_0_bb_1]
    //begin: basic-block bb_1
    $merge bb_0_bb_1 fdiv32x_xexit_bb_1
    $phi flux_rotor_lpf_prevx_x0 :=  ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on bb_0_bb_1 ( $cast ($float<8,23>) phitmp33) $on fdiv32x_xexit_bb_1 
    $phi int_flux_err_temp_2x_x0 :=  ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on bb_0_bb_1 ( $cast ($float<8,23>) iNsTr_72) $on fdiv32x_xexit_bb_1 
    $phi speed_err_prevx_x0 :=  ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on bb_0_bb_1 ( $cast ($float<8,23>) iNsTr_21) $on fdiv32x_xexit_bb_1 
    $phi theta_prevx_x0 :=  ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on bb_0_bb_1 ( $cast ($float<8,23>) iNsTr_49) $on fdiv32x_xexit_bb_1 
    $phi flux_rotor_prevx_x0 :=  ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on bb_0_bb_1 ( $cast ($float<8,23>) phitmp31) $on fdiv32x_xexit_bb_1 
    $phi spd_lpf_prevx_x0 :=  ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on bb_0_bb_1 ( $cast ($float<8,23>) phitmp) $on fdiv32x_xexit_bb_1 
    $phi int_speed_err_prevx_x0 :=  ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on bb_0_bb_1 ( $cast ($float<8,23>) iNsTr_24) $on fdiv32x_xexit_bb_1 
    $phi speed_refx_x1 :=  ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on bb_0_bb_1 ( $cast ($float<8,23>) speed_refx_x0) $on fdiv32x_xexit_bb_1 
    $endmerge
    iNsTr_2 := in_data
    iNsTr_4 := in_data
    iNsTr_6 := in_data
    iNsTr_8 := in_data
    iNsTr_10 := in_data
    // compare instruction
    iNsTr_11 := (speed_refx_x1 < iNsTr_8 )
    $if iNsTr_11 $then  $place [bb_1_bb_2] $else $place [bb_1_bb_3] $endif 
    //begin: basic-block bb_2
    $merge bb_1_bb_2
    $endmerge
    iNsTr_13 := ($cast ($float<11,52>) speed_refx_x1)
    iNsTr_14 := (iNsTr_13 + ( $bitcast ($float<11,52> ) _f5.000000e-02 ) )
    iNsTr_15 := ($cast ($float<8,23>) iNsTr_14)
    $place [bb_2_bb_5]
    //begin: basic-block bb_3
    $merge bb_1_bb_3
    $endmerge
    // compare instruction
    iNsTr_17 := (speed_refx_x1 > iNsTr_8 )
    $if iNsTr_17 $then  $place [bb_3_bb_4] $else $place [bb_3_bb_5] $endif 
    //begin: basic-block bb_4
    $merge bb_3_bb_4
    $endmerge
    iNsTr_28 := ($cast ($float<11,52>) speed_refx_x1)
    iNsTr_29 := (iNsTr_28 + ( $bitcast ($float<11,52> ) _f-5.000000e-02 ) )
    iNsTr_30 := ($cast ($float<8,23>) iNsTr_29)
    $place [bb_4_bb_5]
    //begin: basic-block bb_5
    $merge bb_2_bb_5 bb_3_bb_5 bb_4_bb_5
    $phi speed_refx_x0 :=  ( $cast ($float<8,23>) iNsTr_15) $on bb_2_bb_5 ( $cast ($float<8,23>) iNsTr_30) $on bb_4_bb_5 ( $cast ($float<8,23>) speed_refx_x1) $on bb_3_bb_5 
    $endmerge
    iNsTr_19 := (iNsTr_6 * ( $bitcast ($float<8,23> ) _f7.000000e-01 ) )
    iNsTr_20 := (iNsTr_19 + spd_lpf_prevx_x0)
    iNsTr_21 := (speed_refx_x0 - iNsTr_20)
    iNsTr_22 := (iNsTr_21 + speed_err_prevx_x0)
    iNsTr_23 := (iNsTr_22 * ( $bitcast ($float<8,23> ) _f2.500000e-04 ) )
    iNsTr_24 := (iNsTr_23 + int_speed_err_prevx_x0)
    iNsTr_25 := ($cast ($float<11,52>) iNsTr_24)
    // compare instruction
    iNsTr_26 := (iNsTr_25 < ( $bitcast ($float<11,52> ) _f-1.000000e+01 )  )
    $if iNsTr_26 $then  $place [bb_5_bb_8] $else $place [bb_5_bb_6] $endif 
    //begin: basic-block bb_6
    $merge bb_5_bb_6
    $endmerge
    // compare instruction
    iNsTr_36 := (iNsTr_25 > ( $bitcast ($float<11,52> ) _f1.000000e+01 )  )
    $if iNsTr_36 $then  $place [bb_6_bb_8] $else $place [bb_6_bb_7] $endif 
    //begin: basic-block bb_7
    $merge bb_6_bb_7
    $endmerge
    $place [bb_7_bb_8]
    //begin: basic-block bb_8
    $merge bb_5_bb_8 bb_6_bb_8 bb_7_bb_8
    $phi int_speed_errx_x0 :=  ( $cast ($float<8,23>) iNsTr_24) $on bb_7_bb_8 ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f-1.000000e+01 ) ) $on bb_5_bb_8 ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f1.000000e+01 ) ) $on bb_6_bb_8 
    $endmerge
    iNsTr_32 := (iNsTr_21 * ( $bitcast ($float<8,23> ) _f5.000000e+00 ) )
    iNsTr_33 := (int_speed_errx_x0 + iNsTr_32)
    // compare instruction
    iNsTr_34 := (iNsTr_33 < ( $bitcast ($float<8,23> ) _f-2.000000e+01 )  )
    $if iNsTr_34 $then  $place [bb_8_bb_11] $else $place [bb_8_bb_9] $endif 
    //begin: basic-block bb_9
    $merge bb_8_bb_9
    $endmerge
    // compare instruction
    iNsTr_43 := (iNsTr_33 > ( $bitcast ($float<8,23> ) _f2.000000e+01 )  )
    $if iNsTr_43 $then  $place [bb_9_bb_11] $else $place [bb_9_bb_10] $endif 
    //begin: basic-block bb_10
    $merge bb_9_bb_10
    $endmerge
    phitmp32 := (iNsTr_33 * ( $bitcast ($float<8,23> ) _f3.465703e-01 ) )
    $place [bb_10_bb_11]
    //begin: basic-block bb_11
    $merge bb_10_bb_11 bb_8_bb_11 bb_9_bb_11
    $phi torque_refx_x0 :=  ( $cast ($float<8,23>) phitmp32) $on bb_10_bb_11 ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f-6.931406e+00 ) ) $on bb_8_bb_11 ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f6.931406e+00 ) ) $on bb_9_bb_11 
    $endmerge
    iNsTr_38 := (iNsTr_2 * ( $bitcast ($float<8,23> ) _f3.886080e-04 ) )
    iNsTr_39 := (iNsTr_38 + flux_rotor_prevx_x0)
    iNsTr_40 := (iNsTr_4 * ( $bitcast ($float<8,23> ) _f7.790627e+00 ) )
    tmp10x_xix_xi1 := ($bitcast ($uint<32>) iNsTr_40)
    tmp6x_xix_xi2 := ($bitcast ($uint<32>) iNsTr_39)
    // compare instruction
    iNsTr_41 := (iNsTr_40 == ( $bitcast ($float<8,23> ) _f0.000000e+00 )  )
    $if iNsTr_41 $then  $place [bb_11_omega_calcx_xexit] $else $place [bb_11_bb_12] $endif 
    //begin: basic-block bb_12
    $merge bb_11_bb_12
    $endmerge
    iNsTr_52 := (tmp10x_xix_xi1 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_53 := (iNsTr_52 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_54 := (tmp6x_xix_xi2 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_55 := (iNsTr_54 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_56 := (tmp10x_xix_xi1 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_57 := (iNsTr_56 & ( $bitcast ($uint<32> ) _b00111111111111111111111110000000 ) )
    iNsTr_58 := (iNsTr_57 | ( $bitcast ($uint<32> ) _b01000000000000000000000000000000 ) )
    iNsTr_59 := (tmp6x_xix_xi2 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_60 := (iNsTr_59 & ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_61 := (iNsTr_60 | ( $bitcast ($uint<32> ) _b00000000000000010000000000000000 ) )
    iNsTr_62 := (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
    iNsTr_63 := (iNsTr_62 & ( $bitcast ($uint<32> ) _b10000000000000000000000000000000 ) )
    iNsTr_64 := (iNsTr_53 - iNsTr_55)
    $switch iNsTr_61
    $when _b00000000000000000000000000000000 $then 
    $place [bb_12_xx_xloopexitx_xix_xix_xi13]
    $when _b00000000000000000000000000000001 $then 
    $place [bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16]
    $default 
    $place [bb_12_bbx_xnph7x_xix_xix_xi5x_xpreheader]
    $endswitch
    //begin: basic-block bbx_xnph7x_xix_xix_xi5x_xpreheader
    $merge bb_12_bbx_xnph7x_xix_xix_xi5x_xpreheader
    $endmerge
    $place [bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5]
    //begin: basic-block bbx_xnph7x_xix_xix_xi5
    $merge bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5
    $phi xx_x016x_xix_xix_xi3 :=  ( $cast ($uint<32>) iNsTr_137) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5 ( $cast ($uint<32>) iNsTr_58) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 
    $phi quotientx_x05x_xix_xix_xi4 :=  ( $cast ($uint<32>) iNsTr_136) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 
    $endmerge
    iNsTr_108 := (xx_x016x_xix_xix_xi3 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_109 := (iNsTr_108 > iNsTr_61 )
    $if iNsTr_109 $then  $place [bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader] $else $place [bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11] $endif 
    //begin: basic-block bbx_xnphx_xix_xix_xi8x_xpreheader
    $merge bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader
    $endmerge
    $place [bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8]
    //begin: basic-block bbx_xnphx_xix_xix_xi8
    $merge bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8 bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8
    $phi shifted_divisorx_x03x_xix_xix_xi6 :=  ( $cast ($uint<32>) iNsTr_162) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8 ( $cast ($uint<32>) iNsTr_61) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 
    $phi curr_quotientx_x02x_xix_xix_xi7 :=  ( $cast ($uint<32>) iNsTr_163) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 
    $endmerge
    iNsTr_162 := (shifted_divisorx_x03x_xix_xix_xi6 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_163 := (curr_quotientx_x02x_xix_xix_xi7 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_164 := (iNsTr_162 < iNsTr_108 )
    $if iNsTr_164 $then  $place [bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8] $else $place [bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xix_xi11x_xloopexit
    $merge bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit
    $phi xx_xlcssa13 :=  ( $cast ($uint<32>) iNsTr_163) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit 
    $phi xx_xlcssa12 :=  ( $cast ($uint<32>) iNsTr_162) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit 
    $endmerge
    $place [xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11]
    //begin: basic-block xx_x_crit_edgex_xix_xix_xi11
    $merge bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11 xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11
    $phi shifted_divisorx_x0x_xlcssax_xix_xix_xi9 :=  ( $cast ($uint<32>) iNsTr_61) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11 ( $cast ($uint<32>) xx_xlcssa12) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 
    $phi curr_quotientx_x0x_xlcssax_xix_xix_xi10 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11 ( $cast ($uint<32>) xx_xlcssa13) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 
    $endmerge
    iNsTr_136 := (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
    iNsTr_137 := (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
    // compare instruction
    iNsTr_138 := (iNsTr_137 < iNsTr_61 )
    $if iNsTr_138 $then  $place [xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit] $else $place [xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5] $endif 
    //begin: basic-block xx_xloopexitx_xix_xix_xi13x_xloopexit
    $merge xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit
    $phi xx_xlcssa14 :=  ( $cast ($uint<32>) iNsTr_136) $on xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit 
    $endmerge
    $place [xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13]
    //begin: basic-block xx_xloopexitx_xix_xix_xi13
    $merge bb_12_xx_xloopexitx_xix_xix_xi13 xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13
    $phi xx_x0x_xix_xix_xi12 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ) $on bb_12_xx_xloopexitx_xix_xix_xi13 ( $cast ($uint<32>) xx_xlcssa14) $on xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 
    $endmerge
    $place [xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16]
    //begin: basic-block udiv32x_xexitx_xpreheaderx_xix_xi16
    $merge bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16 xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16
    $phi tempx_x0x_xphx_xix_xi14 :=  ( $cast ($uint<32>) xx_x0x_xix_xix_xi12) $on xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16 ( $cast ($uint<32>) iNsTr_58) $on bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16 
    $endmerge
    iNsTr_92 := (tempx_x0x_xphx_xix_xi14 & ( $bitcast ($uint<32> ) _b00000000100000000000000000000000 ) )
    // compare instruction
    iNsTr_93 := (iNsTr_92 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // compare instruction
    iNsTr_94 := ( ($bitcast ( $int<32>) tempx_x0x_xphx_xix_xi14) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcond11x_xix_xi15 := (iNsTr_93 & iNsTr_94)
    $if orx_xcond11x_xix_xi15 $then  $place [udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader] $else $place [udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29] $endif 
    //begin: basic-block udiv32x_xexitx_xix_xi20x_xpreheader
    $merge udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader
    $endmerge
    $place [udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20]
    //begin: basic-block udiv32x_xexitx_xix_xi20
    $merge udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20 udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20
    $phi iNsTr_140 :=  ( $cast ($uint<32>) indvarx_xnextx_xix_xi19) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 
    $phi tempx_x012x_xix_xi17 :=  ( $cast ($uint<32>) iNsTr_141) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20 ( $cast ($uint<32>) tempx_x0x_xphx_xix_xi14) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 
    $endmerge
    iNsTr_141 := (tempx_x012x_xix_xi17 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_142 := (iNsTr_141 & ( $bitcast ($uint<32> ) _b00000000100000000000000000000000 ) )
    // compare instruction
    iNsTr_143 := (iNsTr_142 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // compare instruction
    iNsTr_144 := ( ($bitcast ( $int<32>) iNsTr_141) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcondx_xix_xi18 := (iNsTr_143 & iNsTr_144)
    indvarx_xnextx_xix_xi19 := (iNsTr_140 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if orx_xcondx_xix_xi18 $then  $place [udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20] $else $place [udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25] $endif 
    //begin: basic-block udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25
    $merge udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25
    $phi xx_xlcssa11 :=  ( $cast ($uint<32>) iNsTr_141) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25 
    $phi xx_xlcssa10 :=  ( $cast ($uint<32>) iNsTr_140) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25 
    $endmerge
    xx_xnotx_xi21 := (iNsTr_54 | ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    tmp21x_xix_xi22 := (xx_xnotx_xi21 ^ ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    tmp25x_xix_xi23 := (tmp21x_xix_xi22 + iNsTr_53)
    tmp26x_xix_xi24 := (tmp25x_xix_xi23 - xx_xlcssa10)
    $place [udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29]
    //begin: basic-block xx_xcritedgex_xix_xi29
    $merge udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29
    $phi expx_x0x_xlcssax_xix_xi26 :=  ( $cast ($uint<32>) tmp26x_xix_xi24) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29 ( $cast ($uint<32>) iNsTr_64) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 
    $phi tempx_x0x_xlcssax_xix_xi27 :=  ( $cast ($uint<32>) xx_xlcssa11) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29 ( $cast ($uint<32>) tempx_x0x_xphx_xix_xi14) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 
    $endmerge
    iNsTr_112 := (tempx_x0x_xlcssax_xix_xi27 & ( $bitcast ($uint<32> ) _b00000000011111111111111111111111 ) )
    iNsTr_113 := (expx_x0x_xlcssax_xix_xi26 << ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_114 := (iNsTr_113 + ( $bitcast ($uint<32> ) _b01000100000000000000000000000000 ) )
    iNsTr_115 := (iNsTr_112 | iNsTr_63)
    iNsTr_116 := (iNsTr_115 | iNsTr_114)
    tmp3x_xix_xi28 := ($bitcast ($float<8,23>) iNsTr_116)
    $place [xx_xcritedgex_xix_xi29_omega_calcx_xexit]
    //begin: basic-block omega_calcx_xexit
    $merge bb_11_omega_calcx_xexit xx_xcritedgex_xix_xi29_omega_calcx_xexit
    $phi iNsTr_46 :=  ( $cast ($float<8,23>) tmp3x_xix_xi28) $on xx_xcritedgex_xix_xi29_omega_calcx_xexit ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on bb_11_omega_calcx_xexit 
    $endmerge
    iNsTr_47 := (iNsTr_46 + iNsTr_10)
    iNsTr_48 := (iNsTr_47 * ( $bitcast ($float<8,23> ) _f5.000000e-05 ) )
    iNsTr_49 := (iNsTr_48 + theta_prevx_x0)
    tmp10x_xix_xi := ($bitcast ($uint<32>) torque_refx_x0)
    // compare instruction
    iNsTr_50 := (torque_refx_x0 == ( $bitcast ($float<8,23> ) _f0.000000e+00 )  )
    $if iNsTr_50 $then  $place [omega_calcx_xexit_iq_err_calcx_xexit] $else $place [omega_calcx_xexit_bb_27] $endif 
    //begin: basic-block bb_27
    $merge omega_calcx_xexit_bb_27
    $endmerge
    iNsTr_76 := (tmp10x_xix_xi >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_77 := (iNsTr_76 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_78 := (tmp6x_xix_xi2 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_79 := (iNsTr_78 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_80 := (tmp10x_xix_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_81 := (iNsTr_80 & ( $bitcast ($uint<32> ) _b00111111111111111111111110000000 ) )
    iNsTr_82 := (iNsTr_81 | ( $bitcast ($uint<32> ) _b01000000000000000000000000000000 ) )
    iNsTr_83 := (tmp6x_xix_xi2 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_84 := (iNsTr_83 & ( $bitcast ($uint<32> ) _b00000000000000001111111111111111 ) )
    iNsTr_85 := (iNsTr_84 | ( $bitcast ($uint<32> ) _b00000000000000010000000000000000 ) )
    iNsTr_86 := (tmp10x_xix_xi ^ tmp6x_xix_xi2)
    iNsTr_87 := (iNsTr_86 & ( $bitcast ($uint<32> ) _b10000000000000000000000000000000 ) )
    iNsTr_88 := (iNsTr_77 - iNsTr_79)
    $switch iNsTr_85
    $when _b00000000000000000000000000000000 $then 
    $place [bb_27_xx_xloopexitx_xix_xix_xi]
    $when _b00000000000000000000000000000001 $then 
    $place [bb_27_udiv32x_xexitx_xpreheaderx_xix_xi]
    $default 
    $place [bb_27_bbx_xnph7x_xix_xix_xix_xpreheader]
    $endswitch
    //begin: basic-block bbx_xnph7x_xix_xix_xix_xpreheader
    $merge bb_27_bbx_xnph7x_xix_xix_xix_xpreheader
    $endmerge
    $place [bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi]
    //begin: basic-block bbx_xnph7x_xix_xix_xi
    $merge bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi
    $phi xx_x016x_xix_xix_xi :=  ( $cast ($uint<32>) iNsTr_153) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi ( $cast ($uint<32>) iNsTr_82) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi 
    $phi quotientx_x05x_xix_xix_xi :=  ( $cast ($uint<32>) iNsTr_152) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi 
    $endmerge
    iNsTr_125 := (xx_x016x_xix_xix_xi >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_126 := (iNsTr_125 > iNsTr_85 )
    $if iNsTr_126 $then  $place [bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader] $else $place [bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi] $endif 
    //begin: basic-block bbx_xnphx_xix_xix_xix_xpreheader
    $merge bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi]
    //begin: basic-block bbx_xnphx_xix_xix_xi
    $merge bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi
    $phi shifted_divisorx_x03x_xix_xix_xi :=  ( $cast ($uint<32>) iNsTr_183) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi ( $cast ($uint<32>) iNsTr_85) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi 
    $phi curr_quotientx_x02x_xix_xix_xi :=  ( $cast ($uint<32>) iNsTr_184) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi 
    $endmerge
    iNsTr_183 := (shifted_divisorx_x03x_xix_xix_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_184 := (curr_quotientx_x02x_xix_xix_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_185 := (iNsTr_183 < iNsTr_125 )
    $if iNsTr_185 $then  $place [bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi] $else $place [bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xix_xix_xloopexit
    $merge bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit
    $phi xx_xlcssa8 :=  ( $cast ($uint<32>) iNsTr_184) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit 
    $phi xx_xlcssa7 :=  ( $cast ($uint<32>) iNsTr_183) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit 
    $endmerge
    $place [xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi]
    //begin: basic-block xx_x_crit_edgex_xix_xix_xi
    $merge bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi
    $phi shifted_divisorx_x0x_xlcssax_xix_xix_xi :=  ( $cast ($uint<32>) iNsTr_85) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi ( $cast ($uint<32>) xx_xlcssa7) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi 
    $phi curr_quotientx_x0x_xlcssax_xix_xix_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi ( $cast ($uint<32>) xx_xlcssa8) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi 
    $endmerge
    iNsTr_152 := (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
    iNsTr_153 := (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
    // compare instruction
    iNsTr_154 := (iNsTr_153 < iNsTr_85 )
    $if iNsTr_154 $then  $place [xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit] $else $place [xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi] $endif 
    //begin: basic-block xx_xloopexitx_xix_xix_xix_xloopexit
    $merge xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit
    $phi xx_xlcssa9 :=  ( $cast ($uint<32>) iNsTr_152) $on xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit 
    $endmerge
    $place [xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi]
    //begin: basic-block xx_xloopexitx_xix_xix_xi
    $merge bb_27_xx_xloopexitx_xix_xix_xi xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi
    $phi xx_x0x_xix_xix_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) ) $on bb_27_xx_xloopexitx_xix_xix_xi ( $cast ($uint<32>) xx_xlcssa9) $on xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi 
    $endmerge
    $place [xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi]
    //begin: basic-block udiv32x_xexitx_xpreheaderx_xix_xi
    $merge bb_27_udiv32x_xexitx_xpreheaderx_xix_xi xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi
    $phi tempx_x0x_xphx_xix_xi :=  ( $cast ($uint<32>) xx_x0x_xix_xix_xi) $on xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi ( $cast ($uint<32>) iNsTr_82) $on bb_27_udiv32x_xexitx_xpreheaderx_xix_xi 
    $endmerge
    iNsTr_104 := (tempx_x0x_xphx_xix_xi & ( $bitcast ($uint<32> ) _b00000000100000000000000000000000 ) )
    // compare instruction
    iNsTr_105 := (iNsTr_104 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // compare instruction
    iNsTr_106 := ( ($bitcast ( $int<32>) tempx_x0x_xphx_xix_xi) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcond11x_xix_xi := (iNsTr_105 & iNsTr_106)
    $if orx_xcond11x_xix_xi $then  $place [udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader] $else $place [udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi] $endif 
    //begin: basic-block udiv32x_xexitx_xix_xix_xpreheader
    $merge udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader
    $endmerge
    $place [udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi]
    //begin: basic-block udiv32x_xexitx_xix_xi
    $merge udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi
    $phi iNsTr_156 :=  ( $cast ($uint<32>) indvarx_xnextx_xix_xi) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi 
    $phi tempx_x012x_xix_xi :=  ( $cast ($uint<32>) iNsTr_157) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi ( $cast ($uint<32>) tempx_x0x_xphx_xix_xi) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi 
    $endmerge
    iNsTr_157 := (tempx_x012x_xix_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_158 := (iNsTr_157 & ( $bitcast ($uint<32> ) _b00000000100000000000000000000000 ) )
    // compare instruction
    iNsTr_159 := (iNsTr_158 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // compare instruction
    iNsTr_160 := ( ($bitcast ( $int<32>) iNsTr_157) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcondx_xix_xi := (iNsTr_159 & iNsTr_160)
    indvarx_xnextx_xix_xi := (iNsTr_156 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if orx_xcondx_xix_xi $then  $place [udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi] $else $place [udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi] $endif 
    //begin: basic-block udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi
    $merge udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi
    $phi xx_xlcssa6 :=  ( $cast ($uint<32>) iNsTr_157) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi 
    $phi xx_xlcssa5 :=  ( $cast ($uint<32>) iNsTr_156) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi 
    $endmerge
    xx_xnotx_xi := (iNsTr_78 | ( $bitcast ($uint<32> ) _b11111111111111111111111100000000 ) )
    tmp21x_xix_xi := (xx_xnotx_xi ^ ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    tmp25x_xix_xi := (iNsTr_77 + tmp21x_xix_xi)
    tmp26x_xix_xi := (tmp25x_xix_xi - xx_xlcssa5)
    $place [udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi]
    //begin: basic-block xx_xcritedgex_xix_xi
    $merge udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi
    $phi expx_x0x_xlcssax_xix_xi :=  ( $cast ($uint<32>) tmp26x_xix_xi) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi ( $cast ($uint<32>) iNsTr_88) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi 
    $phi tempx_x0x_xlcssax_xix_xi :=  ( $cast ($uint<32>) xx_xlcssa6) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi ( $cast ($uint<32>) tempx_x0x_xphx_xix_xi) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi 
    $endmerge
    iNsTr_129 := (tempx_x0x_xlcssax_xix_xi & ( $bitcast ($uint<32> ) _b00000000011111111111111111111111 ) )
    iNsTr_130 := (expx_x0x_xlcssax_xix_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_131 := (iNsTr_130 + ( $bitcast ($uint<32> ) _b01000100000000000000000000000000 ) )
    iNsTr_132 := (iNsTr_129 | iNsTr_87)
    iNsTr_133 := (iNsTr_132 | iNsTr_131)
    tmp3x_xix_xi := ($bitcast ($float<8,23>) iNsTr_133)
    $place [xx_xcritedgex_xix_xi_iq_err_calcx_xexit]
    //begin: basic-block iq_err_calcx_xexit
    $merge omega_calcx_xexit_iq_err_calcx_xexit xx_xcritedgex_xix_xi_iq_err_calcx_xexit
    $phi iNsTr_67 :=  ( $cast ($float<8,23>) tmp3x_xix_xi) $on xx_xcritedgex_xix_xi_iq_err_calcx_xexit ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on omega_calcx_xexit_iq_err_calcx_xexit 
    $endmerge
    iNsTr_68 := (iNsTr_39 * ( $bitcast ($float<8,23> ) _f5.014000e-03 ) )
    iNsTr_69 := (iNsTr_68 + flux_rotor_lpf_prevx_x0)
    iNsTr_70 := (( $bitcast ($float<8,23> ) _f3.000000e-01 )  - iNsTr_69)
    iNsTr_71 := (iNsTr_70 * ( $bitcast ($float<8,23> ) _f5.000000e-05 ) )
    iNsTr_72 := (iNsTr_71 + int_flux_err_temp_2x_x0)
    iNsTr_73 := (iNsTr_72 * ( $bitcast ($float<8,23> ) _f5.000000e+01 ) )
    // compare instruction
    iNsTr_74 := (iNsTr_73 < ( $bitcast ($float<8,23> ) _f-1.000000e+00 )  )
    $if iNsTr_74 $then  $place [iq_err_calcx_xexit_bb_44] $else $place [iq_err_calcx_xexit_bb_42] $endif 
    //begin: basic-block bb_42
    $merge iq_err_calcx_xexit_bb_42
    $endmerge
    // compare instruction
    iNsTr_100 := (iNsTr_73 > ( $bitcast ($float<8,23> ) _f1.000000e+00 )  )
    $if iNsTr_100 $then  $place [bb_42_bb_44] $else $place [bb_42_bb_43] $endif 
    //begin: basic-block bb_43
    $merge bb_42_bb_43
    $endmerge
    $place [bb_43_bb_44]
    //begin: basic-block bb_44
    $merge bb_42_bb_44 bb_43_bb_44 iq_err_calcx_xexit_bb_44
    $phi int_flux_errx_x0 :=  ( $cast ($float<8,23>) iNsTr_73) $on bb_43_bb_44 ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_44 ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f1.000000e+00 ) ) $on bb_42_bb_44 
    $endmerge
    iNsTr_96 := (iNsTr_70 * ( $bitcast ($float<8,23> ) _f4.000000e+01 ) )
    iNsTr_97 := (int_flux_errx_x0 + iNsTr_96)
    // compare instruction
    iNsTr_98 := (iNsTr_97 < ( $bitcast ($float<8,23> ) _f-2.000000e+00 )  )
    $if iNsTr_98 $then  $place [bb_44_xx_xthread] $else $place [bb_44_bb_45] $endif 
    //begin: basic-block bb_45
    $merge bb_44_bb_45
    $endmerge
    // compare instruction
    iNsTr_122 := (iNsTr_97 > ( $bitcast ($float<8,23> ) _f2.000000e+00 )  )
    $if iNsTr_122 $then  $place [bb_45_xx_xthread] $else $place [bb_45_bb_46] $endif 
    //begin: basic-block bb_46
    $merge bb_45_bb_46
    $endmerge
    // compare instruction
    iNsTr_149 := (iNsTr_97 == ( $bitcast ($float<8,23> ) _f0.000000e+00 )  )
    $if iNsTr_149 $then  $place [bb_46_fdiv32x_xexit] $else $place [bb_46_xx_xthread] $endif 
    //begin: basic-block xx_xthread
    $merge bb_44_xx_xthread bb_45_xx_xthread bb_46_xx_xthread
    $phi tmp10x_xi35x_xin :=  ( $cast ($float<8,23>) iNsTr_97) $on bb_46_xx_xthread ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f-2.000000e+00 ) ) $on bb_44_xx_xthread ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f2.000000e+00 ) ) $on bb_45_xx_xthread 
    $endmerge
    tmp10x_xi35 := ($bitcast ($uint<32>) tmp10x_xi35x_xin)
    iNsTr_118 := (tmp10x_xi35 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 ) )
    iNsTr_119 := (iNsTr_118 & ( $bitcast ($uint<32> ) _b00111111111111111111111110000000 ) )
    iNsTr_120 := (iNsTr_119 | ( $bitcast ($uint<32> ) _b01000000000000000000000000000000 ) )
    $place [xx_xthread_bbx_xnph7x_xix_xi]
    //begin: basic-block bbx_xnph7x_xix_xi
    $merge xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi xx_xthread_bbx_xnph7x_xix_xi
    $phi xx_x016x_xix_xi :=  ( $cast ($uint<32>) iNsTr_170) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi ( $cast ($uint<32>) iNsTr_120) $on xx_xthread_bbx_xnph7x_xix_xi 
    $phi quotientx_x05x_xix_xi :=  ( $cast ($uint<32>) iNsTr_169) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on xx_xthread_bbx_xnph7x_xix_xi 
    $endmerge
    iNsTr_146 := (xx_x016x_xix_xi >> ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_147 := (iNsTr_146 > ( $bitcast ($uint<32> ) _b00000000000000011001111010000011 )  )
    $if iNsTr_147 $then  $place [bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader] $else $place [bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi] $endif 
    //begin: basic-block bbx_xnphx_xix_xix_xpreheader
    $merge bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader
    $endmerge
    $place [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
    //begin: basic-block bbx_xnphx_xix_xi
    $merge bbx_xnphx_xix_xi_bbx_xnphx_xix_xi bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi
    $phi shifted_divisorx_x03x_xix_xi :=  ( $cast ($uint<32>) iNsTr_190) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000011001111010000011 ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi 
    $phi curr_quotientx_x02x_xix_xi :=  ( $cast ($uint<32>) iNsTr_191) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi 
    $endmerge
    iNsTr_190 := (shifted_divisorx_x03x_xix_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_191 := (curr_quotientx_x02x_xix_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    // compare instruction
    iNsTr_192 := (iNsTr_190 < iNsTr_146 )
    $if iNsTr_192 $then  $place [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi] $else $place [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit] $endif 
    //begin: basic-block xx_x_crit_edgex_xix_xix_xloopexit
    $merge bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit
    $phi xx_xlcssa3 :=  ( $cast ($uint<32>) iNsTr_191) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit 
    $phi xx_xlcssa2 :=  ( $cast ($uint<32>) iNsTr_190) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit 
    $endmerge
    $place [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
    //begin: basic-block xx_x_crit_edgex_xix_xi
    $merge bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi
    $phi shifted_divisorx_x0x_xlcssax_xix_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000011001111010000011 ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi ( $cast ($uint<32>) xx_xlcssa2) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi 
    $phi curr_quotientx_x0x_xlcssax_xix_xi :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi ( $cast ($uint<32>) xx_xlcssa3) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi 
    $endmerge
    iNsTr_169 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    iNsTr_170 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    // compare instruction
    iNsTr_171 := (iNsTr_170 < ( $bitcast ($uint<32> ) _b00000000000000011001111010000011 )  )
    $if iNsTr_171 $then  $place [xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi] $else $place [xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi] $endif 
    //begin: basic-block udiv32x_xexitx_xpreheaderx_xi
    $merge xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi
    $phi xx_xlcssa4 :=  ( $cast ($uint<32>) iNsTr_169) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi 
    $endmerge
    iNsTr_194 := (tmp10x_xi35 >> ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_195 := (tmp10x_xi35 & ( $bitcast ($uint<32> ) _b10000000000000000000000000000000 ) )
    iNsTr_196 := (iNsTr_194 & ( $bitcast ($uint<32> ) _b00000000000000000000000011111111 ) )
    iNsTr_197 := (iNsTr_196 + ( $bitcast ($uint<32> ) _b11111111111111111111111110000010 ) )
    iNsTr_198 := (xx_xlcssa4 & ( $bitcast ($uint<32> ) _b00000000100000000000000000000000 ) )
    // compare instruction
    iNsTr_199 := (iNsTr_198 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // compare instruction
    iNsTr_200 := ( ($bitcast ( $int<32>) xx_xlcssa4) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcond11x_xi := (iNsTr_199 & iNsTr_200)
    $if orx_xcond11x_xi $then  $place [udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader] $else $place [udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi] $endif 
    //begin: basic-block udiv32x_xexitx_xix_xpreheader
    $merge udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader
    $endmerge
    $place [udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi]
    //begin: basic-block udiv32x_xexitx_xi
    $merge udiv32x_xexitx_xi_udiv32x_xexitx_xi udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi
    $phi iNsTr_211 :=  ( $cast ($uint<32>) indvarx_xnextx_xi) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi 
    $phi tempx_x012x_xi :=  ( $cast ($uint<32>) iNsTr_212) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi ( $cast ($uint<32>) xx_xlcssa4) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi 
    $endmerge
    iNsTr_212 := (tempx_x012x_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    iNsTr_213 := (iNsTr_212 & ( $bitcast ($uint<32> ) _b00000000100000000000000000000000 ) )
    // compare instruction
    iNsTr_214 := (iNsTr_213 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
    // compare instruction
    iNsTr_215 := ( ($bitcast ( $int<32>) iNsTr_212) !=   ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
    orx_xcondx_xi := (iNsTr_214 & iNsTr_215)
    indvarx_xnextx_xi := (iNsTr_211 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
    $if orx_xcondx_xi $then  $place [udiv32x_xexitx_xi_udiv32x_xexitx_xi] $else $place [udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi] $endif 
    //begin: basic-block udiv32x_xexitx_xx_xcritedge_crit_edgex_xi
    $merge udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi
    $phi xx_xlcssa1 :=  ( $cast ($uint<32>) iNsTr_212) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi 
    $phi xx_xlcssa :=  ( $cast ($uint<32>) iNsTr_211) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi 
    $endmerge
    tmp25x_xi := (iNsTr_196 + ( $bitcast ($uint<32> ) _b11111111111111111111111110000001 ) )
    tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    $place [udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi]
    //begin: basic-block xx_xcritedgex_xi
    $merge udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi
    $phi expx_x0x_xlcssax_xi :=  ( $cast ($uint<32>) tmp26x_xi) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi ( $cast ($uint<32>) iNsTr_197) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi 
    $phi tempx_x0x_xlcssax_xi :=  ( $cast ($uint<32>) xx_xlcssa1) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi ( $cast ($uint<32>) xx_xlcssa4) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi 
    $endmerge
    iNsTr_205 := (tempx_x0x_xlcssax_xi & ( $bitcast ($uint<32> ) _b00000000011111111111111111111111 ) )
    iNsTr_206 := (expx_x0x_xlcssax_xi << ( $bitcast ($uint<32> ) _b00000000000000000000000000010111 ) )
    iNsTr_207 := (iNsTr_206 + ( $bitcast ($uint<32> ) _b01000100000000000000000000000000 ) )
    iNsTr_208 := (iNsTr_207 | iNsTr_195)
    iNsTr_209 := (iNsTr_208 | iNsTr_205)
    tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_209)
    $place [xx_xcritedgex_xi_fdiv32x_xexit]
    //begin: basic-block fdiv32x_xexit
    $merge bb_46_fdiv32x_xexit xx_xcritedgex_xi_fdiv32x_xexit
    $phi iNsTr_173 :=  ( $cast ($float<8,23>) tmp3x_xi) $on xx_xcritedgex_xi_fdiv32x_xexit ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _f0.000000e+00 ) ) $on bb_46_fdiv32x_xexit 
    $endmerge
    out_data := iNsTr_173
    out_data := iNsTr_67
    out_data := iNsTr_49
    out_data := iNsTr_39
    phitmp := (iNsTr_20 * ( $bitcast ($float<8,23> ) _f3.000000e-01 ) )
    phitmp31 := (iNsTr_39 * ( $bitcast ($float<8,23> ) _f9.995200e-01 ) )
    phitmp33 := (iNsTr_69 * ( $bitcast ($float<8,23> ) _f9.949860e-01 ) )
    $place [fdiv32x_xexit_bb_1]
  }
}
