// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  in_data : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [in_data] 32 $depth 1 
// $pipe  out_data : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [out_data] 32 $depth 1 
$module [fdiv32] 
{
  $in a:$float<8,23>
  // can point into  foreign( $void )
  b:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fdiv32
  //  file prog.aa, line 159
  // pipe-declarations for block %fdiv32%body
  //  file prog.aa, line 164
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 173
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 197
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 201
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 210
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 214
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 224
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 230
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 240
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 245
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 250
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 261
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 266
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 280
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 288
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 300
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 304
  // pipe-declarations for block %fdiv32%body%
  //  file prog.aa, line 308
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_271] // Branch Block  file prog.aa, line 164
    {
      $P [branch_block_stmt_271__entry__]
      branch_block_stmt_271__entry__ <-| ($entry)
      $P [branch_block_stmt_271__exit__]
      branch_block_stmt_271__exit__ |-> ($exit)
      $P [assign_stmt_275_to_assign_stmt_285__entry__] 
      $P [assign_stmt_275_to_assign_stmt_285__exit__] 
      $P [if_stmt_286__entry__] 
      $P [if_stmt_286__exit__] 
      $P [merge_stmt_292__entry__] 
      $P [merge_stmt_292__exit__] 
      $P [assign_stmt_298_to_assign_stmt_368__entry__] 
      $P [assign_stmt_298_to_assign_stmt_368__exit__] 
      $P [switch_stmt_369__entry__] 
      $P [switch_stmt_369__exit__] 
      $P [merge_stmt_379__entry__] 
      $P [merge_stmt_379__exit__] 
      $P [bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi]
      $P [merge_stmt_381__exit__] 
      $P [assign_stmt_401_to_assign_stmt_406__entry__] 
      $P [assign_stmt_401_to_assign_stmt_406__exit__] 
      $P [if_stmt_407__entry__] 
      $P [if_stmt_407__exit__] 
      $P [merge_stmt_413__entry__] 
      $P [merge_stmt_413__exit__] 
      $P [bbx_xnphx_xix_xpreheader_bbx_xnphx_xi]
      $P [merge_stmt_415__exit__] 
      $P [assign_stmt_435_to_assign_stmt_446__entry__] 
      $P [assign_stmt_435_to_assign_stmt_446__exit__] 
      $P [if_stmt_447__entry__] 
      $P [if_stmt_447__exit__] 
      $P [merge_stmt_453__entry__] 
      $P [merge_stmt_453__exit__] 
      $P [xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi]
      $P [merge_stmt_464__exit__] 
      $P [assign_stmt_483_to_assign_stmt_493__entry__] 
      $P [assign_stmt_483_to_assign_stmt_493__exit__] 
      $P [if_stmt_494__entry__] 
      $P [if_stmt_494__exit__] 
      $P [merge_stmt_500__entry__] 
      $P [merge_stmt_500__exit__] 
      $P [xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi]
      $P [merge_stmt_507__exit__] 
      $P [xx_xloopexitx_xi_udiv32x_xexitx_xpreheader]
      $P [merge_stmt_517__exit__] 
      $P [assign_stmt_530_to_assign_stmt_550__entry__] 
      $P [assign_stmt_530_to_assign_stmt_550__exit__] 
      $P [if_stmt_551__entry__] 
      $P [if_stmt_551__exit__] 
      $P [merge_stmt_557__entry__] 
      $P [merge_stmt_557__exit__] 
      $P [assign_stmt_563__entry__] 
      $P [assign_stmt_563__exit__] 
      $P [bbx_xnph_udiv32x_xexit]
      $P [merge_stmt_565__exit__] 
      $P [assign_stmt_585_to_assign_stmt_616__entry__] 
      $P [assign_stmt_585_to_assign_stmt_616__exit__] 
      $P [if_stmt_617__entry__] 
      $P [if_stmt_617__exit__] 
      $P [merge_stmt_623__entry__] 
      $P [merge_stmt_623__exit__] 
      $P [assign_stmt_637_to_assign_stmt_642__entry__] 
      $P [assign_stmt_637_to_assign_stmt_642__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge]
      $P [merge_stmt_644__exit__] 
      $P [assign_stmt_663_to_assign_stmt_689__entry__] 
      $P [assign_stmt_663_to_assign_stmt_689__exit__] 
      $P [xx_xcritedge_UnifiedReturnBlock]
      $P [merge_stmt_691__exit__] 
      $P [bb_15_UnifiedReturnBlock]
      $P [merge_stmt_693__exit__] 
      $P [return__]
      $P [merge_stmt_703__exit__] 
      ::[assign_stmt_275_to_assign_stmt_285] 
      {
        // 		tmp10 := ($bitcast ($uint<32>) a )
        //  file prog.aa, line 167
        // Source expression
        // ($bitcast ($uint<32>) a )
        $T[type_cast_274_sample_start_] 
        $T[type_cast_274_sample_completed_] 
        $T[type_cast_274_update_start_] 
        $T[type_cast_274_update_completed_] 
        // a
        $T[R_a_273_sample_start_] 
        $T[R_a_273_sample_completed_] 
        $T[R_a_273_update_start_] 
        $T[R_a_273_update_completed_] 
        // reference to interface object
        R_a_273_sample_start_ <-& ($entry)
        R_a_273_sample_completed_ <-& (R_a_273_sample_start_)
        R_a_273_update_start_ <-& (R_a_273_sample_completed_)
        R_a_273_update_completed_ <-& (R_a_273_update_start_)
        type_cast_274_sample_start_ <-& (R_a_273_update_completed_)
        ;;[type_cast_274_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_274_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_274_sample_start_ &-> (type_cast_274_Sample)
        type_cast_274_sample_completed_ <-& (type_cast_274_Sample)
        type_cast_274_sample_completed_ &-> ($null)
        type_cast_274_update_start_ &-> (type_cast_274_Update)
        type_cast_274_update_completed_ <-& (type_cast_274_Update)
        // Target expression
        // (as target) tmp10
        // tmp10
        // implicit reference
        // 		tmp6 := ($bitcast ($uint<32>) b )
        //  file prog.aa, line 168
        // Source expression
        // ($bitcast ($uint<32>) b )
        $T[type_cast_278_sample_start_] 
        $T[type_cast_278_sample_completed_] 
        $T[type_cast_278_update_start_] 
        $T[type_cast_278_update_completed_] 
        // b
        $T[R_b_277_sample_start_] 
        $T[R_b_277_sample_completed_] 
        $T[R_b_277_update_start_] 
        $T[R_b_277_update_completed_] 
        // reference to interface object
        R_b_277_sample_start_ <-& ($entry)
        R_b_277_sample_completed_ <-& (R_b_277_sample_start_)
        R_b_277_update_start_ <-& (R_b_277_sample_completed_)
        R_b_277_update_completed_ <-& (R_b_277_update_start_)
        type_cast_278_sample_start_ <-& (R_b_277_update_completed_)
        ;;[type_cast_278_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_278_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_278_sample_start_ &-> (type_cast_278_Sample)
        type_cast_278_sample_completed_ <-& (type_cast_278_Sample)
        type_cast_278_sample_completed_ &-> ($null)
        type_cast_278_update_start_ &-> (type_cast_278_Update)
        type_cast_278_update_completed_ <-& (type_cast_278_Update)
        // Target expression
        // (as target) tmp6
        // tmp6
        // implicit reference
        // 		iNsTr_0 := (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 170
        // Source expression
        // (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_284_sample_start_] 
        $T[EQ_f32_u1_284_sample_completed_] 
        $T[EQ_f32_u1_284_update_start_] 
        $T[EQ_f32_u1_284_update_completed_] 
        // a
        $T[R_a_281_sample_start_] 
        $T[R_a_281_sample_completed_] 
        $T[R_a_281_update_start_] 
        $T[R_a_281_update_completed_] 
        // reference to interface object
        R_a_281_sample_start_ <-& ($entry)
        R_a_281_sample_completed_ <-& (R_a_281_sample_start_)
        R_a_281_update_start_ <-& (R_a_281_sample_completed_)
        R_a_281_update_completed_ <-& (R_a_281_update_start_)
        EQ_f32_u1_284_sample_start_ <-& (R_a_281_update_completed_)
        ;;[EQ_f32_u1_284_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_284_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_284_sample_start_ &-> (EQ_f32_u1_284_Sample)
        EQ_f32_u1_284_sample_completed_ <-& (EQ_f32_u1_284_Sample)
        EQ_f32_u1_284_sample_completed_ &-> ($null)
        EQ_f32_u1_284_update_start_ &-> (EQ_f32_u1_284_Update)
        EQ_f32_u1_284_update_completed_ <-& (EQ_f32_u1_284_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_275_to_assign_stmt_285__entry__ |-> (assign_stmt_275_to_assign_stmt_285)
      assign_stmt_275_to_assign_stmt_285__exit__ <-| (assign_stmt_275_to_assign_stmt_285)
      // if-statement  
      //  file prog.aa, line 171
      ;;[if_stmt_286_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_286__entry__ |-> (if_stmt_286_dead_link)
      if_stmt_286__exit__ <-| (if_stmt_286_dead_link)
      ;;[if_stmt_286_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_286__entry__ |-> (if_stmt_286_eval_test)
      $P [R_iNsTr_0_287_place]
      R_iNsTr_0_287_place <-| (if_stmt_286_eval_test)
      ;;[if_stmt_286_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_286_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_0_287_place |-> (if_stmt_286_if_link if_stmt_286_else_link)
      $P [bb_0_bb_15]
      bb_0_bb_15 <-| (if_stmt_286_if_link)
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (if_stmt_286_else_link)
      ::[assign_stmt_298_to_assign_stmt_368] 
      {
        // 		iNsTr_3 := (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 175
        // Source expression
        // (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_297_sample_start_] 
        $T[LSHR_u32_u32_297_sample_completed_] 
        $T[LSHR_u32_u32_297_update_start_] 
        $T[LSHR_u32_u32_297_update_completed_] 
        // tmp10
        $T[R_tmp10_294_sample_start_] 
        $T[R_tmp10_294_sample_completed_] 
        $T[R_tmp10_294_update_start_] 
        $T[R_tmp10_294_update_completed_] 
        // implicit reference
        R_tmp10_294_sample_start_ <-& ($entry)
        R_tmp10_294_sample_completed_ <-& (R_tmp10_294_sample_start_)
        R_tmp10_294_update_start_ <-& (R_tmp10_294_sample_completed_)
        R_tmp10_294_update_completed_ <-& (R_tmp10_294_update_start_)
        LSHR_u32_u32_297_sample_start_ <-& (R_tmp10_294_update_completed_)
        ;;[LSHR_u32_u32_297_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_297_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_297_sample_start_ &-> (LSHR_u32_u32_297_Sample)
        LSHR_u32_u32_297_sample_completed_ <-& (LSHR_u32_u32_297_Sample)
        LSHR_u32_u32_297_sample_completed_ &-> ($null)
        LSHR_u32_u32_297_update_start_ &-> (LSHR_u32_u32_297_Update)
        LSHR_u32_u32_297_update_completed_ <-& (LSHR_u32_u32_297_Update)
        // Target expression
        // (as target) iNsTr_3
        // iNsTr_3
        // implicit reference
        // 		iNsTr_4 := (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 176
        // Source expression
        // (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_303_sample_start_] 
        $T[AND_u32_u32_303_sample_completed_] 
        $T[AND_u32_u32_303_update_start_] 
        $T[AND_u32_u32_303_update_completed_] 
        // iNsTr_3
        $T[R_iNsTr_3_300_sample_start_] 
        $T[R_iNsTr_3_300_sample_completed_] 
        $T[R_iNsTr_3_300_update_start_] 
        $T[R_iNsTr_3_300_update_completed_] 
        // implicit reference
        R_iNsTr_3_300_sample_start_ <-& (LSHR_u32_u32_297_update_completed_)
        R_iNsTr_3_300_sample_completed_ <-& (R_iNsTr_3_300_sample_start_)
        R_iNsTr_3_300_update_start_ <-& (R_iNsTr_3_300_sample_completed_)
        R_iNsTr_3_300_update_completed_ <-& (R_iNsTr_3_300_update_start_)
        AND_u32_u32_303_sample_start_ <-& (R_iNsTr_3_300_update_completed_)
        ;;[AND_u32_u32_303_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_303_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_303_sample_start_ &-> (AND_u32_u32_303_Sample)
        AND_u32_u32_303_sample_completed_ <-& (AND_u32_u32_303_Sample)
        AND_u32_u32_303_sample_completed_ &-> ($null)
        AND_u32_u32_303_update_start_ &-> (AND_u32_u32_303_Update)
        AND_u32_u32_303_update_completed_ <-& (AND_u32_u32_303_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 177
        // Source expression
        // (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_309_sample_start_] 
        $T[LSHR_u32_u32_309_sample_completed_] 
        $T[LSHR_u32_u32_309_update_start_] 
        $T[LSHR_u32_u32_309_update_completed_] 
        // tmp6
        $T[R_tmp6_306_sample_start_] 
        $T[R_tmp6_306_sample_completed_] 
        $T[R_tmp6_306_update_start_] 
        $T[R_tmp6_306_update_completed_] 
        // implicit reference
        R_tmp6_306_sample_start_ <-& ($entry)
        R_tmp6_306_sample_completed_ <-& (R_tmp6_306_sample_start_)
        R_tmp6_306_update_start_ <-& (R_tmp6_306_sample_completed_)
        R_tmp6_306_update_completed_ <-& (R_tmp6_306_update_start_)
        LSHR_u32_u32_309_sample_start_ <-& (R_tmp6_306_update_completed_)
        ;;[LSHR_u32_u32_309_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_309_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_309_sample_start_ &-> (LSHR_u32_u32_309_Sample)
        LSHR_u32_u32_309_sample_completed_ <-& (LSHR_u32_u32_309_Sample)
        LSHR_u32_u32_309_sample_completed_ &-> ($null)
        LSHR_u32_u32_309_update_start_ &-> (LSHR_u32_u32_309_Update)
        LSHR_u32_u32_309_update_completed_ <-& (LSHR_u32_u32_309_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 178
        // Source expression
        // (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_315_sample_start_] 
        $T[AND_u32_u32_315_sample_completed_] 
        $T[AND_u32_u32_315_update_start_] 
        $T[AND_u32_u32_315_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_312_sample_start_] 
        $T[R_iNsTr_5_312_sample_completed_] 
        $T[R_iNsTr_5_312_update_start_] 
        $T[R_iNsTr_5_312_update_completed_] 
        // implicit reference
        R_iNsTr_5_312_sample_start_ <-& (LSHR_u32_u32_309_update_completed_)
        R_iNsTr_5_312_sample_completed_ <-& (R_iNsTr_5_312_sample_start_)
        R_iNsTr_5_312_update_start_ <-& (R_iNsTr_5_312_sample_completed_)
        R_iNsTr_5_312_update_completed_ <-& (R_iNsTr_5_312_update_start_)
        AND_u32_u32_315_sample_start_ <-& (R_iNsTr_5_312_update_completed_)
        ;;[AND_u32_u32_315_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_315_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_315_sample_start_ &-> (AND_u32_u32_315_Sample)
        AND_u32_u32_315_sample_completed_ <-& (AND_u32_u32_315_Sample)
        AND_u32_u32_315_sample_completed_ &-> ($null)
        AND_u32_u32_315_update_start_ &-> (AND_u32_u32_315_Update)
        AND_u32_u32_315_update_completed_ <-& (AND_u32_u32_315_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 179
        // Source expression
        // (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_321_sample_start_] 
        $T[SHL_u32_u32_321_sample_completed_] 
        $T[SHL_u32_u32_321_update_start_] 
        $T[SHL_u32_u32_321_update_completed_] 
        // tmp10
        $T[R_tmp10_318_sample_start_] 
        $T[R_tmp10_318_sample_completed_] 
        $T[R_tmp10_318_update_start_] 
        $T[R_tmp10_318_update_completed_] 
        // implicit reference
        R_tmp10_318_sample_start_ <-& ($entry)
        R_tmp10_318_sample_completed_ <-& (R_tmp10_318_sample_start_)
        R_tmp10_318_update_start_ <-& (R_tmp10_318_sample_completed_)
        R_tmp10_318_update_completed_ <-& (R_tmp10_318_update_start_)
        SHL_u32_u32_321_sample_start_ <-& (R_tmp10_318_update_completed_)
        ;;[SHL_u32_u32_321_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_321_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_321_sample_start_ &-> (SHL_u32_u32_321_Sample)
        SHL_u32_u32_321_sample_completed_ <-& (SHL_u32_u32_321_Sample)
        SHL_u32_u32_321_sample_completed_ &-> ($null)
        SHL_u32_u32_321_update_start_ &-> (SHL_u32_u32_321_Update)
        SHL_u32_u32_321_update_completed_ <-& (SHL_u32_u32_321_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 180
        // Source expression
        // (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_327_sample_start_] 
        $T[AND_u32_u32_327_sample_completed_] 
        $T[AND_u32_u32_327_update_start_] 
        $T[AND_u32_u32_327_update_completed_] 
        // iNsTr_7
        $T[R_iNsTr_7_324_sample_start_] 
        $T[R_iNsTr_7_324_sample_completed_] 
        $T[R_iNsTr_7_324_update_start_] 
        $T[R_iNsTr_7_324_update_completed_] 
        // implicit reference
        R_iNsTr_7_324_sample_start_ <-& (SHL_u32_u32_321_update_completed_)
        R_iNsTr_7_324_sample_completed_ <-& (R_iNsTr_7_324_sample_start_)
        R_iNsTr_7_324_update_start_ <-& (R_iNsTr_7_324_sample_completed_)
        R_iNsTr_7_324_update_completed_ <-& (R_iNsTr_7_324_update_start_)
        AND_u32_u32_327_sample_start_ <-& (R_iNsTr_7_324_update_completed_)
        ;;[AND_u32_u32_327_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_327_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_327_sample_start_ &-> (AND_u32_u32_327_Sample)
        AND_u32_u32_327_sample_completed_ <-& (AND_u32_u32_327_Sample)
        AND_u32_u32_327_sample_completed_ &-> ($null)
        AND_u32_u32_327_update_start_ &-> (AND_u32_u32_327_Update)
        AND_u32_u32_327_update_completed_ <-& (AND_u32_u32_327_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 181
        // Source expression
        // (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_333_sample_start_] 
        $T[OR_u32_u32_333_sample_completed_] 
        $T[OR_u32_u32_333_update_start_] 
        $T[OR_u32_u32_333_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_330_sample_start_] 
        $T[R_iNsTr_8_330_sample_completed_] 
        $T[R_iNsTr_8_330_update_start_] 
        $T[R_iNsTr_8_330_update_completed_] 
        // implicit reference
        R_iNsTr_8_330_sample_start_ <-& (AND_u32_u32_327_update_completed_)
        R_iNsTr_8_330_sample_completed_ <-& (R_iNsTr_8_330_sample_start_)
        R_iNsTr_8_330_update_start_ <-& (R_iNsTr_8_330_sample_completed_)
        R_iNsTr_8_330_update_completed_ <-& (R_iNsTr_8_330_update_start_)
        OR_u32_u32_333_sample_start_ <-& (R_iNsTr_8_330_update_completed_)
        ;;[OR_u32_u32_333_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_333_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_333_sample_start_ &-> (OR_u32_u32_333_Sample)
        OR_u32_u32_333_sample_completed_ <-& (OR_u32_u32_333_Sample)
        OR_u32_u32_333_sample_completed_ &-> ($null)
        OR_u32_u32_333_update_start_ &-> (OR_u32_u32_333_Update)
        OR_u32_u32_333_update_completed_ <-& (OR_u32_u32_333_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 182
        // Source expression
        // (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[LSHR_u32_u32_339_sample_start_] 
        $T[LSHR_u32_u32_339_sample_completed_] 
        $T[LSHR_u32_u32_339_update_start_] 
        $T[LSHR_u32_u32_339_update_completed_] 
        // tmp6
        $T[R_tmp6_336_sample_start_] 
        $T[R_tmp6_336_sample_completed_] 
        $T[R_tmp6_336_update_start_] 
        $T[R_tmp6_336_update_completed_] 
        // implicit reference
        R_tmp6_336_sample_start_ <-& ($entry)
        R_tmp6_336_sample_completed_ <-& (R_tmp6_336_sample_start_)
        R_tmp6_336_update_start_ <-& (R_tmp6_336_sample_completed_)
        R_tmp6_336_update_completed_ <-& (R_tmp6_336_update_start_)
        LSHR_u32_u32_339_sample_start_ <-& (R_tmp6_336_update_completed_)
        ;;[LSHR_u32_u32_339_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_339_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_339_sample_start_ &-> (LSHR_u32_u32_339_Sample)
        LSHR_u32_u32_339_sample_completed_ <-& (LSHR_u32_u32_339_Sample)
        LSHR_u32_u32_339_sample_completed_ &-> ($null)
        LSHR_u32_u32_339_update_start_ &-> (LSHR_u32_u32_339_Update)
        LSHR_u32_u32_339_update_completed_ <-& (LSHR_u32_u32_339_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        //  file prog.aa, line 183
        // Source expression
        // (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        $T[AND_u32_u32_345_sample_start_] 
        $T[AND_u32_u32_345_sample_completed_] 
        $T[AND_u32_u32_345_update_start_] 
        $T[AND_u32_u32_345_update_completed_] 
        // iNsTr_10
        $T[R_iNsTr_10_342_sample_start_] 
        $T[R_iNsTr_10_342_sample_completed_] 
        $T[R_iNsTr_10_342_update_start_] 
        $T[R_iNsTr_10_342_update_completed_] 
        // implicit reference
        R_iNsTr_10_342_sample_start_ <-& (LSHR_u32_u32_339_update_completed_)
        R_iNsTr_10_342_sample_completed_ <-& (R_iNsTr_10_342_sample_start_)
        R_iNsTr_10_342_update_start_ <-& (R_iNsTr_10_342_sample_completed_)
        R_iNsTr_10_342_update_completed_ <-& (R_iNsTr_10_342_update_start_)
        AND_u32_u32_345_sample_start_ <-& (R_iNsTr_10_342_update_completed_)
        ;;[AND_u32_u32_345_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_345_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_345_sample_start_ &-> (AND_u32_u32_345_Sample)
        AND_u32_u32_345_sample_completed_ <-& (AND_u32_u32_345_Sample)
        AND_u32_u32_345_sample_completed_ &-> ($null)
        AND_u32_u32_345_update_start_ &-> (AND_u32_u32_345_Update)
        AND_u32_u32_345_update_completed_ <-& (AND_u32_u32_345_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        //  file prog.aa, line 184
        // Source expression
        // (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        $T[OR_u32_u32_351_sample_start_] 
        $T[OR_u32_u32_351_sample_completed_] 
        $T[OR_u32_u32_351_update_start_] 
        $T[OR_u32_u32_351_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_348_sample_start_] 
        $T[R_iNsTr_11_348_sample_completed_] 
        $T[R_iNsTr_11_348_update_start_] 
        $T[R_iNsTr_11_348_update_completed_] 
        // implicit reference
        R_iNsTr_11_348_sample_start_ <-& (AND_u32_u32_345_update_completed_)
        R_iNsTr_11_348_sample_completed_ <-& (R_iNsTr_11_348_sample_start_)
        R_iNsTr_11_348_update_start_ <-& (R_iNsTr_11_348_sample_completed_)
        R_iNsTr_11_348_update_completed_ <-& (R_iNsTr_11_348_update_start_)
        OR_u32_u32_351_sample_start_ <-& (R_iNsTr_11_348_update_completed_)
        ;;[OR_u32_u32_351_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_351_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_351_sample_start_ &-> (OR_u32_u32_351_Sample)
        OR_u32_u32_351_sample_completed_ <-& (OR_u32_u32_351_Sample)
        OR_u32_u32_351_sample_completed_ &-> ($null)
        OR_u32_u32_351_update_start_ &-> (OR_u32_u32_351_Update)
        OR_u32_u32_351_update_completed_ <-& (OR_u32_u32_351_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (tmp6 ^ tmp10)
        //  file prog.aa, line 185
        // Source expression
        // (tmp6 ^ tmp10)
        $T[XOR_u32_u32_356_sample_start_] 
        $T[XOR_u32_u32_356_sample_completed_] 
        $T[XOR_u32_u32_356_update_start_] 
        $T[XOR_u32_u32_356_update_completed_] 
        // tmp6
        $T[R_tmp6_354_sample_start_] 
        $T[R_tmp6_354_sample_completed_] 
        $T[R_tmp6_354_update_start_] 
        $T[R_tmp6_354_update_completed_] 
        // implicit reference
        R_tmp6_354_sample_start_ <-& ($entry)
        R_tmp6_354_sample_completed_ <-& (R_tmp6_354_sample_start_)
        R_tmp6_354_update_start_ <-& (R_tmp6_354_sample_completed_)
        R_tmp6_354_update_completed_ <-& (R_tmp6_354_update_start_)
        // tmp10
        $T[R_tmp10_355_sample_start_] 
        $T[R_tmp10_355_sample_completed_] 
        $T[R_tmp10_355_update_start_] 
        $T[R_tmp10_355_update_completed_] 
        // implicit reference
        R_tmp10_355_sample_start_ <-& ($entry)
        R_tmp10_355_sample_completed_ <-& (R_tmp10_355_sample_start_)
        R_tmp10_355_update_start_ <-& (R_tmp10_355_sample_completed_)
        R_tmp10_355_update_completed_ <-& (R_tmp10_355_update_start_)
        XOR_u32_u32_356_sample_start_ <-& (R_tmp6_354_update_completed_)
        XOR_u32_u32_356_sample_start_ <-& (R_tmp10_355_update_completed_)
        ;;[XOR_u32_u32_356_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_356_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_356_sample_start_ &-> (XOR_u32_u32_356_Sample)
        XOR_u32_u32_356_sample_completed_ <-& (XOR_u32_u32_356_Sample)
        XOR_u32_u32_356_sample_completed_ &-> ($null)
        XOR_u32_u32_356_update_start_ &-> (XOR_u32_u32_356_Update)
        XOR_u32_u32_356_update_completed_ <-& (XOR_u32_u32_356_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 186
        // Source expression
        // (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_362_sample_start_] 
        $T[AND_u32_u32_362_sample_completed_] 
        $T[AND_u32_u32_362_update_start_] 
        $T[AND_u32_u32_362_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_359_sample_start_] 
        $T[R_iNsTr_13_359_sample_completed_] 
        $T[R_iNsTr_13_359_update_start_] 
        $T[R_iNsTr_13_359_update_completed_] 
        // implicit reference
        R_iNsTr_13_359_sample_start_ <-& (XOR_u32_u32_356_update_completed_)
        R_iNsTr_13_359_sample_completed_ <-& (R_iNsTr_13_359_sample_start_)
        R_iNsTr_13_359_update_start_ <-& (R_iNsTr_13_359_sample_completed_)
        R_iNsTr_13_359_update_completed_ <-& (R_iNsTr_13_359_update_start_)
        AND_u32_u32_362_sample_start_ <-& (R_iNsTr_13_359_update_completed_)
        ;;[AND_u32_u32_362_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_362_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_362_sample_start_ &-> (AND_u32_u32_362_Sample)
        AND_u32_u32_362_sample_completed_ <-& (AND_u32_u32_362_Sample)
        AND_u32_u32_362_sample_completed_ &-> ($null)
        AND_u32_u32_362_update_start_ &-> (AND_u32_u32_362_Update)
        AND_u32_u32_362_update_completed_ <-& (AND_u32_u32_362_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := (iNsTr_4 - iNsTr_6)
        //  file prog.aa, line 187
        // Source expression
        // (iNsTr_4 - iNsTr_6)
        $T[SUB_u32_u32_367_sample_start_] 
        $T[SUB_u32_u32_367_sample_completed_] 
        $T[SUB_u32_u32_367_update_start_] 
        $T[SUB_u32_u32_367_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_365_sample_start_] 
        $T[R_iNsTr_4_365_sample_completed_] 
        $T[R_iNsTr_4_365_update_start_] 
        $T[R_iNsTr_4_365_update_completed_] 
        // implicit reference
        R_iNsTr_4_365_sample_start_ <-& (AND_u32_u32_303_update_completed_)
        R_iNsTr_4_365_sample_completed_ <-& (R_iNsTr_4_365_sample_start_)
        R_iNsTr_4_365_update_start_ <-& (R_iNsTr_4_365_sample_completed_)
        R_iNsTr_4_365_update_completed_ <-& (R_iNsTr_4_365_update_start_)
        // iNsTr_6
        $T[R_iNsTr_6_366_sample_start_] 
        $T[R_iNsTr_6_366_sample_completed_] 
        $T[R_iNsTr_6_366_update_start_] 
        $T[R_iNsTr_6_366_update_completed_] 
        // implicit reference
        R_iNsTr_6_366_sample_start_ <-& (AND_u32_u32_315_update_completed_)
        R_iNsTr_6_366_sample_completed_ <-& (R_iNsTr_6_366_sample_start_)
        R_iNsTr_6_366_update_start_ <-& (R_iNsTr_6_366_sample_completed_)
        R_iNsTr_6_366_update_completed_ <-& (R_iNsTr_6_366_update_start_)
        SUB_u32_u32_367_sample_start_ <-& (R_iNsTr_4_365_update_completed_)
        SUB_u32_u32_367_sample_start_ <-& (R_iNsTr_6_366_update_completed_)
        ;;[SUB_u32_u32_367_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_367_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_367_sample_start_ &-> (SUB_u32_u32_367_Sample)
        SUB_u32_u32_367_sample_completed_ <-& (SUB_u32_u32_367_Sample)
        SUB_u32_u32_367_sample_completed_ &-> ($null)
        SUB_u32_u32_367_update_start_ &-> (SUB_u32_u32_367_Update)
        SUB_u32_u32_367_update_completed_ <-& (SUB_u32_u32_367_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_298_to_assign_stmt_368__entry__ |-> (assign_stmt_298_to_assign_stmt_368)
      assign_stmt_298_to_assign_stmt_368__exit__ <-| (assign_stmt_298_to_assign_stmt_368)
      // control-path for switch  
      //  file prog.aa, line 188
      ;;[switch_stmt_369_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_369__entry__ |-> (switch_stmt_369_dead_link)
      switch_stmt_369__exit__ <-| (switch_stmt_369_dead_link)
      //---------------------    switch statement  file prog.aa, line 188  --------------------------
      $P [switch_stmt_369__condition_check_place__] 
      switch_stmt_369__entry__ |-> (switch_stmt_369__condition_check_place__)
      ||[switch_stmt_369__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_369__condition_check_place__ |-> (switch_stmt_369__condition_check__)
      $P [switch_stmt_369__select__] 
      switch_stmt_369__select__ <-| (switch_stmt_369__condition_check__)
      // switch choice 0
      ;;[switch_stmt_369_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_1_xx_xloopexitx_xi]
      bb_1_xx_xloopexitx_xi <-| (switch_stmt_369_choice_0)
      // switch choice 1
      ;;[switch_stmt_369_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_1_udiv32x_xexitx_xpreheader]
      bb_1_udiv32x_xexitx_xpreheader <-| (switch_stmt_369_choice_1)
      ;;[switch_stmt_369_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_1_bbx_xnph7x_xix_xpreheader]
      bb_1_bbx_xnph7x_xix_xpreheader <-| (switch_stmt_369_choice_default)
      switch_stmt_369__select__ |-> (switch_stmt_369_choice_0 switch_stmt_369_choice_1 switch_stmt_369_choice_default)
      //---------------------   end of switch statement  file prog.aa, line 188  --------------------------
      ::[assign_stmt_401_to_assign_stmt_406] 
      {
        // 		iNsTr_24 := (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 205
        // Source expression
        // (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_400_sample_start_] 
        $T[LSHR_u32_u32_400_sample_completed_] 
        $T[LSHR_u32_u32_400_update_start_] 
        $T[LSHR_u32_u32_400_update_completed_] 
        // xx_x016x_xi
        $T[R_xx_x016x_xi_397_sample_start_] 
        $T[R_xx_x016x_xi_397_sample_completed_] 
        $T[R_xx_x016x_xi_397_update_start_] 
        $T[R_xx_x016x_xi_397_update_completed_] 
        // implicit reference
        R_xx_x016x_xi_397_sample_start_ <-& ($entry)
        R_xx_x016x_xi_397_sample_completed_ <-& (R_xx_x016x_xi_397_sample_start_)
        R_xx_x016x_xi_397_update_start_ <-& (R_xx_x016x_xi_397_sample_completed_)
        R_xx_x016x_xi_397_update_completed_ <-& (R_xx_x016x_xi_397_update_start_)
        LSHR_u32_u32_400_sample_start_ <-& (R_xx_x016x_xi_397_update_completed_)
        ;;[LSHR_u32_u32_400_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_400_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_400_sample_start_ &-> (LSHR_u32_u32_400_Sample)
        LSHR_u32_u32_400_sample_completed_ <-& (LSHR_u32_u32_400_Sample)
        LSHR_u32_u32_400_sample_completed_ &-> ($null)
        LSHR_u32_u32_400_update_start_ &-> (LSHR_u32_u32_400_Update)
        LSHR_u32_u32_400_update_completed_ <-& (LSHR_u32_u32_400_Update)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // 		iNsTr_25 := (iNsTr_24 > iNsTr_12)
        //  file prog.aa, line 207
        // Source expression
        // (iNsTr_24 > iNsTr_12)
        $T[UGT_u32_u1_405_sample_start_] 
        $T[UGT_u32_u1_405_sample_completed_] 
        $T[UGT_u32_u1_405_update_start_] 
        $T[UGT_u32_u1_405_update_completed_] 
        // iNsTr_24
        $T[R_iNsTr_24_403_sample_start_] 
        $T[R_iNsTr_24_403_sample_completed_] 
        $T[R_iNsTr_24_403_update_start_] 
        $T[R_iNsTr_24_403_update_completed_] 
        // implicit reference
        R_iNsTr_24_403_sample_start_ <-& (LSHR_u32_u32_400_update_completed_)
        R_iNsTr_24_403_sample_completed_ <-& (R_iNsTr_24_403_sample_start_)
        R_iNsTr_24_403_update_start_ <-& (R_iNsTr_24_403_sample_completed_)
        R_iNsTr_24_403_update_completed_ <-& (R_iNsTr_24_403_update_start_)
        // iNsTr_12
        $T[R_iNsTr_12_404_sample_start_] 
        $T[R_iNsTr_12_404_sample_completed_] 
        $T[R_iNsTr_12_404_update_start_] 
        $T[R_iNsTr_12_404_update_completed_] 
        // implicit reference
        R_iNsTr_12_404_sample_start_ <-& ($entry)
        R_iNsTr_12_404_sample_completed_ <-& (R_iNsTr_12_404_sample_start_)
        R_iNsTr_12_404_update_start_ <-& (R_iNsTr_12_404_sample_completed_)
        R_iNsTr_12_404_update_completed_ <-& (R_iNsTr_12_404_update_start_)
        UGT_u32_u1_405_sample_start_ <-& (R_iNsTr_24_403_update_completed_)
        UGT_u32_u1_405_sample_start_ <-& (R_iNsTr_12_404_update_completed_)
        ;;[UGT_u32_u1_405_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_405_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_405_sample_start_ &-> (UGT_u32_u1_405_Sample)
        UGT_u32_u1_405_sample_completed_ <-& (UGT_u32_u1_405_Sample)
        UGT_u32_u1_405_sample_completed_ &-> ($null)
        UGT_u32_u1_405_update_start_ &-> (UGT_u32_u1_405_Update)
        UGT_u32_u1_405_update_completed_ <-& (UGT_u32_u1_405_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_401_to_assign_stmt_406__entry__ |-> (assign_stmt_401_to_assign_stmt_406)
      assign_stmt_401_to_assign_stmt_406__exit__ <-| (assign_stmt_401_to_assign_stmt_406)
      // if-statement  
      //  file prog.aa, line 208
      ;;[if_stmt_407_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_407__entry__ |-> (if_stmt_407_dead_link)
      if_stmt_407__exit__ <-| (if_stmt_407_dead_link)
      ;;[if_stmt_407_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_407__entry__ |-> (if_stmt_407_eval_test)
      $P [R_iNsTr_25_408_place]
      R_iNsTr_25_408_place <-| (if_stmt_407_eval_test)
      ;;[if_stmt_407_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_407_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_25_408_place |-> (if_stmt_407_if_link if_stmt_407_else_link)
      $P [bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader]
      bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader <-| (if_stmt_407_if_link)
      $P [bbx_xnph7x_xi_xx_x_crit_edgex_xi]
      bbx_xnph7x_xi_xx_x_crit_edgex_xi <-| (if_stmt_407_else_link)
      ::[assign_stmt_435_to_assign_stmt_446] 
      {
        // 		iNsTr_45 := (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 218
        // Source expression
        // (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_434_sample_start_] 
        $T[SHL_u32_u32_434_sample_completed_] 
        $T[SHL_u32_u32_434_update_start_] 
        $T[SHL_u32_u32_434_update_completed_] 
        // shifted_divisorx_x03x_xi
        $T[R_shifted_divisorx_x03x_xi_431_sample_start_] 
        $T[R_shifted_divisorx_x03x_xi_431_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xi_431_update_start_] 
        $T[R_shifted_divisorx_x03x_xi_431_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xi_431_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xi_431_sample_completed_ <-& (R_shifted_divisorx_x03x_xi_431_sample_start_)
        R_shifted_divisorx_x03x_xi_431_update_start_ <-& (R_shifted_divisorx_x03x_xi_431_sample_completed_)
        R_shifted_divisorx_x03x_xi_431_update_completed_ <-& (R_shifted_divisorx_x03x_xi_431_update_start_)
        SHL_u32_u32_434_sample_start_ <-& (R_shifted_divisorx_x03x_xi_431_update_completed_)
        ;;[SHL_u32_u32_434_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_434_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_434_sample_start_ &-> (SHL_u32_u32_434_Sample)
        SHL_u32_u32_434_sample_completed_ <-& (SHL_u32_u32_434_Sample)
        SHL_u32_u32_434_sample_completed_ &-> ($null)
        SHL_u32_u32_434_update_start_ &-> (SHL_u32_u32_434_Update)
        SHL_u32_u32_434_update_completed_ <-& (SHL_u32_u32_434_Update)
        // Target expression
        // (as target) iNsTr_45
        // iNsTr_45
        // implicit reference
        // 		iNsTr_46 := (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 219
        // Source expression
        // (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_440_sample_start_] 
        $T[SHL_u32_u32_440_sample_completed_] 
        $T[SHL_u32_u32_440_update_start_] 
        $T[SHL_u32_u32_440_update_completed_] 
        // curr_quotientx_x02x_xi
        $T[R_curr_quotientx_x02x_xi_437_sample_start_] 
        $T[R_curr_quotientx_x02x_xi_437_sample_completed_] 
        $T[R_curr_quotientx_x02x_xi_437_update_start_] 
        $T[R_curr_quotientx_x02x_xi_437_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xi_437_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xi_437_sample_completed_ <-& (R_curr_quotientx_x02x_xi_437_sample_start_)
        R_curr_quotientx_x02x_xi_437_update_start_ <-& (R_curr_quotientx_x02x_xi_437_sample_completed_)
        R_curr_quotientx_x02x_xi_437_update_completed_ <-& (R_curr_quotientx_x02x_xi_437_update_start_)
        SHL_u32_u32_440_sample_start_ <-& (R_curr_quotientx_x02x_xi_437_update_completed_)
        ;;[SHL_u32_u32_440_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_440_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_440_sample_start_ &-> (SHL_u32_u32_440_Sample)
        SHL_u32_u32_440_sample_completed_ <-& (SHL_u32_u32_440_Sample)
        SHL_u32_u32_440_sample_completed_ &-> ($null)
        SHL_u32_u32_440_update_start_ &-> (SHL_u32_u32_440_Update)
        SHL_u32_u32_440_update_completed_ <-& (SHL_u32_u32_440_Update)
        // Target expression
        // (as target) iNsTr_46
        // iNsTr_46
        // implicit reference
        // 		iNsTr_47 := (iNsTr_45 < iNsTr_24)
        //  file prog.aa, line 221
        // Source expression
        // (iNsTr_45 < iNsTr_24)
        $T[ULT_u32_u1_445_sample_start_] 
        $T[ULT_u32_u1_445_sample_completed_] 
        $T[ULT_u32_u1_445_update_start_] 
        $T[ULT_u32_u1_445_update_completed_] 
        // iNsTr_45
        $T[R_iNsTr_45_443_sample_start_] 
        $T[R_iNsTr_45_443_sample_completed_] 
        $T[R_iNsTr_45_443_update_start_] 
        $T[R_iNsTr_45_443_update_completed_] 
        // implicit reference
        R_iNsTr_45_443_sample_start_ <-& (SHL_u32_u32_434_update_completed_)
        R_iNsTr_45_443_sample_completed_ <-& (R_iNsTr_45_443_sample_start_)
        R_iNsTr_45_443_update_start_ <-& (R_iNsTr_45_443_sample_completed_)
        R_iNsTr_45_443_update_completed_ <-& (R_iNsTr_45_443_update_start_)
        // iNsTr_24
        $T[R_iNsTr_24_444_sample_start_] 
        $T[R_iNsTr_24_444_sample_completed_] 
        $T[R_iNsTr_24_444_update_start_] 
        $T[R_iNsTr_24_444_update_completed_] 
        // implicit reference
        R_iNsTr_24_444_sample_start_ <-& ($entry)
        R_iNsTr_24_444_sample_completed_ <-& (R_iNsTr_24_444_sample_start_)
        R_iNsTr_24_444_update_start_ <-& (R_iNsTr_24_444_sample_completed_)
        R_iNsTr_24_444_update_completed_ <-& (R_iNsTr_24_444_update_start_)
        ULT_u32_u1_445_sample_start_ <-& (R_iNsTr_45_443_update_completed_)
        ULT_u32_u1_445_sample_start_ <-& (R_iNsTr_24_444_update_completed_)
        ;;[ULT_u32_u1_445_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_445_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_445_sample_start_ &-> (ULT_u32_u1_445_Sample)
        ULT_u32_u1_445_sample_completed_ <-& (ULT_u32_u1_445_Sample)
        ULT_u32_u1_445_sample_completed_ &-> ($null)
        ULT_u32_u1_445_update_start_ &-> (ULT_u32_u1_445_Update)
        ULT_u32_u1_445_update_completed_ <-& (ULT_u32_u1_445_Update)
        // Target expression
        // (as target) iNsTr_47
        // iNsTr_47
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_435_to_assign_stmt_446__entry__ |-> (assign_stmt_435_to_assign_stmt_446)
      assign_stmt_435_to_assign_stmt_446__exit__ <-| (assign_stmt_435_to_assign_stmt_446)
      // if-statement  
      //  file prog.aa, line 222
      ;;[if_stmt_447_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_447__entry__ |-> (if_stmt_447_dead_link)
      if_stmt_447__exit__ <-| (if_stmt_447_dead_link)
      ;;[if_stmt_447_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_447__entry__ |-> (if_stmt_447_eval_test)
      $P [R_iNsTr_47_448_place]
      R_iNsTr_47_448_place <-| (if_stmt_447_eval_test)
      ;;[if_stmt_447_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_447_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_47_448_place |-> (if_stmt_447_if_link if_stmt_447_else_link)
      $P [bbx_xnphx_xi_bbx_xnphx_xi]
      bbx_xnphx_xi_bbx_xnphx_xi <-| (if_stmt_447_if_link)
      $P [bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit]
      bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit <-| (if_stmt_447_else_link)
      ::[assign_stmt_483_to_assign_stmt_493] 
      {
        // 		iNsTr_35 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
        //  file prog.aa, line 234
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
        $T[ADD_u32_u32_482_sample_start_] 
        $T[ADD_u32_u32_482_sample_completed_] 
        $T[ADD_u32_u32_482_update_start_] 
        $T[ADD_u32_u32_482_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xi
        $T[R_curr_quotientx_x0x_xlcssax_xi_480_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xi_480_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xi_480_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xi_480_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xi_480_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xi_480_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xi_480_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xi_480_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xi_480_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xi_480_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xi_480_update_start_)
        // quotientx_x05x_xi
        $T[R_quotientx_x05x_xi_481_sample_start_] 
        $T[R_quotientx_x05x_xi_481_sample_completed_] 
        $T[R_quotientx_x05x_xi_481_update_start_] 
        $T[R_quotientx_x05x_xi_481_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xi_481_sample_start_ <-& ($entry)
        R_quotientx_x05x_xi_481_sample_completed_ <-& (R_quotientx_x05x_xi_481_sample_start_)
        R_quotientx_x05x_xi_481_update_start_ <-& (R_quotientx_x05x_xi_481_sample_completed_)
        R_quotientx_x05x_xi_481_update_completed_ <-& (R_quotientx_x05x_xi_481_update_start_)
        ADD_u32_u32_482_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xi_480_update_completed_)
        ADD_u32_u32_482_sample_start_ <-& (R_quotientx_x05x_xi_481_update_completed_)
        ;;[ADD_u32_u32_482_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_482_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_482_sample_start_ &-> (ADD_u32_u32_482_Sample)
        ADD_u32_u32_482_sample_completed_ <-& (ADD_u32_u32_482_Sample)
        ADD_u32_u32_482_sample_completed_ &-> ($null)
        ADD_u32_u32_482_update_start_ &-> (ADD_u32_u32_482_Update)
        ADD_u32_u32_482_update_completed_ <-& (ADD_u32_u32_482_Update)
        // Target expression
        // (as target) iNsTr_35
        // iNsTr_35
        // implicit reference
        // 		iNsTr_36 := (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
        //  file prog.aa, line 235
        // Source expression
        // (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
        $T[SUB_u32_u32_487_sample_start_] 
        $T[SUB_u32_u32_487_sample_completed_] 
        $T[SUB_u32_u32_487_update_start_] 
        $T[SUB_u32_u32_487_update_completed_] 
        // xx_x016x_xi
        $T[R_xx_x016x_xi_485_sample_start_] 
        $T[R_xx_x016x_xi_485_sample_completed_] 
        $T[R_xx_x016x_xi_485_update_start_] 
        $T[R_xx_x016x_xi_485_update_completed_] 
        // implicit reference
        R_xx_x016x_xi_485_sample_start_ <-& ($entry)
        R_xx_x016x_xi_485_sample_completed_ <-& (R_xx_x016x_xi_485_sample_start_)
        R_xx_x016x_xi_485_update_start_ <-& (R_xx_x016x_xi_485_sample_completed_)
        R_xx_x016x_xi_485_update_completed_ <-& (R_xx_x016x_xi_485_update_start_)
        // shifted_divisorx_x0x_xlcssax_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xi_486_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xi_486_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xi_486_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xi_486_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xi_486_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xi_486_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_486_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xi_486_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_486_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xi_486_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_486_update_start_)
        SUB_u32_u32_487_sample_start_ <-& (R_xx_x016x_xi_485_update_completed_)
        SUB_u32_u32_487_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xi_486_update_completed_)
        ;;[SUB_u32_u32_487_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_487_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_487_sample_start_ &-> (SUB_u32_u32_487_Sample)
        SUB_u32_u32_487_sample_completed_ <-& (SUB_u32_u32_487_Sample)
        SUB_u32_u32_487_sample_completed_ &-> ($null)
        SUB_u32_u32_487_update_start_ &-> (SUB_u32_u32_487_Update)
        SUB_u32_u32_487_update_completed_ <-& (SUB_u32_u32_487_Update)
        // Target expression
        // (as target) iNsTr_36
        // iNsTr_36
        // implicit reference
        // 		iNsTr_37 := (iNsTr_36 < iNsTr_12)
        //  file prog.aa, line 237
        // Source expression
        // (iNsTr_36 < iNsTr_12)
        $T[ULT_u32_u1_492_sample_start_] 
        $T[ULT_u32_u1_492_sample_completed_] 
        $T[ULT_u32_u1_492_update_start_] 
        $T[ULT_u32_u1_492_update_completed_] 
        // iNsTr_36
        $T[R_iNsTr_36_490_sample_start_] 
        $T[R_iNsTr_36_490_sample_completed_] 
        $T[R_iNsTr_36_490_update_start_] 
        $T[R_iNsTr_36_490_update_completed_] 
        // implicit reference
        R_iNsTr_36_490_sample_start_ <-& (SUB_u32_u32_487_update_completed_)
        R_iNsTr_36_490_sample_completed_ <-& (R_iNsTr_36_490_sample_start_)
        R_iNsTr_36_490_update_start_ <-& (R_iNsTr_36_490_sample_completed_)
        R_iNsTr_36_490_update_completed_ <-& (R_iNsTr_36_490_update_start_)
        // iNsTr_12
        $T[R_iNsTr_12_491_sample_start_] 
        $T[R_iNsTr_12_491_sample_completed_] 
        $T[R_iNsTr_12_491_update_start_] 
        $T[R_iNsTr_12_491_update_completed_] 
        // implicit reference
        R_iNsTr_12_491_sample_start_ <-& ($entry)
        R_iNsTr_12_491_sample_completed_ <-& (R_iNsTr_12_491_sample_start_)
        R_iNsTr_12_491_update_start_ <-& (R_iNsTr_12_491_sample_completed_)
        R_iNsTr_12_491_update_completed_ <-& (R_iNsTr_12_491_update_start_)
        ULT_u32_u1_492_sample_start_ <-& (R_iNsTr_36_490_update_completed_)
        ULT_u32_u1_492_sample_start_ <-& (R_iNsTr_12_491_update_completed_)
        ;;[ULT_u32_u1_492_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_492_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_492_sample_start_ &-> (ULT_u32_u1_492_Sample)
        ULT_u32_u1_492_sample_completed_ <-& (ULT_u32_u1_492_Sample)
        ULT_u32_u1_492_sample_completed_ &-> ($null)
        ULT_u32_u1_492_update_start_ &-> (ULT_u32_u1_492_Update)
        ULT_u32_u1_492_update_completed_ <-& (ULT_u32_u1_492_Update)
        // Target expression
        // (as target) iNsTr_37
        // iNsTr_37
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_483_to_assign_stmt_493__entry__ |-> (assign_stmt_483_to_assign_stmt_493)
      assign_stmt_483_to_assign_stmt_493__exit__ <-| (assign_stmt_483_to_assign_stmt_493)
      // if-statement  
      //  file prog.aa, line 238
      ;;[if_stmt_494_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_494__entry__ |-> (if_stmt_494_dead_link)
      if_stmt_494__exit__ <-| (if_stmt_494_dead_link)
      ;;[if_stmt_494_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_494__entry__ |-> (if_stmt_494_eval_test)
      $P [R_iNsTr_37_495_place]
      R_iNsTr_37_495_place <-| (if_stmt_494_eval_test)
      ;;[if_stmt_494_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_494_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_37_495_place |-> (if_stmt_494_if_link if_stmt_494_else_link)
      $P [xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit]
      xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit <-| (if_stmt_494_if_link)
      $P [xx_x_crit_edgex_xi_bbx_xnph7x_xi]
      xx_x_crit_edgex_xi_bbx_xnph7x_xi <-| (if_stmt_494_else_link)
      ::[assign_stmt_530_to_assign_stmt_550] 
      {
        // 		iNsTr_20 := (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 253
        // Source expression
        // (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_529_sample_start_] 
        $T[AND_u32_u32_529_sample_completed_] 
        $T[AND_u32_u32_529_update_start_] 
        $T[AND_u32_u32_529_update_completed_] 
        // tempx_x0x_xph
        $T[R_tempx_x0x_xph_526_sample_start_] 
        $T[R_tempx_x0x_xph_526_sample_completed_] 
        $T[R_tempx_x0x_xph_526_update_start_] 
        $T[R_tempx_x0x_xph_526_update_completed_] 
        // implicit reference
        R_tempx_x0x_xph_526_sample_start_ <-& ($entry)
        R_tempx_x0x_xph_526_sample_completed_ <-& (R_tempx_x0x_xph_526_sample_start_)
        R_tempx_x0x_xph_526_update_start_ <-& (R_tempx_x0x_xph_526_sample_completed_)
        R_tempx_x0x_xph_526_update_completed_ <-& (R_tempx_x0x_xph_526_update_start_)
        AND_u32_u32_529_sample_start_ <-& (R_tempx_x0x_xph_526_update_completed_)
        ;;[AND_u32_u32_529_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_529_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_529_sample_start_ &-> (AND_u32_u32_529_Sample)
        AND_u32_u32_529_sample_completed_ <-& (AND_u32_u32_529_Sample)
        AND_u32_u32_529_sample_completed_ &-> ($null)
        AND_u32_u32_529_update_start_ &-> (AND_u32_u32_529_Update)
        AND_u32_u32_529_update_completed_ <-& (AND_u32_u32_529_Update)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // 		iNsTr_21 := (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 255
        // Source expression
        // (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_535_sample_start_] 
        $T[EQ_u32_u1_535_sample_completed_] 
        $T[EQ_u32_u1_535_update_start_] 
        $T[EQ_u32_u1_535_update_completed_] 
        // iNsTr_20
        $T[R_iNsTr_20_532_sample_start_] 
        $T[R_iNsTr_20_532_sample_completed_] 
        $T[R_iNsTr_20_532_update_start_] 
        $T[R_iNsTr_20_532_update_completed_] 
        // implicit reference
        R_iNsTr_20_532_sample_start_ <-& (AND_u32_u32_529_update_completed_)
        R_iNsTr_20_532_sample_completed_ <-& (R_iNsTr_20_532_sample_start_)
        R_iNsTr_20_532_update_start_ <-& (R_iNsTr_20_532_sample_completed_)
        R_iNsTr_20_532_update_completed_ <-& (R_iNsTr_20_532_update_start_)
        EQ_u32_u1_535_sample_start_ <-& (R_iNsTr_20_532_update_completed_)
        ;;[EQ_u32_u1_535_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_535_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_535_sample_start_ &-> (EQ_u32_u1_535_Sample)
        EQ_u32_u1_535_sample_completed_ <-& (EQ_u32_u1_535_Sample)
        EQ_u32_u1_535_sample_completed_ &-> ($null)
        EQ_u32_u1_535_update_start_ &-> (EQ_u32_u1_535_Update)
        EQ_u32_u1_535_update_completed_ <-& (EQ_u32_u1_535_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 257
        // Source expression
        // (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_544_sample_start_] 
        $T[NEQ_i32_u1_544_sample_completed_] 
        $T[NEQ_i32_u1_544_update_start_] 
        $T[NEQ_i32_u1_544_update_completed_] 
        // ($bitcast ($int<32>) tempx_x0x_xph )
        $T[type_cast_540_sample_start_] 
        $T[type_cast_540_sample_completed_] 
        $T[type_cast_540_update_start_] 
        $T[type_cast_540_update_completed_] 
        // tempx_x0x_xph
        $T[R_tempx_x0x_xph_539_sample_start_] 
        $T[R_tempx_x0x_xph_539_sample_completed_] 
        $T[R_tempx_x0x_xph_539_update_start_] 
        $T[R_tempx_x0x_xph_539_update_completed_] 
        // implicit reference
        R_tempx_x0x_xph_539_sample_start_ <-& ($entry)
        R_tempx_x0x_xph_539_sample_completed_ <-& (R_tempx_x0x_xph_539_sample_start_)
        R_tempx_x0x_xph_539_update_start_ <-& (R_tempx_x0x_xph_539_sample_completed_)
        R_tempx_x0x_xph_539_update_completed_ <-& (R_tempx_x0x_xph_539_update_start_)
        type_cast_540_sample_start_ <-& (R_tempx_x0x_xph_539_update_completed_)
        ;;[type_cast_540_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_540_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_540_sample_start_ &-> (type_cast_540_Sample)
        type_cast_540_sample_completed_ <-& (type_cast_540_Sample)
        type_cast_540_sample_completed_ &-> ($null)
        type_cast_540_update_start_ &-> (type_cast_540_Update)
        type_cast_540_update_completed_ <-& (type_cast_540_Update)
        // flow-through
        type_cast_540_update_start_ <-& (type_cast_540_sample_completed_)
        NEQ_i32_u1_544_sample_start_ <-& (type_cast_540_update_completed_)
        ;;[NEQ_i32_u1_544_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_544_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_544_sample_start_ &-> (NEQ_i32_u1_544_Sample)
        NEQ_i32_u1_544_sample_completed_ <-& (NEQ_i32_u1_544_Sample)
        NEQ_i32_u1_544_sample_completed_ &-> ($null)
        NEQ_i32_u1_544_update_start_ &-> (NEQ_i32_u1_544_Update)
        NEQ_i32_u1_544_update_completed_ <-& (NEQ_i32_u1_544_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // 		orx_xcond11 := (iNsTr_21 & iNsTr_22)
        //  file prog.aa, line 258
        // Source expression
        // (iNsTr_21 & iNsTr_22)
        $T[AND_u1_u1_549_sample_start_] 
        $T[AND_u1_u1_549_sample_completed_] 
        $T[AND_u1_u1_549_update_start_] 
        $T[AND_u1_u1_549_update_completed_] 
        // iNsTr_21
        $T[R_iNsTr_21_547_sample_start_] 
        $T[R_iNsTr_21_547_sample_completed_] 
        $T[R_iNsTr_21_547_update_start_] 
        $T[R_iNsTr_21_547_update_completed_] 
        // implicit reference
        R_iNsTr_21_547_sample_start_ <-& (EQ_u32_u1_535_update_completed_)
        R_iNsTr_21_547_sample_completed_ <-& (R_iNsTr_21_547_sample_start_)
        R_iNsTr_21_547_update_start_ <-& (R_iNsTr_21_547_sample_completed_)
        R_iNsTr_21_547_update_completed_ <-& (R_iNsTr_21_547_update_start_)
        // iNsTr_22
        $T[R_iNsTr_22_548_sample_start_] 
        $T[R_iNsTr_22_548_sample_completed_] 
        $T[R_iNsTr_22_548_update_start_] 
        $T[R_iNsTr_22_548_update_completed_] 
        // implicit reference
        R_iNsTr_22_548_sample_start_ <-& (NEQ_i32_u1_544_update_completed_)
        R_iNsTr_22_548_sample_completed_ <-& (R_iNsTr_22_548_sample_start_)
        R_iNsTr_22_548_update_start_ <-& (R_iNsTr_22_548_sample_completed_)
        R_iNsTr_22_548_update_completed_ <-& (R_iNsTr_22_548_update_start_)
        AND_u1_u1_549_sample_start_ <-& (R_iNsTr_21_547_update_completed_)
        AND_u1_u1_549_sample_start_ <-& (R_iNsTr_22_548_update_completed_)
        ;;[AND_u1_u1_549_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_549_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_549_sample_start_ &-> (AND_u1_u1_549_Sample)
        AND_u1_u1_549_sample_completed_ <-& (AND_u1_u1_549_Sample)
        AND_u1_u1_549_sample_completed_ &-> ($null)
        AND_u1_u1_549_update_start_ &-> (AND_u1_u1_549_Update)
        AND_u1_u1_549_update_completed_ <-& (AND_u1_u1_549_Update)
        // Target expression
        // (as target) orx_xcond11
        // orx_xcond11
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_530_to_assign_stmt_550__entry__ |-> (assign_stmt_530_to_assign_stmt_550)
      assign_stmt_530_to_assign_stmt_550__exit__ <-| (assign_stmt_530_to_assign_stmt_550)
      // if-statement  
      //  file prog.aa, line 259
      ;;[if_stmt_551_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_551__entry__ |-> (if_stmt_551_dead_link)
      if_stmt_551__exit__ <-| (if_stmt_551_dead_link)
      ;;[if_stmt_551_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_551__entry__ |-> (if_stmt_551_eval_test)
      $P [R_orx_xcond11_552_place]
      R_orx_xcond11_552_place <-| (if_stmt_551_eval_test)
      ;;[if_stmt_551_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_551_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11_552_place |-> (if_stmt_551_if_link if_stmt_551_else_link)
      $P [udiv32x_xexitx_xpreheader_bbx_xnph]
      udiv32x_xexitx_xpreheader_bbx_xnph <-| (if_stmt_551_if_link)
      $P [udiv32x_xexitx_xpreheader_xx_xcritedge]
      udiv32x_xexitx_xpreheader_xx_xcritedge <-| (if_stmt_551_else_link)
      ::[assign_stmt_563] 
      {
        // 		tmp21 := (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.aa, line 263
        // Source expression
        // (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_562_sample_start_] 
        $T[ADD_u32_u32_562_sample_completed_] 
        $T[ADD_u32_u32_562_update_start_] 
        $T[ADD_u32_u32_562_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_559_sample_start_] 
        $T[R_iNsTr_4_559_sample_completed_] 
        $T[R_iNsTr_4_559_update_start_] 
        $T[R_iNsTr_4_559_update_completed_] 
        // implicit reference
        R_iNsTr_4_559_sample_start_ <-& ($entry)
        R_iNsTr_4_559_sample_completed_ <-& (R_iNsTr_4_559_sample_start_)
        R_iNsTr_4_559_update_start_ <-& (R_iNsTr_4_559_sample_completed_)
        R_iNsTr_4_559_update_completed_ <-& (R_iNsTr_4_559_update_start_)
        ADD_u32_u32_562_sample_start_ <-& (R_iNsTr_4_559_update_completed_)
        ;;[ADD_u32_u32_562_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_562_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_562_sample_start_ &-> (ADD_u32_u32_562_Sample)
        ADD_u32_u32_562_sample_completed_ <-& (ADD_u32_u32_562_Sample)
        ADD_u32_u32_562_sample_completed_ &-> ($null)
        ADD_u32_u32_562_update_start_ &-> (ADD_u32_u32_562_Update)
        ADD_u32_u32_562_update_completed_ <-& (ADD_u32_u32_562_Update)
        // Target expression
        // (as target) tmp21
        // tmp21
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_563__entry__ |-> (assign_stmt_563)
      assign_stmt_563__exit__ <-| (assign_stmt_563)
      ::[assign_stmt_585_to_assign_stmt_616] 
      {
        // 		iNsTr_40 := (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 270
        // Source expression
        // (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_584_sample_start_] 
        $T[SHL_u32_u32_584_sample_completed_] 
        $T[SHL_u32_u32_584_update_start_] 
        $T[SHL_u32_u32_584_update_completed_] 
        // tempx_x012
        $T[R_tempx_x012_581_sample_start_] 
        $T[R_tempx_x012_581_sample_completed_] 
        $T[R_tempx_x012_581_update_start_] 
        $T[R_tempx_x012_581_update_completed_] 
        // implicit reference
        R_tempx_x012_581_sample_start_ <-& ($entry)
        R_tempx_x012_581_sample_completed_ <-& (R_tempx_x012_581_sample_start_)
        R_tempx_x012_581_update_start_ <-& (R_tempx_x012_581_sample_completed_)
        R_tempx_x012_581_update_completed_ <-& (R_tempx_x012_581_update_start_)
        SHL_u32_u32_584_sample_start_ <-& (R_tempx_x012_581_update_completed_)
        ;;[SHL_u32_u32_584_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_584_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_584_sample_start_ &-> (SHL_u32_u32_584_Sample)
        SHL_u32_u32_584_sample_completed_ <-& (SHL_u32_u32_584_Sample)
        SHL_u32_u32_584_sample_completed_ &-> ($null)
        SHL_u32_u32_584_update_start_ &-> (SHL_u32_u32_584_Update)
        SHL_u32_u32_584_update_completed_ <-& (SHL_u32_u32_584_Update)
        // Target expression
        // (as target) iNsTr_40
        // iNsTr_40
        // implicit reference
        // 		iNsTr_41 := (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 271
        // Source expression
        // (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_590_sample_start_] 
        $T[AND_u32_u32_590_sample_completed_] 
        $T[AND_u32_u32_590_update_start_] 
        $T[AND_u32_u32_590_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_587_sample_start_] 
        $T[R_iNsTr_40_587_sample_completed_] 
        $T[R_iNsTr_40_587_update_start_] 
        $T[R_iNsTr_40_587_update_completed_] 
        // implicit reference
        R_iNsTr_40_587_sample_start_ <-& (SHL_u32_u32_584_update_completed_)
        R_iNsTr_40_587_sample_completed_ <-& (R_iNsTr_40_587_sample_start_)
        R_iNsTr_40_587_update_start_ <-& (R_iNsTr_40_587_sample_completed_)
        R_iNsTr_40_587_update_completed_ <-& (R_iNsTr_40_587_update_start_)
        AND_u32_u32_590_sample_start_ <-& (R_iNsTr_40_587_update_completed_)
        ;;[AND_u32_u32_590_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_590_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_590_sample_start_ &-> (AND_u32_u32_590_Sample)
        AND_u32_u32_590_sample_completed_ <-& (AND_u32_u32_590_Sample)
        AND_u32_u32_590_sample_completed_ &-> ($null)
        AND_u32_u32_590_update_start_ &-> (AND_u32_u32_590_Update)
        AND_u32_u32_590_update_completed_ <-& (AND_u32_u32_590_Update)
        // Target expression
        // (as target) iNsTr_41
        // iNsTr_41
        // implicit reference
        // 		iNsTr_42 := (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 273
        // Source expression
        // (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_596_sample_start_] 
        $T[EQ_u32_u1_596_sample_completed_] 
        $T[EQ_u32_u1_596_update_start_] 
        $T[EQ_u32_u1_596_update_completed_] 
        // iNsTr_41
        $T[R_iNsTr_41_593_sample_start_] 
        $T[R_iNsTr_41_593_sample_completed_] 
        $T[R_iNsTr_41_593_update_start_] 
        $T[R_iNsTr_41_593_update_completed_] 
        // implicit reference
        R_iNsTr_41_593_sample_start_ <-& (AND_u32_u32_590_update_completed_)
        R_iNsTr_41_593_sample_completed_ <-& (R_iNsTr_41_593_sample_start_)
        R_iNsTr_41_593_update_start_ <-& (R_iNsTr_41_593_sample_completed_)
        R_iNsTr_41_593_update_completed_ <-& (R_iNsTr_41_593_update_start_)
        EQ_u32_u1_596_sample_start_ <-& (R_iNsTr_41_593_update_completed_)
        ;;[EQ_u32_u1_596_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_596_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_596_sample_start_ &-> (EQ_u32_u1_596_Sample)
        EQ_u32_u1_596_sample_completed_ <-& (EQ_u32_u1_596_Sample)
        EQ_u32_u1_596_sample_completed_ &-> ($null)
        EQ_u32_u1_596_update_start_ &-> (EQ_u32_u1_596_Update)
        EQ_u32_u1_596_update_completed_ <-& (EQ_u32_u1_596_Update)
        // Target expression
        // (as target) iNsTr_42
        // iNsTr_42
        // implicit reference
        // 		iNsTr_43 := (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 275
        // Source expression
        // (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_604_sample_start_] 
        $T[NEQ_i32_u1_604_sample_completed_] 
        $T[NEQ_i32_u1_604_update_start_] 
        $T[NEQ_i32_u1_604_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_40 )
        $T[type_cast_600_sample_start_] 
        $T[type_cast_600_sample_completed_] 
        $T[type_cast_600_update_start_] 
        $T[type_cast_600_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_599_sample_start_] 
        $T[R_iNsTr_40_599_sample_completed_] 
        $T[R_iNsTr_40_599_update_start_] 
        $T[R_iNsTr_40_599_update_completed_] 
        // implicit reference
        R_iNsTr_40_599_sample_start_ <-& (SHL_u32_u32_584_update_completed_)
        R_iNsTr_40_599_sample_completed_ <-& (R_iNsTr_40_599_sample_start_)
        R_iNsTr_40_599_update_start_ <-& (R_iNsTr_40_599_sample_completed_)
        R_iNsTr_40_599_update_completed_ <-& (R_iNsTr_40_599_update_start_)
        type_cast_600_sample_start_ <-& (R_iNsTr_40_599_update_completed_)
        ;;[type_cast_600_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_600_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_600_sample_start_ &-> (type_cast_600_Sample)
        type_cast_600_sample_completed_ <-& (type_cast_600_Sample)
        type_cast_600_sample_completed_ &-> ($null)
        type_cast_600_update_start_ &-> (type_cast_600_Update)
        type_cast_600_update_completed_ <-& (type_cast_600_Update)
        // flow-through
        type_cast_600_update_start_ <-& (type_cast_600_sample_completed_)
        NEQ_i32_u1_604_sample_start_ <-& (type_cast_600_update_completed_)
        ;;[NEQ_i32_u1_604_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_604_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_604_sample_start_ &-> (NEQ_i32_u1_604_Sample)
        NEQ_i32_u1_604_sample_completed_ <-& (NEQ_i32_u1_604_Sample)
        NEQ_i32_u1_604_sample_completed_ &-> ($null)
        NEQ_i32_u1_604_update_start_ &-> (NEQ_i32_u1_604_Update)
        NEQ_i32_u1_604_update_completed_ <-& (NEQ_i32_u1_604_Update)
        // Target expression
        // (as target) iNsTr_43
        // iNsTr_43
        // implicit reference
        // 		orx_xcond := (iNsTr_42 & iNsTr_43)
        //  file prog.aa, line 276
        // Source expression
        // (iNsTr_42 & iNsTr_43)
        $T[AND_u1_u1_609_sample_start_] 
        $T[AND_u1_u1_609_sample_completed_] 
        $T[AND_u1_u1_609_update_start_] 
        $T[AND_u1_u1_609_update_completed_] 
        // iNsTr_42
        $T[R_iNsTr_42_607_sample_start_] 
        $T[R_iNsTr_42_607_sample_completed_] 
        $T[R_iNsTr_42_607_update_start_] 
        $T[R_iNsTr_42_607_update_completed_] 
        // implicit reference
        R_iNsTr_42_607_sample_start_ <-& (EQ_u32_u1_596_update_completed_)
        R_iNsTr_42_607_sample_completed_ <-& (R_iNsTr_42_607_sample_start_)
        R_iNsTr_42_607_update_start_ <-& (R_iNsTr_42_607_sample_completed_)
        R_iNsTr_42_607_update_completed_ <-& (R_iNsTr_42_607_update_start_)
        // iNsTr_43
        $T[R_iNsTr_43_608_sample_start_] 
        $T[R_iNsTr_43_608_sample_completed_] 
        $T[R_iNsTr_43_608_update_start_] 
        $T[R_iNsTr_43_608_update_completed_] 
        // implicit reference
        R_iNsTr_43_608_sample_start_ <-& (NEQ_i32_u1_604_update_completed_)
        R_iNsTr_43_608_sample_completed_ <-& (R_iNsTr_43_608_sample_start_)
        R_iNsTr_43_608_update_start_ <-& (R_iNsTr_43_608_sample_completed_)
        R_iNsTr_43_608_update_completed_ <-& (R_iNsTr_43_608_update_start_)
        AND_u1_u1_609_sample_start_ <-& (R_iNsTr_42_607_update_completed_)
        AND_u1_u1_609_sample_start_ <-& (R_iNsTr_43_608_update_completed_)
        ;;[AND_u1_u1_609_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_609_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_609_sample_start_ &-> (AND_u1_u1_609_Sample)
        AND_u1_u1_609_sample_completed_ <-& (AND_u1_u1_609_Sample)
        AND_u1_u1_609_sample_completed_ &-> ($null)
        AND_u1_u1_609_update_start_ &-> (AND_u1_u1_609_Update)
        AND_u1_u1_609_update_completed_ <-& (AND_u1_u1_609_Update)
        // Target expression
        // (as target) orx_xcond
        // orx_xcond
        // implicit reference
        // 		indvarx_xnext := (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 277
        // Source expression
        // (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_615_sample_start_] 
        $T[ADD_u32_u32_615_sample_completed_] 
        $T[ADD_u32_u32_615_update_start_] 
        $T[ADD_u32_u32_615_update_completed_] 
        // iNsTr_39
        $T[R_iNsTr_39_612_sample_start_] 
        $T[R_iNsTr_39_612_sample_completed_] 
        $T[R_iNsTr_39_612_update_start_] 
        $T[R_iNsTr_39_612_update_completed_] 
        // implicit reference
        R_iNsTr_39_612_sample_start_ <-& ($entry)
        R_iNsTr_39_612_sample_completed_ <-& (R_iNsTr_39_612_sample_start_)
        R_iNsTr_39_612_update_start_ <-& (R_iNsTr_39_612_sample_completed_)
        R_iNsTr_39_612_update_completed_ <-& (R_iNsTr_39_612_update_start_)
        ADD_u32_u32_615_sample_start_ <-& (R_iNsTr_39_612_update_completed_)
        ;;[ADD_u32_u32_615_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_615_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_615_sample_start_ &-> (ADD_u32_u32_615_Sample)
        ADD_u32_u32_615_sample_completed_ <-& (ADD_u32_u32_615_Sample)
        ADD_u32_u32_615_sample_completed_ &-> ($null)
        ADD_u32_u32_615_update_start_ &-> (ADD_u32_u32_615_Update)
        ADD_u32_u32_615_update_completed_ <-& (ADD_u32_u32_615_Update)
        // Target expression
        // (as target) indvarx_xnext
        // indvarx_xnext
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_585_to_assign_stmt_616__entry__ |-> (assign_stmt_585_to_assign_stmt_616)
      assign_stmt_585_to_assign_stmt_616__exit__ <-| (assign_stmt_585_to_assign_stmt_616)
      // if-statement  
      //  file prog.aa, line 278
      ;;[if_stmt_617_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_617__entry__ |-> (if_stmt_617_dead_link)
      if_stmt_617__exit__ <-| (if_stmt_617_dead_link)
      ;;[if_stmt_617_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_617__entry__ |-> (if_stmt_617_eval_test)
      $P [R_orx_xcond_618_place]
      R_orx_xcond_618_place <-| (if_stmt_617_eval_test)
      ;;[if_stmt_617_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_617_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond_618_place |-> (if_stmt_617_if_link if_stmt_617_else_link)
      $P [udiv32x_xexit_udiv32x_xexit]
      udiv32x_xexit_udiv32x_xexit <-| (if_stmt_617_if_link)
      $P [udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge]
      udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge <-| (if_stmt_617_else_link)
      ::[assign_stmt_637_to_assign_stmt_642] 
      {
        // 		tmp25 := (tmp21 - iNsTr_6)
        //  file prog.aa, line 284
        // Source expression
        // (tmp21 - iNsTr_6)
        $T[SUB_u32_u32_636_sample_start_] 
        $T[SUB_u32_u32_636_sample_completed_] 
        $T[SUB_u32_u32_636_update_start_] 
        $T[SUB_u32_u32_636_update_completed_] 
        // tmp21
        $T[R_tmp21_634_sample_start_] 
        $T[R_tmp21_634_sample_completed_] 
        $T[R_tmp21_634_update_start_] 
        $T[R_tmp21_634_update_completed_] 
        // implicit reference
        R_tmp21_634_sample_start_ <-& ($entry)
        R_tmp21_634_sample_completed_ <-& (R_tmp21_634_sample_start_)
        R_tmp21_634_update_start_ <-& (R_tmp21_634_sample_completed_)
        R_tmp21_634_update_completed_ <-& (R_tmp21_634_update_start_)
        // iNsTr_6
        $T[R_iNsTr_6_635_sample_start_] 
        $T[R_iNsTr_6_635_sample_completed_] 
        $T[R_iNsTr_6_635_update_start_] 
        $T[R_iNsTr_6_635_update_completed_] 
        // implicit reference
        R_iNsTr_6_635_sample_start_ <-& ($entry)
        R_iNsTr_6_635_sample_completed_ <-& (R_iNsTr_6_635_sample_start_)
        R_iNsTr_6_635_update_start_ <-& (R_iNsTr_6_635_sample_completed_)
        R_iNsTr_6_635_update_completed_ <-& (R_iNsTr_6_635_update_start_)
        SUB_u32_u32_636_sample_start_ <-& (R_tmp21_634_update_completed_)
        SUB_u32_u32_636_sample_start_ <-& (R_iNsTr_6_635_update_completed_)
        ;;[SUB_u32_u32_636_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_636_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_636_sample_start_ &-> (SUB_u32_u32_636_Sample)
        SUB_u32_u32_636_sample_completed_ <-& (SUB_u32_u32_636_Sample)
        SUB_u32_u32_636_sample_completed_ &-> ($null)
        SUB_u32_u32_636_update_start_ &-> (SUB_u32_u32_636_Update)
        SUB_u32_u32_636_update_completed_ <-& (SUB_u32_u32_636_Update)
        // Target expression
        // (as target) tmp25
        // tmp25
        // implicit reference
        // 		tmp26 := (tmp25 - indvarx_xlcssa)
        //  file prog.aa, line 285
        // Source expression
        // (tmp25 - indvarx_xlcssa)
        $T[SUB_u32_u32_641_sample_start_] 
        $T[SUB_u32_u32_641_sample_completed_] 
        $T[SUB_u32_u32_641_update_start_] 
        $T[SUB_u32_u32_641_update_completed_] 
        // tmp25
        $T[R_tmp25_639_sample_start_] 
        $T[R_tmp25_639_sample_completed_] 
        $T[R_tmp25_639_update_start_] 
        $T[R_tmp25_639_update_completed_] 
        // implicit reference
        R_tmp25_639_sample_start_ <-& (SUB_u32_u32_636_update_completed_)
        R_tmp25_639_sample_completed_ <-& (R_tmp25_639_sample_start_)
        R_tmp25_639_update_start_ <-& (R_tmp25_639_sample_completed_)
        R_tmp25_639_update_completed_ <-& (R_tmp25_639_update_start_)
        // indvarx_xlcssa
        $T[R_indvarx_xlcssa_640_sample_start_] 
        $T[R_indvarx_xlcssa_640_sample_completed_] 
        $T[R_indvarx_xlcssa_640_update_start_] 
        $T[R_indvarx_xlcssa_640_update_completed_] 
        // implicit reference
        R_indvarx_xlcssa_640_sample_start_ <-& ($entry)
        R_indvarx_xlcssa_640_sample_completed_ <-& (R_indvarx_xlcssa_640_sample_start_)
        R_indvarx_xlcssa_640_update_start_ <-& (R_indvarx_xlcssa_640_sample_completed_)
        R_indvarx_xlcssa_640_update_completed_ <-& (R_indvarx_xlcssa_640_update_start_)
        SUB_u32_u32_641_sample_start_ <-& (R_tmp25_639_update_completed_)
        SUB_u32_u32_641_sample_start_ <-& (R_indvarx_xlcssa_640_update_completed_)
        ;;[SUB_u32_u32_641_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_641_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_641_sample_start_ &-> (SUB_u32_u32_641_Sample)
        SUB_u32_u32_641_sample_completed_ <-& (SUB_u32_u32_641_Sample)
        SUB_u32_u32_641_sample_completed_ &-> ($null)
        SUB_u32_u32_641_update_start_ &-> (SUB_u32_u32_641_Update)
        SUB_u32_u32_641_update_completed_ <-& (SUB_u32_u32_641_Update)
        // Target expression
        // (as target) tmp26
        // tmp26
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_637_to_assign_stmt_642__entry__ |-> (assign_stmt_637_to_assign_stmt_642)
      assign_stmt_637_to_assign_stmt_642__exit__ <-| (assign_stmt_637_to_assign_stmt_642)
      ::[assign_stmt_663_to_assign_stmt_689] 
      {
        // 		iNsTr_28 := (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 292
        // Source expression
        // (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_662_sample_start_] 
        $T[AND_u32_u32_662_sample_completed_] 
        $T[AND_u32_u32_662_update_start_] 
        $T[AND_u32_u32_662_update_completed_] 
        // tempx_x0x_xlcssa
        $T[R_tempx_x0x_xlcssa_659_sample_start_] 
        $T[R_tempx_x0x_xlcssa_659_sample_completed_] 
        $T[R_tempx_x0x_xlcssa_659_update_start_] 
        $T[R_tempx_x0x_xlcssa_659_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssa_659_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssa_659_sample_completed_ <-& (R_tempx_x0x_xlcssa_659_sample_start_)
        R_tempx_x0x_xlcssa_659_update_start_ <-& (R_tempx_x0x_xlcssa_659_sample_completed_)
        R_tempx_x0x_xlcssa_659_update_completed_ <-& (R_tempx_x0x_xlcssa_659_update_start_)
        AND_u32_u32_662_sample_start_ <-& (R_tempx_x0x_xlcssa_659_update_completed_)
        ;;[AND_u32_u32_662_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_662_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_662_sample_start_ &-> (AND_u32_u32_662_Sample)
        AND_u32_u32_662_sample_completed_ <-& (AND_u32_u32_662_Sample)
        AND_u32_u32_662_sample_completed_ &-> ($null)
        AND_u32_u32_662_update_start_ &-> (AND_u32_u32_662_Update)
        AND_u32_u32_662_update_completed_ <-& (AND_u32_u32_662_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // 		iNsTr_29 := (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 293
        // Source expression
        // (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_668_sample_start_] 
        $T[SHL_u32_u32_668_sample_completed_] 
        $T[SHL_u32_u32_668_update_start_] 
        $T[SHL_u32_u32_668_update_completed_] 
        // expx_x0x_xlcssa
        $T[R_expx_x0x_xlcssa_665_sample_start_] 
        $T[R_expx_x0x_xlcssa_665_sample_completed_] 
        $T[R_expx_x0x_xlcssa_665_update_start_] 
        $T[R_expx_x0x_xlcssa_665_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssa_665_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssa_665_sample_completed_ <-& (R_expx_x0x_xlcssa_665_sample_start_)
        R_expx_x0x_xlcssa_665_update_start_ <-& (R_expx_x0x_xlcssa_665_sample_completed_)
        R_expx_x0x_xlcssa_665_update_completed_ <-& (R_expx_x0x_xlcssa_665_update_start_)
        SHL_u32_u32_668_sample_start_ <-& (R_expx_x0x_xlcssa_665_update_completed_)
        ;;[SHL_u32_u32_668_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_668_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_668_sample_start_ &-> (SHL_u32_u32_668_Sample)
        SHL_u32_u32_668_sample_completed_ <-& (SHL_u32_u32_668_Sample)
        SHL_u32_u32_668_sample_completed_ &-> ($null)
        SHL_u32_u32_668_update_start_ &-> (SHL_u32_u32_668_Update)
        SHL_u32_u32_668_update_completed_ <-& (SHL_u32_u32_668_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // 		iNsTr_30 := (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 294
        // Source expression
        // (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_674_sample_start_] 
        $T[ADD_u32_u32_674_sample_completed_] 
        $T[ADD_u32_u32_674_update_start_] 
        $T[ADD_u32_u32_674_update_completed_] 
        // iNsTr_29
        $T[R_iNsTr_29_671_sample_start_] 
        $T[R_iNsTr_29_671_sample_completed_] 
        $T[R_iNsTr_29_671_update_start_] 
        $T[R_iNsTr_29_671_update_completed_] 
        // implicit reference
        R_iNsTr_29_671_sample_start_ <-& (SHL_u32_u32_668_update_completed_)
        R_iNsTr_29_671_sample_completed_ <-& (R_iNsTr_29_671_sample_start_)
        R_iNsTr_29_671_update_start_ <-& (R_iNsTr_29_671_sample_completed_)
        R_iNsTr_29_671_update_completed_ <-& (R_iNsTr_29_671_update_start_)
        ADD_u32_u32_674_sample_start_ <-& (R_iNsTr_29_671_update_completed_)
        ;;[ADD_u32_u32_674_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_674_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_674_sample_start_ &-> (ADD_u32_u32_674_Sample)
        ADD_u32_u32_674_sample_completed_ <-& (ADD_u32_u32_674_Sample)
        ADD_u32_u32_674_sample_completed_ &-> ($null)
        ADD_u32_u32_674_update_start_ &-> (ADD_u32_u32_674_Update)
        ADD_u32_u32_674_update_completed_ <-& (ADD_u32_u32_674_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // 		iNsTr_31 := (iNsTr_28 | iNsTr_14)
        //  file prog.aa, line 295
        // Source expression
        // (iNsTr_28 | iNsTr_14)
        $T[OR_u32_u32_679_sample_start_] 
        $T[OR_u32_u32_679_sample_completed_] 
        $T[OR_u32_u32_679_update_start_] 
        $T[OR_u32_u32_679_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_677_sample_start_] 
        $T[R_iNsTr_28_677_sample_completed_] 
        $T[R_iNsTr_28_677_update_start_] 
        $T[R_iNsTr_28_677_update_completed_] 
        // implicit reference
        R_iNsTr_28_677_sample_start_ <-& (AND_u32_u32_662_update_completed_)
        R_iNsTr_28_677_sample_completed_ <-& (R_iNsTr_28_677_sample_start_)
        R_iNsTr_28_677_update_start_ <-& (R_iNsTr_28_677_sample_completed_)
        R_iNsTr_28_677_update_completed_ <-& (R_iNsTr_28_677_update_start_)
        // iNsTr_14
        $T[R_iNsTr_14_678_sample_start_] 
        $T[R_iNsTr_14_678_sample_completed_] 
        $T[R_iNsTr_14_678_update_start_] 
        $T[R_iNsTr_14_678_update_completed_] 
        // implicit reference
        R_iNsTr_14_678_sample_start_ <-& ($entry)
        R_iNsTr_14_678_sample_completed_ <-& (R_iNsTr_14_678_sample_start_)
        R_iNsTr_14_678_update_start_ <-& (R_iNsTr_14_678_sample_completed_)
        R_iNsTr_14_678_update_completed_ <-& (R_iNsTr_14_678_update_start_)
        OR_u32_u32_679_sample_start_ <-& (R_iNsTr_28_677_update_completed_)
        OR_u32_u32_679_sample_start_ <-& (R_iNsTr_14_678_update_completed_)
        ;;[OR_u32_u32_679_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_679_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_679_sample_start_ &-> (OR_u32_u32_679_Sample)
        OR_u32_u32_679_sample_completed_ <-& (OR_u32_u32_679_Sample)
        OR_u32_u32_679_sample_completed_ &-> ($null)
        OR_u32_u32_679_update_start_ &-> (OR_u32_u32_679_Update)
        OR_u32_u32_679_update_completed_ <-& (OR_u32_u32_679_Update)
        // Target expression
        // (as target) iNsTr_31
        // iNsTr_31
        // implicit reference
        // 		iNsTr_32 := (iNsTr_31 | iNsTr_30)
        //  file prog.aa, line 296
        // Source expression
        // (iNsTr_31 | iNsTr_30)
        $T[OR_u32_u32_684_sample_start_] 
        $T[OR_u32_u32_684_sample_completed_] 
        $T[OR_u32_u32_684_update_start_] 
        $T[OR_u32_u32_684_update_completed_] 
        // iNsTr_31
        $T[R_iNsTr_31_682_sample_start_] 
        $T[R_iNsTr_31_682_sample_completed_] 
        $T[R_iNsTr_31_682_update_start_] 
        $T[R_iNsTr_31_682_update_completed_] 
        // implicit reference
        R_iNsTr_31_682_sample_start_ <-& (OR_u32_u32_679_update_completed_)
        R_iNsTr_31_682_sample_completed_ <-& (R_iNsTr_31_682_sample_start_)
        R_iNsTr_31_682_update_start_ <-& (R_iNsTr_31_682_sample_completed_)
        R_iNsTr_31_682_update_completed_ <-& (R_iNsTr_31_682_update_start_)
        // iNsTr_30
        $T[R_iNsTr_30_683_sample_start_] 
        $T[R_iNsTr_30_683_sample_completed_] 
        $T[R_iNsTr_30_683_update_start_] 
        $T[R_iNsTr_30_683_update_completed_] 
        // implicit reference
        R_iNsTr_30_683_sample_start_ <-& (ADD_u32_u32_674_update_completed_)
        R_iNsTr_30_683_sample_completed_ <-& (R_iNsTr_30_683_sample_start_)
        R_iNsTr_30_683_update_start_ <-& (R_iNsTr_30_683_sample_completed_)
        R_iNsTr_30_683_update_completed_ <-& (R_iNsTr_30_683_update_start_)
        OR_u32_u32_684_sample_start_ <-& (R_iNsTr_31_682_update_completed_)
        OR_u32_u32_684_sample_start_ <-& (R_iNsTr_30_683_update_completed_)
        ;;[OR_u32_u32_684_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_684_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_684_sample_start_ &-> (OR_u32_u32_684_Sample)
        OR_u32_u32_684_sample_completed_ <-& (OR_u32_u32_684_Sample)
        OR_u32_u32_684_sample_completed_ &-> ($null)
        OR_u32_u32_684_update_start_ &-> (OR_u32_u32_684_Update)
        OR_u32_u32_684_update_completed_ <-& (OR_u32_u32_684_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		tmp3 := ($bitcast ($float<8,23>) iNsTr_32 )
        //  file prog.aa, line 297
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_32 )
        $T[type_cast_688_sample_start_] 
        $T[type_cast_688_sample_completed_] 
        $T[type_cast_688_update_start_] 
        $T[type_cast_688_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_687_sample_start_] 
        $T[R_iNsTr_32_687_sample_completed_] 
        $T[R_iNsTr_32_687_update_start_] 
        $T[R_iNsTr_32_687_update_completed_] 
        // implicit reference
        R_iNsTr_32_687_sample_start_ <-& (OR_u32_u32_684_update_completed_)
        R_iNsTr_32_687_sample_completed_ <-& (R_iNsTr_32_687_sample_start_)
        R_iNsTr_32_687_update_start_ <-& (R_iNsTr_32_687_sample_completed_)
        R_iNsTr_32_687_update_completed_ <-& (R_iNsTr_32_687_update_start_)
        type_cast_688_sample_start_ <-& (R_iNsTr_32_687_update_completed_)
        ;;[type_cast_688_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_688_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_688_sample_start_ &-> (type_cast_688_Sample)
        type_cast_688_sample_completed_ <-& (type_cast_688_Sample)
        type_cast_688_sample_completed_ &-> ($null)
        type_cast_688_update_start_ &-> (type_cast_688_Update)
        type_cast_688_update_completed_ <-& (type_cast_688_Update)
        // Target expression
        // (as target) tmp3
        // tmp3
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_663_to_assign_stmt_689__entry__ |-> (assign_stmt_663_to_assign_stmt_689)
      assign_stmt_663_to_assign_stmt_689__exit__ <-| (assign_stmt_663_to_assign_stmt_689)
      // control-path for merge  
      //  file prog.aa, line 173
      ;;[merge_stmt_292_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_292__entry__ |-> (merge_stmt_292_dead_link)
      merge_stmt_292__exit__ <-| (merge_stmt_292_dead_link)
      //---------------------   merge statement  file prog.aa, line 173  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_292_PhiReqMerge] 
      merge_stmt_292_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_292_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_292_PhiReqMerge |-> (merge_stmt_292_PhiAck)
      merge_stmt_292__exit__  <-| (merge_stmt_292_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 173  --------------------------
      // control-path for merge  
      //  file prog.aa, line 197
      ;;[merge_stmt_379_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_379__entry__ |-> (merge_stmt_379_dead_link)
      merge_stmt_379__exit__ <-| (merge_stmt_379_dead_link)
      //---------------------   merge statement  file prog.aa, line 197  --------------------------
      ||[bb_1_bbx_xnph7x_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bbx_xnph7x_xix_xpreheader |-> (bb_1_bbx_xnph7x_xix_xpreheader_PhiReq)
      $P [merge_stmt_379_PhiReqMerge] 
      merge_stmt_379_PhiReqMerge <-| ( bb_1_bbx_xnph7x_xix_xpreheader_PhiReq )
      ||[merge_stmt_379_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_379_PhiReqMerge |-> (merge_stmt_379_PhiAck)
      merge_stmt_379__exit__  <-| (merge_stmt_379_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 197  --------------------------
      // control-path for merge  
      //  file prog.aa, line 201
      //---------------------   merge statement  file prog.aa, line 201  --------------------------
      ||[bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq] 
      {
        ;;[phi_stmt_382] 
        {
          ||[phi_stmt_382_sources] 
          {
            // sources for 			$phi xx_x016x_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_36 )
            ;;[type_cast_385] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_387] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_382_req] 
        }
        ;;[phi_stmt_388] 
        {
          ||[phi_stmt_388_sources] 
          {
            // sources for 			$phi quotientx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_35 )
            ;;[type_cast_391] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_388_req] 
        }
      }
      bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi |-> (bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq)
      ||[xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq] 
      {
        ;;[phi_stmt_382] 
        {
          ||[phi_stmt_382_sources] 
          {
            // sources for 			$phi xx_x016x_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_36 )
            ;;[type_cast_385] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_387] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_382_req] 
        }
        ;;[phi_stmt_388] 
        {
          ||[phi_stmt_388_sources] 
          {
            // sources for 			$phi quotientx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_35 )
            ;;[type_cast_391] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_388_req] 
        }
      }
      xx_x_crit_edgex_xi_bbx_xnph7x_xi |-> (xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq)
      $P [merge_stmt_381_PhiReqMerge] 
      merge_stmt_381_PhiReqMerge <-| ( bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq  xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq )
      ||[merge_stmt_381_PhiAck] 
      {
        $T [phi_stmt_382_ack] 
        $T [phi_stmt_388_ack] 
      }
      merge_stmt_381_PhiReqMerge |-> (merge_stmt_381_PhiAck)
      merge_stmt_381__exit__  <-| (merge_stmt_381_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 201  --------------------------
      // control-path for merge  
      //  file prog.aa, line 210
      ;;[merge_stmt_413_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_413__entry__ |-> (merge_stmt_413_dead_link)
      merge_stmt_413__exit__ <-| (merge_stmt_413_dead_link)
      //---------------------   merge statement  file prog.aa, line 210  --------------------------
      ||[bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader |-> (bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader_PhiReq)
      $P [merge_stmt_413_PhiReqMerge] 
      merge_stmt_413_PhiReqMerge <-| ( bbx_xnph7x_xi_bbx_xnphx_xix_xpreheader_PhiReq )
      ||[merge_stmt_413_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_413_PhiReqMerge |-> (merge_stmt_413_PhiAck)
      merge_stmt_413__exit__  <-| (merge_stmt_413_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 210  --------------------------
      // control-path for merge  
      //  file prog.aa, line 214
      //---------------------   merge statement  file prog.aa, line 214  --------------------------
      ||[bbx_xnphx_xi_bbx_xnphx_xi_PhiReq] 
      {
        ;;[phi_stmt_416] 
        {
          ||[phi_stmt_416_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xi := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_45 )
            ;;[type_cast_419] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_421] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_416_req] 
        }
        ;;[phi_stmt_422] 
        {
          ||[phi_stmt_422_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_425] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_422_req] 
        }
      }
      bbx_xnphx_xi_bbx_xnphx_xi |-> (bbx_xnphx_xi_bbx_xnphx_xi_PhiReq)
      ||[bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq] 
      {
        ;;[phi_stmt_416] 
        {
          ||[phi_stmt_416_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xi := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_45 )
            ;;[type_cast_419] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_421] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_416_req] 
        }
        ;;[phi_stmt_422] 
        {
          ||[phi_stmt_422_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_425] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_422_req] 
        }
      }
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi |-> (bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq)
      $P [merge_stmt_415_PhiReqMerge] 
      merge_stmt_415_PhiReqMerge <-| ( bbx_xnphx_xi_bbx_xnphx_xi_PhiReq  bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq )
      ||[merge_stmt_415_PhiAck] 
      {
        $T [phi_stmt_416_ack] 
        $T [phi_stmt_422_ack] 
      }
      merge_stmt_415_PhiReqMerge |-> (merge_stmt_415_PhiAck)
      merge_stmt_415__exit__  <-| (merge_stmt_415_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 214  --------------------------
      // control-path for merge  
      //  file prog.aa, line 224
      ;;[merge_stmt_453_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_453__entry__ |-> (merge_stmt_453_dead_link)
      merge_stmt_453__exit__ <-| (merge_stmt_453_dead_link)
      //---------------------   merge statement  file prog.aa, line 224  --------------------------
      ||[bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_454] 
        {
          ||[phi_stmt_454_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_457] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_454_req] 
        }
        ;;[phi_stmt_458] 
        {
          ||[phi_stmt_458_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_45 )
            ;;[type_cast_461] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_458_req] 
        }
      }
      bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit |-> (bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq)
      $P [merge_stmt_453_PhiReqMerge] 
      merge_stmt_453_PhiReqMerge <-| ( bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq )
      ||[merge_stmt_453_PhiAck] 
      {
        $T [phi_stmt_454_ack] 
        $T [phi_stmt_458_ack] 
      }
      merge_stmt_453_PhiReqMerge |-> (merge_stmt_453_PhiAck)
      merge_stmt_453__exit__  <-| (merge_stmt_453_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 224  --------------------------
      // control-path for merge  
      //  file prog.aa, line 230
      //---------------------   merge statement  file prog.aa, line 230  --------------------------
      ||[bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_465] 
        {
          ||[phi_stmt_465_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_468] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_470] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_465_req] 
        }
        ;;[phi_stmt_471] 
        {
          ||[phi_stmt_471_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_477] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_471_req] 
        }
      }
      bbx_xnph7x_xi_xx_x_crit_edgex_xi |-> (bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_465] 
        {
          ||[phi_stmt_465_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_468] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_470] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_465_req] 
        }
        ;;[phi_stmt_471] 
        {
          ||[phi_stmt_471_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_477] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_471_req] 
        }
      }
      xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi |-> (xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq)
      $P [merge_stmt_464_PhiReqMerge] 
      merge_stmt_464_PhiReqMerge <-| ( bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq  xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq )
      ||[merge_stmt_464_PhiAck] 
      {
        $T [phi_stmt_465_ack] 
        $T [phi_stmt_471_ack] 
      }
      merge_stmt_464_PhiReqMerge |-> (merge_stmt_464_PhiAck)
      merge_stmt_464__exit__  <-| (merge_stmt_464_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 230  --------------------------
      // control-path for merge  
      //  file prog.aa, line 240
      ;;[merge_stmt_500_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_500__entry__ |-> (merge_stmt_500_dead_link)
      merge_stmt_500__exit__ <-| (merge_stmt_500_dead_link)
      //---------------------   merge statement  file prog.aa, line 240  --------------------------
      ||[xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_501] 
        {
          ||[phi_stmt_501_sources] 
          {
            // sources for 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_35 )
            ;;[type_cast_504] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_501_req] 
        }
      }
      xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit |-> (xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq)
      $P [merge_stmt_500_PhiReqMerge] 
      merge_stmt_500_PhiReqMerge <-| ( xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq )
      ||[merge_stmt_500_PhiAck] 
      {
        $T [phi_stmt_501_ack] 
      }
      merge_stmt_500_PhiReqMerge |-> (merge_stmt_500_PhiAck)
      merge_stmt_500__exit__  <-| (merge_stmt_500_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 240  --------------------------
      // control-path for merge  
      //  file prog.aa, line 245
      //---------------------   merge statement  file prog.aa, line 245  --------------------------
      ||[bb_1_xx_xloopexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_508] 
        {
          ||[phi_stmt_508_sources] 
          {
            // sources for 			$phi xx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_514] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_508_req] 
        }
      }
      bb_1_xx_xloopexitx_xi |-> (bb_1_xx_xloopexitx_xi_PhiReq)
      ||[xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_508] 
        {
          ||[phi_stmt_508_sources] 
          {
            // sources for 			$phi xx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_514] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_508_req] 
        }
      }
      xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi |-> (xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq)
      $P [merge_stmt_507_PhiReqMerge] 
      merge_stmt_507_PhiReqMerge <-| ( bb_1_xx_xloopexitx_xi_PhiReq  xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq )
      ||[merge_stmt_507_PhiAck] 
      {
        $T [phi_stmt_508_ack] 
      }
      merge_stmt_507_PhiReqMerge |-> (merge_stmt_507_PhiAck)
      merge_stmt_507__exit__  <-| (merge_stmt_507_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 245  --------------------------
      // control-path for merge  
      //  file prog.aa, line 250
      //---------------------   merge statement  file prog.aa, line 250  --------------------------
      ||[bb_1_udiv32x_xexitx_xpreheader_PhiReq] 
      {
        ;;[phi_stmt_518] 
        {
          ||[phi_stmt_518_sources] 
          {
            // sources for 			$phi tempx_x0x_xph := 			  ($cast ($uint<32>) xx_x0x_xi ) $on xx_xloopexitx_xi_udiv32x_xexitx_xpreheader			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_udiv32x_xexitx_xpreheader // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xi )
            ;;[type_cast_521] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_523] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_518_req] 
        }
      }
      bb_1_udiv32x_xexitx_xpreheader |-> (bb_1_udiv32x_xexitx_xpreheader_PhiReq)
      ||[xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq] 
      {
        ;;[phi_stmt_518] 
        {
          ||[phi_stmt_518_sources] 
          {
            // sources for 			$phi tempx_x0x_xph := 			  ($cast ($uint<32>) xx_x0x_xi ) $on xx_xloopexitx_xi_udiv32x_xexitx_xpreheader			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_udiv32x_xexitx_xpreheader // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xi )
            ;;[type_cast_521] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_9 )
            ;;[type_cast_523] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_518_req] 
        }
      }
      xx_xloopexitx_xi_udiv32x_xexitx_xpreheader |-> (xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq)
      $P [merge_stmt_517_PhiReqMerge] 
      merge_stmt_517_PhiReqMerge <-| ( bb_1_udiv32x_xexitx_xpreheader_PhiReq  xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq )
      ||[merge_stmt_517_PhiAck] 
      {
        $T [phi_stmt_518_ack] 
      }
      merge_stmt_517_PhiReqMerge |-> (merge_stmt_517_PhiAck)
      merge_stmt_517__exit__  <-| (merge_stmt_517_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 250  --------------------------
      // control-path for merge  
      //  file prog.aa, line 261
      ;;[merge_stmt_557_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_557__entry__ |-> (merge_stmt_557_dead_link)
      merge_stmt_557__exit__ <-| (merge_stmt_557_dead_link)
      //---------------------   merge statement  file prog.aa, line 261  --------------------------
      ||[udiv32x_xexitx_xpreheader_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheader_bbx_xnph |-> (udiv32x_xexitx_xpreheader_bbx_xnph_PhiReq)
      $P [merge_stmt_557_PhiReqMerge] 
      merge_stmt_557_PhiReqMerge <-| ( udiv32x_xexitx_xpreheader_bbx_xnph_PhiReq )
      ||[merge_stmt_557_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_557_PhiReqMerge |-> (merge_stmt_557_PhiAck)
      merge_stmt_557__exit__  <-| (merge_stmt_557_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 261  --------------------------
      // control-path for merge  
      //  file prog.aa, line 266
      //---------------------   merge statement  file prog.aa, line 266  --------------------------
      ||[bbx_xnph_udiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_566] 
        {
          ||[phi_stmt_566_sources] 
          {
            // sources for 			$phi iNsTr_39 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) indvarx_xnext ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnext )
            ;;[type_cast_572] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_566_req] 
        }
        ;;[phi_stmt_573] 
        {
          ||[phi_stmt_573_sources] 
          {
            // sources for 			$phi tempx_x012 := 			  ($cast ($uint<32>) tempx_x0x_xph ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) tempx_x0x_xph )
            ;;[type_cast_576] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_40 )
            ;;[type_cast_578] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_573_req] 
        }
      }
      bbx_xnph_udiv32x_xexit |-> (bbx_xnph_udiv32x_xexit_PhiReq)
      ||[udiv32x_xexit_udiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_566] 
        {
          ||[phi_stmt_566_sources] 
          {
            // sources for 			$phi iNsTr_39 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) indvarx_xnext ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnext )
            ;;[type_cast_572] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_566_req] 
        }
        ;;[phi_stmt_573] 
        {
          ||[phi_stmt_573_sources] 
          {
            // sources for 			$phi tempx_x012 := 			  ($cast ($uint<32>) tempx_x0x_xph ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) tempx_x0x_xph )
            ;;[type_cast_576] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_40 )
            ;;[type_cast_578] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_573_req] 
        }
      }
      udiv32x_xexit_udiv32x_xexit |-> (udiv32x_xexit_udiv32x_xexit_PhiReq)
      $P [merge_stmt_565_PhiReqMerge] 
      merge_stmt_565_PhiReqMerge <-| ( bbx_xnph_udiv32x_xexit_PhiReq  udiv32x_xexit_udiv32x_xexit_PhiReq )
      ||[merge_stmt_565_PhiAck] 
      {
        $T [phi_stmt_566_ack] 
        $T [phi_stmt_573_ack] 
      }
      merge_stmt_565_PhiReqMerge |-> (merge_stmt_565_PhiAck)
      merge_stmt_565__exit__  <-| (merge_stmt_565_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 266  --------------------------
      // control-path for merge  
      //  file prog.aa, line 280
      ;;[merge_stmt_623_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_623__entry__ |-> (merge_stmt_623_dead_link)
      merge_stmt_623__exit__ <-| (merge_stmt_623_dead_link)
      //---------------------   merge statement  file prog.aa, line 280  --------------------------
      ||[udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq] 
      {
        ;;[phi_stmt_624] 
        {
          ||[phi_stmt_624_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_40 )
            ;;[type_cast_627] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_624_req] 
        }
        ;;[phi_stmt_628] 
        {
          ||[phi_stmt_628_sources] 
          {
            // sources for 			$phi indvarx_xlcssa := 			  ($cast ($uint<32>) iNsTr_39 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_39 )
            ;;[type_cast_631] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_628_req] 
        }
      }
      udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge |-> (udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq)
      $P [merge_stmt_623_PhiReqMerge] 
      merge_stmt_623_PhiReqMerge <-| ( udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq )
      ||[merge_stmt_623_PhiAck] 
      {
        $T [phi_stmt_624_ack] 
        $T [phi_stmt_628_ack] 
      }
      merge_stmt_623_PhiReqMerge |-> (merge_stmt_623_PhiAck)
      merge_stmt_623__exit__  <-| (merge_stmt_623_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 280  --------------------------
      // control-path for merge  
      //  file prog.aa, line 288
      //---------------------   merge statement  file prog.aa, line 288  --------------------------
      ||[udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq] 
      {
        ;;[phi_stmt_651] 
        {
          ||[phi_stmt_651_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssa := 			  ($cast ($uint<32>) xx_xlcssa ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) tempx_x0x_xph ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa )
            ;;[type_cast_654] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xph )
            ;;[type_cast_656] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_651_req] 
        }
        ;;[phi_stmt_645] 
        {
          ||[phi_stmt_645_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssa := 			  ($cast ($uint<32>) tmp26 ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) iNsTr_15 ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26 )
            ;;[type_cast_648] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_15 )
            ;;[type_cast_650] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_645_req] 
        }
      }
      udiv32x_xexitx_xpreheader_xx_xcritedge |-> (udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq] 
      {
        ;;[phi_stmt_651] 
        {
          ||[phi_stmt_651_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssa := 			  ($cast ($uint<32>) xx_xlcssa ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) tempx_x0x_xph ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa )
            ;;[type_cast_654] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xph )
            ;;[type_cast_656] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_651_req] 
        }
        ;;[phi_stmt_645] 
        {
          ||[phi_stmt_645_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssa := 			  ($cast ($uint<32>) tmp26 ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) iNsTr_15 ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26 )
            ;;[type_cast_648] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_15 )
            ;;[type_cast_650] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_645_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge |-> (udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq)
      $P [merge_stmt_644_PhiReqMerge] 
      merge_stmt_644_PhiReqMerge <-| ( udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq )
      ||[merge_stmt_644_PhiAck] 
      {
        $T [phi_stmt_645_ack] 
        $T [phi_stmt_651_ack] 
      }
      merge_stmt_644_PhiReqMerge |-> (merge_stmt_644_PhiAck)
      merge_stmt_644__exit__  <-| (merge_stmt_644_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 288  --------------------------
      // control-path for merge  
      //  file prog.aa, line 300
      //---------------------   merge statement  file prog.aa, line 300  --------------------------
      ||[bb_0_bb_15_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_15 |-> (bb_0_bb_15_PhiReq)
      $P [merge_stmt_691_PhiReqMerge] 
      merge_stmt_691_PhiReqMerge <-| ( bb_0_bb_15_PhiReq )
      ||[merge_stmt_691_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_691_PhiReqMerge |-> (merge_stmt_691_PhiAck)
      merge_stmt_691__exit__  <-| (merge_stmt_691_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 300  --------------------------
      // control-path for merge  
      //  file prog.aa, line 304
      //---------------------   merge statement  file prog.aa, line 304  --------------------------
      ||[bb_15_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_694] 
        {
          ||[phi_stmt_694_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3 ) $on xx_xcritedge_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_15_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3 )
            ;;[type_cast_697] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_694_req] 
        }
      }
      bb_15_UnifiedReturnBlock |-> (bb_15_UnifiedReturnBlock_PhiReq)
      ||[xx_xcritedge_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_694] 
        {
          ||[phi_stmt_694_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3 ) $on xx_xcritedge_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_15_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3 )
            ;;[type_cast_697] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_694_req] 
        }
      }
      xx_xcritedge_UnifiedReturnBlock |-> (xx_xcritedge_UnifiedReturnBlock_PhiReq)
      $P [merge_stmt_693_PhiReqMerge] 
      merge_stmt_693_PhiReqMerge <-| ( bb_15_UnifiedReturnBlock_PhiReq  xx_xcritedge_UnifiedReturnBlock_PhiReq )
      ||[merge_stmt_693_PhiAck] 
      {
        $T [phi_stmt_694_ack] 
      }
      merge_stmt_693_PhiReqMerge |-> (merge_stmt_693_PhiAck)
      merge_stmt_693__exit__  <-| (merge_stmt_693_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 304  --------------------------
      // control-path for merge  
      //  file prog.aa, line 308
      //---------------------   merge statement  file prog.aa, line 308  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_703_PhiReqMerge] 
      merge_stmt_703_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_703_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_703_PhiReqMerge |-> (merge_stmt_703_PhiAck)
      merge_stmt_703__exit__  <-| (merge_stmt_703_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 308  --------------------------
      assign_stmt_275_to_assign_stmt_285__entry__ <-| (branch_block_stmt_271__entry__)
      if_stmt_286__entry__ <-| (assign_stmt_275_to_assign_stmt_285__exit__)
      merge_stmt_292__entry__ <-| (if_stmt_286__exit__)
      assign_stmt_298_to_assign_stmt_368__entry__ <-| (merge_stmt_292__exit__)
      switch_stmt_369__entry__ <-| (assign_stmt_298_to_assign_stmt_368__exit__)
      merge_stmt_379__entry__ <-| (switch_stmt_369__exit__)
      bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi <-| (merge_stmt_379__exit__)
      assign_stmt_401_to_assign_stmt_406__entry__ <-| (merge_stmt_381__exit__)
      if_stmt_407__entry__ <-| (assign_stmt_401_to_assign_stmt_406__exit__)
      merge_stmt_413__entry__ <-| (if_stmt_407__exit__)
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi <-| (merge_stmt_413__exit__)
      assign_stmt_435_to_assign_stmt_446__entry__ <-| (merge_stmt_415__exit__)
      if_stmt_447__entry__ <-| (assign_stmt_435_to_assign_stmt_446__exit__)
      merge_stmt_453__entry__ <-| (if_stmt_447__exit__)
      xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi <-| (merge_stmt_453__exit__)
      assign_stmt_483_to_assign_stmt_493__entry__ <-| (merge_stmt_464__exit__)
      if_stmt_494__entry__ <-| (assign_stmt_483_to_assign_stmt_493__exit__)
      merge_stmt_500__entry__ <-| (if_stmt_494__exit__)
      xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi <-| (merge_stmt_500__exit__)
      xx_xloopexitx_xi_udiv32x_xexitx_xpreheader <-| (merge_stmt_507__exit__)
      assign_stmt_530_to_assign_stmt_550__entry__ <-| (merge_stmt_517__exit__)
      if_stmt_551__entry__ <-| (assign_stmt_530_to_assign_stmt_550__exit__)
      merge_stmt_557__entry__ <-| (if_stmt_551__exit__)
      assign_stmt_563__entry__ <-| (merge_stmt_557__exit__)
      bbx_xnph_udiv32x_xexit <-| (assign_stmt_563__exit__)
      assign_stmt_585_to_assign_stmt_616__entry__ <-| (merge_stmt_565__exit__)
      if_stmt_617__entry__ <-| (assign_stmt_585_to_assign_stmt_616__exit__)
      merge_stmt_623__entry__ <-| (if_stmt_617__exit__)
      assign_stmt_637_to_assign_stmt_642__entry__ <-| (merge_stmt_623__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge <-| (assign_stmt_637_to_assign_stmt_642__exit__)
      assign_stmt_663_to_assign_stmt_689__entry__ <-| (merge_stmt_644__exit__)
      xx_xcritedge_UnifiedReturnBlock <-| (assign_stmt_663_to_assign_stmt_689__exit__)
      bb_15_UnifiedReturnBlock <-| (merge_stmt_691__exit__)
      return__ <-| (merge_stmt_693__exit__)
      merge_stmt_703__exit__ |-> (branch_block_stmt_271__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 173
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 197
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 201
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 210
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 214
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 224
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 230
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 240
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 245
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 250
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 261
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 266
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 280
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 288
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 300
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 304
    // constant-object-declarations for block %fdiv32%body%
    //  file prog.aa, line 308
    // constant-object-declarations for block %fdiv32%body
    //  file prog.aa, line 164
    // constant-object-declarations for block %fdiv32
    //  file prog.aa, line 159
    // constant-declarations for block %fdiv32%body
    //  file prog.aa, line 164
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_283_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 171
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 173
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_296_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_302_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_308_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_314_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_320_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_326_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_332_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_338_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00000000000000001111111111111111  )
    $constant $W[type_cast_344_wire_constant] : $int<32> := _b00000000000000001111111111111111// 65535
    // ($bitcast ($uint<32>) _b00000000000000010000000000000000  )
    $constant $W[type_cast_350_wire_constant] : $int<32> := _b00000000000000010000000000000000// 65536
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_361_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // constant-declarations  for switch  
    //  file prog.aa, line 188
    // _b00000000000000000000000000000000 
    $constant $W[expr_371_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b00000000000000000000000000000001 
    $constant $W[expr_374_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 197
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 201
    // constant-declarations for phi:  			$phi xx_x016x_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
    //  file prog.aa, line 202
    // constant-declarations for phi:  			$phi quotientx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
    //  file prog.aa, line 203
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_394_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_399_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 208
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 210
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 214
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xi := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.aa, line 215
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.aa, line 216
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_428_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_433_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_439_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 222
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 224
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 225
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 226
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 230
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 231
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 232
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_475_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 238
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 240
    // constant-declarations for phi:  			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 241
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 245
    // constant-declarations for phi:  			$phi xx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 246
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_512_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 250
    // constant-declarations for phi:  			$phi tempx_x0x_xph := 			  ($cast ($uint<32>) xx_x0x_xi ) $on xx_xloopexitx_xi_udiv32x_xexitx_xpreheader			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_udiv32x_xexitx_xpreheader // type of target is $uint<32>
    //  file prog.aa, line 251
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_528_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_534_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_543_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 259
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 261
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_561_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 266
    // constant-declarations for phi:  			$phi iNsTr_39 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) indvarx_xnext ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
    //  file prog.aa, line 267
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_570_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012 := 			  ($cast ($uint<32>) tempx_x0x_xph ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
    //  file prog.aa, line 268
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_583_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_589_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_595_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_603_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_614_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 278
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 280
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 281
    // constant-declarations for phi:  			$phi indvarx_xlcssa := 			  ($cast ($uint<32>) iNsTr_39 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 282
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 288
    // constant-declarations for phi:  			$phi expx_x0x_xlcssa := 			  ($cast ($uint<32>) tmp26 ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) iNsTr_15 ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
    //  file prog.aa, line 289
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssa := 			  ($cast ($uint<32>) xx_xlcssa ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) tempx_x0x_xph ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
    //  file prog.aa, line 290
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_661_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_667_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_673_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 300
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 304
    // constant-declarations for phi:  			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3 ) $on xx_xcritedge_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_15_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 305
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_700_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for block %fdiv32%body%
    //  file prog.aa, line 308
    // block %fdiv32%body
    //  file prog.aa, line 164
    // 		tmp10 := ($bitcast ($uint<32>) a )
    //  file prog.aa, line 167
    // tmp10
    $W[tmp10_275] : $int<32>
    // 		tmp6 := ($bitcast ($uint<32>) b )
    //  file prog.aa, line 168
    // tmp6
    $W[tmp6_279] : $int<32>
    // 		iNsTr_0 := (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 170
    // iNsTr_0
    $W[iNsTr_0_285] : $int<1>
    // if statement  
    //  file prog.aa, line 171
    // 		iNsTr_3 := (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 175
    // iNsTr_3
    $W[iNsTr_3_298] : $int<32>
    // 		iNsTr_4 := (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 176
    // iNsTr_4
    $W[iNsTr_4_304] : $int<32>
    // 		iNsTr_5 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 177
    // iNsTr_5
    $W[iNsTr_5_310] : $int<32>
    // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 178
    // iNsTr_6
    $W[iNsTr_6_316] : $int<32>
    // 		iNsTr_7 := (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 179
    // iNsTr_7
    $W[iNsTr_7_322] : $int<32>
    // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 180
    // iNsTr_8
    $W[iNsTr_8_328] : $int<32>
    // 		iNsTr_9 := (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 181
    // iNsTr_9
    $W[iNsTr_9_334] : $int<32>
    // 		iNsTr_10 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 182
    // iNsTr_10
    $W[iNsTr_10_340] : $int<32>
    // 		iNsTr_11 := (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 183
    // iNsTr_11
    $W[iNsTr_11_346] : $int<32>
    // 		iNsTr_12 := (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 184
    // iNsTr_12
    $W[iNsTr_12_352] : $int<32>
    // 		iNsTr_13 := (tmp6 ^ tmp10)
    //  file prog.aa, line 185
    // iNsTr_13
    $W[iNsTr_13_357] : $int<32>
    // 		iNsTr_14 := (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 186
    // iNsTr_14
    $W[iNsTr_14_363] : $int<32>
    // 		iNsTr_15 := (iNsTr_4 - iNsTr_6)
    //  file prog.aa, line 187
    // iNsTr_15
    $W[iNsTr_15_368] : $int<32>
    // switch-statement  
    //  file prog.aa, line 188
    $W[expr_371_wire_constant_cmp] : $int<1>
    $W[expr_374_wire_constant_cmp] : $int<1>
    // merge-statement  
    //  file prog.aa, line 201
    // 			$phi xx_x016x_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
    //  file prog.aa, line 202
    // ($cast ($uint<32>) iNsTr_36 )
    $intermediate $W[type_cast_385_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_9 )
    $intermediate $W[type_cast_387_wire] : $int<32>
    // xx_x016x_xi
    $W[xx_x016x_xi_382] : $int<32>
    // 			$phi quotientx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
    //  file prog.aa, line 203
    // ($cast ($uint<32>) iNsTr_35 )
    $intermediate $W[type_cast_391_wire] : $int<32>
    // quotientx_x05x_xi
    $W[quotientx_x05x_xi_388] : $int<32>
    // 		iNsTr_24 := (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 205
    // iNsTr_24
    $W[iNsTr_24_401] : $int<32>
    // 		iNsTr_25 := (iNsTr_24 > iNsTr_12)
    //  file prog.aa, line 207
    // iNsTr_25
    $W[iNsTr_25_406] : $int<1>
    // if statement  
    //  file prog.aa, line 208
    // merge-statement  
    //  file prog.aa, line 214
    // 			$phi shifted_divisorx_x03x_xi := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.aa, line 215
    // ($cast ($uint<32>) iNsTr_45 )
    $intermediate $W[type_cast_419_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_12 )
    $intermediate $W[type_cast_421_wire] : $int<32>
    // shifted_divisorx_x03x_xi
    $W[shifted_divisorx_x03x_xi_416] : $int<32>
    // 			$phi curr_quotientx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.aa, line 216
    // ($cast ($uint<32>) iNsTr_46 )
    $intermediate $W[type_cast_425_wire] : $int<32>
    // curr_quotientx_x02x_xi
    $W[curr_quotientx_x02x_xi_422] : $int<32>
    // 		iNsTr_45 := (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 218
    // iNsTr_45
    $W[iNsTr_45_435] : $int<32>
    // 		iNsTr_46 := (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 219
    // iNsTr_46
    $W[iNsTr_46_441] : $int<32>
    // 		iNsTr_47 := (iNsTr_45 < iNsTr_24)
    //  file prog.aa, line 221
    // iNsTr_47
    $W[iNsTr_47_446] : $int<1>
    // if statement  
    //  file prog.aa, line 222
    // merge-statement  
    //  file prog.aa, line 224
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 225
    // ($cast ($uint<32>) iNsTr_46 )
    $intermediate $W[type_cast_457_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_454] : $int<32>
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 226
    // ($cast ($uint<32>) iNsTr_45 )
    $intermediate $W[type_cast_461_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_458] : $int<32>
    // merge-statement  
    //  file prog.aa, line 230
    // 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 231
    // ($cast ($uint<32>) iNsTr_12 )
    $intermediate $W[type_cast_468_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_470_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xi
    $W[shifted_divisorx_x0x_xlcssax_xi_465] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 232
    // ($cast ($uint<32>) xx_xlcssa2 )
    $intermediate $W[type_cast_477_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xi
    $W[curr_quotientx_x0x_xlcssax_xi_471] : $int<32>
    // 		iNsTr_35 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
    //  file prog.aa, line 234
    // iNsTr_35
    $W[iNsTr_35_483] : $int<32>
    // 		iNsTr_36 := (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
    //  file prog.aa, line 235
    // iNsTr_36
    $W[iNsTr_36_488] : $int<32>
    // 		iNsTr_37 := (iNsTr_36 < iNsTr_12)
    //  file prog.aa, line 237
    // iNsTr_37
    $W[iNsTr_37_493] : $int<1>
    // if statement  
    //  file prog.aa, line 238
    // merge-statement  
    //  file prog.aa, line 240
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 241
    // ($cast ($uint<32>) iNsTr_35 )
    $intermediate $W[type_cast_504_wire] : $int<32>
    // xx_xlcssa3
    $W[xx_xlcssa3_501] : $int<32>
    // merge-statement  
    //  file prog.aa, line 245
    // 			$phi xx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 246
    // ($cast ($uint<32>) xx_xlcssa3 )
    $intermediate $W[type_cast_514_wire] : $int<32>
    // xx_x0x_xi
    $W[xx_x0x_xi_508] : $int<32>
    // merge-statement  
    //  file prog.aa, line 250
    // 			$phi tempx_x0x_xph := 			  ($cast ($uint<32>) xx_x0x_xi ) $on xx_xloopexitx_xi_udiv32x_xexitx_xpreheader			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_udiv32x_xexitx_xpreheader // type of target is $uint<32>
    //  file prog.aa, line 251
    // ($cast ($uint<32>) xx_x0x_xi )
    $intermediate $W[type_cast_521_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_9 )
    $intermediate $W[type_cast_523_wire] : $int<32>
    // tempx_x0x_xph
    $W[tempx_x0x_xph_518] : $int<32>
    // 		iNsTr_20 := (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 253
    // iNsTr_20
    $W[iNsTr_20_530] : $int<32>
    // 		iNsTr_21 := (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 255
    // iNsTr_21
    $W[iNsTr_21_536] : $int<1>
    // 		iNsTr_22 := (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 257
    // ($bitcast ($int<32>) tempx_x0x_xph )
    $intermediate $W[type_cast_540_wire] : $int<32>
    // iNsTr_22
    $W[iNsTr_22_545] : $int<1>
    // 		orx_xcond11 := (iNsTr_21 & iNsTr_22)
    //  file prog.aa, line 258
    // orx_xcond11
    $W[orx_xcond11_550] : $int<1>
    // if statement  
    //  file prog.aa, line 259
    // 		tmp21 := (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.aa, line 263
    // tmp21
    $W[tmp21_563] : $int<32>
    // merge-statement  
    //  file prog.aa, line 266
    // 			$phi iNsTr_39 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) indvarx_xnext ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
    //  file prog.aa, line 267
    // ($cast ($uint<32>) indvarx_xnext )
    $intermediate $W[type_cast_572_wire] : $int<32>
    // iNsTr_39
    $W[iNsTr_39_566] : $int<32>
    // 			$phi tempx_x012 := 			  ($cast ($uint<32>) tempx_x0x_xph ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
    //  file prog.aa, line 268
    // ($cast ($uint<32>) tempx_x0x_xph )
    $intermediate $W[type_cast_576_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_40 )
    $intermediate $W[type_cast_578_wire] : $int<32>
    // tempx_x012
    $W[tempx_x012_573] : $int<32>
    // 		iNsTr_40 := (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 270
    // iNsTr_40
    $W[iNsTr_40_585] : $int<32>
    // 		iNsTr_41 := (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 271
    // iNsTr_41
    $W[iNsTr_41_591] : $int<32>
    // 		iNsTr_42 := (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 273
    // iNsTr_42
    $W[iNsTr_42_597] : $int<1>
    // 		iNsTr_43 := (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 275
    // ($bitcast ($int<32>) iNsTr_40 )
    $intermediate $W[type_cast_600_wire] : $int<32>
    // iNsTr_43
    $W[iNsTr_43_605] : $int<1>
    // 		orx_xcond := (iNsTr_42 & iNsTr_43)
    //  file prog.aa, line 276
    // orx_xcond
    $W[orx_xcond_610] : $int<1>
    // 		indvarx_xnext := (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 277
    // indvarx_xnext
    $W[indvarx_xnext_616] : $int<32>
    // if statement  
    //  file prog.aa, line 278
    // merge-statement  
    //  file prog.aa, line 280
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 281
    // ($cast ($uint<32>) iNsTr_40 )
    $intermediate $W[type_cast_627_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_624] : $int<32>
    // 			$phi indvarx_xlcssa := 			  ($cast ($uint<32>) iNsTr_39 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 282
    // ($cast ($uint<32>) iNsTr_39 )
    $intermediate $W[type_cast_631_wire] : $int<32>
    // indvarx_xlcssa
    $W[indvarx_xlcssa_628] : $int<32>
    // 		tmp25 := (tmp21 - iNsTr_6)
    //  file prog.aa, line 284
    // tmp25
    $W[tmp25_637] : $int<32>
    // 		tmp26 := (tmp25 - indvarx_xlcssa)
    //  file prog.aa, line 285
    // tmp26
    $W[tmp26_642] : $int<32>
    // merge-statement  
    //  file prog.aa, line 288
    // 			$phi expx_x0x_xlcssa := 			  ($cast ($uint<32>) tmp26 ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) iNsTr_15 ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
    //  file prog.aa, line 289
    // ($cast ($uint<32>) tmp26 )
    $intermediate $W[type_cast_648_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_15 )
    $intermediate $W[type_cast_650_wire] : $int<32>
    // expx_x0x_xlcssa
    $W[expx_x0x_xlcssa_645] : $int<32>
    // 			$phi tempx_x0x_xlcssa := 			  ($cast ($uint<32>) xx_xlcssa ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) tempx_x0x_xph ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
    //  file prog.aa, line 290
    // ($cast ($uint<32>) xx_xlcssa )
    $intermediate $W[type_cast_654_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xph )
    $intermediate $W[type_cast_656_wire] : $int<32>
    // tempx_x0x_xlcssa
    $W[tempx_x0x_xlcssa_651] : $int<32>
    // 		iNsTr_28 := (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 292
    // iNsTr_28
    $W[iNsTr_28_663] : $int<32>
    // 		iNsTr_29 := (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 293
    // iNsTr_29
    $W[iNsTr_29_669] : $int<32>
    // 		iNsTr_30 := (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 294
    // iNsTr_30
    $W[iNsTr_30_675] : $int<32>
    // 		iNsTr_31 := (iNsTr_28 | iNsTr_14)
    //  file prog.aa, line 295
    // iNsTr_31
    $W[iNsTr_31_680] : $int<32>
    // 		iNsTr_32 := (iNsTr_31 | iNsTr_30)
    //  file prog.aa, line 296
    // iNsTr_32
    $W[iNsTr_32_685] : $int<32>
    // 		tmp3 := ($bitcast ($float<8,23>) iNsTr_32 )
    //  file prog.aa, line 297
    // tmp3
    $W[tmp3_689] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 304
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3 ) $on xx_xcritedge_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_15_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 305
    // ($cast ($float<8,23>) tmp3 )
    $intermediate $W[type_cast_697_wire] : $float<8,23>
    // ret_val__
    // datapath-instances for block %fdiv32%body
    //  file prog.aa, line 164
    // 		tmp10 := ($bitcast ($uint<32>) a )
    //  file prog.aa, line 167
    // ($bitcast ($uint<32>) a )
    # := [type_cast_274_inst] (a) (tmp10_275) 
    $delay type_cast_274_inst 1
    // 		tmp6 := ($bitcast ($uint<32>) b )
    //  file prog.aa, line 168
    // ($bitcast ($uint<32>) b )
    # := [type_cast_278_inst] (b) (tmp6_279) 
    $delay type_cast_278_inst 1
    // 		iNsTr_0 := (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 170
    // (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_284_inst] (a type_cast_283_wire_constant) (iNsTr_0_285) 
    $delay EQ_f32_u1_284_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 171
    ==0? [if_stmt_286_branch] (iNsTr_0_285)
    // 		iNsTr_3 := (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 175
    // (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_297_inst] (tmp10_275 type_cast_296_wire_constant) (iNsTr_3_298) 
    $delay LSHR_u32_u32_297_inst 1
    // 		iNsTr_4 := (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 176
    // (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_303_inst] (iNsTr_3_298 type_cast_302_wire_constant) (iNsTr_4_304) 
    $delay AND_u32_u32_303_inst 1
    // 		iNsTr_5 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 177
    // (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_309_inst] (tmp6_279 type_cast_308_wire_constant) (iNsTr_5_310) 
    $delay LSHR_u32_u32_309_inst 1
    // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 178
    // (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_315_inst] (iNsTr_5_310 type_cast_314_wire_constant) (iNsTr_6_316) 
    $delay AND_u32_u32_315_inst 1
    // 		iNsTr_7 := (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 179
    // (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_321_inst] (tmp10_275 type_cast_320_wire_constant) (iNsTr_7_322) 
    $delay SHL_u32_u32_321_inst 1
    // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 180
    // (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_327_inst] (iNsTr_7_322 type_cast_326_wire_constant) (iNsTr_8_328) 
    $delay AND_u32_u32_327_inst 1
    // 		iNsTr_9 := (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 181
    // (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_333_inst] (iNsTr_8_328 type_cast_332_wire_constant) (iNsTr_9_334) 
    $delay OR_u32_u32_333_inst 1
    // 		iNsTr_10 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 182
    // (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >>[LSHR_u32_u32_339_inst] (tmp6_279 type_cast_338_wire_constant) (iNsTr_10_340) 
    $delay LSHR_u32_u32_339_inst 1
    // 		iNsTr_11 := (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 183
    // (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    &[AND_u32_u32_345_inst] (iNsTr_10_340 type_cast_344_wire_constant) (iNsTr_11_346) 
    $delay AND_u32_u32_345_inst 1
    // 		iNsTr_12 := (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 184
    // (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    |[OR_u32_u32_351_inst] (iNsTr_11_346 type_cast_350_wire_constant) (iNsTr_12_352) 
    $delay OR_u32_u32_351_inst 1
    // 		iNsTr_13 := (tmp6 ^ tmp10)
    //  file prog.aa, line 185
    // (tmp6 ^ tmp10)
    ^[XOR_u32_u32_356_inst] (tmp6_279 tmp10_275) (iNsTr_13_357) 
    $delay XOR_u32_u32_356_inst 1
    // 		iNsTr_14 := (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 186
    // (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_362_inst] (iNsTr_13_357 type_cast_361_wire_constant) (iNsTr_14_363) 
    $delay AND_u32_u32_362_inst 1
    // 		iNsTr_15 := (iNsTr_4 - iNsTr_6)
    //  file prog.aa, line 187
    // (iNsTr_4 - iNsTr_6)
    -[SUB_u32_u32_367_inst] (iNsTr_4_304 iNsTr_6_316) (iNsTr_15_368) 
    $delay SUB_u32_u32_367_inst 1
    // datapath-instances  for switch  
    //  file prog.aa, line 188
    ==[switch_stmt_369_select_expr_0] (iNsTr_12_352 expr_371_wire_constant) (expr_371_wire_constant_cmp) 
    ==0? [switch_stmt_369_branch_0] (expr_371_wire_constant_cmp)
    ==[switch_stmt_369_select_expr_1] (iNsTr_12_352 expr_374_wire_constant) (expr_374_wire_constant_cmp) 
    ==0? [switch_stmt_369_branch_1] (expr_374_wire_constant_cmp)
    ==0? [switch_stmt_369_branch_default] (expr_371_wire_constant_cmp expr_374_wire_constant_cmp)
    // data-path instances for merge  
    //  file prog.aa, line 201
    // 			$phi xx_x016x_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) iNsTr_9 ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
    //  file prog.aa, line 202
    // ($cast ($uint<32>) iNsTr_36 )
    # := [type_cast_385_inst] (iNsTr_36_488) (type_cast_385_wire) 
    $delay type_cast_385_inst 1
    // ($cast ($uint<32>) iNsTr_9 )
    # := [type_cast_387_inst] (iNsTr_9_334) (type_cast_387_wire) 
    $delay type_cast_387_inst 1
    $phi [phi_stmt_382] (type_cast_385_wire type_cast_387_wire) ( xx_x016x_xi_382 )
    // 			$phi quotientx_x05x_xi := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_bbx_xnph7x_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi // type of target is $uint<32>
    //  file prog.aa, line 203
    // ($cast ($uint<32>) iNsTr_35 )
    # := [type_cast_391_inst] (iNsTr_35_483) (type_cast_391_wire) 
    $delay type_cast_391_inst 1
    $phi [phi_stmt_388] (type_cast_391_wire type_cast_394_wire_constant) ( quotientx_x05x_xi_388 )
    // 		iNsTr_24 := (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 205
    // (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_400_inst] (xx_x016x_xi_382 type_cast_399_wire_constant) (iNsTr_24_401) 
    $delay LSHR_u32_u32_400_inst 1
    // 		iNsTr_25 := (iNsTr_24 > iNsTr_12)
    //  file prog.aa, line 207
    // (iNsTr_24 > iNsTr_12)
    >[UGT_u32_u1_405_inst] (iNsTr_24_401 iNsTr_12_352) (iNsTr_25_406) 
    $delay UGT_u32_u1_405_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 208
    ==0? [if_stmt_407_branch] (iNsTr_25_406)
    // data-path instances for merge  
    //  file prog.aa, line 214
    // 			$phi shifted_divisorx_x03x_xi := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.aa, line 215
    // ($cast ($uint<32>) iNsTr_45 )
    # := [type_cast_419_inst] (iNsTr_45_435) (type_cast_419_wire) 
    $delay type_cast_419_inst 1
    // ($cast ($uint<32>) iNsTr_12 )
    # := [type_cast_421_inst] (iNsTr_12_352) (type_cast_421_wire) 
    $delay type_cast_421_inst 1
    $phi [phi_stmt_416] (type_cast_419_wire type_cast_421_wire) ( shifted_divisorx_x03x_xi_416 )
    // 			$phi curr_quotientx_x02x_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_bbx_xnphx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<32>
    //  file prog.aa, line 216
    // ($cast ($uint<32>) iNsTr_46 )
    # := [type_cast_425_inst] (iNsTr_46_441) (type_cast_425_wire) 
    $delay type_cast_425_inst 1
    $phi [phi_stmt_422] (type_cast_425_wire type_cast_428_wire_constant) ( curr_quotientx_x02x_xi_422 )
    // 		iNsTr_45 := (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 218
    // (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_434_inst] (shifted_divisorx_x03x_xi_416 type_cast_433_wire_constant) (iNsTr_45_435) 
    $delay SHL_u32_u32_434_inst 1
    // 		iNsTr_46 := (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 219
    // (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_440_inst] (curr_quotientx_x02x_xi_422 type_cast_439_wire_constant) (iNsTr_46_441) 
    $delay SHL_u32_u32_440_inst 1
    // 		iNsTr_47 := (iNsTr_45 < iNsTr_24)
    //  file prog.aa, line 221
    // (iNsTr_45 < iNsTr_24)
    <[ULT_u32_u1_445_inst] (iNsTr_45_435 iNsTr_24_401) (iNsTr_47_446) 
    $delay ULT_u32_u1_445_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 222
    ==0? [if_stmt_447_branch] (iNsTr_47_446)
    // data-path instances for merge  
    //  file prog.aa, line 224
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 225
    // ($cast ($uint<32>) iNsTr_46 )
    # := [type_cast_457_inst] (iNsTr_46_441) (type_cast_457_wire) 
    $delay type_cast_457_inst 1
    $phi [phi_stmt_454] (type_cast_457_wire) ( xx_xlcssa2_454 )
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_45 ) $on bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 226
    // ($cast ($uint<32>) iNsTr_45 )
    # := [type_cast_461_inst] (iNsTr_45_435) (type_cast_461_wire) 
    $delay type_cast_461_inst 1
    $phi [phi_stmt_458] (type_cast_461_wire) ( xx_xlcssa1_458 )
    // data-path instances for merge  
    //  file prog.aa, line 230
    // 			$phi shifted_divisorx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) iNsTr_12 ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 231
    // ($cast ($uint<32>) iNsTr_12 )
    # := [type_cast_468_inst] (iNsTr_12_352) (type_cast_468_wire) 
    $delay type_cast_468_inst 1
    // ($cast ($uint<32>) xx_xlcssa1 )
    # := [type_cast_470_inst] (xx_xlcssa1_458) (type_cast_470_wire) 
    $delay type_cast_470_inst 1
    $phi [phi_stmt_465] (type_cast_468_wire type_cast_470_wire) ( shifted_divisorx_x0x_xlcssax_xi_465 )
    // 			$phi curr_quotientx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xi_xx_x_crit_edgex_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 232
    // ($cast ($uint<32>) xx_xlcssa2 )
    # := [type_cast_477_inst] (xx_xlcssa2_454) (type_cast_477_wire) 
    $delay type_cast_477_inst 1
    $phi [phi_stmt_471] (type_cast_475_wire_constant type_cast_477_wire) ( curr_quotientx_x0x_xlcssax_xi_471 )
    // 		iNsTr_35 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
    //  file prog.aa, line 234
    // (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
    +[ADD_u32_u32_482_inst] (curr_quotientx_x0x_xlcssax_xi_471 quotientx_x05x_xi_388) (iNsTr_35_483) 
    $delay ADD_u32_u32_482_inst 1
    // 		iNsTr_36 := (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
    //  file prog.aa, line 235
    // (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
    -[SUB_u32_u32_487_inst] (xx_x016x_xi_382 shifted_divisorx_x0x_xlcssax_xi_465) (iNsTr_36_488) 
    $delay SUB_u32_u32_487_inst 1
    // 		iNsTr_37 := (iNsTr_36 < iNsTr_12)
    //  file prog.aa, line 237
    // (iNsTr_36 < iNsTr_12)
    <[ULT_u32_u1_492_inst] (iNsTr_36_488 iNsTr_12_352) (iNsTr_37_493) 
    $delay ULT_u32_u1_492_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 238
    ==0? [if_stmt_494_branch] (iNsTr_37_493)
    // data-path instances for merge  
    //  file prog.aa, line 240
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_35 ) $on xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 241
    // ($cast ($uint<32>) iNsTr_35 )
    # := [type_cast_504_inst] (iNsTr_35_483) (type_cast_504_wire) 
    $delay type_cast_504_inst 1
    $phi [phi_stmt_501] (type_cast_504_wire) ( xx_xlcssa3_501 )
    // data-path instances for merge  
    //  file prog.aa, line 245
    // 			$phi xx_x0x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 246
    // ($cast ($uint<32>) xx_xlcssa3 )
    # := [type_cast_514_inst] (xx_xlcssa3_501) (type_cast_514_wire) 
    $delay type_cast_514_inst 1
    $phi [phi_stmt_508] (type_cast_512_wire_constant type_cast_514_wire) ( xx_x0x_xi_508 )
    // data-path instances for merge  
    //  file prog.aa, line 250
    // 			$phi tempx_x0x_xph := 			  ($cast ($uint<32>) xx_x0x_xi ) $on xx_xloopexitx_xi_udiv32x_xexitx_xpreheader			  ($cast ($uint<32>) iNsTr_9 ) $on bb_1_udiv32x_xexitx_xpreheader // type of target is $uint<32>
    //  file prog.aa, line 251
    // ($cast ($uint<32>) xx_x0x_xi )
    # := [type_cast_521_inst] (xx_x0x_xi_508) (type_cast_521_wire) 
    $delay type_cast_521_inst 1
    // ($cast ($uint<32>) iNsTr_9 )
    # := [type_cast_523_inst] (iNsTr_9_334) (type_cast_523_wire) 
    $delay type_cast_523_inst 1
    $phi [phi_stmt_518] (type_cast_521_wire type_cast_523_wire) ( tempx_x0x_xph_518 )
    // 		iNsTr_20 := (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 253
    // (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_529_inst] (tempx_x0x_xph_518 type_cast_528_wire_constant) (iNsTr_20_530) 
    $delay AND_u32_u32_529_inst 1
    // 		iNsTr_21 := (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 255
    // (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_535_inst] (iNsTr_20_530 type_cast_534_wire_constant) (iNsTr_21_536) 
    $delay EQ_u32_u1_535_inst 1
    // 		iNsTr_22 := (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 257
    // ($bitcast ($int<32>) tempx_x0x_xph )
    $S:=$U [type_cast_540_inst] (tempx_x0x_xph_518) (type_cast_540_wire)   $flowthrough
    $delay type_cast_540_inst 0
    // (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_544_inst] (type_cast_540_wire type_cast_543_wire_constant) (iNsTr_22_545) 
    $delay NEQ_i32_u1_544_inst 1
    // 		orx_xcond11 := (iNsTr_21 & iNsTr_22)
    //  file prog.aa, line 258
    // (iNsTr_21 & iNsTr_22)
    &[AND_u1_u1_549_inst] (iNsTr_21_536 iNsTr_22_545) (orx_xcond11_550) 
    $delay AND_u1_u1_549_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 259
    ==0? [if_stmt_551_branch] (orx_xcond11_550)
    // 		tmp21 := (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.aa, line 263
    // (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_562_inst] (iNsTr_4_304 type_cast_561_wire_constant) (tmp21_563) 
    $delay ADD_u32_u32_562_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 266
    // 			$phi iNsTr_39 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) indvarx_xnext ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
    //  file prog.aa, line 267
    // ($cast ($uint<32>) indvarx_xnext )
    # := [type_cast_572_inst] (indvarx_xnext_616) (type_cast_572_wire) 
    $delay type_cast_572_inst 1
    $phi [phi_stmt_566] (type_cast_570_wire_constant type_cast_572_wire) ( iNsTr_39_566 )
    // 			$phi tempx_x012 := 			  ($cast ($uint<32>) tempx_x0x_xph ) $on bbx_xnph_udiv32x_xexit			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexit // type of target is $uint<32>
    //  file prog.aa, line 268
    // ($cast ($uint<32>) tempx_x0x_xph )
    # := [type_cast_576_inst] (tempx_x0x_xph_518) (type_cast_576_wire) 
    $delay type_cast_576_inst 1
    // ($cast ($uint<32>) iNsTr_40 )
    # := [type_cast_578_inst] (iNsTr_40_585) (type_cast_578_wire) 
    $delay type_cast_578_inst 1
    $phi [phi_stmt_573] (type_cast_576_wire type_cast_578_wire) ( tempx_x012_573 )
    // 		iNsTr_40 := (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 270
    // (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_584_inst] (tempx_x012_573 type_cast_583_wire_constant) (iNsTr_40_585) 
    $delay SHL_u32_u32_584_inst 1
    // 		iNsTr_41 := (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 271
    // (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_590_inst] (iNsTr_40_585 type_cast_589_wire_constant) (iNsTr_41_591) 
    $delay AND_u32_u32_590_inst 1
    // 		iNsTr_42 := (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 273
    // (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_596_inst] (iNsTr_41_591 type_cast_595_wire_constant) (iNsTr_42_597) 
    $delay EQ_u32_u1_596_inst 1
    // 		iNsTr_43 := (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 275
    // ($bitcast ($int<32>) iNsTr_40 )
    $S:=$U [type_cast_600_inst] (iNsTr_40_585) (type_cast_600_wire)   $flowthrough
    $delay type_cast_600_inst 0
    // (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_604_inst] (type_cast_600_wire type_cast_603_wire_constant) (iNsTr_43_605) 
    $delay NEQ_i32_u1_604_inst 1
    // 		orx_xcond := (iNsTr_42 & iNsTr_43)
    //  file prog.aa, line 276
    // (iNsTr_42 & iNsTr_43)
    &[AND_u1_u1_609_inst] (iNsTr_42_597 iNsTr_43_605) (orx_xcond_610) 
    $delay AND_u1_u1_609_inst 1
    // 		indvarx_xnext := (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 277
    // (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_615_inst] (iNsTr_39_566 type_cast_614_wire_constant) (indvarx_xnext_616) 
    $delay ADD_u32_u32_615_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 278
    ==0? [if_stmt_617_branch] (orx_xcond_610)
    // data-path instances for merge  
    //  file prog.aa, line 280
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 281
    // ($cast ($uint<32>) iNsTr_40 )
    # := [type_cast_627_inst] (iNsTr_40_585) (type_cast_627_wire) 
    $delay type_cast_627_inst 1
    $phi [phi_stmt_624] (type_cast_627_wire) ( xx_xlcssa_624 )
    // 			$phi indvarx_xlcssa := 			  ($cast ($uint<32>) iNsTr_39 ) $on udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 282
    // ($cast ($uint<32>) iNsTr_39 )
    # := [type_cast_631_inst] (iNsTr_39_566) (type_cast_631_wire) 
    $delay type_cast_631_inst 1
    $phi [phi_stmt_628] (type_cast_631_wire) ( indvarx_xlcssa_628 )
    // 		tmp25 := (tmp21 - iNsTr_6)
    //  file prog.aa, line 284
    // (tmp21 - iNsTr_6)
    -[SUB_u32_u32_636_inst] (tmp21_563 iNsTr_6_316) (tmp25_637) 
    $delay SUB_u32_u32_636_inst 1
    // 		tmp26 := (tmp25 - indvarx_xlcssa)
    //  file prog.aa, line 285
    // (tmp25 - indvarx_xlcssa)
    -[SUB_u32_u32_641_inst] (tmp25_637 indvarx_xlcssa_628) (tmp26_642) 
    $delay SUB_u32_u32_641_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 288
    // 			$phi expx_x0x_xlcssa := 			  ($cast ($uint<32>) tmp26 ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) iNsTr_15 ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
    //  file prog.aa, line 289
    // ($cast ($uint<32>) tmp26 )
    # := [type_cast_648_inst] (tmp26_642) (type_cast_648_wire) 
    $delay type_cast_648_inst 1
    // ($cast ($uint<32>) iNsTr_15 )
    # := [type_cast_650_inst] (iNsTr_15_368) (type_cast_650_wire) 
    $delay type_cast_650_inst 1
    $phi [phi_stmt_645] (type_cast_648_wire type_cast_650_wire) ( expx_x0x_xlcssa_645 )
    // 			$phi tempx_x0x_xlcssa := 			  ($cast ($uint<32>) xx_xlcssa ) $on udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge			  ($cast ($uint<32>) tempx_x0x_xph ) $on udiv32x_xexitx_xpreheader_xx_xcritedge // type of target is $uint<32>
    //  file prog.aa, line 290
    // ($cast ($uint<32>) xx_xlcssa )
    # := [type_cast_654_inst] (xx_xlcssa_624) (type_cast_654_wire) 
    $delay type_cast_654_inst 1
    // ($cast ($uint<32>) tempx_x0x_xph )
    # := [type_cast_656_inst] (tempx_x0x_xph_518) (type_cast_656_wire) 
    $delay type_cast_656_inst 1
    $phi [phi_stmt_651] (type_cast_654_wire type_cast_656_wire) ( tempx_x0x_xlcssa_651 )
    // 		iNsTr_28 := (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 292
    // (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_662_inst] (tempx_x0x_xlcssa_651 type_cast_661_wire_constant) (iNsTr_28_663) 
    $delay AND_u32_u32_662_inst 1
    // 		iNsTr_29 := (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 293
    // (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_668_inst] (expx_x0x_xlcssa_645 type_cast_667_wire_constant) (iNsTr_29_669) 
    $delay SHL_u32_u32_668_inst 1
    // 		iNsTr_30 := (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 294
    // (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_674_inst] (iNsTr_29_669 type_cast_673_wire_constant) (iNsTr_30_675) 
    $delay ADD_u32_u32_674_inst 1
    // 		iNsTr_31 := (iNsTr_28 | iNsTr_14)
    //  file prog.aa, line 295
    // (iNsTr_28 | iNsTr_14)
    |[OR_u32_u32_679_inst] (iNsTr_28_663 iNsTr_14_363) (iNsTr_31_680) 
    $delay OR_u32_u32_679_inst 1
    // 		iNsTr_32 := (iNsTr_31 | iNsTr_30)
    //  file prog.aa, line 296
    // (iNsTr_31 | iNsTr_30)
    |[OR_u32_u32_684_inst] (iNsTr_31_680 iNsTr_30_675) (iNsTr_32_685) 
    $delay OR_u32_u32_684_inst 1
    // 		tmp3 := ($bitcast ($float<8,23>) iNsTr_32 )
    //  file prog.aa, line 297
    // ($bitcast ($float<8,23>) iNsTr_32 )
    # := [type_cast_688_inst] (iNsTr_32_685) (tmp3_689) 
    $delay type_cast_688_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 304
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3 ) $on xx_xcritedge_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_15_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 305
    // ($cast ($float<8,23>) tmp3 )
    # := [type_cast_697_inst] (tmp3_689) (type_cast_697_wire) 
    $delay type_cast_697_inst 1
    $phi [phi_stmt_694] (type_cast_697_wire type_cast_700_wire_constant) ( ret_val__ )
  }
  // end data-path
  // 		tmp10 := ($bitcast ($uint<32>) a )
  //  file prog.aa, line 167
  // ($bitcast ($uint<32>) a )
  type_cast_274_inst <=> (branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_274_Sample/rr branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_274_Update/cr) (branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_274_Sample/ra branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_274_Update/ca)
  // 		tmp6 := ($bitcast ($uint<32>) b )
  //  file prog.aa, line 168
  // ($bitcast ($uint<32>) b )
  type_cast_278_inst <=> (branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_278_Sample/rr branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_278_Update/cr) (branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_278_Sample/ra branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/type_cast_278_Update/ca)
  // 		iNsTr_0 := (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 170
  // (a == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_284_inst <=> (branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/EQ_f32_u1_284_Sample/rr branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/EQ_f32_u1_284_Update/cr) (branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/EQ_f32_u1_284_Sample/ra branch_block_stmt_271/assign_stmt_275_to_assign_stmt_285/EQ_f32_u1_284_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 171
  if_stmt_286_branch <=> (branch_block_stmt_271/if_stmt_286_eval_test/branch_req) (branch_block_stmt_271/if_stmt_286_else_link/else_choice_transition branch_block_stmt_271/if_stmt_286_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 173
  // 		iNsTr_3 := (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 175
  // (tmp10 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_297_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_297_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_297_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_297_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_297_Update/ca)
  // 		iNsTr_4 := (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 176
  // (iNsTr_3 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_303_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_303_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_303_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_303_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_303_Update/ca)
  // 		iNsTr_5 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 177
  // (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_309_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_309_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_309_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_309_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_309_Update/ca)
  // 		iNsTr_6 := (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 178
  // (iNsTr_5 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_315_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_315_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_315_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_315_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_315_Update/ca)
  // 		iNsTr_7 := (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 179
  // (tmp10 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_321_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SHL_u32_u32_321_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SHL_u32_u32_321_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SHL_u32_u32_321_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SHL_u32_u32_321_Update/ca)
  // 		iNsTr_8 := (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 180
  // (iNsTr_7 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_327_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_327_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_327_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_327_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_327_Update/ca)
  // 		iNsTr_9 := (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 181
  // (iNsTr_8 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_333_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_333_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_333_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_333_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_333_Update/ca)
  // 		iNsTr_10 := (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 182
  // (tmp6 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  LSHR_u32_u32_339_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_339_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_339_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_339_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/LSHR_u32_u32_339_Update/ca)
  // 		iNsTr_11 := (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  //  file prog.aa, line 183
  // (iNsTr_10 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  AND_u32_u32_345_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_345_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_345_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_345_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_345_Update/ca)
  // 		iNsTr_12 := (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  //  file prog.aa, line 184
  // (iNsTr_11 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  OR_u32_u32_351_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_351_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_351_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_351_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/OR_u32_u32_351_Update/ca)
  // 		iNsTr_13 := (tmp6 ^ tmp10)
  //  file prog.aa, line 185
  // (tmp6 ^ tmp10)
  XOR_u32_u32_356_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/XOR_u32_u32_356_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/XOR_u32_u32_356_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/XOR_u32_u32_356_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/XOR_u32_u32_356_Update/ca)
  // 		iNsTr_14 := (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 186
  // (iNsTr_13 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_362_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_362_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_362_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_362_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/AND_u32_u32_362_Update/ca)
  // 		iNsTr_15 := (iNsTr_4 - iNsTr_6)
  //  file prog.aa, line 187
  // (iNsTr_4 - iNsTr_6)
  SUB_u32_u32_367_inst <=> (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SUB_u32_u32_367_Sample/rr branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SUB_u32_u32_367_Update/cr) (branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SUB_u32_u32_367_Sample/ra branch_block_stmt_271/assign_stmt_298_to_assign_stmt_368/SUB_u32_u32_367_Update/ca)
  // CP-DP links for switch  
  //  file prog.aa, line 188
  switch_stmt_369_select_expr_0 <=> (branch_block_stmt_271/switch_stmt_369__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_271/switch_stmt_369__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_271/switch_stmt_369__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_271/switch_stmt_369__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_369_branch_0 <=> (branch_block_stmt_271/switch_stmt_369__condition_check__/condition_0/cmp) ($open branch_block_stmt_271/switch_stmt_369_choice_0/ack1)
  switch_stmt_369_select_expr_1 <=> (branch_block_stmt_271/switch_stmt_369__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_271/switch_stmt_369__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_271/switch_stmt_369__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_271/switch_stmt_369__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_369_branch_1 <=> (branch_block_stmt_271/switch_stmt_369__condition_check__/condition_1/cmp) ($open branch_block_stmt_271/switch_stmt_369_choice_1/ack1)
  switch_stmt_369_branch_default <=> (branch_block_stmt_271/switch_stmt_369__condition_check__/$exit) (branch_block_stmt_271/switch_stmt_369_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.aa, line 197
  // CP-DP links for merge  
  //  file prog.aa, line 201
  // ($cast ($uint<32>) iNsTr_36 )
  type_cast_385_inst <=> (branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_385/SplitProtocol/Sample/rr branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_385/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_385/SplitProtocol/Sample/ra branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_385/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_9 )
  type_cast_387_inst <=> (branch_block_stmt_271/bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_387/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_387/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_387/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_sources/type_cast_387/SplitProtocol/Update/ca)
  phi_stmt_382 <=> (branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_req branch_block_stmt_271/bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq/phi_stmt_382/phi_stmt_382_req) (branch_block_stmt_271/merge_stmt_381_PhiAck/phi_stmt_382_ack)
  // ($cast ($uint<32>) iNsTr_35 )
  type_cast_391_inst <=> (branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_388/phi_stmt_388_sources/type_cast_391/SplitProtocol/Sample/rr branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_388/phi_stmt_388_sources/type_cast_391/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_388/phi_stmt_388_sources/type_cast_391/SplitProtocol/Sample/ra branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_388/phi_stmt_388_sources/type_cast_391/SplitProtocol/Update/ca)
  phi_stmt_388 <=> (branch_block_stmt_271/xx_x_crit_edgex_xi_bbx_xnph7x_xi_PhiReq/phi_stmt_388/phi_stmt_388_req branch_block_stmt_271/bbx_xnph7x_xix_xpreheader_bbx_xnph7x_xi_PhiReq/phi_stmt_388/phi_stmt_388_req) (branch_block_stmt_271/merge_stmt_381_PhiAck/phi_stmt_388_ack)
  // 		iNsTr_24 := (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 205
  // (xx_x016x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_400_inst <=> (branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/LSHR_u32_u32_400_Sample/rr branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/LSHR_u32_u32_400_Update/cr) (branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/LSHR_u32_u32_400_Sample/ra branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/LSHR_u32_u32_400_Update/ca)
  // 		iNsTr_25 := (iNsTr_24 > iNsTr_12)
  //  file prog.aa, line 207
  // (iNsTr_24 > iNsTr_12)
  UGT_u32_u1_405_inst <=> (branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/UGT_u32_u1_405_Sample/rr branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/UGT_u32_u1_405_Update/cr) (branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/UGT_u32_u1_405_Sample/ra branch_block_stmt_271/assign_stmt_401_to_assign_stmt_406/UGT_u32_u1_405_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 208
  if_stmt_407_branch <=> (branch_block_stmt_271/if_stmt_407_eval_test/branch_req) (branch_block_stmt_271/if_stmt_407_else_link/else_choice_transition branch_block_stmt_271/if_stmt_407_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 210
  // CP-DP links for merge  
  //  file prog.aa, line 214
  // ($cast ($uint<32>) iNsTr_45 )
  type_cast_419_inst <=> (branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_419/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_419/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_419/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_419/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_12 )
  type_cast_421_inst <=> (branch_block_stmt_271/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_421/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_421/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_421/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_sources/type_cast_421/SplitProtocol/Update/ca)
  phi_stmt_416 <=> (branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_req branch_block_stmt_271/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_416/phi_stmt_416_req) (branch_block_stmt_271/merge_stmt_415_PhiAck/phi_stmt_416_ack)
  // ($cast ($uint<32>) iNsTr_46 )
  type_cast_425_inst <=> (branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_422/phi_stmt_422_sources/type_cast_425/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_422/phi_stmt_422_sources/type_cast_425/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_422/phi_stmt_422_sources/type_cast_425/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_422/phi_stmt_422_sources/type_cast_425/SplitProtocol/Update/ca)
  phi_stmt_422 <=> (branch_block_stmt_271/bbx_xnphx_xi_bbx_xnphx_xi_PhiReq/phi_stmt_422/phi_stmt_422_req branch_block_stmt_271/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_422/phi_stmt_422_req) (branch_block_stmt_271/merge_stmt_415_PhiAck/phi_stmt_422_ack)
  // 		iNsTr_45 := (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 218
  // (shifted_divisorx_x03x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_434_inst <=> (branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_434_Sample/rr branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_434_Update/cr) (branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_434_Sample/ra branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_434_Update/ca)
  // 		iNsTr_46 := (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 219
  // (curr_quotientx_x02x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_440_inst <=> (branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_440_Sample/rr branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_440_Update/cr) (branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_440_Sample/ra branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/SHL_u32_u32_440_Update/ca)
  // 		iNsTr_47 := (iNsTr_45 < iNsTr_24)
  //  file prog.aa, line 221
  // (iNsTr_45 < iNsTr_24)
  ULT_u32_u1_445_inst <=> (branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/ULT_u32_u1_445_Sample/rr branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/ULT_u32_u1_445_Update/cr) (branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/ULT_u32_u1_445_Sample/ra branch_block_stmt_271/assign_stmt_435_to_assign_stmt_446/ULT_u32_u1_445_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 222
  if_stmt_447_branch <=> (branch_block_stmt_271/if_stmt_447_eval_test/branch_req) (branch_block_stmt_271/if_stmt_447_else_link/else_choice_transition branch_block_stmt_271/if_stmt_447_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 224
  // ($cast ($uint<32>) iNsTr_46 )
  type_cast_457_inst <=> (branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_454/phi_stmt_454_sources/type_cast_457/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_454/phi_stmt_454_sources/type_cast_457/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_454/phi_stmt_454_sources/type_cast_457/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_454/phi_stmt_454_sources/type_cast_457/SplitProtocol/Update/ca)
  phi_stmt_454 <=> (branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_454/phi_stmt_454_req) (branch_block_stmt_271/merge_stmt_453_PhiAck/phi_stmt_454_ack)
  // ($cast ($uint<32>) iNsTr_45 )
  type_cast_461_inst <=> (branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_458/phi_stmt_458_sources/type_cast_461/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_458/phi_stmt_458_sources/type_cast_461/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_458/phi_stmt_458_sources/type_cast_461/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_458/phi_stmt_458_sources/type_cast_461/SplitProtocol/Update/ca)
  phi_stmt_458 <=> (branch_block_stmt_271/bbx_xnphx_xi_xx_x_crit_edgex_xix_xloopexit_PhiReq/phi_stmt_458/phi_stmt_458_req) (branch_block_stmt_271/merge_stmt_453_PhiAck/phi_stmt_458_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 230
  // ($cast ($uint<32>) iNsTr_12 )
  type_cast_468_inst <=> (branch_block_stmt_271/bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_468/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_468/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_468/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_468/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa1 )
  type_cast_470_inst <=> (branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_470/SplitProtocol/Sample/rr branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_470/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_470/SplitProtocol/Sample/ra branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_sources/type_cast_470/SplitProtocol/Update/ca)
  phi_stmt_465 <=> (branch_block_stmt_271/bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_req branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_465/phi_stmt_465_req) (branch_block_stmt_271/merge_stmt_464_PhiAck/phi_stmt_465_ack)
  // ($cast ($uint<32>) xx_xlcssa2 )
  type_cast_477_inst <=> (branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_471/phi_stmt_471_sources/type_cast_477/SplitProtocol/Sample/rr branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_471/phi_stmt_471_sources/type_cast_477/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_471/phi_stmt_471_sources/type_cast_477/SplitProtocol/Sample/ra branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_471/phi_stmt_471_sources/type_cast_477/SplitProtocol/Update/ca)
  phi_stmt_471 <=> (branch_block_stmt_271/bbx_xnph7x_xi_xx_x_crit_edgex_xi_PhiReq/phi_stmt_471/phi_stmt_471_req branch_block_stmt_271/xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq/phi_stmt_471/phi_stmt_471_req) (branch_block_stmt_271/merge_stmt_464_PhiAck/phi_stmt_471_ack)
  // 		iNsTr_35 := (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
  //  file prog.aa, line 234
  // (curr_quotientx_x0x_xlcssax_xi + quotientx_x05x_xi)
  ADD_u32_u32_482_inst <=> (branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ADD_u32_u32_482_Sample/rr branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ADD_u32_u32_482_Update/cr) (branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ADD_u32_u32_482_Sample/ra branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ADD_u32_u32_482_Update/ca)
  // 		iNsTr_36 := (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
  //  file prog.aa, line 235
  // (xx_x016x_xi - shifted_divisorx_x0x_xlcssax_xi)
  SUB_u32_u32_487_inst <=> (branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/SUB_u32_u32_487_Sample/rr branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/SUB_u32_u32_487_Update/cr) (branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/SUB_u32_u32_487_Sample/ra branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/SUB_u32_u32_487_Update/ca)
  // 		iNsTr_37 := (iNsTr_36 < iNsTr_12)
  //  file prog.aa, line 237
  // (iNsTr_36 < iNsTr_12)
  ULT_u32_u1_492_inst <=> (branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ULT_u32_u1_492_Sample/rr branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ULT_u32_u1_492_Update/cr) (branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ULT_u32_u1_492_Sample/ra branch_block_stmt_271/assign_stmt_483_to_assign_stmt_493/ULT_u32_u1_492_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 238
  if_stmt_494_branch <=> (branch_block_stmt_271/if_stmt_494_eval_test/branch_req) (branch_block_stmt_271/if_stmt_494_else_link/else_choice_transition branch_block_stmt_271/if_stmt_494_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 240
  // ($cast ($uint<32>) iNsTr_35 )
  type_cast_504_inst <=> (branch_block_stmt_271/xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq/phi_stmt_501/phi_stmt_501_sources/type_cast_504/SplitProtocol/Sample/rr branch_block_stmt_271/xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq/phi_stmt_501/phi_stmt_501_sources/type_cast_504/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq/phi_stmt_501/phi_stmt_501_sources/type_cast_504/SplitProtocol/Sample/ra branch_block_stmt_271/xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq/phi_stmt_501/phi_stmt_501_sources/type_cast_504/SplitProtocol/Update/ca)
  phi_stmt_501 <=> (branch_block_stmt_271/xx_x_crit_edgex_xi_xx_xloopexitx_xix_xloopexit_PhiReq/phi_stmt_501/phi_stmt_501_req) (branch_block_stmt_271/merge_stmt_500_PhiAck/phi_stmt_501_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 245
  // ($cast ($uint<32>) xx_xlcssa3 )
  type_cast_514_inst <=> (branch_block_stmt_271/xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq/phi_stmt_508/phi_stmt_508_sources/type_cast_514/SplitProtocol/Sample/rr branch_block_stmt_271/xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq/phi_stmt_508/phi_stmt_508_sources/type_cast_514/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq/phi_stmt_508/phi_stmt_508_sources/type_cast_514/SplitProtocol/Sample/ra branch_block_stmt_271/xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq/phi_stmt_508/phi_stmt_508_sources/type_cast_514/SplitProtocol/Update/ca)
  phi_stmt_508 <=> (branch_block_stmt_271/bb_1_xx_xloopexitx_xi_PhiReq/phi_stmt_508/phi_stmt_508_req branch_block_stmt_271/xx_xloopexitx_xix_xloopexit_xx_xloopexitx_xi_PhiReq/phi_stmt_508/phi_stmt_508_req) (branch_block_stmt_271/merge_stmt_507_PhiAck/phi_stmt_508_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 250
  // ($cast ($uint<32>) xx_x0x_xi )
  type_cast_521_inst <=> (branch_block_stmt_271/xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_521/SplitProtocol/Sample/rr branch_block_stmt_271/xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_521/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_521/SplitProtocol/Sample/ra branch_block_stmt_271/xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_521/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_9 )
  type_cast_523_inst <=> (branch_block_stmt_271/bb_1_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_523/SplitProtocol/Sample/rr branch_block_stmt_271/bb_1_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_523/SplitProtocol/Update/cr) (branch_block_stmt_271/bb_1_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_523/SplitProtocol/Sample/ra branch_block_stmt_271/bb_1_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_sources/type_cast_523/SplitProtocol/Update/ca)
  phi_stmt_518 <=> (branch_block_stmt_271/xx_xloopexitx_xi_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_req branch_block_stmt_271/bb_1_udiv32x_xexitx_xpreheader_PhiReq/phi_stmt_518/phi_stmt_518_req) (branch_block_stmt_271/merge_stmt_517_PhiAck/phi_stmt_518_ack)
  // 		iNsTr_20 := (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 253
  // (tempx_x0x_xph & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_529_inst <=> (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u32_u32_529_Sample/rr branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u32_u32_529_Update/cr) (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u32_u32_529_Sample/ra branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u32_u32_529_Update/ca)
  // 		iNsTr_21 := (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 255
  // (iNsTr_20 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_535_inst <=> (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/EQ_u32_u1_535_Sample/rr branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/EQ_u32_u1_535_Update/cr) (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/EQ_u32_u1_535_Sample/ra branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/EQ_u32_u1_535_Update/ca)
  // 		iNsTr_22 := (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 257
  // (($bitcast ($int<32>) tempx_x0x_xph ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) tempx_x0x_xph )
  type_cast_540_inst <=> (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/type_cast_540_Sample/rr branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/type_cast_540_Update/cr) (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/type_cast_540_Sample/ra branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/type_cast_540_Update/ca)
  NEQ_i32_u1_544_inst <=> (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/NEQ_i32_u1_544_Sample/rr branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/NEQ_i32_u1_544_Update/cr) (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/NEQ_i32_u1_544_Sample/ra branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/NEQ_i32_u1_544_Update/ca)
  // 		orx_xcond11 := (iNsTr_21 & iNsTr_22)
  //  file prog.aa, line 258
  // (iNsTr_21 & iNsTr_22)
  AND_u1_u1_549_inst <=> (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u1_u1_549_Sample/rr branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u1_u1_549_Update/cr) (branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u1_u1_549_Sample/ra branch_block_stmt_271/assign_stmt_530_to_assign_stmt_550/AND_u1_u1_549_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 259
  if_stmt_551_branch <=> (branch_block_stmt_271/if_stmt_551_eval_test/branch_req) (branch_block_stmt_271/if_stmt_551_else_link/else_choice_transition branch_block_stmt_271/if_stmt_551_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 261
  // 		tmp21 := (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.aa, line 263
  // (iNsTr_4 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  ADD_u32_u32_562_inst <=> (branch_block_stmt_271/assign_stmt_563/ADD_u32_u32_562_Sample/rr branch_block_stmt_271/assign_stmt_563/ADD_u32_u32_562_Update/cr) (branch_block_stmt_271/assign_stmt_563/ADD_u32_u32_562_Sample/ra branch_block_stmt_271/assign_stmt_563/ADD_u32_u32_562_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 266
  // ($cast ($uint<32>) indvarx_xnext )
  type_cast_572_inst <=> (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_566/phi_stmt_566_sources/type_cast_572/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_566/phi_stmt_566_sources/type_cast_572/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_566/phi_stmt_566_sources/type_cast_572/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_566/phi_stmt_566_sources/type_cast_572/SplitProtocol/Update/ca)
  phi_stmt_566 <=> (branch_block_stmt_271/bbx_xnph_udiv32x_xexit_PhiReq/phi_stmt_566/phi_stmt_566_req branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_566/phi_stmt_566_req) (branch_block_stmt_271/merge_stmt_565_PhiAck/phi_stmt_566_ack)
  // ($cast ($uint<32>) tempx_x0x_xph )
  type_cast_576_inst <=> (branch_block_stmt_271/bbx_xnph_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_576/SplitProtocol/Sample/rr branch_block_stmt_271/bbx_xnph_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_576/SplitProtocol/Update/cr) (branch_block_stmt_271/bbx_xnph_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_576/SplitProtocol/Sample/ra branch_block_stmt_271/bbx_xnph_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_576/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_40 )
  type_cast_578_inst <=> (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_578/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_578/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_578/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_sources/type_cast_578/SplitProtocol/Update/ca)
  phi_stmt_573 <=> (branch_block_stmt_271/bbx_xnph_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_req branch_block_stmt_271/udiv32x_xexit_udiv32x_xexit_PhiReq/phi_stmt_573/phi_stmt_573_req) (branch_block_stmt_271/merge_stmt_565_PhiAck/phi_stmt_573_ack)
  // 		iNsTr_40 := (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 270
  // (tempx_x012 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_584_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/SHL_u32_u32_584_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/SHL_u32_u32_584_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/SHL_u32_u32_584_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/SHL_u32_u32_584_Update/ca)
  // 		iNsTr_41 := (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 271
  // (iNsTr_40 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_590_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u32_u32_590_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u32_u32_590_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u32_u32_590_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u32_u32_590_Update/ca)
  // 		iNsTr_42 := (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 273
  // (iNsTr_41 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_596_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/EQ_u32_u1_596_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/EQ_u32_u1_596_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/EQ_u32_u1_596_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/EQ_u32_u1_596_Update/ca)
  // 		iNsTr_43 := (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 275
  // (($bitcast ($int<32>) iNsTr_40 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_40 )
  type_cast_600_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/type_cast_600_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/type_cast_600_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/type_cast_600_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/type_cast_600_Update/ca)
  NEQ_i32_u1_604_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/NEQ_i32_u1_604_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/NEQ_i32_u1_604_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/NEQ_i32_u1_604_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/NEQ_i32_u1_604_Update/ca)
  // 		orx_xcond := (iNsTr_42 & iNsTr_43)
  //  file prog.aa, line 276
  // (iNsTr_42 & iNsTr_43)
  AND_u1_u1_609_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u1_u1_609_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u1_u1_609_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u1_u1_609_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/AND_u1_u1_609_Update/ca)
  // 		indvarx_xnext := (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 277
  // (iNsTr_39 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_615_inst <=> (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/ADD_u32_u32_615_Sample/rr branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/ADD_u32_u32_615_Update/cr) (branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/ADD_u32_u32_615_Sample/ra branch_block_stmt_271/assign_stmt_585_to_assign_stmt_616/ADD_u32_u32_615_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 278
  if_stmt_617_branch <=> (branch_block_stmt_271/if_stmt_617_eval_test/branch_req) (branch_block_stmt_271/if_stmt_617_else_link/else_choice_transition branch_block_stmt_271/if_stmt_617_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 280
  // ($cast ($uint<32>) iNsTr_40 )
  type_cast_627_inst <=> (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_624/phi_stmt_624_sources/type_cast_627/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_624/phi_stmt_624_sources/type_cast_627/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_624/phi_stmt_624_sources/type_cast_627/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_624/phi_stmt_624_sources/type_cast_627/SplitProtocol/Update/ca)
  phi_stmt_624 <=> (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_624/phi_stmt_624_req) (branch_block_stmt_271/merge_stmt_623_PhiAck/phi_stmt_624_ack)
  // ($cast ($uint<32>) iNsTr_39 )
  type_cast_631_inst <=> (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_sources/type_cast_631/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_sources/type_cast_631/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_sources/type_cast_631/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_sources/type_cast_631/SplitProtocol/Update/ca)
  phi_stmt_628 <=> (branch_block_stmt_271/udiv32x_xexit_udiv32x_xexitx_xx_xcritedge_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_req) (branch_block_stmt_271/merge_stmt_623_PhiAck/phi_stmt_628_ack)
  // 		tmp25 := (tmp21 - iNsTr_6)
  //  file prog.aa, line 284
  // (tmp21 - iNsTr_6)
  SUB_u32_u32_636_inst <=> (branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_636_Sample/rr branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_636_Update/cr) (branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_636_Sample/ra branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_636_Update/ca)
  // 		tmp26 := (tmp25 - indvarx_xlcssa)
  //  file prog.aa, line 285
  // (tmp25 - indvarx_xlcssa)
  SUB_u32_u32_641_inst <=> (branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_641_Sample/rr branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_641_Update/cr) (branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_641_Sample/ra branch_block_stmt_271/assign_stmt_637_to_assign_stmt_642/SUB_u32_u32_641_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 288
  // ($cast ($uint<32>) tmp26 )
  type_cast_648_inst <=> (branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_648/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_648/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_648/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_648/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_15 )
  type_cast_650_inst <=> (branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_650/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_650/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_650/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_sources/type_cast_650/SplitProtocol/Update/ca)
  phi_stmt_645 <=> (branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_req branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_645/phi_stmt_645_req) (branch_block_stmt_271/merge_stmt_644_PhiAck/phi_stmt_645_ack)
  // ($cast ($uint<32>) xx_xlcssa )
  type_cast_654_inst <=> (branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_654/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_654/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_654/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_654/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xph )
  type_cast_656_inst <=> (branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_656/SplitProtocol/Sample/rr branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_656/SplitProtocol/Update/cr) (branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_656/SplitProtocol/Sample/ra branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_sources/type_cast_656/SplitProtocol/Update/ca)
  phi_stmt_651 <=> (branch_block_stmt_271/udiv32x_xexitx_xx_xcritedge_crit_edge_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_req branch_block_stmt_271/udiv32x_xexitx_xpreheader_xx_xcritedge_PhiReq/phi_stmt_651/phi_stmt_651_req) (branch_block_stmt_271/merge_stmt_644_PhiAck/phi_stmt_651_ack)
  // 		iNsTr_28 := (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 292
  // (tempx_x0x_xlcssa & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_662_inst <=> (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/AND_u32_u32_662_Sample/rr branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/AND_u32_u32_662_Update/cr) (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/AND_u32_u32_662_Sample/ra branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/AND_u32_u32_662_Update/ca)
  // 		iNsTr_29 := (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 293
  // (expx_x0x_xlcssa << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_668_inst <=> (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/SHL_u32_u32_668_Sample/rr branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/SHL_u32_u32_668_Update/cr) (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/SHL_u32_u32_668_Sample/ra branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/SHL_u32_u32_668_Update/ca)
  // 		iNsTr_30 := (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 294
  // (iNsTr_29 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_674_inst <=> (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/ADD_u32_u32_674_Sample/rr branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/ADD_u32_u32_674_Update/cr) (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/ADD_u32_u32_674_Sample/ra branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/ADD_u32_u32_674_Update/ca)
  // 		iNsTr_31 := (iNsTr_28 | iNsTr_14)
  //  file prog.aa, line 295
  // (iNsTr_28 | iNsTr_14)
  OR_u32_u32_679_inst <=> (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_679_Sample/rr branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_679_Update/cr) (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_679_Sample/ra branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_679_Update/ca)
  // 		iNsTr_32 := (iNsTr_31 | iNsTr_30)
  //  file prog.aa, line 296
  // (iNsTr_31 | iNsTr_30)
  OR_u32_u32_684_inst <=> (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_684_Sample/rr branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_684_Update/cr) (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_684_Sample/ra branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/OR_u32_u32_684_Update/ca)
  // 		tmp3 := ($bitcast ($float<8,23>) iNsTr_32 )
  //  file prog.aa, line 297
  // ($bitcast ($float<8,23>) iNsTr_32 )
  type_cast_688_inst <=> (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/type_cast_688_Sample/rr branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/type_cast_688_Update/cr) (branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/type_cast_688_Sample/ra branch_block_stmt_271/assign_stmt_663_to_assign_stmt_689/type_cast_688_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 300
  // CP-DP links for merge  
  //  file prog.aa, line 304
  // ($cast ($float<8,23>) tmp3 )
  type_cast_697_inst <=> (branch_block_stmt_271/xx_xcritedge_UnifiedReturnBlock_PhiReq/phi_stmt_694/phi_stmt_694_sources/type_cast_697/SplitProtocol/Sample/rr branch_block_stmt_271/xx_xcritedge_UnifiedReturnBlock_PhiReq/phi_stmt_694/phi_stmt_694_sources/type_cast_697/SplitProtocol/Update/cr) (branch_block_stmt_271/xx_xcritedge_UnifiedReturnBlock_PhiReq/phi_stmt_694/phi_stmt_694_sources/type_cast_697/SplitProtocol/Sample/ra branch_block_stmt_271/xx_xcritedge_UnifiedReturnBlock_PhiReq/phi_stmt_694/phi_stmt_694_sources/type_cast_697/SplitProtocol/Update/ca)
  phi_stmt_694 <=> (branch_block_stmt_271/xx_xcritedge_UnifiedReturnBlock_PhiReq/phi_stmt_694/phi_stmt_694_req branch_block_stmt_271/bb_15_UnifiedReturnBlock_PhiReq/phi_stmt_694/phi_stmt_694_req) (branch_block_stmt_271/merge_stmt_693_PhiAck/phi_stmt_694_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 308
}
$module [fpadd32f] 
{
  $in x:$float<8,23>
  // can point into  foreign( $void )
  y:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpadd32f
  //  file prog.aa, line 17
  // pipe-declarations for block %fpadd32f%body
  //  file prog.aa, line 22
  // pipe-declarations for block %fpadd32f%body%
  //  file prog.aa, line 27
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_21] // Branch Block  file prog.aa, line 22
    {
      $P [branch_block_stmt_21__entry__]
      branch_block_stmt_21__entry__ <-| ($entry)
      $P [branch_block_stmt_21__exit__]
      branch_block_stmt_21__exit__ |-> ($exit)
      $P [assign_stmt_26__entry__] 
      $P [assign_stmt_26__exit__] 
      $P [return__]
      $P [merge_stmt_28__exit__] 
      ::[assign_stmt_26] 
      {
        // 		ret_val__ := (x + y)
        //  file prog.aa, line 25
        // Source expression
        // (x + y)
        $T[ADD_f32_f32_25_sample_start_] 
        $T[ADD_f32_f32_25_sample_completed_] 
        $T[ADD_f32_f32_25_update_start_] 
        $T[ADD_f32_f32_25_update_completed_] 
        // x
        $T[R_x_23_sample_start_] 
        $T[R_x_23_sample_completed_] 
        $T[R_x_23_update_start_] 
        $T[R_x_23_update_completed_] 
        // reference to interface object
        R_x_23_sample_start_ <-& ($entry)
        R_x_23_sample_completed_ <-& (R_x_23_sample_start_)
        R_x_23_update_start_ <-& (R_x_23_sample_completed_)
        R_x_23_update_completed_ <-& (R_x_23_update_start_)
        // y
        $T[R_y_24_sample_start_] 
        $T[R_y_24_sample_completed_] 
        $T[R_y_24_update_start_] 
        $T[R_y_24_update_completed_] 
        // reference to interface object
        R_y_24_sample_start_ <-& ($entry)
        R_y_24_sample_completed_ <-& (R_y_24_sample_start_)
        R_y_24_update_start_ <-& (R_y_24_sample_completed_)
        R_y_24_update_completed_ <-& (R_y_24_update_start_)
        ADD_f32_f32_25_sample_start_ <-& (R_x_23_update_completed_)
        ADD_f32_f32_25_sample_start_ <-& (R_y_24_update_completed_)
        ;;[ADD_f32_f32_25_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_25_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_25_sample_start_ &-> (ADD_f32_f32_25_Sample)
        ADD_f32_f32_25_sample_completed_ <-& (ADD_f32_f32_25_Sample)
        ADD_f32_f32_25_sample_completed_ &-> ($null)
        ADD_f32_f32_25_update_start_ &-> (ADD_f32_f32_25_Update)
        ADD_f32_f32_25_update_completed_ <-& (ADD_f32_f32_25_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_26__entry__ |-> (assign_stmt_26)
      assign_stmt_26__exit__ <-| (assign_stmt_26)
      // control-path for merge  
      //  file prog.aa, line 27
      //---------------------   merge statement  file prog.aa, line 27  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_28_PhiReqMerge] 
      merge_stmt_28_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_28_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_28_PhiReqMerge |-> (merge_stmt_28_PhiAck)
      merge_stmt_28__exit__  <-| (merge_stmt_28_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 27  --------------------------
      assign_stmt_26__entry__ <-| (branch_block_stmt_21__entry__)
      return__ <-| (assign_stmt_26__exit__)
      merge_stmt_28__exit__ |-> (branch_block_stmt_21__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpadd32f%body%
    //  file prog.aa, line 27
    // constant-object-declarations for block %fpadd32f%body
    //  file prog.aa, line 22
    // constant-object-declarations for block %fpadd32f
    //  file prog.aa, line 17
    // constant-declarations for block %fpadd32f%body
    //  file prog.aa, line 22
    // constant-declarations for block %fpadd32f%body%
    //  file prog.aa, line 27
    // block %fpadd32f%body
    //  file prog.aa, line 22
    // 		ret_val__ := (x + y)
    //  file prog.aa, line 25
    // ret_val__
    // datapath-instances for block %fpadd32f%body
    //  file prog.aa, line 22
    // 		ret_val__ := (x + y)
    //  file prog.aa, line 25
    // (x + y)
    +[ADD_f32_f32_25_inst] (x y) (ret_val__) 
    $delay ADD_f32_f32_25_inst 24
  }
  // end data-path
  // 		ret_val__ := (x + y)
  //  file prog.aa, line 25
  // (x + y)
  ADD_f32_f32_25_inst <=> (branch_block_stmt_21/assign_stmt_26/ADD_f32_f32_25_Sample/rr branch_block_stmt_21/assign_stmt_26/ADD_f32_f32_25_Update/cr) (branch_block_stmt_21/assign_stmt_26/ADD_f32_f32_25_Sample/ra branch_block_stmt_21/assign_stmt_26/ADD_f32_f32_25_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 27
}
$module [fpadd32fi] 
{
  $in x:$int<32>
  // can point into  foreign( $void )
  y:$int<32>
  // can point into  foreign( $void )
  $out ret_val__:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpadd32fi
  //  file prog.aa, line 43
  // pipe-declarations for block %fpadd32fi%body
  //  file prog.aa, line 48
  // pipe-declarations for block %fpadd32fi%body%
  //  file prog.aa, line 53
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_50] // Branch Block  file prog.aa, line 48
    {
      $P [branch_block_stmt_50__entry__]
      branch_block_stmt_50__entry__ <-| ($entry)
      $P [branch_block_stmt_50__exit__]
      branch_block_stmt_50__exit__ |-> ($exit)
      $P [assign_stmt_55__entry__] 
      $P [assign_stmt_55__exit__] 
      $P [return__]
      $P [merge_stmt_57__exit__] 
      ::[assign_stmt_55] 
      {
        // 		ret_val__ := (y + x)
        //  file prog.aa, line 51
        // Source expression
        // (y + x)
        $T[ADD_u32_u32_54_sample_start_] 
        $T[ADD_u32_u32_54_sample_completed_] 
        $T[ADD_u32_u32_54_update_start_] 
        $T[ADD_u32_u32_54_update_completed_] 
        // y
        $T[R_y_52_sample_start_] 
        $T[R_y_52_sample_completed_] 
        $T[R_y_52_update_start_] 
        $T[R_y_52_update_completed_] 
        // reference to interface object
        R_y_52_sample_start_ <-& ($entry)
        R_y_52_sample_completed_ <-& (R_y_52_sample_start_)
        R_y_52_update_start_ <-& (R_y_52_sample_completed_)
        R_y_52_update_completed_ <-& (R_y_52_update_start_)
        // x
        $T[R_x_53_sample_start_] 
        $T[R_x_53_sample_completed_] 
        $T[R_x_53_update_start_] 
        $T[R_x_53_update_completed_] 
        // reference to interface object
        R_x_53_sample_start_ <-& ($entry)
        R_x_53_sample_completed_ <-& (R_x_53_sample_start_)
        R_x_53_update_start_ <-& (R_x_53_sample_completed_)
        R_x_53_update_completed_ <-& (R_x_53_update_start_)
        ADD_u32_u32_54_sample_start_ <-& (R_y_52_update_completed_)
        ADD_u32_u32_54_sample_start_ <-& (R_x_53_update_completed_)
        ;;[ADD_u32_u32_54_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_54_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_54_sample_start_ &-> (ADD_u32_u32_54_Sample)
        ADD_u32_u32_54_sample_completed_ <-& (ADD_u32_u32_54_Sample)
        ADD_u32_u32_54_sample_completed_ &-> ($null)
        ADD_u32_u32_54_update_start_ &-> (ADD_u32_u32_54_Update)
        ADD_u32_u32_54_update_completed_ <-& (ADD_u32_u32_54_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_55__entry__ |-> (assign_stmt_55)
      assign_stmt_55__exit__ <-| (assign_stmt_55)
      // control-path for merge  
      //  file prog.aa, line 53
      //---------------------   merge statement  file prog.aa, line 53  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_57_PhiReqMerge] 
      merge_stmt_57_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_57_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_57_PhiReqMerge |-> (merge_stmt_57_PhiAck)
      merge_stmt_57__exit__  <-| (merge_stmt_57_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 53  --------------------------
      assign_stmt_55__entry__ <-| (branch_block_stmt_50__entry__)
      return__ <-| (assign_stmt_55__exit__)
      merge_stmt_57__exit__ |-> (branch_block_stmt_50__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpadd32fi%body%
    //  file prog.aa, line 53
    // constant-object-declarations for block %fpadd32fi%body
    //  file prog.aa, line 48
    // constant-object-declarations for block %fpadd32fi
    //  file prog.aa, line 43
    // constant-declarations for block %fpadd32fi%body
    //  file prog.aa, line 48
    // constant-declarations for block %fpadd32fi%body%
    //  file prog.aa, line 53
    // block %fpadd32fi%body
    //  file prog.aa, line 48
    // 		ret_val__ := (y + x)
    //  file prog.aa, line 51
    // ret_val__
    // datapath-instances for block %fpadd32fi%body
    //  file prog.aa, line 48
    // 		ret_val__ := (y + x)
    //  file prog.aa, line 51
    // (y + x)
    +[ADD_u32_u32_54_inst] (y x) (ret_val__) 
    $delay ADD_u32_u32_54_inst 1
  }
  // end data-path
  // 		ret_val__ := (y + x)
  //  file prog.aa, line 51
  // (y + x)
  ADD_u32_u32_54_inst <=> (branch_block_stmt_50/assign_stmt_55/ADD_u32_u32_54_Sample/rr branch_block_stmt_50/assign_stmt_55/ADD_u32_u32_54_Update/cr) (branch_block_stmt_50/assign_stmt_55/ADD_u32_u32_54_Sample/ra branch_block_stmt_50/assign_stmt_55/ADD_u32_u32_54_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 53
}
$module [fpmul32f] 
{
  $in x:$float<8,23>
  // can point into  foreign( $void )
  y:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpmul32f
  //  file prog.aa, line 4
  // pipe-declarations for block %fpmul32f%body
  //  file prog.aa, line 9
  // pipe-declarations for block %fpmul32f%body%
  //  file prog.aa, line 14
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_7] // Branch Block  file prog.aa, line 9
    {
      $P [branch_block_stmt_7__entry__]
      branch_block_stmt_7__entry__ <-| ($entry)
      $P [branch_block_stmt_7__exit__]
      branch_block_stmt_7__exit__ |-> ($exit)
      $P [assign_stmt_12__entry__] 
      $P [assign_stmt_12__exit__] 
      $P [return__]
      $P [merge_stmt_14__exit__] 
      ::[assign_stmt_12] 
      {
        // 		ret_val__ := (x * y)
        //  file prog.aa, line 12
        // Source expression
        // (x * y)
        $T[MUL_f32_f32_11_sample_start_] 
        $T[MUL_f32_f32_11_sample_completed_] 
        $T[MUL_f32_f32_11_update_start_] 
        $T[MUL_f32_f32_11_update_completed_] 
        // x
        $T[R_x_9_sample_start_] 
        $T[R_x_9_sample_completed_] 
        $T[R_x_9_update_start_] 
        $T[R_x_9_update_completed_] 
        // reference to interface object
        R_x_9_sample_start_ <-& ($entry)
        R_x_9_sample_completed_ <-& (R_x_9_sample_start_)
        R_x_9_update_start_ <-& (R_x_9_sample_completed_)
        R_x_9_update_completed_ <-& (R_x_9_update_start_)
        // y
        $T[R_y_10_sample_start_] 
        $T[R_y_10_sample_completed_] 
        $T[R_y_10_update_start_] 
        $T[R_y_10_update_completed_] 
        // reference to interface object
        R_y_10_sample_start_ <-& ($entry)
        R_y_10_sample_completed_ <-& (R_y_10_sample_start_)
        R_y_10_update_start_ <-& (R_y_10_sample_completed_)
        R_y_10_update_completed_ <-& (R_y_10_update_start_)
        MUL_f32_f32_11_sample_start_ <-& (R_x_9_update_completed_)
        MUL_f32_f32_11_sample_start_ <-& (R_y_10_update_completed_)
        ;;[MUL_f32_f32_11_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_11_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_11_sample_start_ &-> (MUL_f32_f32_11_Sample)
        MUL_f32_f32_11_sample_completed_ <-& (MUL_f32_f32_11_Sample)
        MUL_f32_f32_11_sample_completed_ &-> ($null)
        MUL_f32_f32_11_update_start_ &-> (MUL_f32_f32_11_Update)
        MUL_f32_f32_11_update_completed_ <-& (MUL_f32_f32_11_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_12__entry__ |-> (assign_stmt_12)
      assign_stmt_12__exit__ <-| (assign_stmt_12)
      // control-path for merge  
      //  file prog.aa, line 14
      //---------------------   merge statement  file prog.aa, line 14  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_14_PhiReqMerge] 
      merge_stmt_14_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_14_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_14_PhiReqMerge |-> (merge_stmt_14_PhiAck)
      merge_stmt_14__exit__  <-| (merge_stmt_14_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 14  --------------------------
      assign_stmt_12__entry__ <-| (branch_block_stmt_7__entry__)
      return__ <-| (assign_stmt_12__exit__)
      merge_stmt_14__exit__ |-> (branch_block_stmt_7__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpmul32f%body%
    //  file prog.aa, line 14
    // constant-object-declarations for block %fpmul32f%body
    //  file prog.aa, line 9
    // constant-object-declarations for block %fpmul32f
    //  file prog.aa, line 4
    // constant-declarations for block %fpmul32f%body
    //  file prog.aa, line 9
    // constant-declarations for block %fpmul32f%body%
    //  file prog.aa, line 14
    // block %fpmul32f%body
    //  file prog.aa, line 9
    // 		ret_val__ := (x * y)
    //  file prog.aa, line 12
    // ret_val__
    // datapath-instances for block %fpmul32f%body
    //  file prog.aa, line 9
    // 		ret_val__ := (x * y)
    //  file prog.aa, line 12
    // (x * y)
    *[MUL_f32_f32_11_inst] (x y) (ret_val__) 
    $delay MUL_f32_f32_11_inst 24
  }
  // end data-path
  // 		ret_val__ := (x * y)
  //  file prog.aa, line 12
  // (x * y)
  MUL_f32_f32_11_inst <=> (branch_block_stmt_7/assign_stmt_12/MUL_f32_f32_11_Sample/rr branch_block_stmt_7/assign_stmt_12/MUL_f32_f32_11_Update/cr) (branch_block_stmt_7/assign_stmt_12/MUL_f32_f32_11_Sample/ra branch_block_stmt_7/assign_stmt_12/MUL_f32_f32_11_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 14
}
$module [fpsub32f] 
{
  $in x:$float<8,23>
  // can point into  foreign( $void )
  y:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpsub32f
  //  file prog.aa, line 30
  // pipe-declarations for block %fpsub32f%body
  //  file prog.aa, line 35
  // pipe-declarations for block %fpsub32f%body%
  //  file prog.aa, line 40
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_35] // Branch Block  file prog.aa, line 35
    {
      $P [branch_block_stmt_35__entry__]
      branch_block_stmt_35__entry__ <-| ($entry)
      $P [branch_block_stmt_35__exit__]
      branch_block_stmt_35__exit__ |-> ($exit)
      $P [assign_stmt_40__entry__] 
      $P [assign_stmt_40__exit__] 
      $P [return__]
      $P [merge_stmt_42__exit__] 
      ::[assign_stmt_40] 
      {
        // 		ret_val__ := (x - y)
        //  file prog.aa, line 38
        // Source expression
        // (x - y)
        $T[SUB_f32_f32_39_sample_start_] 
        $T[SUB_f32_f32_39_sample_completed_] 
        $T[SUB_f32_f32_39_update_start_] 
        $T[SUB_f32_f32_39_update_completed_] 
        // x
        $T[R_x_37_sample_start_] 
        $T[R_x_37_sample_completed_] 
        $T[R_x_37_update_start_] 
        $T[R_x_37_update_completed_] 
        // reference to interface object
        R_x_37_sample_start_ <-& ($entry)
        R_x_37_sample_completed_ <-& (R_x_37_sample_start_)
        R_x_37_update_start_ <-& (R_x_37_sample_completed_)
        R_x_37_update_completed_ <-& (R_x_37_update_start_)
        // y
        $T[R_y_38_sample_start_] 
        $T[R_y_38_sample_completed_] 
        $T[R_y_38_update_start_] 
        $T[R_y_38_update_completed_] 
        // reference to interface object
        R_y_38_sample_start_ <-& ($entry)
        R_y_38_sample_completed_ <-& (R_y_38_sample_start_)
        R_y_38_update_start_ <-& (R_y_38_sample_completed_)
        R_y_38_update_completed_ <-& (R_y_38_update_start_)
        SUB_f32_f32_39_sample_start_ <-& (R_x_37_update_completed_)
        SUB_f32_f32_39_sample_start_ <-& (R_y_38_update_completed_)
        ;;[SUB_f32_f32_39_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f32_f32_39_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f32_f32_39_sample_start_ &-> (SUB_f32_f32_39_Sample)
        SUB_f32_f32_39_sample_completed_ <-& (SUB_f32_f32_39_Sample)
        SUB_f32_f32_39_sample_completed_ &-> ($null)
        SUB_f32_f32_39_update_start_ &-> (SUB_f32_f32_39_Update)
        SUB_f32_f32_39_update_completed_ <-& (SUB_f32_f32_39_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_40__entry__ |-> (assign_stmt_40)
      assign_stmt_40__exit__ <-| (assign_stmt_40)
      // control-path for merge  
      //  file prog.aa, line 40
      //---------------------   merge statement  file prog.aa, line 40  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_42_PhiReqMerge] 
      merge_stmt_42_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_42_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_42_PhiReqMerge |-> (merge_stmt_42_PhiAck)
      merge_stmt_42__exit__  <-| (merge_stmt_42_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 40  --------------------------
      assign_stmt_40__entry__ <-| (branch_block_stmt_35__entry__)
      return__ <-| (assign_stmt_40__exit__)
      merge_stmt_42__exit__ |-> (branch_block_stmt_35__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpsub32f%body%
    //  file prog.aa, line 40
    // constant-object-declarations for block %fpsub32f%body
    //  file prog.aa, line 35
    // constant-object-declarations for block %fpsub32f
    //  file prog.aa, line 30
    // constant-declarations for block %fpsub32f%body
    //  file prog.aa, line 35
    // constant-declarations for block %fpsub32f%body%
    //  file prog.aa, line 40
    // block %fpsub32f%body
    //  file prog.aa, line 35
    // 		ret_val__ := (x - y)
    //  file prog.aa, line 38
    // ret_val__
    // datapath-instances for block %fpsub32f%body
    //  file prog.aa, line 35
    // 		ret_val__ := (x - y)
    //  file prog.aa, line 38
    // (x - y)
    -[SUB_f32_f32_39_inst] (x y) (ret_val__) 
    $delay SUB_f32_f32_39_inst 24
  }
  // end data-path
  // 		ret_val__ := (x - y)
  //  file prog.aa, line 38
  // (x - y)
  SUB_f32_f32_39_inst <=> (branch_block_stmt_35/assign_stmt_40/SUB_f32_f32_39_Sample/rr branch_block_stmt_35/assign_stmt_40/SUB_f32_f32_39_Update/cr) (branch_block_stmt_35/assign_stmt_40/SUB_f32_f32_39_Sample/ra branch_block_stmt_35/assign_stmt_40/SUB_f32_f32_39_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 40
}
$module [fpsub32fi] 
{
  $in x:$int<32>
  // can point into  foreign( $void )
  y:$int<32>
  // can point into  foreign( $void )
  $out ret_val__:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpsub32fi
  //  file prog.aa, line 56
  // pipe-declarations for block %fpsub32fi%body
  //  file prog.aa, line 61
  // pipe-declarations for block %fpsub32fi%body%
  //  file prog.aa, line 66
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_64] // Branch Block  file prog.aa, line 61
    {
      $P [branch_block_stmt_64__entry__]
      branch_block_stmt_64__entry__ <-| ($entry)
      $P [branch_block_stmt_64__exit__]
      branch_block_stmt_64__exit__ |-> ($exit)
      $P [assign_stmt_69__entry__] 
      $P [assign_stmt_69__exit__] 
      $P [return__]
      $P [merge_stmt_71__exit__] 
      ::[assign_stmt_69] 
      {
        // 		ret_val__ := (x - y)
        //  file prog.aa, line 64
        // Source expression
        // (x - y)
        $T[SUB_u32_u32_68_sample_start_] 
        $T[SUB_u32_u32_68_sample_completed_] 
        $T[SUB_u32_u32_68_update_start_] 
        $T[SUB_u32_u32_68_update_completed_] 
        // x
        $T[R_x_66_sample_start_] 
        $T[R_x_66_sample_completed_] 
        $T[R_x_66_update_start_] 
        $T[R_x_66_update_completed_] 
        // reference to interface object
        R_x_66_sample_start_ <-& ($entry)
        R_x_66_sample_completed_ <-& (R_x_66_sample_start_)
        R_x_66_update_start_ <-& (R_x_66_sample_completed_)
        R_x_66_update_completed_ <-& (R_x_66_update_start_)
        // y
        $T[R_y_67_sample_start_] 
        $T[R_y_67_sample_completed_] 
        $T[R_y_67_update_start_] 
        $T[R_y_67_update_completed_] 
        // reference to interface object
        R_y_67_sample_start_ <-& ($entry)
        R_y_67_sample_completed_ <-& (R_y_67_sample_start_)
        R_y_67_update_start_ <-& (R_y_67_sample_completed_)
        R_y_67_update_completed_ <-& (R_y_67_update_start_)
        SUB_u32_u32_68_sample_start_ <-& (R_x_66_update_completed_)
        SUB_u32_u32_68_sample_start_ <-& (R_y_67_update_completed_)
        ;;[SUB_u32_u32_68_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_68_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_68_sample_start_ &-> (SUB_u32_u32_68_Sample)
        SUB_u32_u32_68_sample_completed_ <-& (SUB_u32_u32_68_Sample)
        SUB_u32_u32_68_sample_completed_ &-> ($null)
        SUB_u32_u32_68_update_start_ &-> (SUB_u32_u32_68_Update)
        SUB_u32_u32_68_update_completed_ <-& (SUB_u32_u32_68_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_69__entry__ |-> (assign_stmt_69)
      assign_stmt_69__exit__ <-| (assign_stmt_69)
      // control-path for merge  
      //  file prog.aa, line 66
      //---------------------   merge statement  file prog.aa, line 66  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_71_PhiReqMerge] 
      merge_stmt_71_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_71_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_71_PhiReqMerge |-> (merge_stmt_71_PhiAck)
      merge_stmt_71__exit__  <-| (merge_stmt_71_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 66  --------------------------
      assign_stmt_69__entry__ <-| (branch_block_stmt_64__entry__)
      return__ <-| (assign_stmt_69__exit__)
      merge_stmt_71__exit__ |-> (branch_block_stmt_64__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpsub32fi%body%
    //  file prog.aa, line 66
    // constant-object-declarations for block %fpsub32fi%body
    //  file prog.aa, line 61
    // constant-object-declarations for block %fpsub32fi
    //  file prog.aa, line 56
    // constant-declarations for block %fpsub32fi%body
    //  file prog.aa, line 61
    // constant-declarations for block %fpsub32fi%body%
    //  file prog.aa, line 66
    // block %fpsub32fi%body
    //  file prog.aa, line 61
    // 		ret_val__ := (x - y)
    //  file prog.aa, line 64
    // ret_val__
    // datapath-instances for block %fpsub32fi%body
    //  file prog.aa, line 61
    // 		ret_val__ := (x - y)
    //  file prog.aa, line 64
    // (x - y)
    -[SUB_u32_u32_68_inst] (x y) (ret_val__) 
    $delay SUB_u32_u32_68_inst 1
  }
  // end data-path
  // 		ret_val__ := (x - y)
  //  file prog.aa, line 64
  // (x - y)
  SUB_u32_u32_68_inst <=> (branch_block_stmt_64/assign_stmt_69/SUB_u32_u32_68_Sample/rr branch_block_stmt_64/assign_stmt_69/SUB_u32_u32_68_Update/cr) (branch_block_stmt_64/assign_stmt_69/SUB_u32_u32_68_Sample/ra branch_block_stmt_64/assign_stmt_69/SUB_u32_u32_68_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 66
}
$module [iq_err_calc] 
{
  $in torque_ref:$float<8,23>
  // can point into  foreign( $void )
  flux_rotor:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %iq_err_calc
  //  file prog.aa, line 495
  // pipe-declarations for block %iq_err_calc%body
  //  file prog.aa, line 500
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 510
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 534
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 538
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 547
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 551
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 561
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 567
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 577
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 582
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 587
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 598
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 602
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 616
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 626
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 638
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 642
  // pipe-declarations for block %iq_err_calc%body%
  //  file prog.aa, line 646
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1212] // Branch Block  file prog.aa, line 500
    {
      $P [branch_block_stmt_1212__entry__]
      branch_block_stmt_1212__entry__ <-| ($entry)
      $P [branch_block_stmt_1212__exit__]
      branch_block_stmt_1212__exit__ |-> ($exit)
      $P [assign_stmt_1218_to_assign_stmt_1232__entry__] 
      $P [assign_stmt_1218_to_assign_stmt_1232__exit__] 
      $P [if_stmt_1233__entry__] 
      $P [if_stmt_1233__exit__] 
      $P [merge_stmt_1239__entry__] 
      $P [merge_stmt_1239__exit__] 
      $P [assign_stmt_1245_to_assign_stmt_1315__entry__] 
      $P [assign_stmt_1245_to_assign_stmt_1315__exit__] 
      $P [switch_stmt_1316__entry__] 
      $P [switch_stmt_1316__exit__] 
      $P [merge_stmt_1326__entry__] 
      $P [merge_stmt_1326__exit__] 
      $P [bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi]
      $P [merge_stmt_1328__exit__] 
      $P [assign_stmt_1348_to_assign_stmt_1353__entry__] 
      $P [assign_stmt_1348_to_assign_stmt_1353__exit__] 
      $P [if_stmt_1354__entry__] 
      $P [if_stmt_1354__exit__] 
      $P [merge_stmt_1360__entry__] 
      $P [merge_stmt_1360__exit__] 
      $P [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
      $P [merge_stmt_1362__exit__] 
      $P [assign_stmt_1382_to_assign_stmt_1393__entry__] 
      $P [assign_stmt_1382_to_assign_stmt_1393__exit__] 
      $P [if_stmt_1394__entry__] 
      $P [if_stmt_1394__exit__] 
      $P [merge_stmt_1400__entry__] 
      $P [merge_stmt_1400__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
      $P [merge_stmt_1411__exit__] 
      $P [assign_stmt_1430_to_assign_stmt_1440__entry__] 
      $P [assign_stmt_1430_to_assign_stmt_1440__exit__] 
      $P [if_stmt_1441__entry__] 
      $P [if_stmt_1441__exit__] 
      $P [merge_stmt_1447__entry__] 
      $P [merge_stmt_1447__exit__] 
      $P [xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi]
      $P [merge_stmt_1454__exit__] 
      $P [xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi]
      $P [merge_stmt_1464__exit__] 
      $P [assign_stmt_1477_to_assign_stmt_1496__entry__] 
      $P [assign_stmt_1477_to_assign_stmt_1496__exit__] 
      $P [if_stmt_1497__entry__] 
      $P [if_stmt_1497__exit__] 
      $P [merge_stmt_1503__entry__] 
      $P [merge_stmt_1503__exit__] 
      $P [udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi]
      $P [merge_stmt_1505__exit__] 
      $P [assign_stmt_1525_to_assign_stmt_1556__entry__] 
      $P [assign_stmt_1525_to_assign_stmt_1556__exit__] 
      $P [if_stmt_1557__entry__] 
      $P [if_stmt_1557__exit__] 
      $P [merge_stmt_1563__entry__] 
      $P [merge_stmt_1563__exit__] 
      $P [assign_stmt_1578_to_assign_stmt_1594__entry__] 
      $P [assign_stmt_1578_to_assign_stmt_1594__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi]
      $P [merge_stmt_1596__exit__] 
      $P [assign_stmt_1615_to_assign_stmt_1641__entry__] 
      $P [assign_stmt_1615_to_assign_stmt_1641__exit__] 
      $P [xx_xcritedgex_xi_UnifiedReturnBlock]
      $P [merge_stmt_1643__exit__] 
      $P [fdiv32x_xexit_UnifiedReturnBlock]
      $P [merge_stmt_1645__exit__] 
      $P [return__]
      $P [merge_stmt_1655__exit__] 
      ::[assign_stmt_1218_to_assign_stmt_1232] 
      {
        // 		iNsTr_0 := (torque_ref * ($bitcast ($float<8,23>) _f3.465703e-01 ))
        //  file prog.aa, line 503
        // Source expression
        // (torque_ref * ($bitcast ($float<8,23>) _f3.465703e-01 ))
        $T[MUL_f32_f32_1217_sample_start_] 
        $T[MUL_f32_f32_1217_sample_completed_] 
        $T[MUL_f32_f32_1217_update_start_] 
        $T[MUL_f32_f32_1217_update_completed_] 
        // torque_ref
        $T[R_torque_ref_1214_sample_start_] 
        $T[R_torque_ref_1214_sample_completed_] 
        $T[R_torque_ref_1214_update_start_] 
        $T[R_torque_ref_1214_update_completed_] 
        // reference to interface object
        R_torque_ref_1214_sample_start_ <-& ($entry)
        R_torque_ref_1214_sample_completed_ <-& (R_torque_ref_1214_sample_start_)
        R_torque_ref_1214_update_start_ <-& (R_torque_ref_1214_sample_completed_)
        R_torque_ref_1214_update_completed_ <-& (R_torque_ref_1214_update_start_)
        MUL_f32_f32_1217_sample_start_ <-& (R_torque_ref_1214_update_completed_)
        ;;[MUL_f32_f32_1217_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1217_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1217_sample_start_ &-> (MUL_f32_f32_1217_Sample)
        MUL_f32_f32_1217_sample_completed_ <-& (MUL_f32_f32_1217_Sample)
        MUL_f32_f32_1217_sample_completed_ &-> ($null)
        MUL_f32_f32_1217_update_start_ &-> (MUL_f32_f32_1217_Update)
        MUL_f32_f32_1217_update_completed_ <-& (MUL_f32_f32_1217_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0 )
        //  file prog.aa, line 504
        // Source expression
        // ($bitcast ($uint<32>) iNsTr_0 )
        $T[type_cast_1221_sample_start_] 
        $T[type_cast_1221_sample_completed_] 
        $T[type_cast_1221_update_start_] 
        $T[type_cast_1221_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_1220_sample_start_] 
        $T[R_iNsTr_0_1220_sample_completed_] 
        $T[R_iNsTr_0_1220_update_start_] 
        $T[R_iNsTr_0_1220_update_completed_] 
        // implicit reference
        R_iNsTr_0_1220_sample_start_ <-& (MUL_f32_f32_1217_update_completed_)
        R_iNsTr_0_1220_sample_completed_ <-& (R_iNsTr_0_1220_sample_start_)
        R_iNsTr_0_1220_update_start_ <-& (R_iNsTr_0_1220_sample_completed_)
        R_iNsTr_0_1220_update_completed_ <-& (R_iNsTr_0_1220_update_start_)
        type_cast_1221_sample_start_ <-& (R_iNsTr_0_1220_update_completed_)
        ;;[type_cast_1221_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1221_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1221_sample_start_ &-> (type_cast_1221_Sample)
        type_cast_1221_sample_completed_ <-& (type_cast_1221_Sample)
        type_cast_1221_sample_completed_ &-> ($null)
        type_cast_1221_update_start_ &-> (type_cast_1221_Update)
        type_cast_1221_update_completed_ <-& (type_cast_1221_Update)
        // Target expression
        // (as target) tmp10x_xi
        // tmp10x_xi
        // implicit reference
        // 		tmp6x_xi := ($bitcast ($uint<32>) flux_rotor )
        //  file prog.aa, line 505
        // Source expression
        // ($bitcast ($uint<32>) flux_rotor )
        $T[type_cast_1225_sample_start_] 
        $T[type_cast_1225_sample_completed_] 
        $T[type_cast_1225_update_start_] 
        $T[type_cast_1225_update_completed_] 
        // flux_rotor
        $T[R_flux_rotor_1224_sample_start_] 
        $T[R_flux_rotor_1224_sample_completed_] 
        $T[R_flux_rotor_1224_update_start_] 
        $T[R_flux_rotor_1224_update_completed_] 
        // reference to interface object
        R_flux_rotor_1224_sample_start_ <-& ($entry)
        R_flux_rotor_1224_sample_completed_ <-& (R_flux_rotor_1224_sample_start_)
        R_flux_rotor_1224_update_start_ <-& (R_flux_rotor_1224_sample_completed_)
        R_flux_rotor_1224_update_completed_ <-& (R_flux_rotor_1224_update_start_)
        type_cast_1225_sample_start_ <-& (R_flux_rotor_1224_update_completed_)
        ;;[type_cast_1225_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1225_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1225_sample_start_ &-> (type_cast_1225_Sample)
        type_cast_1225_sample_completed_ <-& (type_cast_1225_Sample)
        type_cast_1225_sample_completed_ &-> ($null)
        type_cast_1225_update_start_ &-> (type_cast_1225_Update)
        type_cast_1225_update_completed_ <-& (type_cast_1225_Update)
        // Target expression
        // (as target) tmp6x_xi
        // tmp6x_xi
        // implicit reference
        // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 507
        // Source expression
        // (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_1231_sample_start_] 
        $T[EQ_f32_u1_1231_sample_completed_] 
        $T[EQ_f32_u1_1231_update_start_] 
        $T[EQ_f32_u1_1231_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_1228_sample_start_] 
        $T[R_iNsTr_0_1228_sample_completed_] 
        $T[R_iNsTr_0_1228_update_start_] 
        $T[R_iNsTr_0_1228_update_completed_] 
        // implicit reference
        R_iNsTr_0_1228_sample_start_ <-& (MUL_f32_f32_1217_update_completed_)
        R_iNsTr_0_1228_sample_completed_ <-& (R_iNsTr_0_1228_sample_start_)
        R_iNsTr_0_1228_update_start_ <-& (R_iNsTr_0_1228_sample_completed_)
        R_iNsTr_0_1228_update_completed_ <-& (R_iNsTr_0_1228_update_start_)
        EQ_f32_u1_1231_sample_start_ <-& (R_iNsTr_0_1228_update_completed_)
        ;;[EQ_f32_u1_1231_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_1231_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_1231_sample_start_ &-> (EQ_f32_u1_1231_Sample)
        EQ_f32_u1_1231_sample_completed_ <-& (EQ_f32_u1_1231_Sample)
        EQ_f32_u1_1231_sample_completed_ &-> ($null)
        EQ_f32_u1_1231_update_start_ &-> (EQ_f32_u1_1231_Update)
        EQ_f32_u1_1231_update_completed_ <-& (EQ_f32_u1_1231_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1218_to_assign_stmt_1232__entry__ |-> (assign_stmt_1218_to_assign_stmt_1232)
      assign_stmt_1218_to_assign_stmt_1232__exit__ <-| (assign_stmt_1218_to_assign_stmt_1232)
      // if-statement  
      //  file prog.aa, line 508
      ;;[if_stmt_1233_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1233__entry__ |-> (if_stmt_1233_dead_link)
      if_stmt_1233__exit__ <-| (if_stmt_1233_dead_link)
      ;;[if_stmt_1233_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1233__entry__ |-> (if_stmt_1233_eval_test)
      $P [R_iNsTr_1_1234_place]
      R_iNsTr_1_1234_place <-| (if_stmt_1233_eval_test)
      ;;[if_stmt_1233_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1233_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_1_1234_place |-> (if_stmt_1233_if_link if_stmt_1233_else_link)
      $P [bb_0_fdiv32x_xexit]
      bb_0_fdiv32x_xexit <-| (if_stmt_1233_if_link)
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (if_stmt_1233_else_link)
      ::[assign_stmt_1245_to_assign_stmt_1315] 
      {
        // 		iNsTr_4 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 512
        // Source expression
        // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_1244_sample_start_] 
        $T[LSHR_u32_u32_1244_sample_completed_] 
        $T[LSHR_u32_u32_1244_update_start_] 
        $T[LSHR_u32_u32_1244_update_completed_] 
        // tmp10x_xi
        $T[R_tmp10x_xi_1241_sample_start_] 
        $T[R_tmp10x_xi_1241_sample_completed_] 
        $T[R_tmp10x_xi_1241_update_start_] 
        $T[R_tmp10x_xi_1241_update_completed_] 
        // implicit reference
        R_tmp10x_xi_1241_sample_start_ <-& ($entry)
        R_tmp10x_xi_1241_sample_completed_ <-& (R_tmp10x_xi_1241_sample_start_)
        R_tmp10x_xi_1241_update_start_ <-& (R_tmp10x_xi_1241_sample_completed_)
        R_tmp10x_xi_1241_update_completed_ <-& (R_tmp10x_xi_1241_update_start_)
        LSHR_u32_u32_1244_sample_start_ <-& (R_tmp10x_xi_1241_update_completed_)
        ;;[LSHR_u32_u32_1244_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1244_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1244_sample_start_ &-> (LSHR_u32_u32_1244_Sample)
        LSHR_u32_u32_1244_sample_completed_ <-& (LSHR_u32_u32_1244_Sample)
        LSHR_u32_u32_1244_sample_completed_ &-> ($null)
        LSHR_u32_u32_1244_update_start_ &-> (LSHR_u32_u32_1244_Update)
        LSHR_u32_u32_1244_update_completed_ <-& (LSHR_u32_u32_1244_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 513
        // Source expression
        // (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_1250_sample_start_] 
        $T[AND_u32_u32_1250_sample_completed_] 
        $T[AND_u32_u32_1250_update_start_] 
        $T[AND_u32_u32_1250_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_1247_sample_start_] 
        $T[R_iNsTr_4_1247_sample_completed_] 
        $T[R_iNsTr_4_1247_update_start_] 
        $T[R_iNsTr_4_1247_update_completed_] 
        // implicit reference
        R_iNsTr_4_1247_sample_start_ <-& (LSHR_u32_u32_1244_update_completed_)
        R_iNsTr_4_1247_sample_completed_ <-& (R_iNsTr_4_1247_sample_start_)
        R_iNsTr_4_1247_update_start_ <-& (R_iNsTr_4_1247_sample_completed_)
        R_iNsTr_4_1247_update_completed_ <-& (R_iNsTr_4_1247_update_start_)
        AND_u32_u32_1250_sample_start_ <-& (R_iNsTr_4_1247_update_completed_)
        ;;[AND_u32_u32_1250_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1250_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1250_sample_start_ &-> (AND_u32_u32_1250_Sample)
        AND_u32_u32_1250_sample_completed_ <-& (AND_u32_u32_1250_Sample)
        AND_u32_u32_1250_sample_completed_ &-> ($null)
        AND_u32_u32_1250_update_start_ &-> (AND_u32_u32_1250_Update)
        AND_u32_u32_1250_update_completed_ <-& (AND_u32_u32_1250_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 514
        // Source expression
        // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_1256_sample_start_] 
        $T[LSHR_u32_u32_1256_sample_completed_] 
        $T[LSHR_u32_u32_1256_update_start_] 
        $T[LSHR_u32_u32_1256_update_completed_] 
        // tmp6x_xi
        $T[R_tmp6x_xi_1253_sample_start_] 
        $T[R_tmp6x_xi_1253_sample_completed_] 
        $T[R_tmp6x_xi_1253_update_start_] 
        $T[R_tmp6x_xi_1253_update_completed_] 
        // implicit reference
        R_tmp6x_xi_1253_sample_start_ <-& ($entry)
        R_tmp6x_xi_1253_sample_completed_ <-& (R_tmp6x_xi_1253_sample_start_)
        R_tmp6x_xi_1253_update_start_ <-& (R_tmp6x_xi_1253_sample_completed_)
        R_tmp6x_xi_1253_update_completed_ <-& (R_tmp6x_xi_1253_update_start_)
        LSHR_u32_u32_1256_sample_start_ <-& (R_tmp6x_xi_1253_update_completed_)
        ;;[LSHR_u32_u32_1256_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1256_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1256_sample_start_ &-> (LSHR_u32_u32_1256_Sample)
        LSHR_u32_u32_1256_sample_completed_ <-& (LSHR_u32_u32_1256_Sample)
        LSHR_u32_u32_1256_sample_completed_ &-> ($null)
        LSHR_u32_u32_1256_update_start_ &-> (LSHR_u32_u32_1256_Update)
        LSHR_u32_u32_1256_update_completed_ <-& (LSHR_u32_u32_1256_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 515
        // Source expression
        // (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_1262_sample_start_] 
        $T[AND_u32_u32_1262_sample_completed_] 
        $T[AND_u32_u32_1262_update_start_] 
        $T[AND_u32_u32_1262_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1259_sample_start_] 
        $T[R_iNsTr_6_1259_sample_completed_] 
        $T[R_iNsTr_6_1259_update_start_] 
        $T[R_iNsTr_6_1259_update_completed_] 
        // implicit reference
        R_iNsTr_6_1259_sample_start_ <-& (LSHR_u32_u32_1256_update_completed_)
        R_iNsTr_6_1259_sample_completed_ <-& (R_iNsTr_6_1259_sample_start_)
        R_iNsTr_6_1259_update_start_ <-& (R_iNsTr_6_1259_sample_completed_)
        R_iNsTr_6_1259_update_completed_ <-& (R_iNsTr_6_1259_update_start_)
        AND_u32_u32_1262_sample_start_ <-& (R_iNsTr_6_1259_update_completed_)
        ;;[AND_u32_u32_1262_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1262_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1262_sample_start_ &-> (AND_u32_u32_1262_Sample)
        AND_u32_u32_1262_sample_completed_ <-& (AND_u32_u32_1262_Sample)
        AND_u32_u32_1262_sample_completed_ &-> ($null)
        AND_u32_u32_1262_update_start_ &-> (AND_u32_u32_1262_Update)
        AND_u32_u32_1262_update_completed_ <-& (AND_u32_u32_1262_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 516
        // Source expression
        // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_1268_sample_start_] 
        $T[SHL_u32_u32_1268_sample_completed_] 
        $T[SHL_u32_u32_1268_update_start_] 
        $T[SHL_u32_u32_1268_update_completed_] 
        // tmp10x_xi
        $T[R_tmp10x_xi_1265_sample_start_] 
        $T[R_tmp10x_xi_1265_sample_completed_] 
        $T[R_tmp10x_xi_1265_update_start_] 
        $T[R_tmp10x_xi_1265_update_completed_] 
        // implicit reference
        R_tmp10x_xi_1265_sample_start_ <-& ($entry)
        R_tmp10x_xi_1265_sample_completed_ <-& (R_tmp10x_xi_1265_sample_start_)
        R_tmp10x_xi_1265_update_start_ <-& (R_tmp10x_xi_1265_sample_completed_)
        R_tmp10x_xi_1265_update_completed_ <-& (R_tmp10x_xi_1265_update_start_)
        SHL_u32_u32_1268_sample_start_ <-& (R_tmp10x_xi_1265_update_completed_)
        ;;[SHL_u32_u32_1268_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1268_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1268_sample_start_ &-> (SHL_u32_u32_1268_Sample)
        SHL_u32_u32_1268_sample_completed_ <-& (SHL_u32_u32_1268_Sample)
        SHL_u32_u32_1268_sample_completed_ &-> ($null)
        SHL_u32_u32_1268_update_start_ &-> (SHL_u32_u32_1268_Update)
        SHL_u32_u32_1268_update_completed_ <-& (SHL_u32_u32_1268_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 517
        // Source expression
        // (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_1274_sample_start_] 
        $T[AND_u32_u32_1274_sample_completed_] 
        $T[AND_u32_u32_1274_update_start_] 
        $T[AND_u32_u32_1274_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_1271_sample_start_] 
        $T[R_iNsTr_8_1271_sample_completed_] 
        $T[R_iNsTr_8_1271_update_start_] 
        $T[R_iNsTr_8_1271_update_completed_] 
        // implicit reference
        R_iNsTr_8_1271_sample_start_ <-& (SHL_u32_u32_1268_update_completed_)
        R_iNsTr_8_1271_sample_completed_ <-& (R_iNsTr_8_1271_sample_start_)
        R_iNsTr_8_1271_update_start_ <-& (R_iNsTr_8_1271_sample_completed_)
        R_iNsTr_8_1271_update_completed_ <-& (R_iNsTr_8_1271_update_start_)
        AND_u32_u32_1274_sample_start_ <-& (R_iNsTr_8_1271_update_completed_)
        ;;[AND_u32_u32_1274_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1274_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1274_sample_start_ &-> (AND_u32_u32_1274_Sample)
        AND_u32_u32_1274_sample_completed_ <-& (AND_u32_u32_1274_Sample)
        AND_u32_u32_1274_sample_completed_ &-> ($null)
        AND_u32_u32_1274_update_start_ &-> (AND_u32_u32_1274_Update)
        AND_u32_u32_1274_update_completed_ <-& (AND_u32_u32_1274_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 518
        // Source expression
        // (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_1280_sample_start_] 
        $T[OR_u32_u32_1280_sample_completed_] 
        $T[OR_u32_u32_1280_update_start_] 
        $T[OR_u32_u32_1280_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_1277_sample_start_] 
        $T[R_iNsTr_9_1277_sample_completed_] 
        $T[R_iNsTr_9_1277_update_start_] 
        $T[R_iNsTr_9_1277_update_completed_] 
        // implicit reference
        R_iNsTr_9_1277_sample_start_ <-& (AND_u32_u32_1274_update_completed_)
        R_iNsTr_9_1277_sample_completed_ <-& (R_iNsTr_9_1277_sample_start_)
        R_iNsTr_9_1277_update_start_ <-& (R_iNsTr_9_1277_sample_completed_)
        R_iNsTr_9_1277_update_completed_ <-& (R_iNsTr_9_1277_update_start_)
        OR_u32_u32_1280_sample_start_ <-& (R_iNsTr_9_1277_update_completed_)
        ;;[OR_u32_u32_1280_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1280_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1280_sample_start_ &-> (OR_u32_u32_1280_Sample)
        OR_u32_u32_1280_sample_completed_ <-& (OR_u32_u32_1280_Sample)
        OR_u32_u32_1280_sample_completed_ &-> ($null)
        OR_u32_u32_1280_update_start_ &-> (OR_u32_u32_1280_Update)
        OR_u32_u32_1280_update_completed_ <-& (OR_u32_u32_1280_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 519
        // Source expression
        // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[LSHR_u32_u32_1286_sample_start_] 
        $T[LSHR_u32_u32_1286_sample_completed_] 
        $T[LSHR_u32_u32_1286_update_start_] 
        $T[LSHR_u32_u32_1286_update_completed_] 
        // tmp6x_xi
        $T[R_tmp6x_xi_1283_sample_start_] 
        $T[R_tmp6x_xi_1283_sample_completed_] 
        $T[R_tmp6x_xi_1283_update_start_] 
        $T[R_tmp6x_xi_1283_update_completed_] 
        // implicit reference
        R_tmp6x_xi_1283_sample_start_ <-& ($entry)
        R_tmp6x_xi_1283_sample_completed_ <-& (R_tmp6x_xi_1283_sample_start_)
        R_tmp6x_xi_1283_update_start_ <-& (R_tmp6x_xi_1283_sample_completed_)
        R_tmp6x_xi_1283_update_completed_ <-& (R_tmp6x_xi_1283_update_start_)
        LSHR_u32_u32_1286_sample_start_ <-& (R_tmp6x_xi_1283_update_completed_)
        ;;[LSHR_u32_u32_1286_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1286_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1286_sample_start_ &-> (LSHR_u32_u32_1286_Sample)
        LSHR_u32_u32_1286_sample_completed_ <-& (LSHR_u32_u32_1286_Sample)
        LSHR_u32_u32_1286_sample_completed_ &-> ($null)
        LSHR_u32_u32_1286_update_start_ &-> (LSHR_u32_u32_1286_Update)
        LSHR_u32_u32_1286_update_completed_ <-& (LSHR_u32_u32_1286_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        //  file prog.aa, line 520
        // Source expression
        // (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        $T[AND_u32_u32_1292_sample_start_] 
        $T[AND_u32_u32_1292_sample_completed_] 
        $T[AND_u32_u32_1292_update_start_] 
        $T[AND_u32_u32_1292_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_1289_sample_start_] 
        $T[R_iNsTr_11_1289_sample_completed_] 
        $T[R_iNsTr_11_1289_update_start_] 
        $T[R_iNsTr_11_1289_update_completed_] 
        // implicit reference
        R_iNsTr_11_1289_sample_start_ <-& (LSHR_u32_u32_1286_update_completed_)
        R_iNsTr_11_1289_sample_completed_ <-& (R_iNsTr_11_1289_sample_start_)
        R_iNsTr_11_1289_update_start_ <-& (R_iNsTr_11_1289_sample_completed_)
        R_iNsTr_11_1289_update_completed_ <-& (R_iNsTr_11_1289_update_start_)
        AND_u32_u32_1292_sample_start_ <-& (R_iNsTr_11_1289_update_completed_)
        ;;[AND_u32_u32_1292_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1292_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1292_sample_start_ &-> (AND_u32_u32_1292_Sample)
        AND_u32_u32_1292_sample_completed_ <-& (AND_u32_u32_1292_Sample)
        AND_u32_u32_1292_sample_completed_ &-> ($null)
        AND_u32_u32_1292_update_start_ &-> (AND_u32_u32_1292_Update)
        AND_u32_u32_1292_update_completed_ <-& (AND_u32_u32_1292_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        //  file prog.aa, line 521
        // Source expression
        // (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        $T[OR_u32_u32_1298_sample_start_] 
        $T[OR_u32_u32_1298_sample_completed_] 
        $T[OR_u32_u32_1298_update_start_] 
        $T[OR_u32_u32_1298_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_1295_sample_start_] 
        $T[R_iNsTr_12_1295_sample_completed_] 
        $T[R_iNsTr_12_1295_update_start_] 
        $T[R_iNsTr_12_1295_update_completed_] 
        // implicit reference
        R_iNsTr_12_1295_sample_start_ <-& (AND_u32_u32_1292_update_completed_)
        R_iNsTr_12_1295_sample_completed_ <-& (R_iNsTr_12_1295_sample_start_)
        R_iNsTr_12_1295_update_start_ <-& (R_iNsTr_12_1295_sample_completed_)
        R_iNsTr_12_1295_update_completed_ <-& (R_iNsTr_12_1295_update_start_)
        OR_u32_u32_1298_sample_start_ <-& (R_iNsTr_12_1295_update_completed_)
        ;;[OR_u32_u32_1298_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1298_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1298_sample_start_ &-> (OR_u32_u32_1298_Sample)
        OR_u32_u32_1298_sample_completed_ <-& (OR_u32_u32_1298_Sample)
        OR_u32_u32_1298_sample_completed_ &-> ($null)
        OR_u32_u32_1298_update_start_ &-> (OR_u32_u32_1298_Update)
        OR_u32_u32_1298_update_completed_ <-& (OR_u32_u32_1298_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (tmp6x_xi ^ tmp10x_xi)
        //  file prog.aa, line 522
        // Source expression
        // (tmp6x_xi ^ tmp10x_xi)
        $T[XOR_u32_u32_1303_sample_start_] 
        $T[XOR_u32_u32_1303_sample_completed_] 
        $T[XOR_u32_u32_1303_update_start_] 
        $T[XOR_u32_u32_1303_update_completed_] 
        // tmp6x_xi
        $T[R_tmp6x_xi_1301_sample_start_] 
        $T[R_tmp6x_xi_1301_sample_completed_] 
        $T[R_tmp6x_xi_1301_update_start_] 
        $T[R_tmp6x_xi_1301_update_completed_] 
        // implicit reference
        R_tmp6x_xi_1301_sample_start_ <-& ($entry)
        R_tmp6x_xi_1301_sample_completed_ <-& (R_tmp6x_xi_1301_sample_start_)
        R_tmp6x_xi_1301_update_start_ <-& (R_tmp6x_xi_1301_sample_completed_)
        R_tmp6x_xi_1301_update_completed_ <-& (R_tmp6x_xi_1301_update_start_)
        // tmp10x_xi
        $T[R_tmp10x_xi_1302_sample_start_] 
        $T[R_tmp10x_xi_1302_sample_completed_] 
        $T[R_tmp10x_xi_1302_update_start_] 
        $T[R_tmp10x_xi_1302_update_completed_] 
        // implicit reference
        R_tmp10x_xi_1302_sample_start_ <-& ($entry)
        R_tmp10x_xi_1302_sample_completed_ <-& (R_tmp10x_xi_1302_sample_start_)
        R_tmp10x_xi_1302_update_start_ <-& (R_tmp10x_xi_1302_sample_completed_)
        R_tmp10x_xi_1302_update_completed_ <-& (R_tmp10x_xi_1302_update_start_)
        XOR_u32_u32_1303_sample_start_ <-& (R_tmp6x_xi_1301_update_completed_)
        XOR_u32_u32_1303_sample_start_ <-& (R_tmp10x_xi_1302_update_completed_)
        ;;[XOR_u32_u32_1303_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_1303_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_1303_sample_start_ &-> (XOR_u32_u32_1303_Sample)
        XOR_u32_u32_1303_sample_completed_ <-& (XOR_u32_u32_1303_Sample)
        XOR_u32_u32_1303_sample_completed_ &-> ($null)
        XOR_u32_u32_1303_update_start_ &-> (XOR_u32_u32_1303_Update)
        XOR_u32_u32_1303_update_completed_ <-& (XOR_u32_u32_1303_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 523
        // Source expression
        // (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_1309_sample_start_] 
        $T[AND_u32_u32_1309_sample_completed_] 
        $T[AND_u32_u32_1309_update_start_] 
        $T[AND_u32_u32_1309_update_completed_] 
        // iNsTr_14
        $T[R_iNsTr_14_1306_sample_start_] 
        $T[R_iNsTr_14_1306_sample_completed_] 
        $T[R_iNsTr_14_1306_update_start_] 
        $T[R_iNsTr_14_1306_update_completed_] 
        // implicit reference
        R_iNsTr_14_1306_sample_start_ <-& (XOR_u32_u32_1303_update_completed_)
        R_iNsTr_14_1306_sample_completed_ <-& (R_iNsTr_14_1306_sample_start_)
        R_iNsTr_14_1306_update_start_ <-& (R_iNsTr_14_1306_sample_completed_)
        R_iNsTr_14_1306_update_completed_ <-& (R_iNsTr_14_1306_update_start_)
        AND_u32_u32_1309_sample_start_ <-& (R_iNsTr_14_1306_update_completed_)
        ;;[AND_u32_u32_1309_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1309_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1309_sample_start_ &-> (AND_u32_u32_1309_Sample)
        AND_u32_u32_1309_sample_completed_ <-& (AND_u32_u32_1309_Sample)
        AND_u32_u32_1309_sample_completed_ &-> ($null)
        AND_u32_u32_1309_update_start_ &-> (AND_u32_u32_1309_Update)
        AND_u32_u32_1309_update_completed_ <-& (AND_u32_u32_1309_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // 		iNsTr_16 := (iNsTr_5 - iNsTr_7)
        //  file prog.aa, line 524
        // Source expression
        // (iNsTr_5 - iNsTr_7)
        $T[SUB_u32_u32_1314_sample_start_] 
        $T[SUB_u32_u32_1314_sample_completed_] 
        $T[SUB_u32_u32_1314_update_start_] 
        $T[SUB_u32_u32_1314_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_1312_sample_start_] 
        $T[R_iNsTr_5_1312_sample_completed_] 
        $T[R_iNsTr_5_1312_update_start_] 
        $T[R_iNsTr_5_1312_update_completed_] 
        // implicit reference
        R_iNsTr_5_1312_sample_start_ <-& (AND_u32_u32_1250_update_completed_)
        R_iNsTr_5_1312_sample_completed_ <-& (R_iNsTr_5_1312_sample_start_)
        R_iNsTr_5_1312_update_start_ <-& (R_iNsTr_5_1312_sample_completed_)
        R_iNsTr_5_1312_update_completed_ <-& (R_iNsTr_5_1312_update_start_)
        // iNsTr_7
        $T[R_iNsTr_7_1313_sample_start_] 
        $T[R_iNsTr_7_1313_sample_completed_] 
        $T[R_iNsTr_7_1313_update_start_] 
        $T[R_iNsTr_7_1313_update_completed_] 
        // implicit reference
        R_iNsTr_7_1313_sample_start_ <-& (AND_u32_u32_1262_update_completed_)
        R_iNsTr_7_1313_sample_completed_ <-& (R_iNsTr_7_1313_sample_start_)
        R_iNsTr_7_1313_update_start_ <-& (R_iNsTr_7_1313_sample_completed_)
        R_iNsTr_7_1313_update_completed_ <-& (R_iNsTr_7_1313_update_start_)
        SUB_u32_u32_1314_sample_start_ <-& (R_iNsTr_5_1312_update_completed_)
        SUB_u32_u32_1314_sample_start_ <-& (R_iNsTr_7_1313_update_completed_)
        ;;[SUB_u32_u32_1314_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1314_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1314_sample_start_ &-> (SUB_u32_u32_1314_Sample)
        SUB_u32_u32_1314_sample_completed_ <-& (SUB_u32_u32_1314_Sample)
        SUB_u32_u32_1314_sample_completed_ &-> ($null)
        SUB_u32_u32_1314_update_start_ &-> (SUB_u32_u32_1314_Update)
        SUB_u32_u32_1314_update_completed_ <-& (SUB_u32_u32_1314_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1245_to_assign_stmt_1315__entry__ |-> (assign_stmt_1245_to_assign_stmt_1315)
      assign_stmt_1245_to_assign_stmt_1315__exit__ <-| (assign_stmt_1245_to_assign_stmt_1315)
      // control-path for switch  
      //  file prog.aa, line 525
      ;;[switch_stmt_1316_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_1316__entry__ |-> (switch_stmt_1316_dead_link)
      switch_stmt_1316__exit__ <-| (switch_stmt_1316_dead_link)
      //---------------------    switch statement  file prog.aa, line 525  --------------------------
      $P [switch_stmt_1316__condition_check_place__] 
      switch_stmt_1316__entry__ |-> (switch_stmt_1316__condition_check_place__)
      ||[switch_stmt_1316__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_1316__condition_check_place__ |-> (switch_stmt_1316__condition_check__)
      $P [switch_stmt_1316__select__] 
      switch_stmt_1316__select__ <-| (switch_stmt_1316__condition_check__)
      // switch choice 0
      ;;[switch_stmt_1316_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_1_xx_xloopexitx_xix_xi]
      bb_1_xx_xloopexitx_xix_xi <-| (switch_stmt_1316_choice_0)
      // switch choice 1
      ;;[switch_stmt_1316_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_1_udiv32x_xexitx_xpreheaderx_xi]
      bb_1_udiv32x_xexitx_xpreheaderx_xi <-| (switch_stmt_1316_choice_1)
      ;;[switch_stmt_1316_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_1_bbx_xnph7x_xix_xix_xpreheader]
      bb_1_bbx_xnph7x_xix_xix_xpreheader <-| (switch_stmt_1316_choice_default)
      switch_stmt_1316__select__ |-> (switch_stmt_1316_choice_0 switch_stmt_1316_choice_1 switch_stmt_1316_choice_default)
      //---------------------   end of switch statement  file prog.aa, line 525  --------------------------
      ::[assign_stmt_1348_to_assign_stmt_1353] 
      {
        // 		iNsTr_25 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 542
        // Source expression
        // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_1347_sample_start_] 
        $T[LSHR_u32_u32_1347_sample_completed_] 
        $T[LSHR_u32_u32_1347_update_start_] 
        $T[LSHR_u32_u32_1347_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_1344_sample_start_] 
        $T[R_xx_x016x_xix_xi_1344_sample_completed_] 
        $T[R_xx_x016x_xix_xi_1344_update_start_] 
        $T[R_xx_x016x_xix_xi_1344_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_1344_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_1344_sample_completed_ <-& (R_xx_x016x_xix_xi_1344_sample_start_)
        R_xx_x016x_xix_xi_1344_update_start_ <-& (R_xx_x016x_xix_xi_1344_sample_completed_)
        R_xx_x016x_xix_xi_1344_update_completed_ <-& (R_xx_x016x_xix_xi_1344_update_start_)
        LSHR_u32_u32_1347_sample_start_ <-& (R_xx_x016x_xix_xi_1344_update_completed_)
        ;;[LSHR_u32_u32_1347_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1347_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1347_sample_start_ &-> (LSHR_u32_u32_1347_Sample)
        LSHR_u32_u32_1347_sample_completed_ <-& (LSHR_u32_u32_1347_Sample)
        LSHR_u32_u32_1347_sample_completed_ &-> ($null)
        LSHR_u32_u32_1347_update_start_ &-> (LSHR_u32_u32_1347_Update)
        LSHR_u32_u32_1347_update_completed_ <-& (LSHR_u32_u32_1347_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // 		iNsTr_26 := (iNsTr_25 > iNsTr_13)
        //  file prog.aa, line 544
        // Source expression
        // (iNsTr_25 > iNsTr_13)
        $T[UGT_u32_u1_1352_sample_start_] 
        $T[UGT_u32_u1_1352_sample_completed_] 
        $T[UGT_u32_u1_1352_update_start_] 
        $T[UGT_u32_u1_1352_update_completed_] 
        // iNsTr_25
        $T[R_iNsTr_25_1350_sample_start_] 
        $T[R_iNsTr_25_1350_sample_completed_] 
        $T[R_iNsTr_25_1350_update_start_] 
        $T[R_iNsTr_25_1350_update_completed_] 
        // implicit reference
        R_iNsTr_25_1350_sample_start_ <-& (LSHR_u32_u32_1347_update_completed_)
        R_iNsTr_25_1350_sample_completed_ <-& (R_iNsTr_25_1350_sample_start_)
        R_iNsTr_25_1350_update_start_ <-& (R_iNsTr_25_1350_sample_completed_)
        R_iNsTr_25_1350_update_completed_ <-& (R_iNsTr_25_1350_update_start_)
        // iNsTr_13
        $T[R_iNsTr_13_1351_sample_start_] 
        $T[R_iNsTr_13_1351_sample_completed_] 
        $T[R_iNsTr_13_1351_update_start_] 
        $T[R_iNsTr_13_1351_update_completed_] 
        // implicit reference
        R_iNsTr_13_1351_sample_start_ <-& ($entry)
        R_iNsTr_13_1351_sample_completed_ <-& (R_iNsTr_13_1351_sample_start_)
        R_iNsTr_13_1351_update_start_ <-& (R_iNsTr_13_1351_sample_completed_)
        R_iNsTr_13_1351_update_completed_ <-& (R_iNsTr_13_1351_update_start_)
        UGT_u32_u1_1352_sample_start_ <-& (R_iNsTr_25_1350_update_completed_)
        UGT_u32_u1_1352_sample_start_ <-& (R_iNsTr_13_1351_update_completed_)
        ;;[UGT_u32_u1_1352_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_1352_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_1352_sample_start_ &-> (UGT_u32_u1_1352_Sample)
        UGT_u32_u1_1352_sample_completed_ <-& (UGT_u32_u1_1352_Sample)
        UGT_u32_u1_1352_sample_completed_ &-> ($null)
        UGT_u32_u1_1352_update_start_ &-> (UGT_u32_u1_1352_Update)
        UGT_u32_u1_1352_update_completed_ <-& (UGT_u32_u1_1352_Update)
        // Target expression
        // (as target) iNsTr_26
        // iNsTr_26
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1348_to_assign_stmt_1353__entry__ |-> (assign_stmt_1348_to_assign_stmt_1353)
      assign_stmt_1348_to_assign_stmt_1353__exit__ <-| (assign_stmt_1348_to_assign_stmt_1353)
      // if-statement  
      //  file prog.aa, line 545
      ;;[if_stmt_1354_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1354__entry__ |-> (if_stmt_1354_dead_link)
      if_stmt_1354__exit__ <-| (if_stmt_1354_dead_link)
      ;;[if_stmt_1354_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1354__entry__ |-> (if_stmt_1354_eval_test)
      $P [R_iNsTr_26_1355_place]
      R_iNsTr_26_1355_place <-| (if_stmt_1354_eval_test)
      ;;[if_stmt_1354_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1354_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_26_1355_place |-> (if_stmt_1354_if_link if_stmt_1354_else_link)
      $P [bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader]
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader <-| (if_stmt_1354_if_link)
      $P [bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi]
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi <-| (if_stmt_1354_else_link)
      ::[assign_stmt_1382_to_assign_stmt_1393] 
      {
        // 		iNsTr_46 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 555
        // Source expression
        // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_1381_sample_start_] 
        $T[SHL_u32_u32_1381_sample_completed_] 
        $T[SHL_u32_u32_1381_update_start_] 
        $T[SHL_u32_u32_1381_update_completed_] 
        // shifted_divisorx_x03x_xix_xi
        $T[R_shifted_divisorx_x03x_xix_xi_1378_sample_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_1378_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xix_xi_1378_update_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_1378_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xix_xi_1378_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xix_xi_1378_sample_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_1378_sample_start_)
        R_shifted_divisorx_x03x_xix_xi_1378_update_start_ <-& (R_shifted_divisorx_x03x_xix_xi_1378_sample_completed_)
        R_shifted_divisorx_x03x_xix_xi_1378_update_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_1378_update_start_)
        SHL_u32_u32_1381_sample_start_ <-& (R_shifted_divisorx_x03x_xix_xi_1378_update_completed_)
        ;;[SHL_u32_u32_1381_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1381_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1381_sample_start_ &-> (SHL_u32_u32_1381_Sample)
        SHL_u32_u32_1381_sample_completed_ <-& (SHL_u32_u32_1381_Sample)
        SHL_u32_u32_1381_sample_completed_ &-> ($null)
        SHL_u32_u32_1381_update_start_ &-> (SHL_u32_u32_1381_Update)
        SHL_u32_u32_1381_update_completed_ <-& (SHL_u32_u32_1381_Update)
        // Target expression
        // (as target) iNsTr_46
        // iNsTr_46
        // implicit reference
        // 		iNsTr_47 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 556
        // Source expression
        // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_1387_sample_start_] 
        $T[SHL_u32_u32_1387_sample_completed_] 
        $T[SHL_u32_u32_1387_update_start_] 
        $T[SHL_u32_u32_1387_update_completed_] 
        // curr_quotientx_x02x_xix_xi
        $T[R_curr_quotientx_x02x_xix_xi_1384_sample_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_1384_sample_completed_] 
        $T[R_curr_quotientx_x02x_xix_xi_1384_update_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_1384_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xix_xi_1384_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xix_xi_1384_sample_completed_ <-& (R_curr_quotientx_x02x_xix_xi_1384_sample_start_)
        R_curr_quotientx_x02x_xix_xi_1384_update_start_ <-& (R_curr_quotientx_x02x_xix_xi_1384_sample_completed_)
        R_curr_quotientx_x02x_xix_xi_1384_update_completed_ <-& (R_curr_quotientx_x02x_xix_xi_1384_update_start_)
        SHL_u32_u32_1387_sample_start_ <-& (R_curr_quotientx_x02x_xix_xi_1384_update_completed_)
        ;;[SHL_u32_u32_1387_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1387_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1387_sample_start_ &-> (SHL_u32_u32_1387_Sample)
        SHL_u32_u32_1387_sample_completed_ <-& (SHL_u32_u32_1387_Sample)
        SHL_u32_u32_1387_sample_completed_ &-> ($null)
        SHL_u32_u32_1387_update_start_ &-> (SHL_u32_u32_1387_Update)
        SHL_u32_u32_1387_update_completed_ <-& (SHL_u32_u32_1387_Update)
        // Target expression
        // (as target) iNsTr_47
        // iNsTr_47
        // implicit reference
        // 		iNsTr_48 := (iNsTr_46 < iNsTr_25)
        //  file prog.aa, line 558
        // Source expression
        // (iNsTr_46 < iNsTr_25)
        $T[ULT_u32_u1_1392_sample_start_] 
        $T[ULT_u32_u1_1392_sample_completed_] 
        $T[ULT_u32_u1_1392_update_start_] 
        $T[ULT_u32_u1_1392_update_completed_] 
        // iNsTr_46
        $T[R_iNsTr_46_1390_sample_start_] 
        $T[R_iNsTr_46_1390_sample_completed_] 
        $T[R_iNsTr_46_1390_update_start_] 
        $T[R_iNsTr_46_1390_update_completed_] 
        // implicit reference
        R_iNsTr_46_1390_sample_start_ <-& (SHL_u32_u32_1381_update_completed_)
        R_iNsTr_46_1390_sample_completed_ <-& (R_iNsTr_46_1390_sample_start_)
        R_iNsTr_46_1390_update_start_ <-& (R_iNsTr_46_1390_sample_completed_)
        R_iNsTr_46_1390_update_completed_ <-& (R_iNsTr_46_1390_update_start_)
        // iNsTr_25
        $T[R_iNsTr_25_1391_sample_start_] 
        $T[R_iNsTr_25_1391_sample_completed_] 
        $T[R_iNsTr_25_1391_update_start_] 
        $T[R_iNsTr_25_1391_update_completed_] 
        // implicit reference
        R_iNsTr_25_1391_sample_start_ <-& ($entry)
        R_iNsTr_25_1391_sample_completed_ <-& (R_iNsTr_25_1391_sample_start_)
        R_iNsTr_25_1391_update_start_ <-& (R_iNsTr_25_1391_sample_completed_)
        R_iNsTr_25_1391_update_completed_ <-& (R_iNsTr_25_1391_update_start_)
        ULT_u32_u1_1392_sample_start_ <-& (R_iNsTr_46_1390_update_completed_)
        ULT_u32_u1_1392_sample_start_ <-& (R_iNsTr_25_1391_update_completed_)
        ;;[ULT_u32_u1_1392_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_1392_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_1392_sample_start_ &-> (ULT_u32_u1_1392_Sample)
        ULT_u32_u1_1392_sample_completed_ <-& (ULT_u32_u1_1392_Sample)
        ULT_u32_u1_1392_sample_completed_ &-> ($null)
        ULT_u32_u1_1392_update_start_ &-> (ULT_u32_u1_1392_Update)
        ULT_u32_u1_1392_update_completed_ <-& (ULT_u32_u1_1392_Update)
        // Target expression
        // (as target) iNsTr_48
        // iNsTr_48
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1382_to_assign_stmt_1393__entry__ |-> (assign_stmt_1382_to_assign_stmt_1393)
      assign_stmt_1382_to_assign_stmt_1393__exit__ <-| (assign_stmt_1382_to_assign_stmt_1393)
      // if-statement  
      //  file prog.aa, line 559
      ;;[if_stmt_1394_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1394__entry__ |-> (if_stmt_1394_dead_link)
      if_stmt_1394__exit__ <-| (if_stmt_1394_dead_link)
      ;;[if_stmt_1394_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1394__entry__ |-> (if_stmt_1394_eval_test)
      $P [R_iNsTr_48_1395_place]
      R_iNsTr_48_1395_place <-| (if_stmt_1394_eval_test)
      ;;[if_stmt_1394_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1394_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_48_1395_place |-> (if_stmt_1394_if_link if_stmt_1394_else_link)
      $P [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi]
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi <-| (if_stmt_1394_if_link)
      $P [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit]
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit <-| (if_stmt_1394_else_link)
      ::[assign_stmt_1430_to_assign_stmt_1440] 
      {
        // 		iNsTr_36 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        //  file prog.aa, line 571
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        $T[ADD_u32_u32_1429_sample_start_] 
        $T[ADD_u32_u32_1429_sample_completed_] 
        $T[ADD_u32_u32_1429_update_start_] 
        $T[ADD_u32_u32_1429_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xi
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1427_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1427_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1427_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_1427_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xi_1427_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xi_1427_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1427_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_1427_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1427_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_1427_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1427_update_start_)
        // quotientx_x05x_xix_xi
        $T[R_quotientx_x05x_xix_xi_1428_sample_start_] 
        $T[R_quotientx_x05x_xix_xi_1428_sample_completed_] 
        $T[R_quotientx_x05x_xix_xi_1428_update_start_] 
        $T[R_quotientx_x05x_xix_xi_1428_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xix_xi_1428_sample_start_ <-& ($entry)
        R_quotientx_x05x_xix_xi_1428_sample_completed_ <-& (R_quotientx_x05x_xix_xi_1428_sample_start_)
        R_quotientx_x05x_xix_xi_1428_update_start_ <-& (R_quotientx_x05x_xix_xi_1428_sample_completed_)
        R_quotientx_x05x_xix_xi_1428_update_completed_ <-& (R_quotientx_x05x_xix_xi_1428_update_start_)
        ADD_u32_u32_1429_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_1427_update_completed_)
        ADD_u32_u32_1429_sample_start_ <-& (R_quotientx_x05x_xix_xi_1428_update_completed_)
        ;;[ADD_u32_u32_1429_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1429_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1429_sample_start_ &-> (ADD_u32_u32_1429_Sample)
        ADD_u32_u32_1429_sample_completed_ <-& (ADD_u32_u32_1429_Sample)
        ADD_u32_u32_1429_sample_completed_ &-> ($null)
        ADD_u32_u32_1429_update_start_ &-> (ADD_u32_u32_1429_Update)
        ADD_u32_u32_1429_update_completed_ <-& (ADD_u32_u32_1429_Update)
        // Target expression
        // (as target) iNsTr_36
        // iNsTr_36
        // implicit reference
        // 		iNsTr_37 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        //  file prog.aa, line 572
        // Source expression
        // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        $T[SUB_u32_u32_1434_sample_start_] 
        $T[SUB_u32_u32_1434_sample_completed_] 
        $T[SUB_u32_u32_1434_update_start_] 
        $T[SUB_u32_u32_1434_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_1432_sample_start_] 
        $T[R_xx_x016x_xix_xi_1432_sample_completed_] 
        $T[R_xx_x016x_xix_xi_1432_update_start_] 
        $T[R_xx_x016x_xix_xi_1432_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_1432_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_1432_sample_completed_ <-& (R_xx_x016x_xix_xi_1432_sample_start_)
        R_xx_x016x_xix_xi_1432_update_start_ <-& (R_xx_x016x_xix_xi_1432_sample_completed_)
        R_xx_x016x_xix_xi_1432_update_completed_ <-& (R_xx_x016x_xix_xi_1432_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1433_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1433_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1433_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_1433_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1433_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1433_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1433_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1433_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1433_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_1433_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1433_update_start_)
        SUB_u32_u32_1434_sample_start_ <-& (R_xx_x016x_xix_xi_1432_update_completed_)
        SUB_u32_u32_1434_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_1433_update_completed_)
        ;;[SUB_u32_u32_1434_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1434_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1434_sample_start_ &-> (SUB_u32_u32_1434_Sample)
        SUB_u32_u32_1434_sample_completed_ <-& (SUB_u32_u32_1434_Sample)
        SUB_u32_u32_1434_sample_completed_ &-> ($null)
        SUB_u32_u32_1434_update_start_ &-> (SUB_u32_u32_1434_Update)
        SUB_u32_u32_1434_update_completed_ <-& (SUB_u32_u32_1434_Update)
        // Target expression
        // (as target) iNsTr_37
        // iNsTr_37
        // implicit reference
        // 		iNsTr_38 := (iNsTr_37 < iNsTr_13)
        //  file prog.aa, line 574
        // Source expression
        // (iNsTr_37 < iNsTr_13)
        $T[ULT_u32_u1_1439_sample_start_] 
        $T[ULT_u32_u1_1439_sample_completed_] 
        $T[ULT_u32_u1_1439_update_start_] 
        $T[ULT_u32_u1_1439_update_completed_] 
        // iNsTr_37
        $T[R_iNsTr_37_1437_sample_start_] 
        $T[R_iNsTr_37_1437_sample_completed_] 
        $T[R_iNsTr_37_1437_update_start_] 
        $T[R_iNsTr_37_1437_update_completed_] 
        // implicit reference
        R_iNsTr_37_1437_sample_start_ <-& (SUB_u32_u32_1434_update_completed_)
        R_iNsTr_37_1437_sample_completed_ <-& (R_iNsTr_37_1437_sample_start_)
        R_iNsTr_37_1437_update_start_ <-& (R_iNsTr_37_1437_sample_completed_)
        R_iNsTr_37_1437_update_completed_ <-& (R_iNsTr_37_1437_update_start_)
        // iNsTr_13
        $T[R_iNsTr_13_1438_sample_start_] 
        $T[R_iNsTr_13_1438_sample_completed_] 
        $T[R_iNsTr_13_1438_update_start_] 
        $T[R_iNsTr_13_1438_update_completed_] 
        // implicit reference
        R_iNsTr_13_1438_sample_start_ <-& ($entry)
        R_iNsTr_13_1438_sample_completed_ <-& (R_iNsTr_13_1438_sample_start_)
        R_iNsTr_13_1438_update_start_ <-& (R_iNsTr_13_1438_sample_completed_)
        R_iNsTr_13_1438_update_completed_ <-& (R_iNsTr_13_1438_update_start_)
        ULT_u32_u1_1439_sample_start_ <-& (R_iNsTr_37_1437_update_completed_)
        ULT_u32_u1_1439_sample_start_ <-& (R_iNsTr_13_1438_update_completed_)
        ;;[ULT_u32_u1_1439_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_1439_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_1439_sample_start_ &-> (ULT_u32_u1_1439_Sample)
        ULT_u32_u1_1439_sample_completed_ <-& (ULT_u32_u1_1439_Sample)
        ULT_u32_u1_1439_sample_completed_ &-> ($null)
        ULT_u32_u1_1439_update_start_ &-> (ULT_u32_u1_1439_Update)
        ULT_u32_u1_1439_update_completed_ <-& (ULT_u32_u1_1439_Update)
        // Target expression
        // (as target) iNsTr_38
        // iNsTr_38
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1430_to_assign_stmt_1440__entry__ |-> (assign_stmt_1430_to_assign_stmt_1440)
      assign_stmt_1430_to_assign_stmt_1440__exit__ <-| (assign_stmt_1430_to_assign_stmt_1440)
      // if-statement  
      //  file prog.aa, line 575
      ;;[if_stmt_1441_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1441__entry__ |-> (if_stmt_1441_dead_link)
      if_stmt_1441__exit__ <-| (if_stmt_1441_dead_link)
      ;;[if_stmt_1441_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1441__entry__ |-> (if_stmt_1441_eval_test)
      $P [R_iNsTr_38_1442_place]
      R_iNsTr_38_1442_place <-| (if_stmt_1441_eval_test)
      ;;[if_stmt_1441_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1441_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_38_1442_place |-> (if_stmt_1441_if_link if_stmt_1441_else_link)
      $P [xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit]
      xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit <-| (if_stmt_1441_if_link)
      $P [xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi]
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi <-| (if_stmt_1441_else_link)
      ::[assign_stmt_1477_to_assign_stmt_1496] 
      {
        // 		iNsTr_21 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 590
        // Source expression
        // (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_1476_sample_start_] 
        $T[AND_u32_u32_1476_sample_completed_] 
        $T[AND_u32_u32_1476_update_start_] 
        $T[AND_u32_u32_1476_update_completed_] 
        // tempx_x0x_xphx_xi
        $T[R_tempx_x0x_xphx_xi_1473_sample_start_] 
        $T[R_tempx_x0x_xphx_xi_1473_sample_completed_] 
        $T[R_tempx_x0x_xphx_xi_1473_update_start_] 
        $T[R_tempx_x0x_xphx_xi_1473_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xi_1473_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xi_1473_sample_completed_ <-& (R_tempx_x0x_xphx_xi_1473_sample_start_)
        R_tempx_x0x_xphx_xi_1473_update_start_ <-& (R_tempx_x0x_xphx_xi_1473_sample_completed_)
        R_tempx_x0x_xphx_xi_1473_update_completed_ <-& (R_tempx_x0x_xphx_xi_1473_update_start_)
        AND_u32_u32_1476_sample_start_ <-& (R_tempx_x0x_xphx_xi_1473_update_completed_)
        ;;[AND_u32_u32_1476_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1476_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1476_sample_start_ &-> (AND_u32_u32_1476_Sample)
        AND_u32_u32_1476_sample_completed_ <-& (AND_u32_u32_1476_Sample)
        AND_u32_u32_1476_sample_completed_ &-> ($null)
        AND_u32_u32_1476_update_start_ &-> (AND_u32_u32_1476_Update)
        AND_u32_u32_1476_update_completed_ <-& (AND_u32_u32_1476_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 592
        // Source expression
        // (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_1482_sample_start_] 
        $T[EQ_u32_u1_1482_sample_completed_] 
        $T[EQ_u32_u1_1482_update_start_] 
        $T[EQ_u32_u1_1482_update_completed_] 
        // iNsTr_21
        $T[R_iNsTr_21_1479_sample_start_] 
        $T[R_iNsTr_21_1479_sample_completed_] 
        $T[R_iNsTr_21_1479_update_start_] 
        $T[R_iNsTr_21_1479_update_completed_] 
        // implicit reference
        R_iNsTr_21_1479_sample_start_ <-& (AND_u32_u32_1476_update_completed_)
        R_iNsTr_21_1479_sample_completed_ <-& (R_iNsTr_21_1479_sample_start_)
        R_iNsTr_21_1479_update_start_ <-& (R_iNsTr_21_1479_sample_completed_)
        R_iNsTr_21_1479_update_completed_ <-& (R_iNsTr_21_1479_update_start_)
        EQ_u32_u1_1482_sample_start_ <-& (R_iNsTr_21_1479_update_completed_)
        ;;[EQ_u32_u1_1482_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1482_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1482_sample_start_ &-> (EQ_u32_u1_1482_Sample)
        EQ_u32_u1_1482_sample_completed_ <-& (EQ_u32_u1_1482_Sample)
        EQ_u32_u1_1482_sample_completed_ &-> ($null)
        EQ_u32_u1_1482_update_start_ &-> (EQ_u32_u1_1482_Update)
        EQ_u32_u1_1482_update_completed_ <-& (EQ_u32_u1_1482_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // 		iNsTr_23 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 594
        // Source expression
        // (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_1490_sample_start_] 
        $T[NEQ_i32_u1_1490_sample_completed_] 
        $T[NEQ_i32_u1_1490_update_start_] 
        $T[NEQ_i32_u1_1490_update_completed_] 
        // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
        $T[type_cast_1486_sample_start_] 
        $T[type_cast_1486_sample_completed_] 
        $T[type_cast_1486_update_start_] 
        $T[type_cast_1486_update_completed_] 
        // tempx_x0x_xphx_xi
        $T[R_tempx_x0x_xphx_xi_1485_sample_start_] 
        $T[R_tempx_x0x_xphx_xi_1485_sample_completed_] 
        $T[R_tempx_x0x_xphx_xi_1485_update_start_] 
        $T[R_tempx_x0x_xphx_xi_1485_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xi_1485_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xi_1485_sample_completed_ <-& (R_tempx_x0x_xphx_xi_1485_sample_start_)
        R_tempx_x0x_xphx_xi_1485_update_start_ <-& (R_tempx_x0x_xphx_xi_1485_sample_completed_)
        R_tempx_x0x_xphx_xi_1485_update_completed_ <-& (R_tempx_x0x_xphx_xi_1485_update_start_)
        type_cast_1486_sample_start_ <-& (R_tempx_x0x_xphx_xi_1485_update_completed_)
        ;;[type_cast_1486_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1486_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1486_sample_start_ &-> (type_cast_1486_Sample)
        type_cast_1486_sample_completed_ <-& (type_cast_1486_Sample)
        type_cast_1486_sample_completed_ &-> ($null)
        type_cast_1486_update_start_ &-> (type_cast_1486_Update)
        type_cast_1486_update_completed_ <-& (type_cast_1486_Update)
        // flow-through
        type_cast_1486_update_start_ <-& (type_cast_1486_sample_completed_)
        NEQ_i32_u1_1490_sample_start_ <-& (type_cast_1486_update_completed_)
        ;;[NEQ_i32_u1_1490_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_1490_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_1490_sample_start_ &-> (NEQ_i32_u1_1490_Sample)
        NEQ_i32_u1_1490_sample_completed_ <-& (NEQ_i32_u1_1490_Sample)
        NEQ_i32_u1_1490_sample_completed_ &-> ($null)
        NEQ_i32_u1_1490_update_start_ &-> (NEQ_i32_u1_1490_Update)
        NEQ_i32_u1_1490_update_completed_ <-& (NEQ_i32_u1_1490_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // 		orx_xcond11x_xi := (iNsTr_22 & iNsTr_23)
        //  file prog.aa, line 595
        // Source expression
        // (iNsTr_22 & iNsTr_23)
        $T[AND_u1_u1_1495_sample_start_] 
        $T[AND_u1_u1_1495_sample_completed_] 
        $T[AND_u1_u1_1495_update_start_] 
        $T[AND_u1_u1_1495_update_completed_] 
        // iNsTr_22
        $T[R_iNsTr_22_1493_sample_start_] 
        $T[R_iNsTr_22_1493_sample_completed_] 
        $T[R_iNsTr_22_1493_update_start_] 
        $T[R_iNsTr_22_1493_update_completed_] 
        // implicit reference
        R_iNsTr_22_1493_sample_start_ <-& (EQ_u32_u1_1482_update_completed_)
        R_iNsTr_22_1493_sample_completed_ <-& (R_iNsTr_22_1493_sample_start_)
        R_iNsTr_22_1493_update_start_ <-& (R_iNsTr_22_1493_sample_completed_)
        R_iNsTr_22_1493_update_completed_ <-& (R_iNsTr_22_1493_update_start_)
        // iNsTr_23
        $T[R_iNsTr_23_1494_sample_start_] 
        $T[R_iNsTr_23_1494_sample_completed_] 
        $T[R_iNsTr_23_1494_update_start_] 
        $T[R_iNsTr_23_1494_update_completed_] 
        // implicit reference
        R_iNsTr_23_1494_sample_start_ <-& (NEQ_i32_u1_1490_update_completed_)
        R_iNsTr_23_1494_sample_completed_ <-& (R_iNsTr_23_1494_sample_start_)
        R_iNsTr_23_1494_update_start_ <-& (R_iNsTr_23_1494_sample_completed_)
        R_iNsTr_23_1494_update_completed_ <-& (R_iNsTr_23_1494_update_start_)
        AND_u1_u1_1495_sample_start_ <-& (R_iNsTr_22_1493_update_completed_)
        AND_u1_u1_1495_sample_start_ <-& (R_iNsTr_23_1494_update_completed_)
        ;;[AND_u1_u1_1495_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_1495_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_1495_sample_start_ &-> (AND_u1_u1_1495_Sample)
        AND_u1_u1_1495_sample_completed_ <-& (AND_u1_u1_1495_Sample)
        AND_u1_u1_1495_sample_completed_ &-> ($null)
        AND_u1_u1_1495_update_start_ &-> (AND_u1_u1_1495_Update)
        AND_u1_u1_1495_update_completed_ <-& (AND_u1_u1_1495_Update)
        // Target expression
        // (as target) orx_xcond11x_xi
        // orx_xcond11x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1477_to_assign_stmt_1496__entry__ |-> (assign_stmt_1477_to_assign_stmt_1496)
      assign_stmt_1477_to_assign_stmt_1496__exit__ <-| (assign_stmt_1477_to_assign_stmt_1496)
      // if-statement  
      //  file prog.aa, line 596
      ;;[if_stmt_1497_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1497__entry__ |-> (if_stmt_1497_dead_link)
      if_stmt_1497__exit__ <-| (if_stmt_1497_dead_link)
      ;;[if_stmt_1497_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1497__entry__ |-> (if_stmt_1497_eval_test)
      $P [R_orx_xcond11x_xi_1498_place]
      R_orx_xcond11x_xi_1498_place <-| (if_stmt_1497_eval_test)
      ;;[if_stmt_1497_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1497_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11x_xi_1498_place |-> (if_stmt_1497_if_link if_stmt_1497_else_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader]
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader <-| (if_stmt_1497_if_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi]
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi <-| (if_stmt_1497_else_link)
      ::[assign_stmt_1525_to_assign_stmt_1556] 
      {
        // 		iNsTr_41 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 606
        // Source expression
        // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_1524_sample_start_] 
        $T[SHL_u32_u32_1524_sample_completed_] 
        $T[SHL_u32_u32_1524_update_start_] 
        $T[SHL_u32_u32_1524_update_completed_] 
        // tempx_x012x_xi
        $T[R_tempx_x012x_xi_1521_sample_start_] 
        $T[R_tempx_x012x_xi_1521_sample_completed_] 
        $T[R_tempx_x012x_xi_1521_update_start_] 
        $T[R_tempx_x012x_xi_1521_update_completed_] 
        // implicit reference
        R_tempx_x012x_xi_1521_sample_start_ <-& ($entry)
        R_tempx_x012x_xi_1521_sample_completed_ <-& (R_tempx_x012x_xi_1521_sample_start_)
        R_tempx_x012x_xi_1521_update_start_ <-& (R_tempx_x012x_xi_1521_sample_completed_)
        R_tempx_x012x_xi_1521_update_completed_ <-& (R_tempx_x012x_xi_1521_update_start_)
        SHL_u32_u32_1524_sample_start_ <-& (R_tempx_x012x_xi_1521_update_completed_)
        ;;[SHL_u32_u32_1524_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1524_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1524_sample_start_ &-> (SHL_u32_u32_1524_Sample)
        SHL_u32_u32_1524_sample_completed_ <-& (SHL_u32_u32_1524_Sample)
        SHL_u32_u32_1524_sample_completed_ &-> ($null)
        SHL_u32_u32_1524_update_start_ &-> (SHL_u32_u32_1524_Update)
        SHL_u32_u32_1524_update_completed_ <-& (SHL_u32_u32_1524_Update)
        // Target expression
        // (as target) iNsTr_41
        // iNsTr_41
        // implicit reference
        // 		iNsTr_42 := (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 607
        // Source expression
        // (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_1530_sample_start_] 
        $T[AND_u32_u32_1530_sample_completed_] 
        $T[AND_u32_u32_1530_update_start_] 
        $T[AND_u32_u32_1530_update_completed_] 
        // iNsTr_41
        $T[R_iNsTr_41_1527_sample_start_] 
        $T[R_iNsTr_41_1527_sample_completed_] 
        $T[R_iNsTr_41_1527_update_start_] 
        $T[R_iNsTr_41_1527_update_completed_] 
        // implicit reference
        R_iNsTr_41_1527_sample_start_ <-& (SHL_u32_u32_1524_update_completed_)
        R_iNsTr_41_1527_sample_completed_ <-& (R_iNsTr_41_1527_sample_start_)
        R_iNsTr_41_1527_update_start_ <-& (R_iNsTr_41_1527_sample_completed_)
        R_iNsTr_41_1527_update_completed_ <-& (R_iNsTr_41_1527_update_start_)
        AND_u32_u32_1530_sample_start_ <-& (R_iNsTr_41_1527_update_completed_)
        ;;[AND_u32_u32_1530_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1530_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1530_sample_start_ &-> (AND_u32_u32_1530_Sample)
        AND_u32_u32_1530_sample_completed_ <-& (AND_u32_u32_1530_Sample)
        AND_u32_u32_1530_sample_completed_ &-> ($null)
        AND_u32_u32_1530_update_start_ &-> (AND_u32_u32_1530_Update)
        AND_u32_u32_1530_update_completed_ <-& (AND_u32_u32_1530_Update)
        // Target expression
        // (as target) iNsTr_42
        // iNsTr_42
        // implicit reference
        // 		iNsTr_43 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 609
        // Source expression
        // (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_1536_sample_start_] 
        $T[EQ_u32_u1_1536_sample_completed_] 
        $T[EQ_u32_u1_1536_update_start_] 
        $T[EQ_u32_u1_1536_update_completed_] 
        // iNsTr_42
        $T[R_iNsTr_42_1533_sample_start_] 
        $T[R_iNsTr_42_1533_sample_completed_] 
        $T[R_iNsTr_42_1533_update_start_] 
        $T[R_iNsTr_42_1533_update_completed_] 
        // implicit reference
        R_iNsTr_42_1533_sample_start_ <-& (AND_u32_u32_1530_update_completed_)
        R_iNsTr_42_1533_sample_completed_ <-& (R_iNsTr_42_1533_sample_start_)
        R_iNsTr_42_1533_update_start_ <-& (R_iNsTr_42_1533_sample_completed_)
        R_iNsTr_42_1533_update_completed_ <-& (R_iNsTr_42_1533_update_start_)
        EQ_u32_u1_1536_sample_start_ <-& (R_iNsTr_42_1533_update_completed_)
        ;;[EQ_u32_u1_1536_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1536_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1536_sample_start_ &-> (EQ_u32_u1_1536_Sample)
        EQ_u32_u1_1536_sample_completed_ <-& (EQ_u32_u1_1536_Sample)
        EQ_u32_u1_1536_sample_completed_ &-> ($null)
        EQ_u32_u1_1536_update_start_ &-> (EQ_u32_u1_1536_Update)
        EQ_u32_u1_1536_update_completed_ <-& (EQ_u32_u1_1536_Update)
        // Target expression
        // (as target) iNsTr_43
        // iNsTr_43
        // implicit reference
        // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 611
        // Source expression
        // (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_1544_sample_start_] 
        $T[NEQ_i32_u1_1544_sample_completed_] 
        $T[NEQ_i32_u1_1544_update_start_] 
        $T[NEQ_i32_u1_1544_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_41 )
        $T[type_cast_1540_sample_start_] 
        $T[type_cast_1540_sample_completed_] 
        $T[type_cast_1540_update_start_] 
        $T[type_cast_1540_update_completed_] 
        // iNsTr_41
        $T[R_iNsTr_41_1539_sample_start_] 
        $T[R_iNsTr_41_1539_sample_completed_] 
        $T[R_iNsTr_41_1539_update_start_] 
        $T[R_iNsTr_41_1539_update_completed_] 
        // implicit reference
        R_iNsTr_41_1539_sample_start_ <-& (SHL_u32_u32_1524_update_completed_)
        R_iNsTr_41_1539_sample_completed_ <-& (R_iNsTr_41_1539_sample_start_)
        R_iNsTr_41_1539_update_start_ <-& (R_iNsTr_41_1539_sample_completed_)
        R_iNsTr_41_1539_update_completed_ <-& (R_iNsTr_41_1539_update_start_)
        type_cast_1540_sample_start_ <-& (R_iNsTr_41_1539_update_completed_)
        ;;[type_cast_1540_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1540_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1540_sample_start_ &-> (type_cast_1540_Sample)
        type_cast_1540_sample_completed_ <-& (type_cast_1540_Sample)
        type_cast_1540_sample_completed_ &-> ($null)
        type_cast_1540_update_start_ &-> (type_cast_1540_Update)
        type_cast_1540_update_completed_ <-& (type_cast_1540_Update)
        // flow-through
        type_cast_1540_update_start_ <-& (type_cast_1540_sample_completed_)
        NEQ_i32_u1_1544_sample_start_ <-& (type_cast_1540_update_completed_)
        ;;[NEQ_i32_u1_1544_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_1544_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_1544_sample_start_ &-> (NEQ_i32_u1_1544_Sample)
        NEQ_i32_u1_1544_sample_completed_ <-& (NEQ_i32_u1_1544_Sample)
        NEQ_i32_u1_1544_sample_completed_ &-> ($null)
        NEQ_i32_u1_1544_update_start_ &-> (NEQ_i32_u1_1544_Update)
        NEQ_i32_u1_1544_update_completed_ <-& (NEQ_i32_u1_1544_Update)
        // Target expression
        // (as target) iNsTr_44
        // iNsTr_44
        // implicit reference
        // 		orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
        //  file prog.aa, line 612
        // Source expression
        // (iNsTr_43 & iNsTr_44)
        $T[AND_u1_u1_1549_sample_start_] 
        $T[AND_u1_u1_1549_sample_completed_] 
        $T[AND_u1_u1_1549_update_start_] 
        $T[AND_u1_u1_1549_update_completed_] 
        // iNsTr_43
        $T[R_iNsTr_43_1547_sample_start_] 
        $T[R_iNsTr_43_1547_sample_completed_] 
        $T[R_iNsTr_43_1547_update_start_] 
        $T[R_iNsTr_43_1547_update_completed_] 
        // implicit reference
        R_iNsTr_43_1547_sample_start_ <-& (EQ_u32_u1_1536_update_completed_)
        R_iNsTr_43_1547_sample_completed_ <-& (R_iNsTr_43_1547_sample_start_)
        R_iNsTr_43_1547_update_start_ <-& (R_iNsTr_43_1547_sample_completed_)
        R_iNsTr_43_1547_update_completed_ <-& (R_iNsTr_43_1547_update_start_)
        // iNsTr_44
        $T[R_iNsTr_44_1548_sample_start_] 
        $T[R_iNsTr_44_1548_sample_completed_] 
        $T[R_iNsTr_44_1548_update_start_] 
        $T[R_iNsTr_44_1548_update_completed_] 
        // implicit reference
        R_iNsTr_44_1548_sample_start_ <-& (NEQ_i32_u1_1544_update_completed_)
        R_iNsTr_44_1548_sample_completed_ <-& (R_iNsTr_44_1548_sample_start_)
        R_iNsTr_44_1548_update_start_ <-& (R_iNsTr_44_1548_sample_completed_)
        R_iNsTr_44_1548_update_completed_ <-& (R_iNsTr_44_1548_update_start_)
        AND_u1_u1_1549_sample_start_ <-& (R_iNsTr_43_1547_update_completed_)
        AND_u1_u1_1549_sample_start_ <-& (R_iNsTr_44_1548_update_completed_)
        ;;[AND_u1_u1_1549_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_1549_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_1549_sample_start_ &-> (AND_u1_u1_1549_Sample)
        AND_u1_u1_1549_sample_completed_ <-& (AND_u1_u1_1549_Sample)
        AND_u1_u1_1549_sample_completed_ &-> ($null)
        AND_u1_u1_1549_update_start_ &-> (AND_u1_u1_1549_Update)
        AND_u1_u1_1549_update_completed_ <-& (AND_u1_u1_1549_Update)
        // Target expression
        // (as target) orx_xcondx_xi
        // orx_xcondx_xi
        // implicit reference
        // 		indvarx_xnextx_xi := (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 613
        // Source expression
        // (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_1555_sample_start_] 
        $T[ADD_u32_u32_1555_sample_completed_] 
        $T[ADD_u32_u32_1555_update_start_] 
        $T[ADD_u32_u32_1555_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_1552_sample_start_] 
        $T[R_iNsTr_40_1552_sample_completed_] 
        $T[R_iNsTr_40_1552_update_start_] 
        $T[R_iNsTr_40_1552_update_completed_] 
        // implicit reference
        R_iNsTr_40_1552_sample_start_ <-& ($entry)
        R_iNsTr_40_1552_sample_completed_ <-& (R_iNsTr_40_1552_sample_start_)
        R_iNsTr_40_1552_update_start_ <-& (R_iNsTr_40_1552_sample_completed_)
        R_iNsTr_40_1552_update_completed_ <-& (R_iNsTr_40_1552_update_start_)
        ADD_u32_u32_1555_sample_start_ <-& (R_iNsTr_40_1552_update_completed_)
        ;;[ADD_u32_u32_1555_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1555_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1555_sample_start_ &-> (ADD_u32_u32_1555_Sample)
        ADD_u32_u32_1555_sample_completed_ <-& (ADD_u32_u32_1555_Sample)
        ADD_u32_u32_1555_sample_completed_ &-> ($null)
        ADD_u32_u32_1555_update_start_ &-> (ADD_u32_u32_1555_Update)
        ADD_u32_u32_1555_update_completed_ <-& (ADD_u32_u32_1555_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi
        // indvarx_xnextx_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1525_to_assign_stmt_1556__entry__ |-> (assign_stmt_1525_to_assign_stmt_1556)
      assign_stmt_1525_to_assign_stmt_1556__exit__ <-| (assign_stmt_1525_to_assign_stmt_1556)
      // if-statement  
      //  file prog.aa, line 614
      ;;[if_stmt_1557_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1557__entry__ |-> (if_stmt_1557_dead_link)
      if_stmt_1557__exit__ <-| (if_stmt_1557_dead_link)
      ;;[if_stmt_1557_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1557__entry__ |-> (if_stmt_1557_eval_test)
      $P [R_orx_xcondx_xi_1558_place]
      R_orx_xcondx_xi_1558_place <-| (if_stmt_1557_eval_test)
      ;;[if_stmt_1557_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1557_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xi_1558_place |-> (if_stmt_1557_if_link if_stmt_1557_else_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xi <-| (if_stmt_1557_if_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi <-| (if_stmt_1557_else_link)
      ::[assign_stmt_1578_to_assign_stmt_1594] 
      {
        // 		xx_xnot := (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
        //  file prog.aa, line 620
        // Source expression
        // (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
        $T[OR_u32_u32_1577_sample_start_] 
        $T[OR_u32_u32_1577_sample_completed_] 
        $T[OR_u32_u32_1577_update_start_] 
        $T[OR_u32_u32_1577_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1574_sample_start_] 
        $T[R_iNsTr_6_1574_sample_completed_] 
        $T[R_iNsTr_6_1574_update_start_] 
        $T[R_iNsTr_6_1574_update_completed_] 
        // implicit reference
        R_iNsTr_6_1574_sample_start_ <-& ($entry)
        R_iNsTr_6_1574_sample_completed_ <-& (R_iNsTr_6_1574_sample_start_)
        R_iNsTr_6_1574_update_start_ <-& (R_iNsTr_6_1574_sample_completed_)
        R_iNsTr_6_1574_update_completed_ <-& (R_iNsTr_6_1574_update_start_)
        OR_u32_u32_1577_sample_start_ <-& (R_iNsTr_6_1574_update_completed_)
        ;;[OR_u32_u32_1577_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1577_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1577_sample_start_ &-> (OR_u32_u32_1577_Sample)
        OR_u32_u32_1577_sample_completed_ <-& (OR_u32_u32_1577_Sample)
        OR_u32_u32_1577_sample_completed_ &-> ($null)
        OR_u32_u32_1577_update_start_ &-> (OR_u32_u32_1577_Update)
        OR_u32_u32_1577_update_completed_ <-& (OR_u32_u32_1577_Update)
        // Target expression
        // (as target) xx_xnot
        // xx_xnot
        // implicit reference
        // 		tmp21x_xi := (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 621
        // Source expression
        // (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[XOR_u32_u32_1583_sample_start_] 
        $T[XOR_u32_u32_1583_sample_completed_] 
        $T[XOR_u32_u32_1583_update_start_] 
        $T[XOR_u32_u32_1583_update_completed_] 
        // xx_xnot
        $T[R_xx_xnot_1580_sample_start_] 
        $T[R_xx_xnot_1580_sample_completed_] 
        $T[R_xx_xnot_1580_update_start_] 
        $T[R_xx_xnot_1580_update_completed_] 
        // implicit reference
        R_xx_xnot_1580_sample_start_ <-& (OR_u32_u32_1577_update_completed_)
        R_xx_xnot_1580_sample_completed_ <-& (R_xx_xnot_1580_sample_start_)
        R_xx_xnot_1580_update_start_ <-& (R_xx_xnot_1580_sample_completed_)
        R_xx_xnot_1580_update_completed_ <-& (R_xx_xnot_1580_update_start_)
        XOR_u32_u32_1583_sample_start_ <-& (R_xx_xnot_1580_update_completed_)
        ;;[XOR_u32_u32_1583_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_1583_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_1583_sample_start_ &-> (XOR_u32_u32_1583_Sample)
        XOR_u32_u32_1583_sample_completed_ <-& (XOR_u32_u32_1583_Sample)
        XOR_u32_u32_1583_sample_completed_ &-> ($null)
        XOR_u32_u32_1583_update_start_ &-> (XOR_u32_u32_1583_Update)
        XOR_u32_u32_1583_update_completed_ <-& (XOR_u32_u32_1583_Update)
        // Target expression
        // (as target) tmp21x_xi
        // tmp21x_xi
        // implicit reference
        // 		tmp25x_xi := (tmp21x_xi + iNsTr_5)
        //  file prog.aa, line 622
        // Source expression
        // (tmp21x_xi + iNsTr_5)
        $T[ADD_u32_u32_1588_sample_start_] 
        $T[ADD_u32_u32_1588_sample_completed_] 
        $T[ADD_u32_u32_1588_update_start_] 
        $T[ADD_u32_u32_1588_update_completed_] 
        // tmp21x_xi
        $T[R_tmp21x_xi_1586_sample_start_] 
        $T[R_tmp21x_xi_1586_sample_completed_] 
        $T[R_tmp21x_xi_1586_update_start_] 
        $T[R_tmp21x_xi_1586_update_completed_] 
        // implicit reference
        R_tmp21x_xi_1586_sample_start_ <-& (XOR_u32_u32_1583_update_completed_)
        R_tmp21x_xi_1586_sample_completed_ <-& (R_tmp21x_xi_1586_sample_start_)
        R_tmp21x_xi_1586_update_start_ <-& (R_tmp21x_xi_1586_sample_completed_)
        R_tmp21x_xi_1586_update_completed_ <-& (R_tmp21x_xi_1586_update_start_)
        // iNsTr_5
        $T[R_iNsTr_5_1587_sample_start_] 
        $T[R_iNsTr_5_1587_sample_completed_] 
        $T[R_iNsTr_5_1587_update_start_] 
        $T[R_iNsTr_5_1587_update_completed_] 
        // implicit reference
        R_iNsTr_5_1587_sample_start_ <-& ($entry)
        R_iNsTr_5_1587_sample_completed_ <-& (R_iNsTr_5_1587_sample_start_)
        R_iNsTr_5_1587_update_start_ <-& (R_iNsTr_5_1587_sample_completed_)
        R_iNsTr_5_1587_update_completed_ <-& (R_iNsTr_5_1587_update_start_)
        ADD_u32_u32_1588_sample_start_ <-& (R_tmp21x_xi_1586_update_completed_)
        ADD_u32_u32_1588_sample_start_ <-& (R_iNsTr_5_1587_update_completed_)
        ;;[ADD_u32_u32_1588_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1588_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1588_sample_start_ &-> (ADD_u32_u32_1588_Sample)
        ADD_u32_u32_1588_sample_completed_ <-& (ADD_u32_u32_1588_Sample)
        ADD_u32_u32_1588_sample_completed_ &-> ($null)
        ADD_u32_u32_1588_update_start_ &-> (ADD_u32_u32_1588_Update)
        ADD_u32_u32_1588_update_completed_ <-& (ADD_u32_u32_1588_Update)
        // Target expression
        // (as target) tmp25x_xi
        // tmp25x_xi
        // implicit reference
        // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
        //  file prog.aa, line 623
        // Source expression
        // (tmp25x_xi - xx_xlcssa)
        $T[SUB_u32_u32_1593_sample_start_] 
        $T[SUB_u32_u32_1593_sample_completed_] 
        $T[SUB_u32_u32_1593_update_start_] 
        $T[SUB_u32_u32_1593_update_completed_] 
        // tmp25x_xi
        $T[R_tmp25x_xi_1591_sample_start_] 
        $T[R_tmp25x_xi_1591_sample_completed_] 
        $T[R_tmp25x_xi_1591_update_start_] 
        $T[R_tmp25x_xi_1591_update_completed_] 
        // implicit reference
        R_tmp25x_xi_1591_sample_start_ <-& (ADD_u32_u32_1588_update_completed_)
        R_tmp25x_xi_1591_sample_completed_ <-& (R_tmp25x_xi_1591_sample_start_)
        R_tmp25x_xi_1591_update_start_ <-& (R_tmp25x_xi_1591_sample_completed_)
        R_tmp25x_xi_1591_update_completed_ <-& (R_tmp25x_xi_1591_update_start_)
        // xx_xlcssa
        $T[R_xx_xlcssa_1592_sample_start_] 
        $T[R_xx_xlcssa_1592_sample_completed_] 
        $T[R_xx_xlcssa_1592_update_start_] 
        $T[R_xx_xlcssa_1592_update_completed_] 
        // implicit reference
        R_xx_xlcssa_1592_sample_start_ <-& ($entry)
        R_xx_xlcssa_1592_sample_completed_ <-& (R_xx_xlcssa_1592_sample_start_)
        R_xx_xlcssa_1592_update_start_ <-& (R_xx_xlcssa_1592_sample_completed_)
        R_xx_xlcssa_1592_update_completed_ <-& (R_xx_xlcssa_1592_update_start_)
        SUB_u32_u32_1593_sample_start_ <-& (R_tmp25x_xi_1591_update_completed_)
        SUB_u32_u32_1593_sample_start_ <-& (R_xx_xlcssa_1592_update_completed_)
        ;;[SUB_u32_u32_1593_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1593_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1593_sample_start_ &-> (SUB_u32_u32_1593_Sample)
        SUB_u32_u32_1593_sample_completed_ <-& (SUB_u32_u32_1593_Sample)
        SUB_u32_u32_1593_sample_completed_ &-> ($null)
        SUB_u32_u32_1593_update_start_ &-> (SUB_u32_u32_1593_Update)
        SUB_u32_u32_1593_update_completed_ <-& (SUB_u32_u32_1593_Update)
        // Target expression
        // (as target) tmp26x_xi
        // tmp26x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1578_to_assign_stmt_1594__entry__ |-> (assign_stmt_1578_to_assign_stmt_1594)
      assign_stmt_1578_to_assign_stmt_1594__exit__ <-| (assign_stmt_1578_to_assign_stmt_1594)
      ::[assign_stmt_1615_to_assign_stmt_1641] 
      {
        // 		iNsTr_29 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 630
        // Source expression
        // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_1614_sample_start_] 
        $T[AND_u32_u32_1614_sample_completed_] 
        $T[AND_u32_u32_1614_update_start_] 
        $T[AND_u32_u32_1614_update_completed_] 
        // tempx_x0x_xlcssax_xi
        $T[R_tempx_x0x_xlcssax_xi_1611_sample_start_] 
        $T[R_tempx_x0x_xlcssax_xi_1611_sample_completed_] 
        $T[R_tempx_x0x_xlcssax_xi_1611_update_start_] 
        $T[R_tempx_x0x_xlcssax_xi_1611_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssax_xi_1611_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssax_xi_1611_sample_completed_ <-& (R_tempx_x0x_xlcssax_xi_1611_sample_start_)
        R_tempx_x0x_xlcssax_xi_1611_update_start_ <-& (R_tempx_x0x_xlcssax_xi_1611_sample_completed_)
        R_tempx_x0x_xlcssax_xi_1611_update_completed_ <-& (R_tempx_x0x_xlcssax_xi_1611_update_start_)
        AND_u32_u32_1614_sample_start_ <-& (R_tempx_x0x_xlcssax_xi_1611_update_completed_)
        ;;[AND_u32_u32_1614_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1614_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1614_sample_start_ &-> (AND_u32_u32_1614_Sample)
        AND_u32_u32_1614_sample_completed_ <-& (AND_u32_u32_1614_Sample)
        AND_u32_u32_1614_sample_completed_ &-> ($null)
        AND_u32_u32_1614_update_start_ &-> (AND_u32_u32_1614_Update)
        AND_u32_u32_1614_update_completed_ <-& (AND_u32_u32_1614_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // 		iNsTr_30 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 631
        // Source expression
        // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_1620_sample_start_] 
        $T[SHL_u32_u32_1620_sample_completed_] 
        $T[SHL_u32_u32_1620_update_start_] 
        $T[SHL_u32_u32_1620_update_completed_] 
        // expx_x0x_xlcssax_xi
        $T[R_expx_x0x_xlcssax_xi_1617_sample_start_] 
        $T[R_expx_x0x_xlcssax_xi_1617_sample_completed_] 
        $T[R_expx_x0x_xlcssax_xi_1617_update_start_] 
        $T[R_expx_x0x_xlcssax_xi_1617_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssax_xi_1617_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssax_xi_1617_sample_completed_ <-& (R_expx_x0x_xlcssax_xi_1617_sample_start_)
        R_expx_x0x_xlcssax_xi_1617_update_start_ <-& (R_expx_x0x_xlcssax_xi_1617_sample_completed_)
        R_expx_x0x_xlcssax_xi_1617_update_completed_ <-& (R_expx_x0x_xlcssax_xi_1617_update_start_)
        SHL_u32_u32_1620_sample_start_ <-& (R_expx_x0x_xlcssax_xi_1617_update_completed_)
        ;;[SHL_u32_u32_1620_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1620_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1620_sample_start_ &-> (SHL_u32_u32_1620_Sample)
        SHL_u32_u32_1620_sample_completed_ <-& (SHL_u32_u32_1620_Sample)
        SHL_u32_u32_1620_sample_completed_ &-> ($null)
        SHL_u32_u32_1620_update_start_ &-> (SHL_u32_u32_1620_Update)
        SHL_u32_u32_1620_update_completed_ <-& (SHL_u32_u32_1620_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // 		iNsTr_31 := (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 632
        // Source expression
        // (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_1626_sample_start_] 
        $T[ADD_u32_u32_1626_sample_completed_] 
        $T[ADD_u32_u32_1626_update_start_] 
        $T[ADD_u32_u32_1626_update_completed_] 
        // iNsTr_30
        $T[R_iNsTr_30_1623_sample_start_] 
        $T[R_iNsTr_30_1623_sample_completed_] 
        $T[R_iNsTr_30_1623_update_start_] 
        $T[R_iNsTr_30_1623_update_completed_] 
        // implicit reference
        R_iNsTr_30_1623_sample_start_ <-& (SHL_u32_u32_1620_update_completed_)
        R_iNsTr_30_1623_sample_completed_ <-& (R_iNsTr_30_1623_sample_start_)
        R_iNsTr_30_1623_update_start_ <-& (R_iNsTr_30_1623_sample_completed_)
        R_iNsTr_30_1623_update_completed_ <-& (R_iNsTr_30_1623_update_start_)
        ADD_u32_u32_1626_sample_start_ <-& (R_iNsTr_30_1623_update_completed_)
        ;;[ADD_u32_u32_1626_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1626_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1626_sample_start_ &-> (ADD_u32_u32_1626_Sample)
        ADD_u32_u32_1626_sample_completed_ <-& (ADD_u32_u32_1626_Sample)
        ADD_u32_u32_1626_sample_completed_ &-> ($null)
        ADD_u32_u32_1626_update_start_ &-> (ADD_u32_u32_1626_Update)
        ADD_u32_u32_1626_update_completed_ <-& (ADD_u32_u32_1626_Update)
        // Target expression
        // (as target) iNsTr_31
        // iNsTr_31
        // implicit reference
        // 		iNsTr_32 := (iNsTr_31 | iNsTr_15)
        //  file prog.aa, line 633
        // Source expression
        // (iNsTr_31 | iNsTr_15)
        $T[OR_u32_u32_1631_sample_start_] 
        $T[OR_u32_u32_1631_sample_completed_] 
        $T[OR_u32_u32_1631_update_start_] 
        $T[OR_u32_u32_1631_update_completed_] 
        // iNsTr_31
        $T[R_iNsTr_31_1629_sample_start_] 
        $T[R_iNsTr_31_1629_sample_completed_] 
        $T[R_iNsTr_31_1629_update_start_] 
        $T[R_iNsTr_31_1629_update_completed_] 
        // implicit reference
        R_iNsTr_31_1629_sample_start_ <-& (ADD_u32_u32_1626_update_completed_)
        R_iNsTr_31_1629_sample_completed_ <-& (R_iNsTr_31_1629_sample_start_)
        R_iNsTr_31_1629_update_start_ <-& (R_iNsTr_31_1629_sample_completed_)
        R_iNsTr_31_1629_update_completed_ <-& (R_iNsTr_31_1629_update_start_)
        // iNsTr_15
        $T[R_iNsTr_15_1630_sample_start_] 
        $T[R_iNsTr_15_1630_sample_completed_] 
        $T[R_iNsTr_15_1630_update_start_] 
        $T[R_iNsTr_15_1630_update_completed_] 
        // implicit reference
        R_iNsTr_15_1630_sample_start_ <-& ($entry)
        R_iNsTr_15_1630_sample_completed_ <-& (R_iNsTr_15_1630_sample_start_)
        R_iNsTr_15_1630_update_start_ <-& (R_iNsTr_15_1630_sample_completed_)
        R_iNsTr_15_1630_update_completed_ <-& (R_iNsTr_15_1630_update_start_)
        OR_u32_u32_1631_sample_start_ <-& (R_iNsTr_31_1629_update_completed_)
        OR_u32_u32_1631_sample_start_ <-& (R_iNsTr_15_1630_update_completed_)
        ;;[OR_u32_u32_1631_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1631_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1631_sample_start_ &-> (OR_u32_u32_1631_Sample)
        OR_u32_u32_1631_sample_completed_ <-& (OR_u32_u32_1631_Sample)
        OR_u32_u32_1631_sample_completed_ &-> ($null)
        OR_u32_u32_1631_update_start_ &-> (OR_u32_u32_1631_Update)
        OR_u32_u32_1631_update_completed_ <-& (OR_u32_u32_1631_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		iNsTr_33 := (iNsTr_32 | iNsTr_29)
        //  file prog.aa, line 634
        // Source expression
        // (iNsTr_32 | iNsTr_29)
        $T[OR_u32_u32_1636_sample_start_] 
        $T[OR_u32_u32_1636_sample_completed_] 
        $T[OR_u32_u32_1636_update_start_] 
        $T[OR_u32_u32_1636_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_1634_sample_start_] 
        $T[R_iNsTr_32_1634_sample_completed_] 
        $T[R_iNsTr_32_1634_update_start_] 
        $T[R_iNsTr_32_1634_update_completed_] 
        // implicit reference
        R_iNsTr_32_1634_sample_start_ <-& (OR_u32_u32_1631_update_completed_)
        R_iNsTr_32_1634_sample_completed_ <-& (R_iNsTr_32_1634_sample_start_)
        R_iNsTr_32_1634_update_start_ <-& (R_iNsTr_32_1634_sample_completed_)
        R_iNsTr_32_1634_update_completed_ <-& (R_iNsTr_32_1634_update_start_)
        // iNsTr_29
        $T[R_iNsTr_29_1635_sample_start_] 
        $T[R_iNsTr_29_1635_sample_completed_] 
        $T[R_iNsTr_29_1635_update_start_] 
        $T[R_iNsTr_29_1635_update_completed_] 
        // implicit reference
        R_iNsTr_29_1635_sample_start_ <-& (AND_u32_u32_1614_update_completed_)
        R_iNsTr_29_1635_sample_completed_ <-& (R_iNsTr_29_1635_sample_start_)
        R_iNsTr_29_1635_update_start_ <-& (R_iNsTr_29_1635_sample_completed_)
        R_iNsTr_29_1635_update_completed_ <-& (R_iNsTr_29_1635_update_start_)
        OR_u32_u32_1636_sample_start_ <-& (R_iNsTr_32_1634_update_completed_)
        OR_u32_u32_1636_sample_start_ <-& (R_iNsTr_29_1635_update_completed_)
        ;;[OR_u32_u32_1636_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1636_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1636_sample_start_ &-> (OR_u32_u32_1636_Sample)
        OR_u32_u32_1636_sample_completed_ <-& (OR_u32_u32_1636_Sample)
        OR_u32_u32_1636_sample_completed_ &-> ($null)
        OR_u32_u32_1636_update_start_ &-> (OR_u32_u32_1636_Update)
        OR_u32_u32_1636_update_completed_ <-& (OR_u32_u32_1636_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_33 )
        //  file prog.aa, line 635
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_33 )
        $T[type_cast_1640_sample_start_] 
        $T[type_cast_1640_sample_completed_] 
        $T[type_cast_1640_update_start_] 
        $T[type_cast_1640_update_completed_] 
        // iNsTr_33
        $T[R_iNsTr_33_1639_sample_start_] 
        $T[R_iNsTr_33_1639_sample_completed_] 
        $T[R_iNsTr_33_1639_update_start_] 
        $T[R_iNsTr_33_1639_update_completed_] 
        // implicit reference
        R_iNsTr_33_1639_sample_start_ <-& (OR_u32_u32_1636_update_completed_)
        R_iNsTr_33_1639_sample_completed_ <-& (R_iNsTr_33_1639_sample_start_)
        R_iNsTr_33_1639_update_start_ <-& (R_iNsTr_33_1639_sample_completed_)
        R_iNsTr_33_1639_update_completed_ <-& (R_iNsTr_33_1639_update_start_)
        type_cast_1640_sample_start_ <-& (R_iNsTr_33_1639_update_completed_)
        ;;[type_cast_1640_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1640_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1640_sample_start_ &-> (type_cast_1640_Sample)
        type_cast_1640_sample_completed_ <-& (type_cast_1640_Sample)
        type_cast_1640_sample_completed_ &-> ($null)
        type_cast_1640_update_start_ &-> (type_cast_1640_Update)
        type_cast_1640_update_completed_ <-& (type_cast_1640_Update)
        // Target expression
        // (as target) tmp3x_xi
        // tmp3x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1615_to_assign_stmt_1641__entry__ |-> (assign_stmt_1615_to_assign_stmt_1641)
      assign_stmt_1615_to_assign_stmt_1641__exit__ <-| (assign_stmt_1615_to_assign_stmt_1641)
      // control-path for merge  
      //  file prog.aa, line 510
      ;;[merge_stmt_1239_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1239__entry__ |-> (merge_stmt_1239_dead_link)
      merge_stmt_1239__exit__ <-| (merge_stmt_1239_dead_link)
      //---------------------   merge statement  file prog.aa, line 510  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_1239_PhiReqMerge] 
      merge_stmt_1239_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_1239_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1239_PhiReqMerge |-> (merge_stmt_1239_PhiAck)
      merge_stmt_1239__exit__  <-| (merge_stmt_1239_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 510  --------------------------
      // control-path for merge  
      //  file prog.aa, line 534
      ;;[merge_stmt_1326_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1326__entry__ |-> (merge_stmt_1326_dead_link)
      merge_stmt_1326__exit__ <-| (merge_stmt_1326_dead_link)
      //---------------------   merge statement  file prog.aa, line 534  --------------------------
      ||[bb_1_bbx_xnph7x_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bbx_xnph7x_xix_xix_xpreheader |-> (bb_1_bbx_xnph7x_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_1326_PhiReqMerge] 
      merge_stmt_1326_PhiReqMerge <-| ( bb_1_bbx_xnph7x_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_1326_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1326_PhiReqMerge |-> (merge_stmt_1326_PhiAck)
      merge_stmt_1326__exit__  <-| (merge_stmt_1326_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 534  --------------------------
      // control-path for merge  
      //  file prog.aa, line 538
      //---------------------   merge statement  file prog.aa, line 538  --------------------------
      ||[bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1329] 
        {
          ||[phi_stmt_1329_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_37 )
            ;;[type_cast_1332] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_10 )
            ;;[type_cast_1334] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1329_req] 
        }
        ;;[phi_stmt_1335] 
        {
          ||[phi_stmt_1335_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_36 )
            ;;[type_cast_1338] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1335_req] 
        }
      }
      bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi |-> (bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1329] 
        {
          ||[phi_stmt_1329_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_37 )
            ;;[type_cast_1332] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_10 )
            ;;[type_cast_1334] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1329_req] 
        }
        ;;[phi_stmt_1335] 
        {
          ||[phi_stmt_1335_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_36 )
            ;;[type_cast_1338] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1335_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi |-> (xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq)
      $P [merge_stmt_1328_PhiReqMerge] 
      merge_stmt_1328_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq  xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq )
      ||[merge_stmt_1328_PhiAck] 
      {
        $T [phi_stmt_1329_ack] 
        $T [phi_stmt_1335_ack] 
      }
      merge_stmt_1328_PhiReqMerge |-> (merge_stmt_1328_PhiAck)
      merge_stmt_1328__exit__  <-| (merge_stmt_1328_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 538  --------------------------
      // control-path for merge  
      //  file prog.aa, line 547
      ;;[merge_stmt_1360_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1360__entry__ |-> (merge_stmt_1360_dead_link)
      merge_stmt_1360__exit__ <-| (merge_stmt_1360_dead_link)
      //---------------------   merge statement  file prog.aa, line 547  --------------------------
      ||[bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader |-> (bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_1360_PhiReqMerge] 
      merge_stmt_1360_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_1360_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1360_PhiReqMerge |-> (merge_stmt_1360_PhiAck)
      merge_stmt_1360__exit__  <-| (merge_stmt_1360_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 547  --------------------------
      // control-path for merge  
      //  file prog.aa, line 551
      //---------------------   merge statement  file prog.aa, line 551  --------------------------
      ||[bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1363] 
        {
          ||[phi_stmt_1363_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_1366] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_1368] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1363_req] 
        }
        ;;[phi_stmt_1369] 
        {
          ||[phi_stmt_1369_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_47 )
            ;;[type_cast_1372] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1369_req] 
        }
      }
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq)
      ||[bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1363] 
        {
          ||[phi_stmt_1363_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_1366] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_1368] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1363_req] 
        }
        ;;[phi_stmt_1369] 
        {
          ||[phi_stmt_1369_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_47 )
            ;;[type_cast_1372] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1369_req] 
        }
      }
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq)
      $P [merge_stmt_1362_PhiReqMerge] 
      merge_stmt_1362_PhiReqMerge <-| ( bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq  bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq )
      ||[merge_stmt_1362_PhiAck] 
      {
        $T [phi_stmt_1363_ack] 
        $T [phi_stmt_1369_ack] 
      }
      merge_stmt_1362_PhiReqMerge |-> (merge_stmt_1362_PhiAck)
      merge_stmt_1362__exit__  <-| (merge_stmt_1362_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 551  --------------------------
      // control-path for merge  
      //  file prog.aa, line 561
      ;;[merge_stmt_1400_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1400__entry__ |-> (merge_stmt_1400_dead_link)
      merge_stmt_1400__exit__ <-| (merge_stmt_1400_dead_link)
      //---------------------   merge statement  file prog.aa, line 561  --------------------------
      ||[bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_1401] 
        {
          ||[phi_stmt_1401_sources] 
          {
            // sources for 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_47 )
            ;;[type_cast_1404] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1401_req] 
        }
        ;;[phi_stmt_1405] 
        {
          ||[phi_stmt_1405_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_1408] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1405_req] 
        }
      }
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit |-> (bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_1400_PhiReqMerge] 
      merge_stmt_1400_PhiReqMerge <-| ( bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_1400_PhiAck] 
      {
        $T [phi_stmt_1401_ack] 
        $T [phi_stmt_1405_ack] 
      }
      merge_stmt_1400_PhiReqMerge |-> (merge_stmt_1400_PhiAck)
      merge_stmt_1400__exit__  <-| (merge_stmt_1400_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 561  --------------------------
      // control-path for merge  
      //  file prog.aa, line 567
      //---------------------   merge statement  file prog.aa, line 567  --------------------------
      ||[bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1412] 
        {
          ||[phi_stmt_1412_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_1415] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_1417] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1412_req] 
        }
        ;;[phi_stmt_1418] 
        {
          ||[phi_stmt_1418_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_1424] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1418_req] 
        }
      }
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi |-> (bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1412] 
        {
          ||[phi_stmt_1412_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_1415] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_1417] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1412_req] 
        }
        ;;[phi_stmt_1418] 
        {
          ||[phi_stmt_1418_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_1424] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1418_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi |-> (xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq)
      $P [merge_stmt_1411_PhiReqMerge] 
      merge_stmt_1411_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq )
      ||[merge_stmt_1411_PhiAck] 
      {
        $T [phi_stmt_1412_ack] 
        $T [phi_stmt_1418_ack] 
      }
      merge_stmt_1411_PhiReqMerge |-> (merge_stmt_1411_PhiAck)
      merge_stmt_1411__exit__  <-| (merge_stmt_1411_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 567  --------------------------
      // control-path for merge  
      //  file prog.aa, line 577
      ;;[merge_stmt_1447_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1447__entry__ |-> (merge_stmt_1447_dead_link)
      merge_stmt_1447__exit__ <-| (merge_stmt_1447_dead_link)
      //---------------------   merge statement  file prog.aa, line 577  --------------------------
      ||[xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_1448] 
        {
          ||[phi_stmt_1448_sources] 
          {
            // sources for 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_36 )
            ;;[type_cast_1451] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1448_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit |-> (xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_1447_PhiReqMerge] 
      merge_stmt_1447_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_1447_PhiAck] 
      {
        $T [phi_stmt_1448_ack] 
      }
      merge_stmt_1447_PhiReqMerge |-> (merge_stmt_1447_PhiAck)
      merge_stmt_1447__exit__  <-| (merge_stmt_1447_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 577  --------------------------
      // control-path for merge  
      //  file prog.aa, line 582
      //---------------------   merge statement  file prog.aa, line 582  --------------------------
      ||[bb_1_xx_xloopexitx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1455] 
        {
          ||[phi_stmt_1455_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_1461] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1455_req] 
        }
      }
      bb_1_xx_xloopexitx_xix_xi |-> (bb_1_xx_xloopexitx_xix_xi_PhiReq)
      ||[xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_1455] 
        {
          ||[phi_stmt_1455_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_1461] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1455_req] 
        }
      }
      xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi |-> (xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq)
      $P [merge_stmt_1454_PhiReqMerge] 
      merge_stmt_1454_PhiReqMerge <-| ( bb_1_xx_xloopexitx_xix_xi_PhiReq  xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq )
      ||[merge_stmt_1454_PhiAck] 
      {
        $T [phi_stmt_1455_ack] 
      }
      merge_stmt_1454_PhiReqMerge |-> (merge_stmt_1454_PhiAck)
      merge_stmt_1454__exit__  <-| (merge_stmt_1454_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 582  --------------------------
      // control-path for merge  
      //  file prog.aa, line 587
      //---------------------   merge statement  file prog.aa, line 587  --------------------------
      ||[bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq] 
      {
        ;;[phi_stmt_1465] 
        {
          ||[phi_stmt_1465_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xi )
            ;;[type_cast_1468] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_10 )
            ;;[type_cast_1470] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1465_req] 
        }
      }
      bb_1_udiv32x_xexitx_xpreheaderx_xi |-> (bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq)
      ||[xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq] 
      {
        ;;[phi_stmt_1465] 
        {
          ||[phi_stmt_1465_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xi )
            ;;[type_cast_1468] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_10 )
            ;;[type_cast_1470] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1465_req] 
        }
      }
      xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi |-> (xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq)
      $P [merge_stmt_1464_PhiReqMerge] 
      merge_stmt_1464_PhiReqMerge <-| ( bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq  xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq )
      ||[merge_stmt_1464_PhiAck] 
      {
        $T [phi_stmt_1465_ack] 
      }
      merge_stmt_1464_PhiReqMerge |-> (merge_stmt_1464_PhiAck)
      merge_stmt_1464__exit__  <-| (merge_stmt_1464_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 587  --------------------------
      // control-path for merge  
      //  file prog.aa, line 598
      ;;[merge_stmt_1503_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1503__entry__ |-> (merge_stmt_1503_dead_link)
      merge_stmt_1503__exit__ <-| (merge_stmt_1503_dead_link)
      //---------------------   merge statement  file prog.aa, line 598  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader |-> (udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq)
      $P [merge_stmt_1503_PhiReqMerge] 
      merge_stmt_1503_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq )
      ||[merge_stmt_1503_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1503_PhiReqMerge |-> (merge_stmt_1503_PhiAck)
      merge_stmt_1503__exit__  <-| (merge_stmt_1503_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 598  --------------------------
      // control-path for merge  
      //  file prog.aa, line 602
      //---------------------   merge statement  file prog.aa, line 602  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_1506] 
        {
          ||[phi_stmt_1506_sources] 
          {
            // sources for 			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_1509] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1506_req] 
        }
        ;;[phi_stmt_1513] 
        {
          ||[phi_stmt_1513_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_41 )
            ;;[type_cast_1516] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1518] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1513_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq)
      ||[udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_1506] 
        {
          ||[phi_stmt_1506_sources] 
          {
            // sources for 			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_1509] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1506_req] 
        }
        ;;[phi_stmt_1513] 
        {
          ||[phi_stmt_1513_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_41 )
            ;;[type_cast_1516] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1518] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1513_req] 
        }
      }
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq)
      $P [merge_stmt_1505_PhiReqMerge] 
      merge_stmt_1505_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq  udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq )
      ||[merge_stmt_1505_PhiAck] 
      {
        $T [phi_stmt_1506_ack] 
        $T [phi_stmt_1513_ack] 
      }
      merge_stmt_1505_PhiReqMerge |-> (merge_stmt_1505_PhiAck)
      merge_stmt_1505__exit__  <-| (merge_stmt_1505_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 602  --------------------------
      // control-path for merge  
      //  file prog.aa, line 616
      ;;[merge_stmt_1563_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1563__entry__ |-> (merge_stmt_1563_dead_link)
      merge_stmt_1563__exit__ <-| (merge_stmt_1563_dead_link)
      //---------------------   merge statement  file prog.aa, line 616  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1564] 
        {
          ||[phi_stmt_1564_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_41 )
            ;;[type_cast_1567] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1564_req] 
        }
        ;;[phi_stmt_1568] 
        {
          ||[phi_stmt_1568_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_40 )
            ;;[type_cast_1571] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1568_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq)
      $P [merge_stmt_1563_PhiReqMerge] 
      merge_stmt_1563_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq )
      ||[merge_stmt_1563_PhiAck] 
      {
        $T [phi_stmt_1564_ack] 
        $T [phi_stmt_1568_ack] 
      }
      merge_stmt_1563_PhiReqMerge |-> (merge_stmt_1563_PhiAck)
      merge_stmt_1563__exit__  <-| (merge_stmt_1563_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 616  --------------------------
      // control-path for merge  
      //  file prog.aa, line 626
      //---------------------   merge statement  file prog.aa, line 626  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1597] 
        {
          ||[phi_stmt_1597_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_16 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_1600] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_1602] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1597_req] 
        }
        ;;[phi_stmt_1603] 
        {
          ||[phi_stmt_1603_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_1606] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1608] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1603_req] 
        }
      }
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1597] 
        {
          ||[phi_stmt_1597_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_16 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_1600] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_1602] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1597_req] 
        }
        ;;[phi_stmt_1603] 
        {
          ||[phi_stmt_1603_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_1606] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1608] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1603_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq)
      $P [merge_stmt_1596_PhiReqMerge] 
      merge_stmt_1596_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq )
      ||[merge_stmt_1596_PhiAck] 
      {
        $T [phi_stmt_1597_ack] 
        $T [phi_stmt_1603_ack] 
      }
      merge_stmt_1596_PhiReqMerge |-> (merge_stmt_1596_PhiAck)
      merge_stmt_1596__exit__  <-| (merge_stmt_1596_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 626  --------------------------
      // control-path for merge  
      //  file prog.aa, line 638
      //---------------------   merge statement  file prog.aa, line 638  --------------------------
      ||[bb_0_fdiv32x_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_fdiv32x_xexit |-> (bb_0_fdiv32x_xexit_PhiReq)
      $P [merge_stmt_1643_PhiReqMerge] 
      merge_stmt_1643_PhiReqMerge <-| ( bb_0_fdiv32x_xexit_PhiReq )
      ||[merge_stmt_1643_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1643_PhiReqMerge |-> (merge_stmt_1643_PhiAck)
      merge_stmt_1643__exit__  <-| (merge_stmt_1643_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 638  --------------------------
      // control-path for merge  
      //  file prog.aa, line 642
      //---------------------   merge statement  file prog.aa, line 642  --------------------------
      ||[fdiv32x_xexit_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_1646] 
        {
          ||[phi_stmt_1646_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_1649] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1646_req] 
        }
      }
      fdiv32x_xexit_UnifiedReturnBlock |-> (fdiv32x_xexit_UnifiedReturnBlock_PhiReq)
      ||[xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_1646] 
        {
          ||[phi_stmt_1646_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_1649] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1646_req] 
        }
      }
      xx_xcritedgex_xi_UnifiedReturnBlock |-> (xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq)
      $P [merge_stmt_1645_PhiReqMerge] 
      merge_stmt_1645_PhiReqMerge <-| ( fdiv32x_xexit_UnifiedReturnBlock_PhiReq  xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq )
      ||[merge_stmt_1645_PhiAck] 
      {
        $T [phi_stmt_1646_ack] 
      }
      merge_stmt_1645_PhiReqMerge |-> (merge_stmt_1645_PhiAck)
      merge_stmt_1645__exit__  <-| (merge_stmt_1645_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 642  --------------------------
      // control-path for merge  
      //  file prog.aa, line 646
      //---------------------   merge statement  file prog.aa, line 646  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1655_PhiReqMerge] 
      merge_stmt_1655_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1655_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1655_PhiReqMerge |-> (merge_stmt_1655_PhiAck)
      merge_stmt_1655__exit__  <-| (merge_stmt_1655_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 646  --------------------------
      assign_stmt_1218_to_assign_stmt_1232__entry__ <-| (branch_block_stmt_1212__entry__)
      if_stmt_1233__entry__ <-| (assign_stmt_1218_to_assign_stmt_1232__exit__)
      merge_stmt_1239__entry__ <-| (if_stmt_1233__exit__)
      assign_stmt_1245_to_assign_stmt_1315__entry__ <-| (merge_stmt_1239__exit__)
      switch_stmt_1316__entry__ <-| (assign_stmt_1245_to_assign_stmt_1315__exit__)
      merge_stmt_1326__entry__ <-| (switch_stmt_1316__exit__)
      bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi <-| (merge_stmt_1326__exit__)
      assign_stmt_1348_to_assign_stmt_1353__entry__ <-| (merge_stmt_1328__exit__)
      if_stmt_1354__entry__ <-| (assign_stmt_1348_to_assign_stmt_1353__exit__)
      merge_stmt_1360__entry__ <-| (if_stmt_1354__exit__)
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi <-| (merge_stmt_1360__exit__)
      assign_stmt_1382_to_assign_stmt_1393__entry__ <-| (merge_stmt_1362__exit__)
      if_stmt_1394__entry__ <-| (assign_stmt_1382_to_assign_stmt_1393__exit__)
      merge_stmt_1400__entry__ <-| (if_stmt_1394__exit__)
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi <-| (merge_stmt_1400__exit__)
      assign_stmt_1430_to_assign_stmt_1440__entry__ <-| (merge_stmt_1411__exit__)
      if_stmt_1441__entry__ <-| (assign_stmt_1430_to_assign_stmt_1440__exit__)
      merge_stmt_1447__entry__ <-| (if_stmt_1441__exit__)
      xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi <-| (merge_stmt_1447__exit__)
      xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi <-| (merge_stmt_1454__exit__)
      assign_stmt_1477_to_assign_stmt_1496__entry__ <-| (merge_stmt_1464__exit__)
      if_stmt_1497__entry__ <-| (assign_stmt_1477_to_assign_stmt_1496__exit__)
      merge_stmt_1503__entry__ <-| (if_stmt_1497__exit__)
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi <-| (merge_stmt_1503__exit__)
      assign_stmt_1525_to_assign_stmt_1556__entry__ <-| (merge_stmt_1505__exit__)
      if_stmt_1557__entry__ <-| (assign_stmt_1525_to_assign_stmt_1556__exit__)
      merge_stmt_1563__entry__ <-| (if_stmt_1557__exit__)
      assign_stmt_1578_to_assign_stmt_1594__entry__ <-| (merge_stmt_1563__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi <-| (assign_stmt_1578_to_assign_stmt_1594__exit__)
      assign_stmt_1615_to_assign_stmt_1641__entry__ <-| (merge_stmt_1596__exit__)
      xx_xcritedgex_xi_UnifiedReturnBlock <-| (assign_stmt_1615_to_assign_stmt_1641__exit__)
      fdiv32x_xexit_UnifiedReturnBlock <-| (merge_stmt_1643__exit__)
      return__ <-| (merge_stmt_1645__exit__)
      merge_stmt_1655__exit__ |-> (branch_block_stmt_1212__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 510
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 534
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 538
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 547
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 551
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 561
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 567
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 577
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 582
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 587
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 598
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 602
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 616
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 626
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 638
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 642
    // constant-object-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 646
    // constant-object-declarations for block %iq_err_calc%body
    //  file prog.aa, line 500
    // constant-object-declarations for block %iq_err_calc
    //  file prog.aa, line 495
    // constant-declarations for block %iq_err_calc%body
    //  file prog.aa, line 500
    // ($bitcast ($float<8,23>) _f3.465703e-01 )
    $constant $W[type_cast_1216_wire_constant] : $float<8,23> := _b00111110101100010111000110101010// 3.465703e-01
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_1230_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 508
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 510
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_1243_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_1249_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_1255_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_1261_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_1267_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_1273_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_1279_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_1285_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00000000000000001111111111111111  )
    $constant $W[type_cast_1291_wire_constant] : $int<32> := _b00000000000000001111111111111111// 65535
    // ($bitcast ($uint<32>) _b00000000000000010000000000000000  )
    $constant $W[type_cast_1297_wire_constant] : $int<32> := _b00000000000000010000000000000000// 65536
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_1308_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // constant-declarations  for switch  
    //  file prog.aa, line 525
    // _b00000000000000000000000000000000 
    $constant $W[expr_1318_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b00000000000000000000000000000001 
    $constant $W[expr_1321_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 534
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 538
    // constant-declarations for phi:  			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 539
    // constant-declarations for phi:  			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 540
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1341_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1346_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 545
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 547
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 551
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 552
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 553
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_1375_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1380_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1386_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 559
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 561
    // constant-declarations for phi:  			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 562
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 563
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 567
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 568
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 569
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_1422_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 575
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 577
    // constant-declarations for phi:  			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 578
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 582
    // constant-declarations for phi:  			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 583
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_1459_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 587
    // constant-declarations for phi:  			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 588
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_1475_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1481_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1489_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 596
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 598
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 602
    // constant-declarations for phi:  			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 603
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1512_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 604
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1523_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_1529_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1535_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1543_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1554_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 614
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 616
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 617
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 618
    // ($bitcast ($uint<32>) _b11111111111111111111111100000000  )
    $constant $W[type_cast_1576_wire_constant] : $int<32> := _b11111111111111111111111100000000// -256
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_1582_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 626
    // constant-declarations for phi:  			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_16 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 627
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 628
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_1613_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_1619_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_1625_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 638
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 642
    // constant-declarations for phi:  			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 643
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1652_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for block %iq_err_calc%body%
    //  file prog.aa, line 646
    // block %iq_err_calc%body
    //  file prog.aa, line 500
    // 		iNsTr_0 := (torque_ref * ($bitcast ($float<8,23>) _f3.465703e-01 ))
    //  file prog.aa, line 503
    // iNsTr_0
    $W[iNsTr_0_1218] : $float<8,23>
    // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0 )
    //  file prog.aa, line 504
    // tmp10x_xi
    $W[tmp10x_xi_1222] : $int<32>
    // 		tmp6x_xi := ($bitcast ($uint<32>) flux_rotor )
    //  file prog.aa, line 505
    // tmp6x_xi
    $W[tmp6x_xi_1226] : $int<32>
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 507
    // iNsTr_1
    $W[iNsTr_1_1232] : $int<1>
    // if statement  
    //  file prog.aa, line 508
    // 		iNsTr_4 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 512
    // iNsTr_4
    $W[iNsTr_4_1245] : $int<32>
    // 		iNsTr_5 := (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 513
    // iNsTr_5
    $W[iNsTr_5_1251] : $int<32>
    // 		iNsTr_6 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 514
    // iNsTr_6
    $W[iNsTr_6_1257] : $int<32>
    // 		iNsTr_7 := (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 515
    // iNsTr_7
    $W[iNsTr_7_1263] : $int<32>
    // 		iNsTr_8 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 516
    // iNsTr_8
    $W[iNsTr_8_1269] : $int<32>
    // 		iNsTr_9 := (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 517
    // iNsTr_9
    $W[iNsTr_9_1275] : $int<32>
    // 		iNsTr_10 := (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 518
    // iNsTr_10
    $W[iNsTr_10_1281] : $int<32>
    // 		iNsTr_11 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 519
    // iNsTr_11
    $W[iNsTr_11_1287] : $int<32>
    // 		iNsTr_12 := (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 520
    // iNsTr_12
    $W[iNsTr_12_1293] : $int<32>
    // 		iNsTr_13 := (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 521
    // iNsTr_13
    $W[iNsTr_13_1299] : $int<32>
    // 		iNsTr_14 := (tmp6x_xi ^ tmp10x_xi)
    //  file prog.aa, line 522
    // iNsTr_14
    $W[iNsTr_14_1304] : $int<32>
    // 		iNsTr_15 := (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 523
    // iNsTr_15
    $W[iNsTr_15_1310] : $int<32>
    // 		iNsTr_16 := (iNsTr_5 - iNsTr_7)
    //  file prog.aa, line 524
    // iNsTr_16
    $W[iNsTr_16_1315] : $int<32>
    // switch-statement  
    //  file prog.aa, line 525
    $W[expr_1318_wire_constant_cmp] : $int<1>
    $W[expr_1321_wire_constant_cmp] : $int<1>
    // merge-statement  
    //  file prog.aa, line 538
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 539
    // ($cast ($uint<32>) iNsTr_37 )
    $intermediate $W[type_cast_1332_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_10 )
    $intermediate $W[type_cast_1334_wire] : $int<32>
    // xx_x016x_xix_xi
    $W[xx_x016x_xix_xi_1329] : $int<32>
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 540
    // ($cast ($uint<32>) iNsTr_36 )
    $intermediate $W[type_cast_1338_wire] : $int<32>
    // quotientx_x05x_xix_xi
    $W[quotientx_x05x_xix_xi_1335] : $int<32>
    // 		iNsTr_25 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 542
    // iNsTr_25
    $W[iNsTr_25_1348] : $int<32>
    // 		iNsTr_26 := (iNsTr_25 > iNsTr_13)
    //  file prog.aa, line 544
    // iNsTr_26
    $W[iNsTr_26_1353] : $int<1>
    // if statement  
    //  file prog.aa, line 545
    // merge-statement  
    //  file prog.aa, line 551
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 552
    // ($cast ($uint<32>) iNsTr_46 )
    $intermediate $W[type_cast_1366_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_13 )
    $intermediate $W[type_cast_1368_wire] : $int<32>
    // shifted_divisorx_x03x_xix_xi
    $W[shifted_divisorx_x03x_xix_xi_1363] : $int<32>
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 553
    // ($cast ($uint<32>) iNsTr_47 )
    $intermediate $W[type_cast_1372_wire] : $int<32>
    // curr_quotientx_x02x_xix_xi
    $W[curr_quotientx_x02x_xix_xi_1369] : $int<32>
    // 		iNsTr_46 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 555
    // iNsTr_46
    $W[iNsTr_46_1382] : $int<32>
    // 		iNsTr_47 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 556
    // iNsTr_47
    $W[iNsTr_47_1388] : $int<32>
    // 		iNsTr_48 := (iNsTr_46 < iNsTr_25)
    //  file prog.aa, line 558
    // iNsTr_48
    $W[iNsTr_48_1393] : $int<1>
    // if statement  
    //  file prog.aa, line 559
    // merge-statement  
    //  file prog.aa, line 561
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 562
    // ($cast ($uint<32>) iNsTr_47 )
    $intermediate $W[type_cast_1404_wire] : $int<32>
    // xx_xlcssa3
    $W[xx_xlcssa3_1401] : $int<32>
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 563
    // ($cast ($uint<32>) iNsTr_46 )
    $intermediate $W[type_cast_1408_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_1405] : $int<32>
    // merge-statement  
    //  file prog.aa, line 567
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 568
    // ($cast ($uint<32>) iNsTr_13 )
    $intermediate $W[type_cast_1415_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa2 )
    $intermediate $W[type_cast_1417_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xix_xi
    $W[shifted_divisorx_x0x_xlcssax_xix_xi_1412] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 569
    // ($cast ($uint<32>) xx_xlcssa3 )
    $intermediate $W[type_cast_1424_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xix_xi
    $W[curr_quotientx_x0x_xlcssax_xix_xi_1418] : $int<32>
    // 		iNsTr_36 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 571
    // iNsTr_36
    $W[iNsTr_36_1430] : $int<32>
    // 		iNsTr_37 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 572
    // iNsTr_37
    $W[iNsTr_37_1435] : $int<32>
    // 		iNsTr_38 := (iNsTr_37 < iNsTr_13)
    //  file prog.aa, line 574
    // iNsTr_38
    $W[iNsTr_38_1440] : $int<1>
    // if statement  
    //  file prog.aa, line 575
    // merge-statement  
    //  file prog.aa, line 577
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 578
    // ($cast ($uint<32>) iNsTr_36 )
    $intermediate $W[type_cast_1451_wire] : $int<32>
    // xx_xlcssa4
    $W[xx_xlcssa4_1448] : $int<32>
    // merge-statement  
    //  file prog.aa, line 582
    // 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 583
    // ($cast ($uint<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_1461_wire] : $int<32>
    // xx_x0x_xix_xi
    $W[xx_x0x_xix_xi_1455] : $int<32>
    // merge-statement  
    //  file prog.aa, line 587
    // 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 588
    // ($cast ($uint<32>) xx_x0x_xix_xi )
    $intermediate $W[type_cast_1468_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_10 )
    $intermediate $W[type_cast_1470_wire] : $int<32>
    // tempx_x0x_xphx_xi
    $W[tempx_x0x_xphx_xi_1465] : $int<32>
    // 		iNsTr_21 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 590
    // iNsTr_21
    $W[iNsTr_21_1477] : $int<32>
    // 		iNsTr_22 := (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 592
    // iNsTr_22
    $W[iNsTr_22_1483] : $int<1>
    // 		iNsTr_23 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 594
    // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
    $intermediate $W[type_cast_1486_wire] : $int<32>
    // iNsTr_23
    $W[iNsTr_23_1491] : $int<1>
    // 		orx_xcond11x_xi := (iNsTr_22 & iNsTr_23)
    //  file prog.aa, line 595
    // orx_xcond11x_xi
    $W[orx_xcond11x_xi_1496] : $int<1>
    // if statement  
    //  file prog.aa, line 596
    // merge-statement  
    //  file prog.aa, line 602
    // 			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 603
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    $intermediate $W[type_cast_1509_wire] : $int<32>
    // iNsTr_40
    $W[iNsTr_40_1506] : $int<32>
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 604
    // ($cast ($uint<32>) iNsTr_41 )
    $intermediate $W[type_cast_1516_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    $intermediate $W[type_cast_1518_wire] : $int<32>
    // tempx_x012x_xi
    $W[tempx_x012x_xi_1513] : $int<32>
    // 		iNsTr_41 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 606
    // iNsTr_41
    $W[iNsTr_41_1525] : $int<32>
    // 		iNsTr_42 := (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 607
    // iNsTr_42
    $W[iNsTr_42_1531] : $int<32>
    // 		iNsTr_43 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 609
    // iNsTr_43
    $W[iNsTr_43_1537] : $int<1>
    // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 611
    // ($bitcast ($int<32>) iNsTr_41 )
    $intermediate $W[type_cast_1540_wire] : $int<32>
    // iNsTr_44
    $W[iNsTr_44_1545] : $int<1>
    // 		orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
    //  file prog.aa, line 612
    // orx_xcondx_xi
    $W[orx_xcondx_xi_1550] : $int<1>
    // 		indvarx_xnextx_xi := (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 613
    // indvarx_xnextx_xi
    $W[indvarx_xnextx_xi_1556] : $int<32>
    // if statement  
    //  file prog.aa, line 614
    // merge-statement  
    //  file prog.aa, line 616
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 617
    // ($cast ($uint<32>) iNsTr_41 )
    $intermediate $W[type_cast_1567_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_1564] : $int<32>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 618
    // ($cast ($uint<32>) iNsTr_40 )
    $intermediate $W[type_cast_1571_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_1568] : $int<32>
    // 		xx_xnot := (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
    //  file prog.aa, line 620
    // xx_xnot
    $W[xx_xnot_1578] : $int<32>
    // 		tmp21x_xi := (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 621
    // tmp21x_xi
    $W[tmp21x_xi_1584] : $int<32>
    // 		tmp25x_xi := (tmp21x_xi + iNsTr_5)
    //  file prog.aa, line 622
    // tmp25x_xi
    $W[tmp25x_xi_1589] : $int<32>
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 623
    // tmp26x_xi
    $W[tmp26x_xi_1594] : $int<32>
    // merge-statement  
    //  file prog.aa, line 626
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_16 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 627
    // ($cast ($uint<32>) tmp26x_xi )
    $intermediate $W[type_cast_1600_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_16 )
    $intermediate $W[type_cast_1602_wire] : $int<32>
    // expx_x0x_xlcssax_xi
    $W[expx_x0x_xlcssax_xi_1597] : $int<32>
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 628
    // ($cast ($uint<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_1606_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    $intermediate $W[type_cast_1608_wire] : $int<32>
    // tempx_x0x_xlcssax_xi
    $W[tempx_x0x_xlcssax_xi_1603] : $int<32>
    // 		iNsTr_29 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 630
    // iNsTr_29
    $W[iNsTr_29_1615] : $int<32>
    // 		iNsTr_30 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 631
    // iNsTr_30
    $W[iNsTr_30_1621] : $int<32>
    // 		iNsTr_31 := (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 632
    // iNsTr_31
    $W[iNsTr_31_1627] : $int<32>
    // 		iNsTr_32 := (iNsTr_31 | iNsTr_15)
    //  file prog.aa, line 633
    // iNsTr_32
    $W[iNsTr_32_1632] : $int<32>
    // 		iNsTr_33 := (iNsTr_32 | iNsTr_29)
    //  file prog.aa, line 634
    // iNsTr_33
    $W[iNsTr_33_1637] : $int<32>
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_33 )
    //  file prog.aa, line 635
    // tmp3x_xi
    $W[tmp3x_xi_1641] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 642
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 643
    // ($cast ($float<8,23>) tmp3x_xi )
    $intermediate $W[type_cast_1649_wire] : $float<8,23>
    // ret_val__
    // datapath-instances for block %iq_err_calc%body
    //  file prog.aa, line 500
    // 		iNsTr_0 := (torque_ref * ($bitcast ($float<8,23>) _f3.465703e-01 ))
    //  file prog.aa, line 503
    // (torque_ref * ($bitcast ($float<8,23>) _f3.465703e-01 ))
    *[MUL_f32_f32_1217_inst] (torque_ref type_cast_1216_wire_constant) (iNsTr_0_1218) 
    $delay MUL_f32_f32_1217_inst 24
    // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0 )
    //  file prog.aa, line 504
    // ($bitcast ($uint<32>) iNsTr_0 )
    # := [type_cast_1221_inst] (iNsTr_0_1218) (tmp10x_xi_1222) 
    $delay type_cast_1221_inst 1
    // 		tmp6x_xi := ($bitcast ($uint<32>) flux_rotor )
    //  file prog.aa, line 505
    // ($bitcast ($uint<32>) flux_rotor )
    # := [type_cast_1225_inst] (flux_rotor) (tmp6x_xi_1226) 
    $delay type_cast_1225_inst 1
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 507
    // (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_1231_inst] (iNsTr_0_1218 type_cast_1230_wire_constant) (iNsTr_1_1232) 
    $delay EQ_f32_u1_1231_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 508
    ==0? [if_stmt_1233_branch] (iNsTr_1_1232)
    // 		iNsTr_4 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 512
    // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_1244_inst] (tmp10x_xi_1222 type_cast_1243_wire_constant) (iNsTr_4_1245) 
    $delay LSHR_u32_u32_1244_inst 1
    // 		iNsTr_5 := (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 513
    // (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_1250_inst] (iNsTr_4_1245 type_cast_1249_wire_constant) (iNsTr_5_1251) 
    $delay AND_u32_u32_1250_inst 1
    // 		iNsTr_6 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 514
    // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_1256_inst] (tmp6x_xi_1226 type_cast_1255_wire_constant) (iNsTr_6_1257) 
    $delay LSHR_u32_u32_1256_inst 1
    // 		iNsTr_7 := (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 515
    // (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_1262_inst] (iNsTr_6_1257 type_cast_1261_wire_constant) (iNsTr_7_1263) 
    $delay AND_u32_u32_1262_inst 1
    // 		iNsTr_8 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 516
    // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_1268_inst] (tmp10x_xi_1222 type_cast_1267_wire_constant) (iNsTr_8_1269) 
    $delay SHL_u32_u32_1268_inst 1
    // 		iNsTr_9 := (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 517
    // (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_1274_inst] (iNsTr_8_1269 type_cast_1273_wire_constant) (iNsTr_9_1275) 
    $delay AND_u32_u32_1274_inst 1
    // 		iNsTr_10 := (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 518
    // (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_1280_inst] (iNsTr_9_1275 type_cast_1279_wire_constant) (iNsTr_10_1281) 
    $delay OR_u32_u32_1280_inst 1
    // 		iNsTr_11 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 519
    // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >>[LSHR_u32_u32_1286_inst] (tmp6x_xi_1226 type_cast_1285_wire_constant) (iNsTr_11_1287) 
    $delay LSHR_u32_u32_1286_inst 1
    // 		iNsTr_12 := (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 520
    // (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    &[AND_u32_u32_1292_inst] (iNsTr_11_1287 type_cast_1291_wire_constant) (iNsTr_12_1293) 
    $delay AND_u32_u32_1292_inst 1
    // 		iNsTr_13 := (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 521
    // (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    |[OR_u32_u32_1298_inst] (iNsTr_12_1293 type_cast_1297_wire_constant) (iNsTr_13_1299) 
    $delay OR_u32_u32_1298_inst 1
    // 		iNsTr_14 := (tmp6x_xi ^ tmp10x_xi)
    //  file prog.aa, line 522
    // (tmp6x_xi ^ tmp10x_xi)
    ^[XOR_u32_u32_1303_inst] (tmp6x_xi_1226 tmp10x_xi_1222) (iNsTr_14_1304) 
    $delay XOR_u32_u32_1303_inst 1
    // 		iNsTr_15 := (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 523
    // (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_1309_inst] (iNsTr_14_1304 type_cast_1308_wire_constant) (iNsTr_15_1310) 
    $delay AND_u32_u32_1309_inst 1
    // 		iNsTr_16 := (iNsTr_5 - iNsTr_7)
    //  file prog.aa, line 524
    // (iNsTr_5 - iNsTr_7)
    -[SUB_u32_u32_1314_inst] (iNsTr_5_1251 iNsTr_7_1263) (iNsTr_16_1315) 
    $delay SUB_u32_u32_1314_inst 1
    // datapath-instances  for switch  
    //  file prog.aa, line 525
    ==[switch_stmt_1316_select_expr_0] (iNsTr_13_1299 expr_1318_wire_constant) (expr_1318_wire_constant_cmp) 
    ==0? [switch_stmt_1316_branch_0] (expr_1318_wire_constant_cmp)
    ==[switch_stmt_1316_select_expr_1] (iNsTr_13_1299 expr_1321_wire_constant) (expr_1321_wire_constant_cmp) 
    ==0? [switch_stmt_1316_branch_1] (expr_1321_wire_constant_cmp)
    ==0? [switch_stmt_1316_branch_default] (expr_1318_wire_constant_cmp expr_1321_wire_constant_cmp)
    // data-path instances for merge  
    //  file prog.aa, line 538
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 539
    // ($cast ($uint<32>) iNsTr_37 )
    # := [type_cast_1332_inst] (iNsTr_37_1435) (type_cast_1332_wire) 
    $delay type_cast_1332_inst 1
    // ($cast ($uint<32>) iNsTr_10 )
    # := [type_cast_1334_inst] (iNsTr_10_1281) (type_cast_1334_wire) 
    $delay type_cast_1334_inst 1
    $phi [phi_stmt_1329] (type_cast_1332_wire type_cast_1334_wire) ( xx_x016x_xix_xi_1329 )
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 540
    // ($cast ($uint<32>) iNsTr_36 )
    # := [type_cast_1338_inst] (iNsTr_36_1430) (type_cast_1338_wire) 
    $delay type_cast_1338_inst 1
    $phi [phi_stmt_1335] (type_cast_1338_wire type_cast_1341_wire_constant) ( quotientx_x05x_xix_xi_1335 )
    // 		iNsTr_25 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 542
    // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_1347_inst] (xx_x016x_xix_xi_1329 type_cast_1346_wire_constant) (iNsTr_25_1348) 
    $delay LSHR_u32_u32_1347_inst 1
    // 		iNsTr_26 := (iNsTr_25 > iNsTr_13)
    //  file prog.aa, line 544
    // (iNsTr_25 > iNsTr_13)
    >[UGT_u32_u1_1352_inst] (iNsTr_25_1348 iNsTr_13_1299) (iNsTr_26_1353) 
    $delay UGT_u32_u1_1352_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 545
    ==0? [if_stmt_1354_branch] (iNsTr_26_1353)
    // data-path instances for merge  
    //  file prog.aa, line 551
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 552
    // ($cast ($uint<32>) iNsTr_46 )
    # := [type_cast_1366_inst] (iNsTr_46_1382) (type_cast_1366_wire) 
    $delay type_cast_1366_inst 1
    // ($cast ($uint<32>) iNsTr_13 )
    # := [type_cast_1368_inst] (iNsTr_13_1299) (type_cast_1368_wire) 
    $delay type_cast_1368_inst 1
    $phi [phi_stmt_1363] (type_cast_1366_wire type_cast_1368_wire) ( shifted_divisorx_x03x_xix_xi_1363 )
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 553
    // ($cast ($uint<32>) iNsTr_47 )
    # := [type_cast_1372_inst] (iNsTr_47_1388) (type_cast_1372_wire) 
    $delay type_cast_1372_inst 1
    $phi [phi_stmt_1369] (type_cast_1372_wire type_cast_1375_wire_constant) ( curr_quotientx_x02x_xix_xi_1369 )
    // 		iNsTr_46 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 555
    // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_1381_inst] (shifted_divisorx_x03x_xix_xi_1363 type_cast_1380_wire_constant) (iNsTr_46_1382) 
    $delay SHL_u32_u32_1381_inst 1
    // 		iNsTr_47 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 556
    // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_1387_inst] (curr_quotientx_x02x_xix_xi_1369 type_cast_1386_wire_constant) (iNsTr_47_1388) 
    $delay SHL_u32_u32_1387_inst 1
    // 		iNsTr_48 := (iNsTr_46 < iNsTr_25)
    //  file prog.aa, line 558
    // (iNsTr_46 < iNsTr_25)
    <[ULT_u32_u1_1392_inst] (iNsTr_46_1382 iNsTr_25_1348) (iNsTr_48_1393) 
    $delay ULT_u32_u1_1392_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 559
    ==0? [if_stmt_1394_branch] (iNsTr_48_1393)
    // data-path instances for merge  
    //  file prog.aa, line 561
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 562
    // ($cast ($uint<32>) iNsTr_47 )
    # := [type_cast_1404_inst] (iNsTr_47_1388) (type_cast_1404_wire) 
    $delay type_cast_1404_inst 1
    $phi [phi_stmt_1401] (type_cast_1404_wire) ( xx_xlcssa3_1401 )
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 563
    // ($cast ($uint<32>) iNsTr_46 )
    # := [type_cast_1408_inst] (iNsTr_46_1382) (type_cast_1408_wire) 
    $delay type_cast_1408_inst 1
    $phi [phi_stmt_1405] (type_cast_1408_wire) ( xx_xlcssa2_1405 )
    // data-path instances for merge  
    //  file prog.aa, line 567
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 568
    // ($cast ($uint<32>) iNsTr_13 )
    # := [type_cast_1415_inst] (iNsTr_13_1299) (type_cast_1415_wire) 
    $delay type_cast_1415_inst 1
    // ($cast ($uint<32>) xx_xlcssa2 )
    # := [type_cast_1417_inst] (xx_xlcssa2_1405) (type_cast_1417_wire) 
    $delay type_cast_1417_inst 1
    $phi [phi_stmt_1412] (type_cast_1415_wire type_cast_1417_wire) ( shifted_divisorx_x0x_xlcssax_xix_xi_1412 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 569
    // ($cast ($uint<32>) xx_xlcssa3 )
    # := [type_cast_1424_inst] (xx_xlcssa3_1401) (type_cast_1424_wire) 
    $delay type_cast_1424_inst 1
    $phi [phi_stmt_1418] (type_cast_1422_wire_constant type_cast_1424_wire) ( curr_quotientx_x0x_xlcssax_xix_xi_1418 )
    // 		iNsTr_36 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 571
    // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    +[ADD_u32_u32_1429_inst] (curr_quotientx_x0x_xlcssax_xix_xi_1418 quotientx_x05x_xix_xi_1335) (iNsTr_36_1430) 
    $delay ADD_u32_u32_1429_inst 1
    // 		iNsTr_37 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 572
    // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    -[SUB_u32_u32_1434_inst] (xx_x016x_xix_xi_1329 shifted_divisorx_x0x_xlcssax_xix_xi_1412) (iNsTr_37_1435) 
    $delay SUB_u32_u32_1434_inst 1
    // 		iNsTr_38 := (iNsTr_37 < iNsTr_13)
    //  file prog.aa, line 574
    // (iNsTr_37 < iNsTr_13)
    <[ULT_u32_u1_1439_inst] (iNsTr_37_1435 iNsTr_13_1299) (iNsTr_38_1440) 
    $delay ULT_u32_u1_1439_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 575
    ==0? [if_stmt_1441_branch] (iNsTr_38_1440)
    // data-path instances for merge  
    //  file prog.aa, line 577
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 578
    // ($cast ($uint<32>) iNsTr_36 )
    # := [type_cast_1451_inst] (iNsTr_36_1430) (type_cast_1451_wire) 
    $delay type_cast_1451_inst 1
    $phi [phi_stmt_1448] (type_cast_1451_wire) ( xx_xlcssa4_1448 )
    // data-path instances for merge  
    //  file prog.aa, line 582
    // 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 583
    // ($cast ($uint<32>) xx_xlcssa4 )
    # := [type_cast_1461_inst] (xx_xlcssa4_1448) (type_cast_1461_wire) 
    $delay type_cast_1461_inst 1
    $phi [phi_stmt_1455] (type_cast_1459_wire_constant type_cast_1461_wire) ( xx_x0x_xix_xi_1455 )
    // data-path instances for merge  
    //  file prog.aa, line 587
    // 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 588
    // ($cast ($uint<32>) xx_x0x_xix_xi )
    # := [type_cast_1468_inst] (xx_x0x_xix_xi_1455) (type_cast_1468_wire) 
    $delay type_cast_1468_inst 1
    // ($cast ($uint<32>) iNsTr_10 )
    # := [type_cast_1470_inst] (iNsTr_10_1281) (type_cast_1470_wire) 
    $delay type_cast_1470_inst 1
    $phi [phi_stmt_1465] (type_cast_1468_wire type_cast_1470_wire) ( tempx_x0x_xphx_xi_1465 )
    // 		iNsTr_21 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 590
    // (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_1476_inst] (tempx_x0x_xphx_xi_1465 type_cast_1475_wire_constant) (iNsTr_21_1477) 
    $delay AND_u32_u32_1476_inst 1
    // 		iNsTr_22 := (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 592
    // (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_1482_inst] (iNsTr_21_1477 type_cast_1481_wire_constant) (iNsTr_22_1483) 
    $delay EQ_u32_u1_1482_inst 1
    // 		iNsTr_23 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 594
    // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
    $S:=$U [type_cast_1486_inst] (tempx_x0x_xphx_xi_1465) (type_cast_1486_wire)   $flowthrough
    $delay type_cast_1486_inst 0
    // (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_1490_inst] (type_cast_1486_wire type_cast_1489_wire_constant) (iNsTr_23_1491) 
    $delay NEQ_i32_u1_1490_inst 1
    // 		orx_xcond11x_xi := (iNsTr_22 & iNsTr_23)
    //  file prog.aa, line 595
    // (iNsTr_22 & iNsTr_23)
    &[AND_u1_u1_1495_inst] (iNsTr_22_1483 iNsTr_23_1491) (orx_xcond11x_xi_1496) 
    $delay AND_u1_u1_1495_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 596
    ==0? [if_stmt_1497_branch] (orx_xcond11x_xi_1496)
    // data-path instances for merge  
    //  file prog.aa, line 602
    // 			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 603
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    # := [type_cast_1509_inst] (indvarx_xnextx_xi_1556) (type_cast_1509_wire) 
    $delay type_cast_1509_inst 1
    $phi [phi_stmt_1506] (type_cast_1509_wire type_cast_1512_wire_constant) ( iNsTr_40_1506 )
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 604
    // ($cast ($uint<32>) iNsTr_41 )
    # := [type_cast_1516_inst] (iNsTr_41_1525) (type_cast_1516_wire) 
    $delay type_cast_1516_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    # := [type_cast_1518_inst] (tempx_x0x_xphx_xi_1465) (type_cast_1518_wire) 
    $delay type_cast_1518_inst 1
    $phi [phi_stmt_1513] (type_cast_1516_wire type_cast_1518_wire) ( tempx_x012x_xi_1513 )
    // 		iNsTr_41 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 606
    // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_1524_inst] (tempx_x012x_xi_1513 type_cast_1523_wire_constant) (iNsTr_41_1525) 
    $delay SHL_u32_u32_1524_inst 1
    // 		iNsTr_42 := (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 607
    // (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_1530_inst] (iNsTr_41_1525 type_cast_1529_wire_constant) (iNsTr_42_1531) 
    $delay AND_u32_u32_1530_inst 1
    // 		iNsTr_43 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 609
    // (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_1536_inst] (iNsTr_42_1531 type_cast_1535_wire_constant) (iNsTr_43_1537) 
    $delay EQ_u32_u1_1536_inst 1
    // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 611
    // ($bitcast ($int<32>) iNsTr_41 )
    $S:=$U [type_cast_1540_inst] (iNsTr_41_1525) (type_cast_1540_wire)   $flowthrough
    $delay type_cast_1540_inst 0
    // (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_1544_inst] (type_cast_1540_wire type_cast_1543_wire_constant) (iNsTr_44_1545) 
    $delay NEQ_i32_u1_1544_inst 1
    // 		orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
    //  file prog.aa, line 612
    // (iNsTr_43 & iNsTr_44)
    &[AND_u1_u1_1549_inst] (iNsTr_43_1537 iNsTr_44_1545) (orx_xcondx_xi_1550) 
    $delay AND_u1_u1_1549_inst 1
    // 		indvarx_xnextx_xi := (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 613
    // (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1555_inst] (iNsTr_40_1506 type_cast_1554_wire_constant) (indvarx_xnextx_xi_1556) 
    $delay ADD_u32_u32_1555_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 614
    ==0? [if_stmt_1557_branch] (orx_xcondx_xi_1550)
    // data-path instances for merge  
    //  file prog.aa, line 616
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 617
    // ($cast ($uint<32>) iNsTr_41 )
    # := [type_cast_1567_inst] (iNsTr_41_1525) (type_cast_1567_wire) 
    $delay type_cast_1567_inst 1
    $phi [phi_stmt_1564] (type_cast_1567_wire) ( xx_xlcssa1_1564 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 618
    // ($cast ($uint<32>) iNsTr_40 )
    # := [type_cast_1571_inst] (iNsTr_40_1506) (type_cast_1571_wire) 
    $delay type_cast_1571_inst 1
    $phi [phi_stmt_1568] (type_cast_1571_wire) ( xx_xlcssa_1568 )
    // 		xx_xnot := (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
    //  file prog.aa, line 620
    // (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
    |[OR_u32_u32_1577_inst] (iNsTr_6_1257 type_cast_1576_wire_constant) (xx_xnot_1578) 
    $delay OR_u32_u32_1577_inst 1
    // 		tmp21x_xi := (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 621
    // (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    ^[XOR_u32_u32_1583_inst] (xx_xnot_1578 type_cast_1582_wire_constant) (tmp21x_xi_1584) 
    $delay XOR_u32_u32_1583_inst 1
    // 		tmp25x_xi := (tmp21x_xi + iNsTr_5)
    //  file prog.aa, line 622
    // (tmp21x_xi + iNsTr_5)
    +[ADD_u32_u32_1588_inst] (tmp21x_xi_1584 iNsTr_5_1251) (tmp25x_xi_1589) 
    $delay ADD_u32_u32_1588_inst 1
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 623
    // (tmp25x_xi - xx_xlcssa)
    -[SUB_u32_u32_1593_inst] (tmp25x_xi_1589 xx_xlcssa_1568) (tmp26x_xi_1594) 
    $delay SUB_u32_u32_1593_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 626
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_16 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 627
    // ($cast ($uint<32>) tmp26x_xi )
    # := [type_cast_1600_inst] (tmp26x_xi_1594) (type_cast_1600_wire) 
    $delay type_cast_1600_inst 1
    // ($cast ($uint<32>) iNsTr_16 )
    # := [type_cast_1602_inst] (iNsTr_16_1315) (type_cast_1602_wire) 
    $delay type_cast_1602_inst 1
    $phi [phi_stmt_1597] (type_cast_1600_wire type_cast_1602_wire) ( expx_x0x_xlcssax_xi_1597 )
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 628
    // ($cast ($uint<32>) xx_xlcssa1 )
    # := [type_cast_1606_inst] (xx_xlcssa1_1564) (type_cast_1606_wire) 
    $delay type_cast_1606_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    # := [type_cast_1608_inst] (tempx_x0x_xphx_xi_1465) (type_cast_1608_wire) 
    $delay type_cast_1608_inst 1
    $phi [phi_stmt_1603] (type_cast_1606_wire type_cast_1608_wire) ( tempx_x0x_xlcssax_xi_1603 )
    // 		iNsTr_29 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 630
    // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_1614_inst] (tempx_x0x_xlcssax_xi_1603 type_cast_1613_wire_constant) (iNsTr_29_1615) 
    $delay AND_u32_u32_1614_inst 1
    // 		iNsTr_30 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 631
    // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_1620_inst] (expx_x0x_xlcssax_xi_1597 type_cast_1619_wire_constant) (iNsTr_30_1621) 
    $delay SHL_u32_u32_1620_inst 1
    // 		iNsTr_31 := (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 632
    // (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_1626_inst] (iNsTr_30_1621 type_cast_1625_wire_constant) (iNsTr_31_1627) 
    $delay ADD_u32_u32_1626_inst 1
    // 		iNsTr_32 := (iNsTr_31 | iNsTr_15)
    //  file prog.aa, line 633
    // (iNsTr_31 | iNsTr_15)
    |[OR_u32_u32_1631_inst] (iNsTr_31_1627 iNsTr_15_1310) (iNsTr_32_1632) 
    $delay OR_u32_u32_1631_inst 1
    // 		iNsTr_33 := (iNsTr_32 | iNsTr_29)
    //  file prog.aa, line 634
    // (iNsTr_32 | iNsTr_29)
    |[OR_u32_u32_1636_inst] (iNsTr_32_1632 iNsTr_29_1615) (iNsTr_33_1637) 
    $delay OR_u32_u32_1636_inst 1
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_33 )
    //  file prog.aa, line 635
    // ($bitcast ($float<8,23>) iNsTr_33 )
    # := [type_cast_1640_inst] (iNsTr_33_1637) (tmp3x_xi_1641) 
    $delay type_cast_1640_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 642
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 643
    // ($cast ($float<8,23>) tmp3x_xi )
    # := [type_cast_1649_inst] (tmp3x_xi_1641) (type_cast_1649_wire) 
    $delay type_cast_1649_inst 1
    $phi [phi_stmt_1646] (type_cast_1649_wire type_cast_1652_wire_constant) ( ret_val__ )
  }
  // end data-path
  // 		iNsTr_0 := (torque_ref * ($bitcast ($float<8,23>) _f3.465703e-01 ))
  //  file prog.aa, line 503
  // (torque_ref * ($bitcast ($float<8,23>) _f3.465703e-01 ))
  MUL_f32_f32_1217_inst <=> (branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/MUL_f32_f32_1217_Sample/rr branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/MUL_f32_f32_1217_Update/cr) (branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/MUL_f32_f32_1217_Sample/ra branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/MUL_f32_f32_1217_Update/ca)
  // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0 )
  //  file prog.aa, line 504
  // ($bitcast ($uint<32>) iNsTr_0 )
  type_cast_1221_inst <=> (branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/type_cast_1221_Sample/rr branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/type_cast_1221_Update/cr) (branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/type_cast_1221_Sample/ra branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/type_cast_1221_Update/ca)
  // 		tmp6x_xi := ($bitcast ($uint<32>) flux_rotor )
  //  file prog.aa, line 505
  // ($bitcast ($uint<32>) flux_rotor )
  type_cast_1225_inst <=> (branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/type_cast_1225_Sample/rr branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/type_cast_1225_Update/cr) (branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/type_cast_1225_Sample/ra branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/type_cast_1225_Update/ca)
  // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 507
  // (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_1231_inst <=> (branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/EQ_f32_u1_1231_Sample/rr branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/EQ_f32_u1_1231_Update/cr) (branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/EQ_f32_u1_1231_Sample/ra branch_block_stmt_1212/assign_stmt_1218_to_assign_stmt_1232/EQ_f32_u1_1231_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 508
  if_stmt_1233_branch <=> (branch_block_stmt_1212/if_stmt_1233_eval_test/branch_req) (branch_block_stmt_1212/if_stmt_1233_else_link/else_choice_transition branch_block_stmt_1212/if_stmt_1233_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 510
  // 		iNsTr_4 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 512
  // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_1244_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/LSHR_u32_u32_1244_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/LSHR_u32_u32_1244_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/LSHR_u32_u32_1244_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/LSHR_u32_u32_1244_Update/ca)
  // 		iNsTr_5 := (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 513
  // (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_1250_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1250_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1250_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1250_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1250_Update/ca)
  // 		iNsTr_6 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 514
  // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_1256_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/LSHR_u32_u32_1256_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/LSHR_u32_u32_1256_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/LSHR_u32_u32_1256_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/LSHR_u32_u32_1256_Update/ca)
  // 		iNsTr_7 := (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 515
  // (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_1262_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1262_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1262_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1262_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1262_Update/ca)
  // 		iNsTr_8 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 516
  // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_1268_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/SHL_u32_u32_1268_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/SHL_u32_u32_1268_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/SHL_u32_u32_1268_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/SHL_u32_u32_1268_Update/ca)
  // 		iNsTr_9 := (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 517
  // (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_1274_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1274_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1274_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1274_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1274_Update/ca)
  // 		iNsTr_10 := (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 518
  // (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_1280_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/OR_u32_u32_1280_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/OR_u32_u32_1280_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/OR_u32_u32_1280_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/OR_u32_u32_1280_Update/ca)
  // 		iNsTr_11 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 519
  // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  LSHR_u32_u32_1286_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/LSHR_u32_u32_1286_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/LSHR_u32_u32_1286_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/LSHR_u32_u32_1286_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/LSHR_u32_u32_1286_Update/ca)
  // 		iNsTr_12 := (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  //  file prog.aa, line 520
  // (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  AND_u32_u32_1292_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1292_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1292_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1292_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1292_Update/ca)
  // 		iNsTr_13 := (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  //  file prog.aa, line 521
  // (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  OR_u32_u32_1298_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/OR_u32_u32_1298_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/OR_u32_u32_1298_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/OR_u32_u32_1298_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/OR_u32_u32_1298_Update/ca)
  // 		iNsTr_14 := (tmp6x_xi ^ tmp10x_xi)
  //  file prog.aa, line 522
  // (tmp6x_xi ^ tmp10x_xi)
  XOR_u32_u32_1303_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/XOR_u32_u32_1303_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/XOR_u32_u32_1303_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/XOR_u32_u32_1303_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/XOR_u32_u32_1303_Update/ca)
  // 		iNsTr_15 := (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 523
  // (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_1309_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1309_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1309_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1309_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/AND_u32_u32_1309_Update/ca)
  // 		iNsTr_16 := (iNsTr_5 - iNsTr_7)
  //  file prog.aa, line 524
  // (iNsTr_5 - iNsTr_7)
  SUB_u32_u32_1314_inst <=> (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/SUB_u32_u32_1314_Sample/rr branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/SUB_u32_u32_1314_Update/cr) (branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/SUB_u32_u32_1314_Sample/ra branch_block_stmt_1212/assign_stmt_1245_to_assign_stmt_1315/SUB_u32_u32_1314_Update/ca)
  // CP-DP links for switch  
  //  file prog.aa, line 525
  switch_stmt_1316_select_expr_0 <=> (branch_block_stmt_1212/switch_stmt_1316__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_1212/switch_stmt_1316__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_1212/switch_stmt_1316__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_1212/switch_stmt_1316__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_1316_branch_0 <=> (branch_block_stmt_1212/switch_stmt_1316__condition_check__/condition_0/cmp) ($open branch_block_stmt_1212/switch_stmt_1316_choice_0/ack1)
  switch_stmt_1316_select_expr_1 <=> (branch_block_stmt_1212/switch_stmt_1316__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_1212/switch_stmt_1316__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_1212/switch_stmt_1316__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_1212/switch_stmt_1316__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_1316_branch_1 <=> (branch_block_stmt_1212/switch_stmt_1316__condition_check__/condition_1/cmp) ($open branch_block_stmt_1212/switch_stmt_1316_choice_1/ack1)
  switch_stmt_1316_branch_default <=> (branch_block_stmt_1212/switch_stmt_1316__condition_check__/$exit) (branch_block_stmt_1212/switch_stmt_1316_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.aa, line 534
  // CP-DP links for merge  
  //  file prog.aa, line 538
  // ($cast ($uint<32>) iNsTr_37 )
  type_cast_1332_inst <=> (branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1329/phi_stmt_1329_sources/type_cast_1332/SplitProtocol/Sample/rr branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1329/phi_stmt_1329_sources/type_cast_1332/SplitProtocol/Update/cr) (branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1329/phi_stmt_1329_sources/type_cast_1332/SplitProtocol/Sample/ra branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1329/phi_stmt_1329_sources/type_cast_1332/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_10 )
  type_cast_1334_inst <=> (branch_block_stmt_1212/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1329/phi_stmt_1329_sources/type_cast_1334/SplitProtocol/Sample/rr branch_block_stmt_1212/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1329/phi_stmt_1329_sources/type_cast_1334/SplitProtocol/Update/cr) (branch_block_stmt_1212/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1329/phi_stmt_1329_sources/type_cast_1334/SplitProtocol/Sample/ra branch_block_stmt_1212/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1329/phi_stmt_1329_sources/type_cast_1334/SplitProtocol/Update/ca)
  phi_stmt_1329 <=> (branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1329/phi_stmt_1329_req branch_block_stmt_1212/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1329/phi_stmt_1329_req) (branch_block_stmt_1212/merge_stmt_1328_PhiAck/phi_stmt_1329_ack)
  // ($cast ($uint<32>) iNsTr_36 )
  type_cast_1338_inst <=> (branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1335/phi_stmt_1335_sources/type_cast_1338/SplitProtocol/Sample/rr branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1335/phi_stmt_1335_sources/type_cast_1338/SplitProtocol/Update/cr) (branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1335/phi_stmt_1335_sources/type_cast_1338/SplitProtocol/Sample/ra branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1335/phi_stmt_1335_sources/type_cast_1338/SplitProtocol/Update/ca)
  phi_stmt_1335 <=> (branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1335/phi_stmt_1335_req branch_block_stmt_1212/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_1335/phi_stmt_1335_req) (branch_block_stmt_1212/merge_stmt_1328_PhiAck/phi_stmt_1335_ack)
  // 		iNsTr_25 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 542
  // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_1347_inst <=> (branch_block_stmt_1212/assign_stmt_1348_to_assign_stmt_1353/LSHR_u32_u32_1347_Sample/rr branch_block_stmt_1212/assign_stmt_1348_to_assign_stmt_1353/LSHR_u32_u32_1347_Update/cr) (branch_block_stmt_1212/assign_stmt_1348_to_assign_stmt_1353/LSHR_u32_u32_1347_Sample/ra branch_block_stmt_1212/assign_stmt_1348_to_assign_stmt_1353/LSHR_u32_u32_1347_Update/ca)
  // 		iNsTr_26 := (iNsTr_25 > iNsTr_13)
  //  file prog.aa, line 544
  // (iNsTr_25 > iNsTr_13)
  UGT_u32_u1_1352_inst <=> (branch_block_stmt_1212/assign_stmt_1348_to_assign_stmt_1353/UGT_u32_u1_1352_Sample/rr branch_block_stmt_1212/assign_stmt_1348_to_assign_stmt_1353/UGT_u32_u1_1352_Update/cr) (branch_block_stmt_1212/assign_stmt_1348_to_assign_stmt_1353/UGT_u32_u1_1352_Sample/ra branch_block_stmt_1212/assign_stmt_1348_to_assign_stmt_1353/UGT_u32_u1_1352_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 545
  if_stmt_1354_branch <=> (branch_block_stmt_1212/if_stmt_1354_eval_test/branch_req) (branch_block_stmt_1212/if_stmt_1354_else_link/else_choice_transition branch_block_stmt_1212/if_stmt_1354_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 547
  // CP-DP links for merge  
  //  file prog.aa, line 551
  // ($cast ($uint<32>) iNsTr_46 )
  type_cast_1366_inst <=> (branch_block_stmt_1212/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1363/phi_stmt_1363_sources/type_cast_1366/SplitProtocol/Sample/rr branch_block_stmt_1212/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1363/phi_stmt_1363_sources/type_cast_1366/SplitProtocol/Update/cr) (branch_block_stmt_1212/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1363/phi_stmt_1363_sources/type_cast_1366/SplitProtocol/Sample/ra branch_block_stmt_1212/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1363/phi_stmt_1363_sources/type_cast_1366/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_13 )
  type_cast_1368_inst <=> (branch_block_stmt_1212/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1363/phi_stmt_1363_sources/type_cast_1368/SplitProtocol/Sample/rr branch_block_stmt_1212/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1363/phi_stmt_1363_sources/type_cast_1368/SplitProtocol/Update/cr) (branch_block_stmt_1212/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1363/phi_stmt_1363_sources/type_cast_1368/SplitProtocol/Sample/ra branch_block_stmt_1212/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1363/phi_stmt_1363_sources/type_cast_1368/SplitProtocol/Update/ca)
  phi_stmt_1363 <=> (branch_block_stmt_1212/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1363/phi_stmt_1363_req branch_block_stmt_1212/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1363/phi_stmt_1363_req) (branch_block_stmt_1212/merge_stmt_1362_PhiAck/phi_stmt_1363_ack)
  // ($cast ($uint<32>) iNsTr_47 )
  type_cast_1372_inst <=> (branch_block_stmt_1212/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1369/phi_stmt_1369_sources/type_cast_1372/SplitProtocol/Sample/rr branch_block_stmt_1212/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1369/phi_stmt_1369_sources/type_cast_1372/SplitProtocol/Update/cr) (branch_block_stmt_1212/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1369/phi_stmt_1369_sources/type_cast_1372/SplitProtocol/Sample/ra branch_block_stmt_1212/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1369/phi_stmt_1369_sources/type_cast_1372/SplitProtocol/Update/ca)
  phi_stmt_1369 <=> (branch_block_stmt_1212/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1369/phi_stmt_1369_req branch_block_stmt_1212/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_1369/phi_stmt_1369_req) (branch_block_stmt_1212/merge_stmt_1362_PhiAck/phi_stmt_1369_ack)
  // 		iNsTr_46 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 555
  // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_1381_inst <=> (branch_block_stmt_1212/assign_stmt_1382_to_assign_stmt_1393/SHL_u32_u32_1381_Sample/rr branch_block_stmt_1212/assign_stmt_1382_to_assign_stmt_1393/SHL_u32_u32_1381_Update/cr) (branch_block_stmt_1212/assign_stmt_1382_to_assign_stmt_1393/SHL_u32_u32_1381_Sample/ra branch_block_stmt_1212/assign_stmt_1382_to_assign_stmt_1393/SHL_u32_u32_1381_Update/ca)
  // 		iNsTr_47 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 556
  // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_1387_inst <=> (branch_block_stmt_1212/assign_stmt_1382_to_assign_stmt_1393/SHL_u32_u32_1387_Sample/rr branch_block_stmt_1212/assign_stmt_1382_to_assign_stmt_1393/SHL_u32_u32_1387_Update/cr) (branch_block_stmt_1212/assign_stmt_1382_to_assign_stmt_1393/SHL_u32_u32_1387_Sample/ra branch_block_stmt_1212/assign_stmt_1382_to_assign_stmt_1393/SHL_u32_u32_1387_Update/ca)
  // 		iNsTr_48 := (iNsTr_46 < iNsTr_25)
  //  file prog.aa, line 558
  // (iNsTr_46 < iNsTr_25)
  ULT_u32_u1_1392_inst <=> (branch_block_stmt_1212/assign_stmt_1382_to_assign_stmt_1393/ULT_u32_u1_1392_Sample/rr branch_block_stmt_1212/assign_stmt_1382_to_assign_stmt_1393/ULT_u32_u1_1392_Update/cr) (branch_block_stmt_1212/assign_stmt_1382_to_assign_stmt_1393/ULT_u32_u1_1392_Sample/ra branch_block_stmt_1212/assign_stmt_1382_to_assign_stmt_1393/ULT_u32_u1_1392_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 559
  if_stmt_1394_branch <=> (branch_block_stmt_1212/if_stmt_1394_eval_test/branch_req) (branch_block_stmt_1212/if_stmt_1394_else_link/else_choice_transition branch_block_stmt_1212/if_stmt_1394_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 561
  // ($cast ($uint<32>) iNsTr_47 )
  type_cast_1404_inst <=> (branch_block_stmt_1212/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1401/phi_stmt_1401_sources/type_cast_1404/SplitProtocol/Sample/rr branch_block_stmt_1212/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1401/phi_stmt_1401_sources/type_cast_1404/SplitProtocol/Update/cr) (branch_block_stmt_1212/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1401/phi_stmt_1401_sources/type_cast_1404/SplitProtocol/Sample/ra branch_block_stmt_1212/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1401/phi_stmt_1401_sources/type_cast_1404/SplitProtocol/Update/ca)
  phi_stmt_1401 <=> (branch_block_stmt_1212/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1401/phi_stmt_1401_req) (branch_block_stmt_1212/merge_stmt_1400_PhiAck/phi_stmt_1401_ack)
  // ($cast ($uint<32>) iNsTr_46 )
  type_cast_1408_inst <=> (branch_block_stmt_1212/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1405/phi_stmt_1405_sources/type_cast_1408/SplitProtocol/Sample/rr branch_block_stmt_1212/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1405/phi_stmt_1405_sources/type_cast_1408/SplitProtocol/Update/cr) (branch_block_stmt_1212/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1405/phi_stmt_1405_sources/type_cast_1408/SplitProtocol/Sample/ra branch_block_stmt_1212/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1405/phi_stmt_1405_sources/type_cast_1408/SplitProtocol/Update/ca)
  phi_stmt_1405 <=> (branch_block_stmt_1212/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_1405/phi_stmt_1405_req) (branch_block_stmt_1212/merge_stmt_1400_PhiAck/phi_stmt_1405_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 567
  // ($cast ($uint<32>) iNsTr_13 )
  type_cast_1415_inst <=> (branch_block_stmt_1212/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1415/SplitProtocol/Sample/rr branch_block_stmt_1212/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1415/SplitProtocol/Update/cr) (branch_block_stmt_1212/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1415/SplitProtocol/Sample/ra branch_block_stmt_1212/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1415/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa2 )
  type_cast_1417_inst <=> (branch_block_stmt_1212/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1417/SplitProtocol/Sample/rr branch_block_stmt_1212/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1417/SplitProtocol/Update/cr) (branch_block_stmt_1212/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1417/SplitProtocol/Sample/ra branch_block_stmt_1212/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_sources/type_cast_1417/SplitProtocol/Update/ca)
  phi_stmt_1412 <=> (branch_block_stmt_1212/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_req branch_block_stmt_1212/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1412/phi_stmt_1412_req) (branch_block_stmt_1212/merge_stmt_1411_PhiAck/phi_stmt_1412_ack)
  // ($cast ($uint<32>) xx_xlcssa3 )
  type_cast_1424_inst <=> (branch_block_stmt_1212/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1418/phi_stmt_1418_sources/type_cast_1424/SplitProtocol/Sample/rr branch_block_stmt_1212/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1418/phi_stmt_1418_sources/type_cast_1424/SplitProtocol/Update/cr) (branch_block_stmt_1212/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1418/phi_stmt_1418_sources/type_cast_1424/SplitProtocol/Sample/ra branch_block_stmt_1212/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1418/phi_stmt_1418_sources/type_cast_1424/SplitProtocol/Update/ca)
  phi_stmt_1418 <=> (branch_block_stmt_1212/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1418/phi_stmt_1418_req branch_block_stmt_1212/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_1418/phi_stmt_1418_req) (branch_block_stmt_1212/merge_stmt_1411_PhiAck/phi_stmt_1418_ack)
  // 		iNsTr_36 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  //  file prog.aa, line 571
  // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  ADD_u32_u32_1429_inst <=> (branch_block_stmt_1212/assign_stmt_1430_to_assign_stmt_1440/ADD_u32_u32_1429_Sample/rr branch_block_stmt_1212/assign_stmt_1430_to_assign_stmt_1440/ADD_u32_u32_1429_Update/cr) (branch_block_stmt_1212/assign_stmt_1430_to_assign_stmt_1440/ADD_u32_u32_1429_Sample/ra branch_block_stmt_1212/assign_stmt_1430_to_assign_stmt_1440/ADD_u32_u32_1429_Update/ca)
  // 		iNsTr_37 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  //  file prog.aa, line 572
  // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  SUB_u32_u32_1434_inst <=> (branch_block_stmt_1212/assign_stmt_1430_to_assign_stmt_1440/SUB_u32_u32_1434_Sample/rr branch_block_stmt_1212/assign_stmt_1430_to_assign_stmt_1440/SUB_u32_u32_1434_Update/cr) (branch_block_stmt_1212/assign_stmt_1430_to_assign_stmt_1440/SUB_u32_u32_1434_Sample/ra branch_block_stmt_1212/assign_stmt_1430_to_assign_stmt_1440/SUB_u32_u32_1434_Update/ca)
  // 		iNsTr_38 := (iNsTr_37 < iNsTr_13)
  //  file prog.aa, line 574
  // (iNsTr_37 < iNsTr_13)
  ULT_u32_u1_1439_inst <=> (branch_block_stmt_1212/assign_stmt_1430_to_assign_stmt_1440/ULT_u32_u1_1439_Sample/rr branch_block_stmt_1212/assign_stmt_1430_to_assign_stmt_1440/ULT_u32_u1_1439_Update/cr) (branch_block_stmt_1212/assign_stmt_1430_to_assign_stmt_1440/ULT_u32_u1_1439_Sample/ra branch_block_stmt_1212/assign_stmt_1430_to_assign_stmt_1440/ULT_u32_u1_1439_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 575
  if_stmt_1441_branch <=> (branch_block_stmt_1212/if_stmt_1441_eval_test/branch_req) (branch_block_stmt_1212/if_stmt_1441_else_link/else_choice_transition branch_block_stmt_1212/if_stmt_1441_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 577
  // ($cast ($uint<32>) iNsTr_36 )
  type_cast_1451_inst <=> (branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1448/phi_stmt_1448_sources/type_cast_1451/SplitProtocol/Sample/rr branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1448/phi_stmt_1448_sources/type_cast_1451/SplitProtocol/Update/cr) (branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1448/phi_stmt_1448_sources/type_cast_1451/SplitProtocol/Sample/ra branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1448/phi_stmt_1448_sources/type_cast_1451/SplitProtocol/Update/ca)
  phi_stmt_1448 <=> (branch_block_stmt_1212/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_1448/phi_stmt_1448_req) (branch_block_stmt_1212/merge_stmt_1447_PhiAck/phi_stmt_1448_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 582
  // ($cast ($uint<32>) xx_xlcssa4 )
  type_cast_1461_inst <=> (branch_block_stmt_1212/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1455/phi_stmt_1455_sources/type_cast_1461/SplitProtocol/Sample/rr branch_block_stmt_1212/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1455/phi_stmt_1455_sources/type_cast_1461/SplitProtocol/Update/cr) (branch_block_stmt_1212/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1455/phi_stmt_1455_sources/type_cast_1461/SplitProtocol/Sample/ra branch_block_stmt_1212/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1455/phi_stmt_1455_sources/type_cast_1461/SplitProtocol/Update/ca)
  phi_stmt_1455 <=> (branch_block_stmt_1212/bb_1_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1455/phi_stmt_1455_req branch_block_stmt_1212/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_1455/phi_stmt_1455_req) (branch_block_stmt_1212/merge_stmt_1454_PhiAck/phi_stmt_1455_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 587
  // ($cast ($uint<32>) xx_x0x_xix_xi )
  type_cast_1468_inst <=> (branch_block_stmt_1212/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1465/phi_stmt_1465_sources/type_cast_1468/SplitProtocol/Sample/rr branch_block_stmt_1212/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1465/phi_stmt_1465_sources/type_cast_1468/SplitProtocol/Update/cr) (branch_block_stmt_1212/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1465/phi_stmt_1465_sources/type_cast_1468/SplitProtocol/Sample/ra branch_block_stmt_1212/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1465/phi_stmt_1465_sources/type_cast_1468/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_10 )
  type_cast_1470_inst <=> (branch_block_stmt_1212/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1465/phi_stmt_1465_sources/type_cast_1470/SplitProtocol/Sample/rr branch_block_stmt_1212/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1465/phi_stmt_1465_sources/type_cast_1470/SplitProtocol/Update/cr) (branch_block_stmt_1212/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1465/phi_stmt_1465_sources/type_cast_1470/SplitProtocol/Sample/ra branch_block_stmt_1212/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1465/phi_stmt_1465_sources/type_cast_1470/SplitProtocol/Update/ca)
  phi_stmt_1465 <=> (branch_block_stmt_1212/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1465/phi_stmt_1465_req branch_block_stmt_1212/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_1465/phi_stmt_1465_req) (branch_block_stmt_1212/merge_stmt_1464_PhiAck/phi_stmt_1465_ack)
  // 		iNsTr_21 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 590
  // (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_1476_inst <=> (branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/AND_u32_u32_1476_Sample/rr branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/AND_u32_u32_1476_Update/cr) (branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/AND_u32_u32_1476_Sample/ra branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/AND_u32_u32_1476_Update/ca)
  // 		iNsTr_22 := (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 592
  // (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_1482_inst <=> (branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/EQ_u32_u1_1482_Sample/rr branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/EQ_u32_u1_1482_Update/cr) (branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/EQ_u32_u1_1482_Sample/ra branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/EQ_u32_u1_1482_Update/ca)
  // 		iNsTr_23 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 594
  // (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
  type_cast_1486_inst <=> (branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/type_cast_1486_Sample/rr branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/type_cast_1486_Update/cr) (branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/type_cast_1486_Sample/ra branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/type_cast_1486_Update/ca)
  NEQ_i32_u1_1490_inst <=> (branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/NEQ_i32_u1_1490_Sample/rr branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/NEQ_i32_u1_1490_Update/cr) (branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/NEQ_i32_u1_1490_Sample/ra branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/NEQ_i32_u1_1490_Update/ca)
  // 		orx_xcond11x_xi := (iNsTr_22 & iNsTr_23)
  //  file prog.aa, line 595
  // (iNsTr_22 & iNsTr_23)
  AND_u1_u1_1495_inst <=> (branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/AND_u1_u1_1495_Sample/rr branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/AND_u1_u1_1495_Update/cr) (branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/AND_u1_u1_1495_Sample/ra branch_block_stmt_1212/assign_stmt_1477_to_assign_stmt_1496/AND_u1_u1_1495_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 596
  if_stmt_1497_branch <=> (branch_block_stmt_1212/if_stmt_1497_eval_test/branch_req) (branch_block_stmt_1212/if_stmt_1497_else_link/else_choice_transition branch_block_stmt_1212/if_stmt_1497_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 598
  // CP-DP links for merge  
  //  file prog.aa, line 602
  // ($cast ($uint<32>) indvarx_xnextx_xi )
  type_cast_1509_inst <=> (branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/type_cast_1509/SplitProtocol/Sample/rr branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/type_cast_1509/SplitProtocol/Update/cr) (branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/type_cast_1509/SplitProtocol/Sample/ra branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1506/phi_stmt_1506_sources/type_cast_1509/SplitProtocol/Update/ca)
  phi_stmt_1506 <=> (branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1506/phi_stmt_1506_req branch_block_stmt_1212/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1506/phi_stmt_1506_req) (branch_block_stmt_1212/merge_stmt_1505_PhiAck/phi_stmt_1506_ack)
  // ($cast ($uint<32>) iNsTr_41 )
  type_cast_1516_inst <=> (branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1513/phi_stmt_1513_sources/type_cast_1516/SplitProtocol/Sample/rr branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1513/phi_stmt_1513_sources/type_cast_1516/SplitProtocol/Update/cr) (branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1513/phi_stmt_1513_sources/type_cast_1516/SplitProtocol/Sample/ra branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1513/phi_stmt_1513_sources/type_cast_1516/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xi )
  type_cast_1518_inst <=> (branch_block_stmt_1212/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1513/phi_stmt_1513_sources/type_cast_1518/SplitProtocol/Sample/rr branch_block_stmt_1212/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1513/phi_stmt_1513_sources/type_cast_1518/SplitProtocol/Update/cr) (branch_block_stmt_1212/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1513/phi_stmt_1513_sources/type_cast_1518/SplitProtocol/Sample/ra branch_block_stmt_1212/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1513/phi_stmt_1513_sources/type_cast_1518/SplitProtocol/Update/ca)
  phi_stmt_1513 <=> (branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1513/phi_stmt_1513_req branch_block_stmt_1212/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1513/phi_stmt_1513_req) (branch_block_stmt_1212/merge_stmt_1505_PhiAck/phi_stmt_1513_ack)
  // 		iNsTr_41 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 606
  // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_1524_inst <=> (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/SHL_u32_u32_1524_Sample/rr branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/SHL_u32_u32_1524_Update/cr) (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/SHL_u32_u32_1524_Sample/ra branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/SHL_u32_u32_1524_Update/ca)
  // 		iNsTr_42 := (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 607
  // (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_1530_inst <=> (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/AND_u32_u32_1530_Sample/rr branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/AND_u32_u32_1530_Update/cr) (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/AND_u32_u32_1530_Sample/ra branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/AND_u32_u32_1530_Update/ca)
  // 		iNsTr_43 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 609
  // (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_1536_inst <=> (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/EQ_u32_u1_1536_Sample/rr branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/EQ_u32_u1_1536_Update/cr) (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/EQ_u32_u1_1536_Sample/ra branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/EQ_u32_u1_1536_Update/ca)
  // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 611
  // (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_41 )
  type_cast_1540_inst <=> (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/type_cast_1540_Sample/rr branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/type_cast_1540_Update/cr) (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/type_cast_1540_Sample/ra branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/type_cast_1540_Update/ca)
  NEQ_i32_u1_1544_inst <=> (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/NEQ_i32_u1_1544_Sample/rr branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/NEQ_i32_u1_1544_Update/cr) (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/NEQ_i32_u1_1544_Sample/ra branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/NEQ_i32_u1_1544_Update/ca)
  // 		orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
  //  file prog.aa, line 612
  // (iNsTr_43 & iNsTr_44)
  AND_u1_u1_1549_inst <=> (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/AND_u1_u1_1549_Sample/rr branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/AND_u1_u1_1549_Update/cr) (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/AND_u1_u1_1549_Sample/ra branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/AND_u1_u1_1549_Update/ca)
  // 		indvarx_xnextx_xi := (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 613
  // (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_1555_inst <=> (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/ADD_u32_u32_1555_Sample/rr branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/ADD_u32_u32_1555_Update/cr) (branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/ADD_u32_u32_1555_Sample/ra branch_block_stmt_1212/assign_stmt_1525_to_assign_stmt_1556/ADD_u32_u32_1555_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 614
  if_stmt_1557_branch <=> (branch_block_stmt_1212/if_stmt_1557_eval_test/branch_req) (branch_block_stmt_1212/if_stmt_1557_else_link/else_choice_transition branch_block_stmt_1212/if_stmt_1557_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 616
  // ($cast ($uint<32>) iNsTr_41 )
  type_cast_1567_inst <=> (branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1564/phi_stmt_1564_sources/type_cast_1567/SplitProtocol/Sample/rr branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1564/phi_stmt_1564_sources/type_cast_1567/SplitProtocol/Update/cr) (branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1564/phi_stmt_1564_sources/type_cast_1567/SplitProtocol/Sample/ra branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1564/phi_stmt_1564_sources/type_cast_1567/SplitProtocol/Update/ca)
  phi_stmt_1564 <=> (branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1564/phi_stmt_1564_req) (branch_block_stmt_1212/merge_stmt_1563_PhiAck/phi_stmt_1564_ack)
  // ($cast ($uint<32>) iNsTr_40 )
  type_cast_1571_inst <=> (branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1568/phi_stmt_1568_sources/type_cast_1571/SplitProtocol/Sample/rr branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1568/phi_stmt_1568_sources/type_cast_1571/SplitProtocol/Update/cr) (branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1568/phi_stmt_1568_sources/type_cast_1571/SplitProtocol/Sample/ra branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1568/phi_stmt_1568_sources/type_cast_1571/SplitProtocol/Update/ca)
  phi_stmt_1568 <=> (branch_block_stmt_1212/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1568/phi_stmt_1568_req) (branch_block_stmt_1212/merge_stmt_1563_PhiAck/phi_stmt_1568_ack)
  // 		xx_xnot := (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
  //  file prog.aa, line 620
  // (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
  OR_u32_u32_1577_inst <=> (branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/OR_u32_u32_1577_Sample/rr branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/OR_u32_u32_1577_Update/cr) (branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/OR_u32_u32_1577_Sample/ra branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/OR_u32_u32_1577_Update/ca)
  // 		tmp21x_xi := (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 621
  // (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  XOR_u32_u32_1583_inst <=> (branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/XOR_u32_u32_1583_Sample/rr branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/XOR_u32_u32_1583_Update/cr) (branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/XOR_u32_u32_1583_Sample/ra branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/XOR_u32_u32_1583_Update/ca)
  // 		tmp25x_xi := (tmp21x_xi + iNsTr_5)
  //  file prog.aa, line 622
  // (tmp21x_xi + iNsTr_5)
  ADD_u32_u32_1588_inst <=> (branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/ADD_u32_u32_1588_Sample/rr branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/ADD_u32_u32_1588_Update/cr) (branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/ADD_u32_u32_1588_Sample/ra branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/ADD_u32_u32_1588_Update/ca)
  // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
  //  file prog.aa, line 623
  // (tmp25x_xi - xx_xlcssa)
  SUB_u32_u32_1593_inst <=> (branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/SUB_u32_u32_1593_Sample/rr branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/SUB_u32_u32_1593_Update/cr) (branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/SUB_u32_u32_1593_Sample/ra branch_block_stmt_1212/assign_stmt_1578_to_assign_stmt_1594/SUB_u32_u32_1593_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 626
  // ($cast ($uint<32>) tmp26x_xi )
  type_cast_1600_inst <=> (branch_block_stmt_1212/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1597/phi_stmt_1597_sources/type_cast_1600/SplitProtocol/Sample/rr branch_block_stmt_1212/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1597/phi_stmt_1597_sources/type_cast_1600/SplitProtocol/Update/cr) (branch_block_stmt_1212/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1597/phi_stmt_1597_sources/type_cast_1600/SplitProtocol/Sample/ra branch_block_stmt_1212/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1597/phi_stmt_1597_sources/type_cast_1600/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_16 )
  type_cast_1602_inst <=> (branch_block_stmt_1212/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1597/phi_stmt_1597_sources/type_cast_1602/SplitProtocol/Sample/rr branch_block_stmt_1212/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1597/phi_stmt_1597_sources/type_cast_1602/SplitProtocol/Update/cr) (branch_block_stmt_1212/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1597/phi_stmt_1597_sources/type_cast_1602/SplitProtocol/Sample/ra branch_block_stmt_1212/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1597/phi_stmt_1597_sources/type_cast_1602/SplitProtocol/Update/ca)
  phi_stmt_1597 <=> (branch_block_stmt_1212/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1597/phi_stmt_1597_req branch_block_stmt_1212/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1597/phi_stmt_1597_req) (branch_block_stmt_1212/merge_stmt_1596_PhiAck/phi_stmt_1597_ack)
  // ($cast ($uint<32>) xx_xlcssa1 )
  type_cast_1606_inst <=> (branch_block_stmt_1212/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1603/phi_stmt_1603_sources/type_cast_1606/SplitProtocol/Sample/rr branch_block_stmt_1212/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1603/phi_stmt_1603_sources/type_cast_1606/SplitProtocol/Update/cr) (branch_block_stmt_1212/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1603/phi_stmt_1603_sources/type_cast_1606/SplitProtocol/Sample/ra branch_block_stmt_1212/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1603/phi_stmt_1603_sources/type_cast_1606/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xi )
  type_cast_1608_inst <=> (branch_block_stmt_1212/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1603/phi_stmt_1603_sources/type_cast_1608/SplitProtocol/Sample/rr branch_block_stmt_1212/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1603/phi_stmt_1603_sources/type_cast_1608/SplitProtocol/Update/cr) (branch_block_stmt_1212/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1603/phi_stmt_1603_sources/type_cast_1608/SplitProtocol/Sample/ra branch_block_stmt_1212/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1603/phi_stmt_1603_sources/type_cast_1608/SplitProtocol/Update/ca)
  phi_stmt_1603 <=> (branch_block_stmt_1212/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1603/phi_stmt_1603_req branch_block_stmt_1212/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1603/phi_stmt_1603_req) (branch_block_stmt_1212/merge_stmt_1596_PhiAck/phi_stmt_1603_ack)
  // 		iNsTr_29 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 630
  // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_1614_inst <=> (branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/AND_u32_u32_1614_Sample/rr branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/AND_u32_u32_1614_Update/cr) (branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/AND_u32_u32_1614_Sample/ra branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/AND_u32_u32_1614_Update/ca)
  // 		iNsTr_30 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 631
  // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_1620_inst <=> (branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/SHL_u32_u32_1620_Sample/rr branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/SHL_u32_u32_1620_Update/cr) (branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/SHL_u32_u32_1620_Sample/ra branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/SHL_u32_u32_1620_Update/ca)
  // 		iNsTr_31 := (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 632
  // (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_1626_inst <=> (branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/ADD_u32_u32_1626_Sample/rr branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/ADD_u32_u32_1626_Update/cr) (branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/ADD_u32_u32_1626_Sample/ra branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/ADD_u32_u32_1626_Update/ca)
  // 		iNsTr_32 := (iNsTr_31 | iNsTr_15)
  //  file prog.aa, line 633
  // (iNsTr_31 | iNsTr_15)
  OR_u32_u32_1631_inst <=> (branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/OR_u32_u32_1631_Sample/rr branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/OR_u32_u32_1631_Update/cr) (branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/OR_u32_u32_1631_Sample/ra branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/OR_u32_u32_1631_Update/ca)
  // 		iNsTr_33 := (iNsTr_32 | iNsTr_29)
  //  file prog.aa, line 634
  // (iNsTr_32 | iNsTr_29)
  OR_u32_u32_1636_inst <=> (branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/OR_u32_u32_1636_Sample/rr branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/OR_u32_u32_1636_Update/cr) (branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/OR_u32_u32_1636_Sample/ra branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/OR_u32_u32_1636_Update/ca)
  // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_33 )
  //  file prog.aa, line 635
  // ($bitcast ($float<8,23>) iNsTr_33 )
  type_cast_1640_inst <=> (branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/type_cast_1640_Sample/rr branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/type_cast_1640_Update/cr) (branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/type_cast_1640_Sample/ra branch_block_stmt_1212/assign_stmt_1615_to_assign_stmt_1641/type_cast_1640_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 638
  // CP-DP links for merge  
  //  file prog.aa, line 642
  // ($cast ($float<8,23>) tmp3x_xi )
  type_cast_1649_inst <=> (branch_block_stmt_1212/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1646/phi_stmt_1646_sources/type_cast_1649/SplitProtocol/Sample/rr branch_block_stmt_1212/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1646/phi_stmt_1646_sources/type_cast_1649/SplitProtocol/Update/cr) (branch_block_stmt_1212/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1646/phi_stmt_1646_sources/type_cast_1649/SplitProtocol/Sample/ra branch_block_stmt_1212/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1646/phi_stmt_1646_sources/type_cast_1649/SplitProtocol/Update/ca)
  phi_stmt_1646 <=> (branch_block_stmt_1212/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1646/phi_stmt_1646_req branch_block_stmt_1212/fdiv32x_xexit_UnifiedReturnBlock_PhiReq/phi_stmt_1646/phi_stmt_1646_req) (branch_block_stmt_1212/merge_stmt_1645_PhiAck/phi_stmt_1646_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 646
}
$module [omega_calc] 
{
  $in iq:$float<8,23>
  // can point into  foreign( $void )
  flux_rotor:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %omega_calc
  //  file prog.aa, line 326
  // pipe-declarations for block %omega_calc%body
  //  file prog.aa, line 331
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 341
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 365
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 369
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 378
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 382
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 392
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 398
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 408
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 413
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 418
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 429
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 433
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 447
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 457
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 469
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 473
  // pipe-declarations for block %omega_calc%body%
  //  file prog.aa, line 477
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_736] // Branch Block  file prog.aa, line 331
    {
      $P [branch_block_stmt_736__entry__]
      branch_block_stmt_736__entry__ <-| ($entry)
      $P [branch_block_stmt_736__exit__]
      branch_block_stmt_736__exit__ |-> ($exit)
      $P [assign_stmt_742_to_assign_stmt_756__entry__] 
      $P [assign_stmt_742_to_assign_stmt_756__exit__] 
      $P [if_stmt_757__entry__] 
      $P [if_stmt_757__exit__] 
      $P [merge_stmt_763__entry__] 
      $P [merge_stmt_763__exit__] 
      $P [assign_stmt_769_to_assign_stmt_839__entry__] 
      $P [assign_stmt_769_to_assign_stmt_839__exit__] 
      $P [switch_stmt_840__entry__] 
      $P [switch_stmt_840__exit__] 
      $P [merge_stmt_850__entry__] 
      $P [merge_stmt_850__exit__] 
      $P [bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi]
      $P [merge_stmt_852__exit__] 
      $P [assign_stmt_872_to_assign_stmt_877__entry__] 
      $P [assign_stmt_872_to_assign_stmt_877__exit__] 
      $P [if_stmt_878__entry__] 
      $P [if_stmt_878__exit__] 
      $P [merge_stmt_884__entry__] 
      $P [merge_stmt_884__exit__] 
      $P [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
      $P [merge_stmt_886__exit__] 
      $P [assign_stmt_906_to_assign_stmt_917__entry__] 
      $P [assign_stmt_906_to_assign_stmt_917__exit__] 
      $P [if_stmt_918__entry__] 
      $P [if_stmt_918__exit__] 
      $P [merge_stmt_924__entry__] 
      $P [merge_stmt_924__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
      $P [merge_stmt_935__exit__] 
      $P [assign_stmt_954_to_assign_stmt_964__entry__] 
      $P [assign_stmt_954_to_assign_stmt_964__exit__] 
      $P [if_stmt_965__entry__] 
      $P [if_stmt_965__exit__] 
      $P [merge_stmt_971__entry__] 
      $P [merge_stmt_971__exit__] 
      $P [xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi]
      $P [merge_stmt_978__exit__] 
      $P [xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi]
      $P [merge_stmt_988__exit__] 
      $P [assign_stmt_1001_to_assign_stmt_1020__entry__] 
      $P [assign_stmt_1001_to_assign_stmt_1020__exit__] 
      $P [if_stmt_1021__entry__] 
      $P [if_stmt_1021__exit__] 
      $P [merge_stmt_1027__entry__] 
      $P [merge_stmt_1027__exit__] 
      $P [udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi]
      $P [merge_stmt_1029__exit__] 
      $P [assign_stmt_1049_to_assign_stmt_1080__entry__] 
      $P [assign_stmt_1049_to_assign_stmt_1080__exit__] 
      $P [if_stmt_1081__entry__] 
      $P [if_stmt_1081__exit__] 
      $P [merge_stmt_1087__entry__] 
      $P [merge_stmt_1087__exit__] 
      $P [assign_stmt_1102_to_assign_stmt_1118__entry__] 
      $P [assign_stmt_1102_to_assign_stmt_1118__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi]
      $P [merge_stmt_1120__exit__] 
      $P [assign_stmt_1139_to_assign_stmt_1165__entry__] 
      $P [assign_stmt_1139_to_assign_stmt_1165__exit__] 
      $P [xx_xcritedgex_xi_UnifiedReturnBlock]
      $P [merge_stmt_1167__exit__] 
      $P [fdiv32x_xexit_UnifiedReturnBlock]
      $P [merge_stmt_1169__exit__] 
      $P [return__]
      $P [merge_stmt_1179__exit__] 
      ::[assign_stmt_742_to_assign_stmt_756] 
      {
        // 		iNsTr_0 := (iq * ($bitcast ($float<8,23>) _f7.790627e+00 ))
        //  file prog.aa, line 334
        // Source expression
        // (iq * ($bitcast ($float<8,23>) _f7.790627e+00 ))
        $T[MUL_f32_f32_741_sample_start_] 
        $T[MUL_f32_f32_741_sample_completed_] 
        $T[MUL_f32_f32_741_update_start_] 
        $T[MUL_f32_f32_741_update_completed_] 
        // iq
        $T[R_iq_738_sample_start_] 
        $T[R_iq_738_sample_completed_] 
        $T[R_iq_738_update_start_] 
        $T[R_iq_738_update_completed_] 
        // reference to interface object
        R_iq_738_sample_start_ <-& ($entry)
        R_iq_738_sample_completed_ <-& (R_iq_738_sample_start_)
        R_iq_738_update_start_ <-& (R_iq_738_sample_completed_)
        R_iq_738_update_completed_ <-& (R_iq_738_update_start_)
        MUL_f32_f32_741_sample_start_ <-& (R_iq_738_update_completed_)
        ;;[MUL_f32_f32_741_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_741_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_741_sample_start_ &-> (MUL_f32_f32_741_Sample)
        MUL_f32_f32_741_sample_completed_ <-& (MUL_f32_f32_741_Sample)
        MUL_f32_f32_741_sample_completed_ &-> ($null)
        MUL_f32_f32_741_update_start_ &-> (MUL_f32_f32_741_Update)
        MUL_f32_f32_741_update_completed_ <-& (MUL_f32_f32_741_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0 )
        //  file prog.aa, line 335
        // Source expression
        // ($bitcast ($uint<32>) iNsTr_0 )
        $T[type_cast_745_sample_start_] 
        $T[type_cast_745_sample_completed_] 
        $T[type_cast_745_update_start_] 
        $T[type_cast_745_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_744_sample_start_] 
        $T[R_iNsTr_0_744_sample_completed_] 
        $T[R_iNsTr_0_744_update_start_] 
        $T[R_iNsTr_0_744_update_completed_] 
        // implicit reference
        R_iNsTr_0_744_sample_start_ <-& (MUL_f32_f32_741_update_completed_)
        R_iNsTr_0_744_sample_completed_ <-& (R_iNsTr_0_744_sample_start_)
        R_iNsTr_0_744_update_start_ <-& (R_iNsTr_0_744_sample_completed_)
        R_iNsTr_0_744_update_completed_ <-& (R_iNsTr_0_744_update_start_)
        type_cast_745_sample_start_ <-& (R_iNsTr_0_744_update_completed_)
        ;;[type_cast_745_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_745_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_745_sample_start_ &-> (type_cast_745_Sample)
        type_cast_745_sample_completed_ <-& (type_cast_745_Sample)
        type_cast_745_sample_completed_ &-> ($null)
        type_cast_745_update_start_ &-> (type_cast_745_Update)
        type_cast_745_update_completed_ <-& (type_cast_745_Update)
        // Target expression
        // (as target) tmp10x_xi
        // tmp10x_xi
        // implicit reference
        // 		tmp6x_xi := ($bitcast ($uint<32>) flux_rotor )
        //  file prog.aa, line 336
        // Source expression
        // ($bitcast ($uint<32>) flux_rotor )
        $T[type_cast_749_sample_start_] 
        $T[type_cast_749_sample_completed_] 
        $T[type_cast_749_update_start_] 
        $T[type_cast_749_update_completed_] 
        // flux_rotor
        $T[R_flux_rotor_748_sample_start_] 
        $T[R_flux_rotor_748_sample_completed_] 
        $T[R_flux_rotor_748_update_start_] 
        $T[R_flux_rotor_748_update_completed_] 
        // reference to interface object
        R_flux_rotor_748_sample_start_ <-& ($entry)
        R_flux_rotor_748_sample_completed_ <-& (R_flux_rotor_748_sample_start_)
        R_flux_rotor_748_update_start_ <-& (R_flux_rotor_748_sample_completed_)
        R_flux_rotor_748_update_completed_ <-& (R_flux_rotor_748_update_start_)
        type_cast_749_sample_start_ <-& (R_flux_rotor_748_update_completed_)
        ;;[type_cast_749_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_749_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_749_sample_start_ &-> (type_cast_749_Sample)
        type_cast_749_sample_completed_ <-& (type_cast_749_Sample)
        type_cast_749_sample_completed_ &-> ($null)
        type_cast_749_update_start_ &-> (type_cast_749_Update)
        type_cast_749_update_completed_ <-& (type_cast_749_Update)
        // Target expression
        // (as target) tmp6x_xi
        // tmp6x_xi
        // implicit reference
        // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 338
        // Source expression
        // (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_755_sample_start_] 
        $T[EQ_f32_u1_755_sample_completed_] 
        $T[EQ_f32_u1_755_update_start_] 
        $T[EQ_f32_u1_755_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_752_sample_start_] 
        $T[R_iNsTr_0_752_sample_completed_] 
        $T[R_iNsTr_0_752_update_start_] 
        $T[R_iNsTr_0_752_update_completed_] 
        // implicit reference
        R_iNsTr_0_752_sample_start_ <-& (MUL_f32_f32_741_update_completed_)
        R_iNsTr_0_752_sample_completed_ <-& (R_iNsTr_0_752_sample_start_)
        R_iNsTr_0_752_update_start_ <-& (R_iNsTr_0_752_sample_completed_)
        R_iNsTr_0_752_update_completed_ <-& (R_iNsTr_0_752_update_start_)
        EQ_f32_u1_755_sample_start_ <-& (R_iNsTr_0_752_update_completed_)
        ;;[EQ_f32_u1_755_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_755_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_755_sample_start_ &-> (EQ_f32_u1_755_Sample)
        EQ_f32_u1_755_sample_completed_ <-& (EQ_f32_u1_755_Sample)
        EQ_f32_u1_755_sample_completed_ &-> ($null)
        EQ_f32_u1_755_update_start_ &-> (EQ_f32_u1_755_Update)
        EQ_f32_u1_755_update_completed_ <-& (EQ_f32_u1_755_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_742_to_assign_stmt_756__entry__ |-> (assign_stmt_742_to_assign_stmt_756)
      assign_stmt_742_to_assign_stmt_756__exit__ <-| (assign_stmt_742_to_assign_stmt_756)
      // if-statement  
      //  file prog.aa, line 339
      ;;[if_stmt_757_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_757__entry__ |-> (if_stmt_757_dead_link)
      if_stmt_757__exit__ <-| (if_stmt_757_dead_link)
      ;;[if_stmt_757_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_757__entry__ |-> (if_stmt_757_eval_test)
      $P [R_iNsTr_1_758_place]
      R_iNsTr_1_758_place <-| (if_stmt_757_eval_test)
      ;;[if_stmt_757_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_757_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_1_758_place |-> (if_stmt_757_if_link if_stmt_757_else_link)
      $P [bb_0_fdiv32x_xexit]
      bb_0_fdiv32x_xexit <-| (if_stmt_757_if_link)
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (if_stmt_757_else_link)
      ::[assign_stmt_769_to_assign_stmt_839] 
      {
        // 		iNsTr_4 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 343
        // Source expression
        // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_768_sample_start_] 
        $T[LSHR_u32_u32_768_sample_completed_] 
        $T[LSHR_u32_u32_768_update_start_] 
        $T[LSHR_u32_u32_768_update_completed_] 
        // tmp10x_xi
        $T[R_tmp10x_xi_765_sample_start_] 
        $T[R_tmp10x_xi_765_sample_completed_] 
        $T[R_tmp10x_xi_765_update_start_] 
        $T[R_tmp10x_xi_765_update_completed_] 
        // implicit reference
        R_tmp10x_xi_765_sample_start_ <-& ($entry)
        R_tmp10x_xi_765_sample_completed_ <-& (R_tmp10x_xi_765_sample_start_)
        R_tmp10x_xi_765_update_start_ <-& (R_tmp10x_xi_765_sample_completed_)
        R_tmp10x_xi_765_update_completed_ <-& (R_tmp10x_xi_765_update_start_)
        LSHR_u32_u32_768_sample_start_ <-& (R_tmp10x_xi_765_update_completed_)
        ;;[LSHR_u32_u32_768_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_768_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_768_sample_start_ &-> (LSHR_u32_u32_768_Sample)
        LSHR_u32_u32_768_sample_completed_ <-& (LSHR_u32_u32_768_Sample)
        LSHR_u32_u32_768_sample_completed_ &-> ($null)
        LSHR_u32_u32_768_update_start_ &-> (LSHR_u32_u32_768_Update)
        LSHR_u32_u32_768_update_completed_ <-& (LSHR_u32_u32_768_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // 		iNsTr_5 := (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 344
        // Source expression
        // (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_774_sample_start_] 
        $T[AND_u32_u32_774_sample_completed_] 
        $T[AND_u32_u32_774_update_start_] 
        $T[AND_u32_u32_774_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_771_sample_start_] 
        $T[R_iNsTr_4_771_sample_completed_] 
        $T[R_iNsTr_4_771_update_start_] 
        $T[R_iNsTr_4_771_update_completed_] 
        // implicit reference
        R_iNsTr_4_771_sample_start_ <-& (LSHR_u32_u32_768_update_completed_)
        R_iNsTr_4_771_sample_completed_ <-& (R_iNsTr_4_771_sample_start_)
        R_iNsTr_4_771_update_start_ <-& (R_iNsTr_4_771_sample_completed_)
        R_iNsTr_4_771_update_completed_ <-& (R_iNsTr_4_771_update_start_)
        AND_u32_u32_774_sample_start_ <-& (R_iNsTr_4_771_update_completed_)
        ;;[AND_u32_u32_774_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_774_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_774_sample_start_ &-> (AND_u32_u32_774_Sample)
        AND_u32_u32_774_sample_completed_ <-& (AND_u32_u32_774_Sample)
        AND_u32_u32_774_sample_completed_ &-> ($null)
        AND_u32_u32_774_update_start_ &-> (AND_u32_u32_774_Update)
        AND_u32_u32_774_update_completed_ <-& (AND_u32_u32_774_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 345
        // Source expression
        // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_780_sample_start_] 
        $T[LSHR_u32_u32_780_sample_completed_] 
        $T[LSHR_u32_u32_780_update_start_] 
        $T[LSHR_u32_u32_780_update_completed_] 
        // tmp6x_xi
        $T[R_tmp6x_xi_777_sample_start_] 
        $T[R_tmp6x_xi_777_sample_completed_] 
        $T[R_tmp6x_xi_777_update_start_] 
        $T[R_tmp6x_xi_777_update_completed_] 
        // implicit reference
        R_tmp6x_xi_777_sample_start_ <-& ($entry)
        R_tmp6x_xi_777_sample_completed_ <-& (R_tmp6x_xi_777_sample_start_)
        R_tmp6x_xi_777_update_start_ <-& (R_tmp6x_xi_777_sample_completed_)
        R_tmp6x_xi_777_update_completed_ <-& (R_tmp6x_xi_777_update_start_)
        LSHR_u32_u32_780_sample_start_ <-& (R_tmp6x_xi_777_update_completed_)
        ;;[LSHR_u32_u32_780_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_780_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_780_sample_start_ &-> (LSHR_u32_u32_780_Sample)
        LSHR_u32_u32_780_sample_completed_ <-& (LSHR_u32_u32_780_Sample)
        LSHR_u32_u32_780_sample_completed_ &-> ($null)
        LSHR_u32_u32_780_update_start_ &-> (LSHR_u32_u32_780_Update)
        LSHR_u32_u32_780_update_completed_ <-& (LSHR_u32_u32_780_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // 		iNsTr_7 := (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 346
        // Source expression
        // (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_786_sample_start_] 
        $T[AND_u32_u32_786_sample_completed_] 
        $T[AND_u32_u32_786_update_start_] 
        $T[AND_u32_u32_786_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_783_sample_start_] 
        $T[R_iNsTr_6_783_sample_completed_] 
        $T[R_iNsTr_6_783_update_start_] 
        $T[R_iNsTr_6_783_update_completed_] 
        // implicit reference
        R_iNsTr_6_783_sample_start_ <-& (LSHR_u32_u32_780_update_completed_)
        R_iNsTr_6_783_sample_completed_ <-& (R_iNsTr_6_783_sample_start_)
        R_iNsTr_6_783_update_start_ <-& (R_iNsTr_6_783_sample_completed_)
        R_iNsTr_6_783_update_completed_ <-& (R_iNsTr_6_783_update_start_)
        AND_u32_u32_786_sample_start_ <-& (R_iNsTr_6_783_update_completed_)
        ;;[AND_u32_u32_786_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_786_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_786_sample_start_ &-> (AND_u32_u32_786_Sample)
        AND_u32_u32_786_sample_completed_ <-& (AND_u32_u32_786_Sample)
        AND_u32_u32_786_sample_completed_ &-> ($null)
        AND_u32_u32_786_update_start_ &-> (AND_u32_u32_786_Update)
        AND_u32_u32_786_update_completed_ <-& (AND_u32_u32_786_Update)
        // Target expression
        // (as target) iNsTr_7
        // iNsTr_7
        // implicit reference
        // 		iNsTr_8 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 347
        // Source expression
        // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_792_sample_start_] 
        $T[SHL_u32_u32_792_sample_completed_] 
        $T[SHL_u32_u32_792_update_start_] 
        $T[SHL_u32_u32_792_update_completed_] 
        // tmp10x_xi
        $T[R_tmp10x_xi_789_sample_start_] 
        $T[R_tmp10x_xi_789_sample_completed_] 
        $T[R_tmp10x_xi_789_update_start_] 
        $T[R_tmp10x_xi_789_update_completed_] 
        // implicit reference
        R_tmp10x_xi_789_sample_start_ <-& ($entry)
        R_tmp10x_xi_789_sample_completed_ <-& (R_tmp10x_xi_789_sample_start_)
        R_tmp10x_xi_789_update_start_ <-& (R_tmp10x_xi_789_sample_completed_)
        R_tmp10x_xi_789_update_completed_ <-& (R_tmp10x_xi_789_update_start_)
        SHL_u32_u32_792_sample_start_ <-& (R_tmp10x_xi_789_update_completed_)
        ;;[SHL_u32_u32_792_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_792_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_792_sample_start_ &-> (SHL_u32_u32_792_Sample)
        SHL_u32_u32_792_sample_completed_ <-& (SHL_u32_u32_792_Sample)
        SHL_u32_u32_792_sample_completed_ &-> ($null)
        SHL_u32_u32_792_update_start_ &-> (SHL_u32_u32_792_Update)
        SHL_u32_u32_792_update_completed_ <-& (SHL_u32_u32_792_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 348
        // Source expression
        // (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_798_sample_start_] 
        $T[AND_u32_u32_798_sample_completed_] 
        $T[AND_u32_u32_798_update_start_] 
        $T[AND_u32_u32_798_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_795_sample_start_] 
        $T[R_iNsTr_8_795_sample_completed_] 
        $T[R_iNsTr_8_795_update_start_] 
        $T[R_iNsTr_8_795_update_completed_] 
        // implicit reference
        R_iNsTr_8_795_sample_start_ <-& (SHL_u32_u32_792_update_completed_)
        R_iNsTr_8_795_sample_completed_ <-& (R_iNsTr_8_795_sample_start_)
        R_iNsTr_8_795_update_start_ <-& (R_iNsTr_8_795_sample_completed_)
        R_iNsTr_8_795_update_completed_ <-& (R_iNsTr_8_795_update_start_)
        AND_u32_u32_798_sample_start_ <-& (R_iNsTr_8_795_update_completed_)
        ;;[AND_u32_u32_798_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_798_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_798_sample_start_ &-> (AND_u32_u32_798_Sample)
        AND_u32_u32_798_sample_completed_ <-& (AND_u32_u32_798_Sample)
        AND_u32_u32_798_sample_completed_ &-> ($null)
        AND_u32_u32_798_update_start_ &-> (AND_u32_u32_798_Update)
        AND_u32_u32_798_update_completed_ <-& (AND_u32_u32_798_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // 		iNsTr_10 := (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 349
        // Source expression
        // (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_804_sample_start_] 
        $T[OR_u32_u32_804_sample_completed_] 
        $T[OR_u32_u32_804_update_start_] 
        $T[OR_u32_u32_804_update_completed_] 
        // iNsTr_9
        $T[R_iNsTr_9_801_sample_start_] 
        $T[R_iNsTr_9_801_sample_completed_] 
        $T[R_iNsTr_9_801_update_start_] 
        $T[R_iNsTr_9_801_update_completed_] 
        // implicit reference
        R_iNsTr_9_801_sample_start_ <-& (AND_u32_u32_798_update_completed_)
        R_iNsTr_9_801_sample_completed_ <-& (R_iNsTr_9_801_sample_start_)
        R_iNsTr_9_801_update_start_ <-& (R_iNsTr_9_801_sample_completed_)
        R_iNsTr_9_801_update_completed_ <-& (R_iNsTr_9_801_update_start_)
        OR_u32_u32_804_sample_start_ <-& (R_iNsTr_9_801_update_completed_)
        ;;[OR_u32_u32_804_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_804_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_804_sample_start_ &-> (OR_u32_u32_804_Sample)
        OR_u32_u32_804_sample_completed_ <-& (OR_u32_u32_804_Sample)
        OR_u32_u32_804_sample_completed_ &-> ($null)
        OR_u32_u32_804_update_start_ &-> (OR_u32_u32_804_Update)
        OR_u32_u32_804_update_completed_ <-& (OR_u32_u32_804_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // 		iNsTr_11 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 350
        // Source expression
        // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[LSHR_u32_u32_810_sample_start_] 
        $T[LSHR_u32_u32_810_sample_completed_] 
        $T[LSHR_u32_u32_810_update_start_] 
        $T[LSHR_u32_u32_810_update_completed_] 
        // tmp6x_xi
        $T[R_tmp6x_xi_807_sample_start_] 
        $T[R_tmp6x_xi_807_sample_completed_] 
        $T[R_tmp6x_xi_807_update_start_] 
        $T[R_tmp6x_xi_807_update_completed_] 
        // implicit reference
        R_tmp6x_xi_807_sample_start_ <-& ($entry)
        R_tmp6x_xi_807_sample_completed_ <-& (R_tmp6x_xi_807_sample_start_)
        R_tmp6x_xi_807_update_start_ <-& (R_tmp6x_xi_807_sample_completed_)
        R_tmp6x_xi_807_update_completed_ <-& (R_tmp6x_xi_807_update_start_)
        LSHR_u32_u32_810_sample_start_ <-& (R_tmp6x_xi_807_update_completed_)
        ;;[LSHR_u32_u32_810_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_810_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_810_sample_start_ &-> (LSHR_u32_u32_810_Sample)
        LSHR_u32_u32_810_sample_completed_ <-& (LSHR_u32_u32_810_Sample)
        LSHR_u32_u32_810_sample_completed_ &-> ($null)
        LSHR_u32_u32_810_update_start_ &-> (LSHR_u32_u32_810_Update)
        LSHR_u32_u32_810_update_completed_ <-& (LSHR_u32_u32_810_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // 		iNsTr_12 := (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        //  file prog.aa, line 351
        // Source expression
        // (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        $T[AND_u32_u32_816_sample_start_] 
        $T[AND_u32_u32_816_sample_completed_] 
        $T[AND_u32_u32_816_update_start_] 
        $T[AND_u32_u32_816_update_completed_] 
        // iNsTr_11
        $T[R_iNsTr_11_813_sample_start_] 
        $T[R_iNsTr_11_813_sample_completed_] 
        $T[R_iNsTr_11_813_update_start_] 
        $T[R_iNsTr_11_813_update_completed_] 
        // implicit reference
        R_iNsTr_11_813_sample_start_ <-& (LSHR_u32_u32_810_update_completed_)
        R_iNsTr_11_813_sample_completed_ <-& (R_iNsTr_11_813_sample_start_)
        R_iNsTr_11_813_update_start_ <-& (R_iNsTr_11_813_sample_completed_)
        R_iNsTr_11_813_update_completed_ <-& (R_iNsTr_11_813_update_start_)
        AND_u32_u32_816_sample_start_ <-& (R_iNsTr_11_813_update_completed_)
        ;;[AND_u32_u32_816_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_816_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_816_sample_start_ &-> (AND_u32_u32_816_Sample)
        AND_u32_u32_816_sample_completed_ <-& (AND_u32_u32_816_Sample)
        AND_u32_u32_816_sample_completed_ &-> ($null)
        AND_u32_u32_816_update_start_ &-> (AND_u32_u32_816_Update)
        AND_u32_u32_816_update_completed_ <-& (AND_u32_u32_816_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        //  file prog.aa, line 352
        // Source expression
        // (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        $T[OR_u32_u32_822_sample_start_] 
        $T[OR_u32_u32_822_sample_completed_] 
        $T[OR_u32_u32_822_update_start_] 
        $T[OR_u32_u32_822_update_completed_] 
        // iNsTr_12
        $T[R_iNsTr_12_819_sample_start_] 
        $T[R_iNsTr_12_819_sample_completed_] 
        $T[R_iNsTr_12_819_update_start_] 
        $T[R_iNsTr_12_819_update_completed_] 
        // implicit reference
        R_iNsTr_12_819_sample_start_ <-& (AND_u32_u32_816_update_completed_)
        R_iNsTr_12_819_sample_completed_ <-& (R_iNsTr_12_819_sample_start_)
        R_iNsTr_12_819_update_start_ <-& (R_iNsTr_12_819_sample_completed_)
        R_iNsTr_12_819_update_completed_ <-& (R_iNsTr_12_819_update_start_)
        OR_u32_u32_822_sample_start_ <-& (R_iNsTr_12_819_update_completed_)
        ;;[OR_u32_u32_822_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_822_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_822_sample_start_ &-> (OR_u32_u32_822_Sample)
        OR_u32_u32_822_sample_completed_ <-& (OR_u32_u32_822_Sample)
        OR_u32_u32_822_sample_completed_ &-> ($null)
        OR_u32_u32_822_update_start_ &-> (OR_u32_u32_822_Update)
        OR_u32_u32_822_update_completed_ <-& (OR_u32_u32_822_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (tmp6x_xi ^ tmp10x_xi)
        //  file prog.aa, line 353
        // Source expression
        // (tmp6x_xi ^ tmp10x_xi)
        $T[XOR_u32_u32_827_sample_start_] 
        $T[XOR_u32_u32_827_sample_completed_] 
        $T[XOR_u32_u32_827_update_start_] 
        $T[XOR_u32_u32_827_update_completed_] 
        // tmp6x_xi
        $T[R_tmp6x_xi_825_sample_start_] 
        $T[R_tmp6x_xi_825_sample_completed_] 
        $T[R_tmp6x_xi_825_update_start_] 
        $T[R_tmp6x_xi_825_update_completed_] 
        // implicit reference
        R_tmp6x_xi_825_sample_start_ <-& ($entry)
        R_tmp6x_xi_825_sample_completed_ <-& (R_tmp6x_xi_825_sample_start_)
        R_tmp6x_xi_825_update_start_ <-& (R_tmp6x_xi_825_sample_completed_)
        R_tmp6x_xi_825_update_completed_ <-& (R_tmp6x_xi_825_update_start_)
        // tmp10x_xi
        $T[R_tmp10x_xi_826_sample_start_] 
        $T[R_tmp10x_xi_826_sample_completed_] 
        $T[R_tmp10x_xi_826_update_start_] 
        $T[R_tmp10x_xi_826_update_completed_] 
        // implicit reference
        R_tmp10x_xi_826_sample_start_ <-& ($entry)
        R_tmp10x_xi_826_sample_completed_ <-& (R_tmp10x_xi_826_sample_start_)
        R_tmp10x_xi_826_update_start_ <-& (R_tmp10x_xi_826_sample_completed_)
        R_tmp10x_xi_826_update_completed_ <-& (R_tmp10x_xi_826_update_start_)
        XOR_u32_u32_827_sample_start_ <-& (R_tmp6x_xi_825_update_completed_)
        XOR_u32_u32_827_sample_start_ <-& (R_tmp10x_xi_826_update_completed_)
        ;;[XOR_u32_u32_827_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_827_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_827_sample_start_ &-> (XOR_u32_u32_827_Sample)
        XOR_u32_u32_827_sample_completed_ <-& (XOR_u32_u32_827_Sample)
        XOR_u32_u32_827_sample_completed_ &-> ($null)
        XOR_u32_u32_827_update_start_ &-> (XOR_u32_u32_827_Update)
        XOR_u32_u32_827_update_completed_ <-& (XOR_u32_u32_827_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 354
        // Source expression
        // (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_833_sample_start_] 
        $T[AND_u32_u32_833_sample_completed_] 
        $T[AND_u32_u32_833_update_start_] 
        $T[AND_u32_u32_833_update_completed_] 
        // iNsTr_14
        $T[R_iNsTr_14_830_sample_start_] 
        $T[R_iNsTr_14_830_sample_completed_] 
        $T[R_iNsTr_14_830_update_start_] 
        $T[R_iNsTr_14_830_update_completed_] 
        // implicit reference
        R_iNsTr_14_830_sample_start_ <-& (XOR_u32_u32_827_update_completed_)
        R_iNsTr_14_830_sample_completed_ <-& (R_iNsTr_14_830_sample_start_)
        R_iNsTr_14_830_update_start_ <-& (R_iNsTr_14_830_sample_completed_)
        R_iNsTr_14_830_update_completed_ <-& (R_iNsTr_14_830_update_start_)
        AND_u32_u32_833_sample_start_ <-& (R_iNsTr_14_830_update_completed_)
        ;;[AND_u32_u32_833_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_833_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_833_sample_start_ &-> (AND_u32_u32_833_Sample)
        AND_u32_u32_833_sample_completed_ <-& (AND_u32_u32_833_Sample)
        AND_u32_u32_833_sample_completed_ &-> ($null)
        AND_u32_u32_833_update_start_ &-> (AND_u32_u32_833_Update)
        AND_u32_u32_833_update_completed_ <-& (AND_u32_u32_833_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // 		iNsTr_16 := (iNsTr_5 - iNsTr_7)
        //  file prog.aa, line 355
        // Source expression
        // (iNsTr_5 - iNsTr_7)
        $T[SUB_u32_u32_838_sample_start_] 
        $T[SUB_u32_u32_838_sample_completed_] 
        $T[SUB_u32_u32_838_update_start_] 
        $T[SUB_u32_u32_838_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_836_sample_start_] 
        $T[R_iNsTr_5_836_sample_completed_] 
        $T[R_iNsTr_5_836_update_start_] 
        $T[R_iNsTr_5_836_update_completed_] 
        // implicit reference
        R_iNsTr_5_836_sample_start_ <-& (AND_u32_u32_774_update_completed_)
        R_iNsTr_5_836_sample_completed_ <-& (R_iNsTr_5_836_sample_start_)
        R_iNsTr_5_836_update_start_ <-& (R_iNsTr_5_836_sample_completed_)
        R_iNsTr_5_836_update_completed_ <-& (R_iNsTr_5_836_update_start_)
        // iNsTr_7
        $T[R_iNsTr_7_837_sample_start_] 
        $T[R_iNsTr_7_837_sample_completed_] 
        $T[R_iNsTr_7_837_update_start_] 
        $T[R_iNsTr_7_837_update_completed_] 
        // implicit reference
        R_iNsTr_7_837_sample_start_ <-& (AND_u32_u32_786_update_completed_)
        R_iNsTr_7_837_sample_completed_ <-& (R_iNsTr_7_837_sample_start_)
        R_iNsTr_7_837_update_start_ <-& (R_iNsTr_7_837_sample_completed_)
        R_iNsTr_7_837_update_completed_ <-& (R_iNsTr_7_837_update_start_)
        SUB_u32_u32_838_sample_start_ <-& (R_iNsTr_5_836_update_completed_)
        SUB_u32_u32_838_sample_start_ <-& (R_iNsTr_7_837_update_completed_)
        ;;[SUB_u32_u32_838_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_838_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_838_sample_start_ &-> (SUB_u32_u32_838_Sample)
        SUB_u32_u32_838_sample_completed_ <-& (SUB_u32_u32_838_Sample)
        SUB_u32_u32_838_sample_completed_ &-> ($null)
        SUB_u32_u32_838_update_start_ &-> (SUB_u32_u32_838_Update)
        SUB_u32_u32_838_update_completed_ <-& (SUB_u32_u32_838_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_769_to_assign_stmt_839__entry__ |-> (assign_stmt_769_to_assign_stmt_839)
      assign_stmt_769_to_assign_stmt_839__exit__ <-| (assign_stmt_769_to_assign_stmt_839)
      // control-path for switch  
      //  file prog.aa, line 356
      ;;[switch_stmt_840_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_840__entry__ |-> (switch_stmt_840_dead_link)
      switch_stmt_840__exit__ <-| (switch_stmt_840_dead_link)
      //---------------------    switch statement  file prog.aa, line 356  --------------------------
      $P [switch_stmt_840__condition_check_place__] 
      switch_stmt_840__entry__ |-> (switch_stmt_840__condition_check_place__)
      ||[switch_stmt_840__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_840__condition_check_place__ |-> (switch_stmt_840__condition_check__)
      $P [switch_stmt_840__select__] 
      switch_stmt_840__select__ <-| (switch_stmt_840__condition_check__)
      // switch choice 0
      ;;[switch_stmt_840_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_1_xx_xloopexitx_xix_xi]
      bb_1_xx_xloopexitx_xix_xi <-| (switch_stmt_840_choice_0)
      // switch choice 1
      ;;[switch_stmt_840_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_1_udiv32x_xexitx_xpreheaderx_xi]
      bb_1_udiv32x_xexitx_xpreheaderx_xi <-| (switch_stmt_840_choice_1)
      ;;[switch_stmt_840_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_1_bbx_xnph7x_xix_xix_xpreheader]
      bb_1_bbx_xnph7x_xix_xix_xpreheader <-| (switch_stmt_840_choice_default)
      switch_stmt_840__select__ |-> (switch_stmt_840_choice_0 switch_stmt_840_choice_1 switch_stmt_840_choice_default)
      //---------------------   end of switch statement  file prog.aa, line 356  --------------------------
      ::[assign_stmt_872_to_assign_stmt_877] 
      {
        // 		iNsTr_25 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 373
        // Source expression
        // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_871_sample_start_] 
        $T[LSHR_u32_u32_871_sample_completed_] 
        $T[LSHR_u32_u32_871_update_start_] 
        $T[LSHR_u32_u32_871_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_868_sample_start_] 
        $T[R_xx_x016x_xix_xi_868_sample_completed_] 
        $T[R_xx_x016x_xix_xi_868_update_start_] 
        $T[R_xx_x016x_xix_xi_868_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_868_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_868_sample_completed_ <-& (R_xx_x016x_xix_xi_868_sample_start_)
        R_xx_x016x_xix_xi_868_update_start_ <-& (R_xx_x016x_xix_xi_868_sample_completed_)
        R_xx_x016x_xix_xi_868_update_completed_ <-& (R_xx_x016x_xix_xi_868_update_start_)
        LSHR_u32_u32_871_sample_start_ <-& (R_xx_x016x_xix_xi_868_update_completed_)
        ;;[LSHR_u32_u32_871_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_871_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_871_sample_start_ &-> (LSHR_u32_u32_871_Sample)
        LSHR_u32_u32_871_sample_completed_ <-& (LSHR_u32_u32_871_Sample)
        LSHR_u32_u32_871_sample_completed_ &-> ($null)
        LSHR_u32_u32_871_update_start_ &-> (LSHR_u32_u32_871_Update)
        LSHR_u32_u32_871_update_completed_ <-& (LSHR_u32_u32_871_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // 		iNsTr_26 := (iNsTr_25 > iNsTr_13)
        //  file prog.aa, line 375
        // Source expression
        // (iNsTr_25 > iNsTr_13)
        $T[UGT_u32_u1_876_sample_start_] 
        $T[UGT_u32_u1_876_sample_completed_] 
        $T[UGT_u32_u1_876_update_start_] 
        $T[UGT_u32_u1_876_update_completed_] 
        // iNsTr_25
        $T[R_iNsTr_25_874_sample_start_] 
        $T[R_iNsTr_25_874_sample_completed_] 
        $T[R_iNsTr_25_874_update_start_] 
        $T[R_iNsTr_25_874_update_completed_] 
        // implicit reference
        R_iNsTr_25_874_sample_start_ <-& (LSHR_u32_u32_871_update_completed_)
        R_iNsTr_25_874_sample_completed_ <-& (R_iNsTr_25_874_sample_start_)
        R_iNsTr_25_874_update_start_ <-& (R_iNsTr_25_874_sample_completed_)
        R_iNsTr_25_874_update_completed_ <-& (R_iNsTr_25_874_update_start_)
        // iNsTr_13
        $T[R_iNsTr_13_875_sample_start_] 
        $T[R_iNsTr_13_875_sample_completed_] 
        $T[R_iNsTr_13_875_update_start_] 
        $T[R_iNsTr_13_875_update_completed_] 
        // implicit reference
        R_iNsTr_13_875_sample_start_ <-& ($entry)
        R_iNsTr_13_875_sample_completed_ <-& (R_iNsTr_13_875_sample_start_)
        R_iNsTr_13_875_update_start_ <-& (R_iNsTr_13_875_sample_completed_)
        R_iNsTr_13_875_update_completed_ <-& (R_iNsTr_13_875_update_start_)
        UGT_u32_u1_876_sample_start_ <-& (R_iNsTr_25_874_update_completed_)
        UGT_u32_u1_876_sample_start_ <-& (R_iNsTr_13_875_update_completed_)
        ;;[UGT_u32_u1_876_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_876_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_876_sample_start_ &-> (UGT_u32_u1_876_Sample)
        UGT_u32_u1_876_sample_completed_ <-& (UGT_u32_u1_876_Sample)
        UGT_u32_u1_876_sample_completed_ &-> ($null)
        UGT_u32_u1_876_update_start_ &-> (UGT_u32_u1_876_Update)
        UGT_u32_u1_876_update_completed_ <-& (UGT_u32_u1_876_Update)
        // Target expression
        // (as target) iNsTr_26
        // iNsTr_26
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_872_to_assign_stmt_877__entry__ |-> (assign_stmt_872_to_assign_stmt_877)
      assign_stmt_872_to_assign_stmt_877__exit__ <-| (assign_stmt_872_to_assign_stmt_877)
      // if-statement  
      //  file prog.aa, line 376
      ;;[if_stmt_878_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_878__entry__ |-> (if_stmt_878_dead_link)
      if_stmt_878__exit__ <-| (if_stmt_878_dead_link)
      ;;[if_stmt_878_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_878__entry__ |-> (if_stmt_878_eval_test)
      $P [R_iNsTr_26_879_place]
      R_iNsTr_26_879_place <-| (if_stmt_878_eval_test)
      ;;[if_stmt_878_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_878_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_26_879_place |-> (if_stmt_878_if_link if_stmt_878_else_link)
      $P [bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader]
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader <-| (if_stmt_878_if_link)
      $P [bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi]
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi <-| (if_stmt_878_else_link)
      ::[assign_stmt_906_to_assign_stmt_917] 
      {
        // 		iNsTr_46 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 386
        // Source expression
        // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_905_sample_start_] 
        $T[SHL_u32_u32_905_sample_completed_] 
        $T[SHL_u32_u32_905_update_start_] 
        $T[SHL_u32_u32_905_update_completed_] 
        // shifted_divisorx_x03x_xix_xi
        $T[R_shifted_divisorx_x03x_xix_xi_902_sample_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_902_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xix_xi_902_update_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_902_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xix_xi_902_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xix_xi_902_sample_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_902_sample_start_)
        R_shifted_divisorx_x03x_xix_xi_902_update_start_ <-& (R_shifted_divisorx_x03x_xix_xi_902_sample_completed_)
        R_shifted_divisorx_x03x_xix_xi_902_update_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_902_update_start_)
        SHL_u32_u32_905_sample_start_ <-& (R_shifted_divisorx_x03x_xix_xi_902_update_completed_)
        ;;[SHL_u32_u32_905_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_905_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_905_sample_start_ &-> (SHL_u32_u32_905_Sample)
        SHL_u32_u32_905_sample_completed_ <-& (SHL_u32_u32_905_Sample)
        SHL_u32_u32_905_sample_completed_ &-> ($null)
        SHL_u32_u32_905_update_start_ &-> (SHL_u32_u32_905_Update)
        SHL_u32_u32_905_update_completed_ <-& (SHL_u32_u32_905_Update)
        // Target expression
        // (as target) iNsTr_46
        // iNsTr_46
        // implicit reference
        // 		iNsTr_47 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 387
        // Source expression
        // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_911_sample_start_] 
        $T[SHL_u32_u32_911_sample_completed_] 
        $T[SHL_u32_u32_911_update_start_] 
        $T[SHL_u32_u32_911_update_completed_] 
        // curr_quotientx_x02x_xix_xi
        $T[R_curr_quotientx_x02x_xix_xi_908_sample_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_908_sample_completed_] 
        $T[R_curr_quotientx_x02x_xix_xi_908_update_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_908_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xix_xi_908_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xix_xi_908_sample_completed_ <-& (R_curr_quotientx_x02x_xix_xi_908_sample_start_)
        R_curr_quotientx_x02x_xix_xi_908_update_start_ <-& (R_curr_quotientx_x02x_xix_xi_908_sample_completed_)
        R_curr_quotientx_x02x_xix_xi_908_update_completed_ <-& (R_curr_quotientx_x02x_xix_xi_908_update_start_)
        SHL_u32_u32_911_sample_start_ <-& (R_curr_quotientx_x02x_xix_xi_908_update_completed_)
        ;;[SHL_u32_u32_911_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_911_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_911_sample_start_ &-> (SHL_u32_u32_911_Sample)
        SHL_u32_u32_911_sample_completed_ <-& (SHL_u32_u32_911_Sample)
        SHL_u32_u32_911_sample_completed_ &-> ($null)
        SHL_u32_u32_911_update_start_ &-> (SHL_u32_u32_911_Update)
        SHL_u32_u32_911_update_completed_ <-& (SHL_u32_u32_911_Update)
        // Target expression
        // (as target) iNsTr_47
        // iNsTr_47
        // implicit reference
        // 		iNsTr_48 := (iNsTr_46 < iNsTr_25)
        //  file prog.aa, line 389
        // Source expression
        // (iNsTr_46 < iNsTr_25)
        $T[ULT_u32_u1_916_sample_start_] 
        $T[ULT_u32_u1_916_sample_completed_] 
        $T[ULT_u32_u1_916_update_start_] 
        $T[ULT_u32_u1_916_update_completed_] 
        // iNsTr_46
        $T[R_iNsTr_46_914_sample_start_] 
        $T[R_iNsTr_46_914_sample_completed_] 
        $T[R_iNsTr_46_914_update_start_] 
        $T[R_iNsTr_46_914_update_completed_] 
        // implicit reference
        R_iNsTr_46_914_sample_start_ <-& (SHL_u32_u32_905_update_completed_)
        R_iNsTr_46_914_sample_completed_ <-& (R_iNsTr_46_914_sample_start_)
        R_iNsTr_46_914_update_start_ <-& (R_iNsTr_46_914_sample_completed_)
        R_iNsTr_46_914_update_completed_ <-& (R_iNsTr_46_914_update_start_)
        // iNsTr_25
        $T[R_iNsTr_25_915_sample_start_] 
        $T[R_iNsTr_25_915_sample_completed_] 
        $T[R_iNsTr_25_915_update_start_] 
        $T[R_iNsTr_25_915_update_completed_] 
        // implicit reference
        R_iNsTr_25_915_sample_start_ <-& ($entry)
        R_iNsTr_25_915_sample_completed_ <-& (R_iNsTr_25_915_sample_start_)
        R_iNsTr_25_915_update_start_ <-& (R_iNsTr_25_915_sample_completed_)
        R_iNsTr_25_915_update_completed_ <-& (R_iNsTr_25_915_update_start_)
        ULT_u32_u1_916_sample_start_ <-& (R_iNsTr_46_914_update_completed_)
        ULT_u32_u1_916_sample_start_ <-& (R_iNsTr_25_915_update_completed_)
        ;;[ULT_u32_u1_916_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_916_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_916_sample_start_ &-> (ULT_u32_u1_916_Sample)
        ULT_u32_u1_916_sample_completed_ <-& (ULT_u32_u1_916_Sample)
        ULT_u32_u1_916_sample_completed_ &-> ($null)
        ULT_u32_u1_916_update_start_ &-> (ULT_u32_u1_916_Update)
        ULT_u32_u1_916_update_completed_ <-& (ULT_u32_u1_916_Update)
        // Target expression
        // (as target) iNsTr_48
        // iNsTr_48
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_906_to_assign_stmt_917__entry__ |-> (assign_stmt_906_to_assign_stmt_917)
      assign_stmt_906_to_assign_stmt_917__exit__ <-| (assign_stmt_906_to_assign_stmt_917)
      // if-statement  
      //  file prog.aa, line 390
      ;;[if_stmt_918_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_918__entry__ |-> (if_stmt_918_dead_link)
      if_stmt_918__exit__ <-| (if_stmt_918_dead_link)
      ;;[if_stmt_918_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_918__entry__ |-> (if_stmt_918_eval_test)
      $P [R_iNsTr_48_919_place]
      R_iNsTr_48_919_place <-| (if_stmt_918_eval_test)
      ;;[if_stmt_918_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_918_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_48_919_place |-> (if_stmt_918_if_link if_stmt_918_else_link)
      $P [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi]
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi <-| (if_stmt_918_if_link)
      $P [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit]
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit <-| (if_stmt_918_else_link)
      ::[assign_stmt_954_to_assign_stmt_964] 
      {
        // 		iNsTr_36 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        //  file prog.aa, line 402
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        $T[ADD_u32_u32_953_sample_start_] 
        $T[ADD_u32_u32_953_sample_completed_] 
        $T[ADD_u32_u32_953_update_start_] 
        $T[ADD_u32_u32_953_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xi
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_951_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_951_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_951_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_951_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xi_951_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xi_951_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_951_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_951_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_951_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_951_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_951_update_start_)
        // quotientx_x05x_xix_xi
        $T[R_quotientx_x05x_xix_xi_952_sample_start_] 
        $T[R_quotientx_x05x_xix_xi_952_sample_completed_] 
        $T[R_quotientx_x05x_xix_xi_952_update_start_] 
        $T[R_quotientx_x05x_xix_xi_952_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xix_xi_952_sample_start_ <-& ($entry)
        R_quotientx_x05x_xix_xi_952_sample_completed_ <-& (R_quotientx_x05x_xix_xi_952_sample_start_)
        R_quotientx_x05x_xix_xi_952_update_start_ <-& (R_quotientx_x05x_xix_xi_952_sample_completed_)
        R_quotientx_x05x_xix_xi_952_update_completed_ <-& (R_quotientx_x05x_xix_xi_952_update_start_)
        ADD_u32_u32_953_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_951_update_completed_)
        ADD_u32_u32_953_sample_start_ <-& (R_quotientx_x05x_xix_xi_952_update_completed_)
        ;;[ADD_u32_u32_953_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_953_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_953_sample_start_ &-> (ADD_u32_u32_953_Sample)
        ADD_u32_u32_953_sample_completed_ <-& (ADD_u32_u32_953_Sample)
        ADD_u32_u32_953_sample_completed_ &-> ($null)
        ADD_u32_u32_953_update_start_ &-> (ADD_u32_u32_953_Update)
        ADD_u32_u32_953_update_completed_ <-& (ADD_u32_u32_953_Update)
        // Target expression
        // (as target) iNsTr_36
        // iNsTr_36
        // implicit reference
        // 		iNsTr_37 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        //  file prog.aa, line 403
        // Source expression
        // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        $T[SUB_u32_u32_958_sample_start_] 
        $T[SUB_u32_u32_958_sample_completed_] 
        $T[SUB_u32_u32_958_update_start_] 
        $T[SUB_u32_u32_958_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_956_sample_start_] 
        $T[R_xx_x016x_xix_xi_956_sample_completed_] 
        $T[R_xx_x016x_xix_xi_956_update_start_] 
        $T[R_xx_x016x_xix_xi_956_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_956_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_956_sample_completed_ <-& (R_xx_x016x_xix_xi_956_sample_start_)
        R_xx_x016x_xix_xi_956_update_start_ <-& (R_xx_x016x_xix_xi_956_sample_completed_)
        R_xx_x016x_xix_xi_956_update_completed_ <-& (R_xx_x016x_xix_xi_956_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_957_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_957_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_957_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_957_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xi_957_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_957_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_957_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_957_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_957_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_957_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_957_update_start_)
        SUB_u32_u32_958_sample_start_ <-& (R_xx_x016x_xix_xi_956_update_completed_)
        SUB_u32_u32_958_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_957_update_completed_)
        ;;[SUB_u32_u32_958_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_958_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_958_sample_start_ &-> (SUB_u32_u32_958_Sample)
        SUB_u32_u32_958_sample_completed_ <-& (SUB_u32_u32_958_Sample)
        SUB_u32_u32_958_sample_completed_ &-> ($null)
        SUB_u32_u32_958_update_start_ &-> (SUB_u32_u32_958_Update)
        SUB_u32_u32_958_update_completed_ <-& (SUB_u32_u32_958_Update)
        // Target expression
        // (as target) iNsTr_37
        // iNsTr_37
        // implicit reference
        // 		iNsTr_38 := (iNsTr_37 < iNsTr_13)
        //  file prog.aa, line 405
        // Source expression
        // (iNsTr_37 < iNsTr_13)
        $T[ULT_u32_u1_963_sample_start_] 
        $T[ULT_u32_u1_963_sample_completed_] 
        $T[ULT_u32_u1_963_update_start_] 
        $T[ULT_u32_u1_963_update_completed_] 
        // iNsTr_37
        $T[R_iNsTr_37_961_sample_start_] 
        $T[R_iNsTr_37_961_sample_completed_] 
        $T[R_iNsTr_37_961_update_start_] 
        $T[R_iNsTr_37_961_update_completed_] 
        // implicit reference
        R_iNsTr_37_961_sample_start_ <-& (SUB_u32_u32_958_update_completed_)
        R_iNsTr_37_961_sample_completed_ <-& (R_iNsTr_37_961_sample_start_)
        R_iNsTr_37_961_update_start_ <-& (R_iNsTr_37_961_sample_completed_)
        R_iNsTr_37_961_update_completed_ <-& (R_iNsTr_37_961_update_start_)
        // iNsTr_13
        $T[R_iNsTr_13_962_sample_start_] 
        $T[R_iNsTr_13_962_sample_completed_] 
        $T[R_iNsTr_13_962_update_start_] 
        $T[R_iNsTr_13_962_update_completed_] 
        // implicit reference
        R_iNsTr_13_962_sample_start_ <-& ($entry)
        R_iNsTr_13_962_sample_completed_ <-& (R_iNsTr_13_962_sample_start_)
        R_iNsTr_13_962_update_start_ <-& (R_iNsTr_13_962_sample_completed_)
        R_iNsTr_13_962_update_completed_ <-& (R_iNsTr_13_962_update_start_)
        ULT_u32_u1_963_sample_start_ <-& (R_iNsTr_37_961_update_completed_)
        ULT_u32_u1_963_sample_start_ <-& (R_iNsTr_13_962_update_completed_)
        ;;[ULT_u32_u1_963_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_963_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_963_sample_start_ &-> (ULT_u32_u1_963_Sample)
        ULT_u32_u1_963_sample_completed_ <-& (ULT_u32_u1_963_Sample)
        ULT_u32_u1_963_sample_completed_ &-> ($null)
        ULT_u32_u1_963_update_start_ &-> (ULT_u32_u1_963_Update)
        ULT_u32_u1_963_update_completed_ <-& (ULT_u32_u1_963_Update)
        // Target expression
        // (as target) iNsTr_38
        // iNsTr_38
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_954_to_assign_stmt_964__entry__ |-> (assign_stmt_954_to_assign_stmt_964)
      assign_stmt_954_to_assign_stmt_964__exit__ <-| (assign_stmt_954_to_assign_stmt_964)
      // if-statement  
      //  file prog.aa, line 406
      ;;[if_stmt_965_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_965__entry__ |-> (if_stmt_965_dead_link)
      if_stmt_965__exit__ <-| (if_stmt_965_dead_link)
      ;;[if_stmt_965_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_965__entry__ |-> (if_stmt_965_eval_test)
      $P [R_iNsTr_38_966_place]
      R_iNsTr_38_966_place <-| (if_stmt_965_eval_test)
      ;;[if_stmt_965_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_965_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_38_966_place |-> (if_stmt_965_if_link if_stmt_965_else_link)
      $P [xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit]
      xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit <-| (if_stmt_965_if_link)
      $P [xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi]
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi <-| (if_stmt_965_else_link)
      ::[assign_stmt_1001_to_assign_stmt_1020] 
      {
        // 		iNsTr_21 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 421
        // Source expression
        // (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_1000_sample_start_] 
        $T[AND_u32_u32_1000_sample_completed_] 
        $T[AND_u32_u32_1000_update_start_] 
        $T[AND_u32_u32_1000_update_completed_] 
        // tempx_x0x_xphx_xi
        $T[R_tempx_x0x_xphx_xi_997_sample_start_] 
        $T[R_tempx_x0x_xphx_xi_997_sample_completed_] 
        $T[R_tempx_x0x_xphx_xi_997_update_start_] 
        $T[R_tempx_x0x_xphx_xi_997_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xi_997_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xi_997_sample_completed_ <-& (R_tempx_x0x_xphx_xi_997_sample_start_)
        R_tempx_x0x_xphx_xi_997_update_start_ <-& (R_tempx_x0x_xphx_xi_997_sample_completed_)
        R_tempx_x0x_xphx_xi_997_update_completed_ <-& (R_tempx_x0x_xphx_xi_997_update_start_)
        AND_u32_u32_1000_sample_start_ <-& (R_tempx_x0x_xphx_xi_997_update_completed_)
        ;;[AND_u32_u32_1000_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1000_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1000_sample_start_ &-> (AND_u32_u32_1000_Sample)
        AND_u32_u32_1000_sample_completed_ <-& (AND_u32_u32_1000_Sample)
        AND_u32_u32_1000_sample_completed_ &-> ($null)
        AND_u32_u32_1000_update_start_ &-> (AND_u32_u32_1000_Update)
        AND_u32_u32_1000_update_completed_ <-& (AND_u32_u32_1000_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 423
        // Source expression
        // (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_1006_sample_start_] 
        $T[EQ_u32_u1_1006_sample_completed_] 
        $T[EQ_u32_u1_1006_update_start_] 
        $T[EQ_u32_u1_1006_update_completed_] 
        // iNsTr_21
        $T[R_iNsTr_21_1003_sample_start_] 
        $T[R_iNsTr_21_1003_sample_completed_] 
        $T[R_iNsTr_21_1003_update_start_] 
        $T[R_iNsTr_21_1003_update_completed_] 
        // implicit reference
        R_iNsTr_21_1003_sample_start_ <-& (AND_u32_u32_1000_update_completed_)
        R_iNsTr_21_1003_sample_completed_ <-& (R_iNsTr_21_1003_sample_start_)
        R_iNsTr_21_1003_update_start_ <-& (R_iNsTr_21_1003_sample_completed_)
        R_iNsTr_21_1003_update_completed_ <-& (R_iNsTr_21_1003_update_start_)
        EQ_u32_u1_1006_sample_start_ <-& (R_iNsTr_21_1003_update_completed_)
        ;;[EQ_u32_u1_1006_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1006_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1006_sample_start_ &-> (EQ_u32_u1_1006_Sample)
        EQ_u32_u1_1006_sample_completed_ <-& (EQ_u32_u1_1006_Sample)
        EQ_u32_u1_1006_sample_completed_ &-> ($null)
        EQ_u32_u1_1006_update_start_ &-> (EQ_u32_u1_1006_Update)
        EQ_u32_u1_1006_update_completed_ <-& (EQ_u32_u1_1006_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // 		iNsTr_23 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 425
        // Source expression
        // (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_1014_sample_start_] 
        $T[NEQ_i32_u1_1014_sample_completed_] 
        $T[NEQ_i32_u1_1014_update_start_] 
        $T[NEQ_i32_u1_1014_update_completed_] 
        // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
        $T[type_cast_1010_sample_start_] 
        $T[type_cast_1010_sample_completed_] 
        $T[type_cast_1010_update_start_] 
        $T[type_cast_1010_update_completed_] 
        // tempx_x0x_xphx_xi
        $T[R_tempx_x0x_xphx_xi_1009_sample_start_] 
        $T[R_tempx_x0x_xphx_xi_1009_sample_completed_] 
        $T[R_tempx_x0x_xphx_xi_1009_update_start_] 
        $T[R_tempx_x0x_xphx_xi_1009_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xi_1009_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xi_1009_sample_completed_ <-& (R_tempx_x0x_xphx_xi_1009_sample_start_)
        R_tempx_x0x_xphx_xi_1009_update_start_ <-& (R_tempx_x0x_xphx_xi_1009_sample_completed_)
        R_tempx_x0x_xphx_xi_1009_update_completed_ <-& (R_tempx_x0x_xphx_xi_1009_update_start_)
        type_cast_1010_sample_start_ <-& (R_tempx_x0x_xphx_xi_1009_update_completed_)
        ;;[type_cast_1010_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1010_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1010_sample_start_ &-> (type_cast_1010_Sample)
        type_cast_1010_sample_completed_ <-& (type_cast_1010_Sample)
        type_cast_1010_sample_completed_ &-> ($null)
        type_cast_1010_update_start_ &-> (type_cast_1010_Update)
        type_cast_1010_update_completed_ <-& (type_cast_1010_Update)
        // flow-through
        type_cast_1010_update_start_ <-& (type_cast_1010_sample_completed_)
        NEQ_i32_u1_1014_sample_start_ <-& (type_cast_1010_update_completed_)
        ;;[NEQ_i32_u1_1014_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_1014_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_1014_sample_start_ &-> (NEQ_i32_u1_1014_Sample)
        NEQ_i32_u1_1014_sample_completed_ <-& (NEQ_i32_u1_1014_Sample)
        NEQ_i32_u1_1014_sample_completed_ &-> ($null)
        NEQ_i32_u1_1014_update_start_ &-> (NEQ_i32_u1_1014_Update)
        NEQ_i32_u1_1014_update_completed_ <-& (NEQ_i32_u1_1014_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // 		orx_xcond11x_xi := (iNsTr_22 & iNsTr_23)
        //  file prog.aa, line 426
        // Source expression
        // (iNsTr_22 & iNsTr_23)
        $T[AND_u1_u1_1019_sample_start_] 
        $T[AND_u1_u1_1019_sample_completed_] 
        $T[AND_u1_u1_1019_update_start_] 
        $T[AND_u1_u1_1019_update_completed_] 
        // iNsTr_22
        $T[R_iNsTr_22_1017_sample_start_] 
        $T[R_iNsTr_22_1017_sample_completed_] 
        $T[R_iNsTr_22_1017_update_start_] 
        $T[R_iNsTr_22_1017_update_completed_] 
        // implicit reference
        R_iNsTr_22_1017_sample_start_ <-& (EQ_u32_u1_1006_update_completed_)
        R_iNsTr_22_1017_sample_completed_ <-& (R_iNsTr_22_1017_sample_start_)
        R_iNsTr_22_1017_update_start_ <-& (R_iNsTr_22_1017_sample_completed_)
        R_iNsTr_22_1017_update_completed_ <-& (R_iNsTr_22_1017_update_start_)
        // iNsTr_23
        $T[R_iNsTr_23_1018_sample_start_] 
        $T[R_iNsTr_23_1018_sample_completed_] 
        $T[R_iNsTr_23_1018_update_start_] 
        $T[R_iNsTr_23_1018_update_completed_] 
        // implicit reference
        R_iNsTr_23_1018_sample_start_ <-& (NEQ_i32_u1_1014_update_completed_)
        R_iNsTr_23_1018_sample_completed_ <-& (R_iNsTr_23_1018_sample_start_)
        R_iNsTr_23_1018_update_start_ <-& (R_iNsTr_23_1018_sample_completed_)
        R_iNsTr_23_1018_update_completed_ <-& (R_iNsTr_23_1018_update_start_)
        AND_u1_u1_1019_sample_start_ <-& (R_iNsTr_22_1017_update_completed_)
        AND_u1_u1_1019_sample_start_ <-& (R_iNsTr_23_1018_update_completed_)
        ;;[AND_u1_u1_1019_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_1019_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_1019_sample_start_ &-> (AND_u1_u1_1019_Sample)
        AND_u1_u1_1019_sample_completed_ <-& (AND_u1_u1_1019_Sample)
        AND_u1_u1_1019_sample_completed_ &-> ($null)
        AND_u1_u1_1019_update_start_ &-> (AND_u1_u1_1019_Update)
        AND_u1_u1_1019_update_completed_ <-& (AND_u1_u1_1019_Update)
        // Target expression
        // (as target) orx_xcond11x_xi
        // orx_xcond11x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1001_to_assign_stmt_1020__entry__ |-> (assign_stmt_1001_to_assign_stmt_1020)
      assign_stmt_1001_to_assign_stmt_1020__exit__ <-| (assign_stmt_1001_to_assign_stmt_1020)
      // if-statement  
      //  file prog.aa, line 427
      ;;[if_stmt_1021_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1021__entry__ |-> (if_stmt_1021_dead_link)
      if_stmt_1021__exit__ <-| (if_stmt_1021_dead_link)
      ;;[if_stmt_1021_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1021__entry__ |-> (if_stmt_1021_eval_test)
      $P [R_orx_xcond11x_xi_1022_place]
      R_orx_xcond11x_xi_1022_place <-| (if_stmt_1021_eval_test)
      ;;[if_stmt_1021_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1021_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11x_xi_1022_place |-> (if_stmt_1021_if_link if_stmt_1021_else_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader]
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader <-| (if_stmt_1021_if_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi]
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi <-| (if_stmt_1021_else_link)
      ::[assign_stmt_1049_to_assign_stmt_1080] 
      {
        // 		iNsTr_41 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 437
        // Source expression
        // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_1048_sample_start_] 
        $T[SHL_u32_u32_1048_sample_completed_] 
        $T[SHL_u32_u32_1048_update_start_] 
        $T[SHL_u32_u32_1048_update_completed_] 
        // tempx_x012x_xi
        $T[R_tempx_x012x_xi_1045_sample_start_] 
        $T[R_tempx_x012x_xi_1045_sample_completed_] 
        $T[R_tempx_x012x_xi_1045_update_start_] 
        $T[R_tempx_x012x_xi_1045_update_completed_] 
        // implicit reference
        R_tempx_x012x_xi_1045_sample_start_ <-& ($entry)
        R_tempx_x012x_xi_1045_sample_completed_ <-& (R_tempx_x012x_xi_1045_sample_start_)
        R_tempx_x012x_xi_1045_update_start_ <-& (R_tempx_x012x_xi_1045_sample_completed_)
        R_tempx_x012x_xi_1045_update_completed_ <-& (R_tempx_x012x_xi_1045_update_start_)
        SHL_u32_u32_1048_sample_start_ <-& (R_tempx_x012x_xi_1045_update_completed_)
        ;;[SHL_u32_u32_1048_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1048_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1048_sample_start_ &-> (SHL_u32_u32_1048_Sample)
        SHL_u32_u32_1048_sample_completed_ <-& (SHL_u32_u32_1048_Sample)
        SHL_u32_u32_1048_sample_completed_ &-> ($null)
        SHL_u32_u32_1048_update_start_ &-> (SHL_u32_u32_1048_Update)
        SHL_u32_u32_1048_update_completed_ <-& (SHL_u32_u32_1048_Update)
        // Target expression
        // (as target) iNsTr_41
        // iNsTr_41
        // implicit reference
        // 		iNsTr_42 := (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 438
        // Source expression
        // (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_1054_sample_start_] 
        $T[AND_u32_u32_1054_sample_completed_] 
        $T[AND_u32_u32_1054_update_start_] 
        $T[AND_u32_u32_1054_update_completed_] 
        // iNsTr_41
        $T[R_iNsTr_41_1051_sample_start_] 
        $T[R_iNsTr_41_1051_sample_completed_] 
        $T[R_iNsTr_41_1051_update_start_] 
        $T[R_iNsTr_41_1051_update_completed_] 
        // implicit reference
        R_iNsTr_41_1051_sample_start_ <-& (SHL_u32_u32_1048_update_completed_)
        R_iNsTr_41_1051_sample_completed_ <-& (R_iNsTr_41_1051_sample_start_)
        R_iNsTr_41_1051_update_start_ <-& (R_iNsTr_41_1051_sample_completed_)
        R_iNsTr_41_1051_update_completed_ <-& (R_iNsTr_41_1051_update_start_)
        AND_u32_u32_1054_sample_start_ <-& (R_iNsTr_41_1051_update_completed_)
        ;;[AND_u32_u32_1054_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1054_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1054_sample_start_ &-> (AND_u32_u32_1054_Sample)
        AND_u32_u32_1054_sample_completed_ <-& (AND_u32_u32_1054_Sample)
        AND_u32_u32_1054_sample_completed_ &-> ($null)
        AND_u32_u32_1054_update_start_ &-> (AND_u32_u32_1054_Update)
        AND_u32_u32_1054_update_completed_ <-& (AND_u32_u32_1054_Update)
        // Target expression
        // (as target) iNsTr_42
        // iNsTr_42
        // implicit reference
        // 		iNsTr_43 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 440
        // Source expression
        // (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_1060_sample_start_] 
        $T[EQ_u32_u1_1060_sample_completed_] 
        $T[EQ_u32_u1_1060_update_start_] 
        $T[EQ_u32_u1_1060_update_completed_] 
        // iNsTr_42
        $T[R_iNsTr_42_1057_sample_start_] 
        $T[R_iNsTr_42_1057_sample_completed_] 
        $T[R_iNsTr_42_1057_update_start_] 
        $T[R_iNsTr_42_1057_update_completed_] 
        // implicit reference
        R_iNsTr_42_1057_sample_start_ <-& (AND_u32_u32_1054_update_completed_)
        R_iNsTr_42_1057_sample_completed_ <-& (R_iNsTr_42_1057_sample_start_)
        R_iNsTr_42_1057_update_start_ <-& (R_iNsTr_42_1057_sample_completed_)
        R_iNsTr_42_1057_update_completed_ <-& (R_iNsTr_42_1057_update_start_)
        EQ_u32_u1_1060_sample_start_ <-& (R_iNsTr_42_1057_update_completed_)
        ;;[EQ_u32_u1_1060_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_1060_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_1060_sample_start_ &-> (EQ_u32_u1_1060_Sample)
        EQ_u32_u1_1060_sample_completed_ <-& (EQ_u32_u1_1060_Sample)
        EQ_u32_u1_1060_sample_completed_ &-> ($null)
        EQ_u32_u1_1060_update_start_ &-> (EQ_u32_u1_1060_Update)
        EQ_u32_u1_1060_update_completed_ <-& (EQ_u32_u1_1060_Update)
        // Target expression
        // (as target) iNsTr_43
        // iNsTr_43
        // implicit reference
        // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 442
        // Source expression
        // (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_1068_sample_start_] 
        $T[NEQ_i32_u1_1068_sample_completed_] 
        $T[NEQ_i32_u1_1068_update_start_] 
        $T[NEQ_i32_u1_1068_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_41 )
        $T[type_cast_1064_sample_start_] 
        $T[type_cast_1064_sample_completed_] 
        $T[type_cast_1064_update_start_] 
        $T[type_cast_1064_update_completed_] 
        // iNsTr_41
        $T[R_iNsTr_41_1063_sample_start_] 
        $T[R_iNsTr_41_1063_sample_completed_] 
        $T[R_iNsTr_41_1063_update_start_] 
        $T[R_iNsTr_41_1063_update_completed_] 
        // implicit reference
        R_iNsTr_41_1063_sample_start_ <-& (SHL_u32_u32_1048_update_completed_)
        R_iNsTr_41_1063_sample_completed_ <-& (R_iNsTr_41_1063_sample_start_)
        R_iNsTr_41_1063_update_start_ <-& (R_iNsTr_41_1063_sample_completed_)
        R_iNsTr_41_1063_update_completed_ <-& (R_iNsTr_41_1063_update_start_)
        type_cast_1064_sample_start_ <-& (R_iNsTr_41_1063_update_completed_)
        ;;[type_cast_1064_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1064_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1064_sample_start_ &-> (type_cast_1064_Sample)
        type_cast_1064_sample_completed_ <-& (type_cast_1064_Sample)
        type_cast_1064_sample_completed_ &-> ($null)
        type_cast_1064_update_start_ &-> (type_cast_1064_Update)
        type_cast_1064_update_completed_ <-& (type_cast_1064_Update)
        // flow-through
        type_cast_1064_update_start_ <-& (type_cast_1064_sample_completed_)
        NEQ_i32_u1_1068_sample_start_ <-& (type_cast_1064_update_completed_)
        ;;[NEQ_i32_u1_1068_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_1068_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_1068_sample_start_ &-> (NEQ_i32_u1_1068_Sample)
        NEQ_i32_u1_1068_sample_completed_ <-& (NEQ_i32_u1_1068_Sample)
        NEQ_i32_u1_1068_sample_completed_ &-> ($null)
        NEQ_i32_u1_1068_update_start_ &-> (NEQ_i32_u1_1068_Update)
        NEQ_i32_u1_1068_update_completed_ <-& (NEQ_i32_u1_1068_Update)
        // Target expression
        // (as target) iNsTr_44
        // iNsTr_44
        // implicit reference
        // 		orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
        //  file prog.aa, line 443
        // Source expression
        // (iNsTr_43 & iNsTr_44)
        $T[AND_u1_u1_1073_sample_start_] 
        $T[AND_u1_u1_1073_sample_completed_] 
        $T[AND_u1_u1_1073_update_start_] 
        $T[AND_u1_u1_1073_update_completed_] 
        // iNsTr_43
        $T[R_iNsTr_43_1071_sample_start_] 
        $T[R_iNsTr_43_1071_sample_completed_] 
        $T[R_iNsTr_43_1071_update_start_] 
        $T[R_iNsTr_43_1071_update_completed_] 
        // implicit reference
        R_iNsTr_43_1071_sample_start_ <-& (EQ_u32_u1_1060_update_completed_)
        R_iNsTr_43_1071_sample_completed_ <-& (R_iNsTr_43_1071_sample_start_)
        R_iNsTr_43_1071_update_start_ <-& (R_iNsTr_43_1071_sample_completed_)
        R_iNsTr_43_1071_update_completed_ <-& (R_iNsTr_43_1071_update_start_)
        // iNsTr_44
        $T[R_iNsTr_44_1072_sample_start_] 
        $T[R_iNsTr_44_1072_sample_completed_] 
        $T[R_iNsTr_44_1072_update_start_] 
        $T[R_iNsTr_44_1072_update_completed_] 
        // implicit reference
        R_iNsTr_44_1072_sample_start_ <-& (NEQ_i32_u1_1068_update_completed_)
        R_iNsTr_44_1072_sample_completed_ <-& (R_iNsTr_44_1072_sample_start_)
        R_iNsTr_44_1072_update_start_ <-& (R_iNsTr_44_1072_sample_completed_)
        R_iNsTr_44_1072_update_completed_ <-& (R_iNsTr_44_1072_update_start_)
        AND_u1_u1_1073_sample_start_ <-& (R_iNsTr_43_1071_update_completed_)
        AND_u1_u1_1073_sample_start_ <-& (R_iNsTr_44_1072_update_completed_)
        ;;[AND_u1_u1_1073_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_1073_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_1073_sample_start_ &-> (AND_u1_u1_1073_Sample)
        AND_u1_u1_1073_sample_completed_ <-& (AND_u1_u1_1073_Sample)
        AND_u1_u1_1073_sample_completed_ &-> ($null)
        AND_u1_u1_1073_update_start_ &-> (AND_u1_u1_1073_Update)
        AND_u1_u1_1073_update_completed_ <-& (AND_u1_u1_1073_Update)
        // Target expression
        // (as target) orx_xcondx_xi
        // orx_xcondx_xi
        // implicit reference
        // 		indvarx_xnextx_xi := (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 444
        // Source expression
        // (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_1079_sample_start_] 
        $T[ADD_u32_u32_1079_sample_completed_] 
        $T[ADD_u32_u32_1079_update_start_] 
        $T[ADD_u32_u32_1079_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_1076_sample_start_] 
        $T[R_iNsTr_40_1076_sample_completed_] 
        $T[R_iNsTr_40_1076_update_start_] 
        $T[R_iNsTr_40_1076_update_completed_] 
        // implicit reference
        R_iNsTr_40_1076_sample_start_ <-& ($entry)
        R_iNsTr_40_1076_sample_completed_ <-& (R_iNsTr_40_1076_sample_start_)
        R_iNsTr_40_1076_update_start_ <-& (R_iNsTr_40_1076_sample_completed_)
        R_iNsTr_40_1076_update_completed_ <-& (R_iNsTr_40_1076_update_start_)
        ADD_u32_u32_1079_sample_start_ <-& (R_iNsTr_40_1076_update_completed_)
        ;;[ADD_u32_u32_1079_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1079_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1079_sample_start_ &-> (ADD_u32_u32_1079_Sample)
        ADD_u32_u32_1079_sample_completed_ <-& (ADD_u32_u32_1079_Sample)
        ADD_u32_u32_1079_sample_completed_ &-> ($null)
        ADD_u32_u32_1079_update_start_ &-> (ADD_u32_u32_1079_Update)
        ADD_u32_u32_1079_update_completed_ <-& (ADD_u32_u32_1079_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi
        // indvarx_xnextx_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1049_to_assign_stmt_1080__entry__ |-> (assign_stmt_1049_to_assign_stmt_1080)
      assign_stmt_1049_to_assign_stmt_1080__exit__ <-| (assign_stmt_1049_to_assign_stmt_1080)
      // if-statement  
      //  file prog.aa, line 445
      ;;[if_stmt_1081_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1081__entry__ |-> (if_stmt_1081_dead_link)
      if_stmt_1081__exit__ <-| (if_stmt_1081_dead_link)
      ;;[if_stmt_1081_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1081__entry__ |-> (if_stmt_1081_eval_test)
      $P [R_orx_xcondx_xi_1082_place]
      R_orx_xcondx_xi_1082_place <-| (if_stmt_1081_eval_test)
      ;;[if_stmt_1081_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1081_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xi_1082_place |-> (if_stmt_1081_if_link if_stmt_1081_else_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xi <-| (if_stmt_1081_if_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi <-| (if_stmt_1081_else_link)
      ::[assign_stmt_1102_to_assign_stmt_1118] 
      {
        // 		xx_xnot := (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
        //  file prog.aa, line 451
        // Source expression
        // (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
        $T[OR_u32_u32_1101_sample_start_] 
        $T[OR_u32_u32_1101_sample_completed_] 
        $T[OR_u32_u32_1101_update_start_] 
        $T[OR_u32_u32_1101_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1098_sample_start_] 
        $T[R_iNsTr_6_1098_sample_completed_] 
        $T[R_iNsTr_6_1098_update_start_] 
        $T[R_iNsTr_6_1098_update_completed_] 
        // implicit reference
        R_iNsTr_6_1098_sample_start_ <-& ($entry)
        R_iNsTr_6_1098_sample_completed_ <-& (R_iNsTr_6_1098_sample_start_)
        R_iNsTr_6_1098_update_start_ <-& (R_iNsTr_6_1098_sample_completed_)
        R_iNsTr_6_1098_update_completed_ <-& (R_iNsTr_6_1098_update_start_)
        OR_u32_u32_1101_sample_start_ <-& (R_iNsTr_6_1098_update_completed_)
        ;;[OR_u32_u32_1101_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1101_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1101_sample_start_ &-> (OR_u32_u32_1101_Sample)
        OR_u32_u32_1101_sample_completed_ <-& (OR_u32_u32_1101_Sample)
        OR_u32_u32_1101_sample_completed_ &-> ($null)
        OR_u32_u32_1101_update_start_ &-> (OR_u32_u32_1101_Update)
        OR_u32_u32_1101_update_completed_ <-& (OR_u32_u32_1101_Update)
        // Target expression
        // (as target) xx_xnot
        // xx_xnot
        // implicit reference
        // 		tmp21x_xi := (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 452
        // Source expression
        // (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[XOR_u32_u32_1107_sample_start_] 
        $T[XOR_u32_u32_1107_sample_completed_] 
        $T[XOR_u32_u32_1107_update_start_] 
        $T[XOR_u32_u32_1107_update_completed_] 
        // xx_xnot
        $T[R_xx_xnot_1104_sample_start_] 
        $T[R_xx_xnot_1104_sample_completed_] 
        $T[R_xx_xnot_1104_update_start_] 
        $T[R_xx_xnot_1104_update_completed_] 
        // implicit reference
        R_xx_xnot_1104_sample_start_ <-& (OR_u32_u32_1101_update_completed_)
        R_xx_xnot_1104_sample_completed_ <-& (R_xx_xnot_1104_sample_start_)
        R_xx_xnot_1104_update_start_ <-& (R_xx_xnot_1104_sample_completed_)
        R_xx_xnot_1104_update_completed_ <-& (R_xx_xnot_1104_update_start_)
        XOR_u32_u32_1107_sample_start_ <-& (R_xx_xnot_1104_update_completed_)
        ;;[XOR_u32_u32_1107_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_1107_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_1107_sample_start_ &-> (XOR_u32_u32_1107_Sample)
        XOR_u32_u32_1107_sample_completed_ <-& (XOR_u32_u32_1107_Sample)
        XOR_u32_u32_1107_sample_completed_ &-> ($null)
        XOR_u32_u32_1107_update_start_ &-> (XOR_u32_u32_1107_Update)
        XOR_u32_u32_1107_update_completed_ <-& (XOR_u32_u32_1107_Update)
        // Target expression
        // (as target) tmp21x_xi
        // tmp21x_xi
        // implicit reference
        // 		tmp25x_xi := (tmp21x_xi + iNsTr_5)
        //  file prog.aa, line 453
        // Source expression
        // (tmp21x_xi + iNsTr_5)
        $T[ADD_u32_u32_1112_sample_start_] 
        $T[ADD_u32_u32_1112_sample_completed_] 
        $T[ADD_u32_u32_1112_update_start_] 
        $T[ADD_u32_u32_1112_update_completed_] 
        // tmp21x_xi
        $T[R_tmp21x_xi_1110_sample_start_] 
        $T[R_tmp21x_xi_1110_sample_completed_] 
        $T[R_tmp21x_xi_1110_update_start_] 
        $T[R_tmp21x_xi_1110_update_completed_] 
        // implicit reference
        R_tmp21x_xi_1110_sample_start_ <-& (XOR_u32_u32_1107_update_completed_)
        R_tmp21x_xi_1110_sample_completed_ <-& (R_tmp21x_xi_1110_sample_start_)
        R_tmp21x_xi_1110_update_start_ <-& (R_tmp21x_xi_1110_sample_completed_)
        R_tmp21x_xi_1110_update_completed_ <-& (R_tmp21x_xi_1110_update_start_)
        // iNsTr_5
        $T[R_iNsTr_5_1111_sample_start_] 
        $T[R_iNsTr_5_1111_sample_completed_] 
        $T[R_iNsTr_5_1111_update_start_] 
        $T[R_iNsTr_5_1111_update_completed_] 
        // implicit reference
        R_iNsTr_5_1111_sample_start_ <-& ($entry)
        R_iNsTr_5_1111_sample_completed_ <-& (R_iNsTr_5_1111_sample_start_)
        R_iNsTr_5_1111_update_start_ <-& (R_iNsTr_5_1111_sample_completed_)
        R_iNsTr_5_1111_update_completed_ <-& (R_iNsTr_5_1111_update_start_)
        ADD_u32_u32_1112_sample_start_ <-& (R_tmp21x_xi_1110_update_completed_)
        ADD_u32_u32_1112_sample_start_ <-& (R_iNsTr_5_1111_update_completed_)
        ;;[ADD_u32_u32_1112_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1112_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1112_sample_start_ &-> (ADD_u32_u32_1112_Sample)
        ADD_u32_u32_1112_sample_completed_ <-& (ADD_u32_u32_1112_Sample)
        ADD_u32_u32_1112_sample_completed_ &-> ($null)
        ADD_u32_u32_1112_update_start_ &-> (ADD_u32_u32_1112_Update)
        ADD_u32_u32_1112_update_completed_ <-& (ADD_u32_u32_1112_Update)
        // Target expression
        // (as target) tmp25x_xi
        // tmp25x_xi
        // implicit reference
        // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
        //  file prog.aa, line 454
        // Source expression
        // (tmp25x_xi - xx_xlcssa)
        $T[SUB_u32_u32_1117_sample_start_] 
        $T[SUB_u32_u32_1117_sample_completed_] 
        $T[SUB_u32_u32_1117_update_start_] 
        $T[SUB_u32_u32_1117_update_completed_] 
        // tmp25x_xi
        $T[R_tmp25x_xi_1115_sample_start_] 
        $T[R_tmp25x_xi_1115_sample_completed_] 
        $T[R_tmp25x_xi_1115_update_start_] 
        $T[R_tmp25x_xi_1115_update_completed_] 
        // implicit reference
        R_tmp25x_xi_1115_sample_start_ <-& (ADD_u32_u32_1112_update_completed_)
        R_tmp25x_xi_1115_sample_completed_ <-& (R_tmp25x_xi_1115_sample_start_)
        R_tmp25x_xi_1115_update_start_ <-& (R_tmp25x_xi_1115_sample_completed_)
        R_tmp25x_xi_1115_update_completed_ <-& (R_tmp25x_xi_1115_update_start_)
        // xx_xlcssa
        $T[R_xx_xlcssa_1116_sample_start_] 
        $T[R_xx_xlcssa_1116_sample_completed_] 
        $T[R_xx_xlcssa_1116_update_start_] 
        $T[R_xx_xlcssa_1116_update_completed_] 
        // implicit reference
        R_xx_xlcssa_1116_sample_start_ <-& ($entry)
        R_xx_xlcssa_1116_sample_completed_ <-& (R_xx_xlcssa_1116_sample_start_)
        R_xx_xlcssa_1116_update_start_ <-& (R_xx_xlcssa_1116_sample_completed_)
        R_xx_xlcssa_1116_update_completed_ <-& (R_xx_xlcssa_1116_update_start_)
        SUB_u32_u32_1117_sample_start_ <-& (R_tmp25x_xi_1115_update_completed_)
        SUB_u32_u32_1117_sample_start_ <-& (R_xx_xlcssa_1116_update_completed_)
        ;;[SUB_u32_u32_1117_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_1117_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_1117_sample_start_ &-> (SUB_u32_u32_1117_Sample)
        SUB_u32_u32_1117_sample_completed_ <-& (SUB_u32_u32_1117_Sample)
        SUB_u32_u32_1117_sample_completed_ &-> ($null)
        SUB_u32_u32_1117_update_start_ &-> (SUB_u32_u32_1117_Update)
        SUB_u32_u32_1117_update_completed_ <-& (SUB_u32_u32_1117_Update)
        // Target expression
        // (as target) tmp26x_xi
        // tmp26x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1102_to_assign_stmt_1118__entry__ |-> (assign_stmt_1102_to_assign_stmt_1118)
      assign_stmt_1102_to_assign_stmt_1118__exit__ <-| (assign_stmt_1102_to_assign_stmt_1118)
      ::[assign_stmt_1139_to_assign_stmt_1165] 
      {
        // 		iNsTr_29 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 461
        // Source expression
        // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_1138_sample_start_] 
        $T[AND_u32_u32_1138_sample_completed_] 
        $T[AND_u32_u32_1138_update_start_] 
        $T[AND_u32_u32_1138_update_completed_] 
        // tempx_x0x_xlcssax_xi
        $T[R_tempx_x0x_xlcssax_xi_1135_sample_start_] 
        $T[R_tempx_x0x_xlcssax_xi_1135_sample_completed_] 
        $T[R_tempx_x0x_xlcssax_xi_1135_update_start_] 
        $T[R_tempx_x0x_xlcssax_xi_1135_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssax_xi_1135_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssax_xi_1135_sample_completed_ <-& (R_tempx_x0x_xlcssax_xi_1135_sample_start_)
        R_tempx_x0x_xlcssax_xi_1135_update_start_ <-& (R_tempx_x0x_xlcssax_xi_1135_sample_completed_)
        R_tempx_x0x_xlcssax_xi_1135_update_completed_ <-& (R_tempx_x0x_xlcssax_xi_1135_update_start_)
        AND_u32_u32_1138_sample_start_ <-& (R_tempx_x0x_xlcssax_xi_1135_update_completed_)
        ;;[AND_u32_u32_1138_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1138_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1138_sample_start_ &-> (AND_u32_u32_1138_Sample)
        AND_u32_u32_1138_sample_completed_ <-& (AND_u32_u32_1138_Sample)
        AND_u32_u32_1138_sample_completed_ &-> ($null)
        AND_u32_u32_1138_update_start_ &-> (AND_u32_u32_1138_Update)
        AND_u32_u32_1138_update_completed_ <-& (AND_u32_u32_1138_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // 		iNsTr_30 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 462
        // Source expression
        // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_1144_sample_start_] 
        $T[SHL_u32_u32_1144_sample_completed_] 
        $T[SHL_u32_u32_1144_update_start_] 
        $T[SHL_u32_u32_1144_update_completed_] 
        // expx_x0x_xlcssax_xi
        $T[R_expx_x0x_xlcssax_xi_1141_sample_start_] 
        $T[R_expx_x0x_xlcssax_xi_1141_sample_completed_] 
        $T[R_expx_x0x_xlcssax_xi_1141_update_start_] 
        $T[R_expx_x0x_xlcssax_xi_1141_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssax_xi_1141_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssax_xi_1141_sample_completed_ <-& (R_expx_x0x_xlcssax_xi_1141_sample_start_)
        R_expx_x0x_xlcssax_xi_1141_update_start_ <-& (R_expx_x0x_xlcssax_xi_1141_sample_completed_)
        R_expx_x0x_xlcssax_xi_1141_update_completed_ <-& (R_expx_x0x_xlcssax_xi_1141_update_start_)
        SHL_u32_u32_1144_sample_start_ <-& (R_expx_x0x_xlcssax_xi_1141_update_completed_)
        ;;[SHL_u32_u32_1144_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1144_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1144_sample_start_ &-> (SHL_u32_u32_1144_Sample)
        SHL_u32_u32_1144_sample_completed_ <-& (SHL_u32_u32_1144_Sample)
        SHL_u32_u32_1144_sample_completed_ &-> ($null)
        SHL_u32_u32_1144_update_start_ &-> (SHL_u32_u32_1144_Update)
        SHL_u32_u32_1144_update_completed_ <-& (SHL_u32_u32_1144_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // 		iNsTr_31 := (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 463
        // Source expression
        // (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_1150_sample_start_] 
        $T[ADD_u32_u32_1150_sample_completed_] 
        $T[ADD_u32_u32_1150_update_start_] 
        $T[ADD_u32_u32_1150_update_completed_] 
        // iNsTr_30
        $T[R_iNsTr_30_1147_sample_start_] 
        $T[R_iNsTr_30_1147_sample_completed_] 
        $T[R_iNsTr_30_1147_update_start_] 
        $T[R_iNsTr_30_1147_update_completed_] 
        // implicit reference
        R_iNsTr_30_1147_sample_start_ <-& (SHL_u32_u32_1144_update_completed_)
        R_iNsTr_30_1147_sample_completed_ <-& (R_iNsTr_30_1147_sample_start_)
        R_iNsTr_30_1147_update_start_ <-& (R_iNsTr_30_1147_sample_completed_)
        R_iNsTr_30_1147_update_completed_ <-& (R_iNsTr_30_1147_update_start_)
        ADD_u32_u32_1150_sample_start_ <-& (R_iNsTr_30_1147_update_completed_)
        ;;[ADD_u32_u32_1150_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_1150_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_1150_sample_start_ &-> (ADD_u32_u32_1150_Sample)
        ADD_u32_u32_1150_sample_completed_ <-& (ADD_u32_u32_1150_Sample)
        ADD_u32_u32_1150_sample_completed_ &-> ($null)
        ADD_u32_u32_1150_update_start_ &-> (ADD_u32_u32_1150_Update)
        ADD_u32_u32_1150_update_completed_ <-& (ADD_u32_u32_1150_Update)
        // Target expression
        // (as target) iNsTr_31
        // iNsTr_31
        // implicit reference
        // 		iNsTr_32 := (iNsTr_31 | iNsTr_15)
        //  file prog.aa, line 464
        // Source expression
        // (iNsTr_31 | iNsTr_15)
        $T[OR_u32_u32_1155_sample_start_] 
        $T[OR_u32_u32_1155_sample_completed_] 
        $T[OR_u32_u32_1155_update_start_] 
        $T[OR_u32_u32_1155_update_completed_] 
        // iNsTr_31
        $T[R_iNsTr_31_1153_sample_start_] 
        $T[R_iNsTr_31_1153_sample_completed_] 
        $T[R_iNsTr_31_1153_update_start_] 
        $T[R_iNsTr_31_1153_update_completed_] 
        // implicit reference
        R_iNsTr_31_1153_sample_start_ <-& (ADD_u32_u32_1150_update_completed_)
        R_iNsTr_31_1153_sample_completed_ <-& (R_iNsTr_31_1153_sample_start_)
        R_iNsTr_31_1153_update_start_ <-& (R_iNsTr_31_1153_sample_completed_)
        R_iNsTr_31_1153_update_completed_ <-& (R_iNsTr_31_1153_update_start_)
        // iNsTr_15
        $T[R_iNsTr_15_1154_sample_start_] 
        $T[R_iNsTr_15_1154_sample_completed_] 
        $T[R_iNsTr_15_1154_update_start_] 
        $T[R_iNsTr_15_1154_update_completed_] 
        // implicit reference
        R_iNsTr_15_1154_sample_start_ <-& ($entry)
        R_iNsTr_15_1154_sample_completed_ <-& (R_iNsTr_15_1154_sample_start_)
        R_iNsTr_15_1154_update_start_ <-& (R_iNsTr_15_1154_sample_completed_)
        R_iNsTr_15_1154_update_completed_ <-& (R_iNsTr_15_1154_update_start_)
        OR_u32_u32_1155_sample_start_ <-& (R_iNsTr_31_1153_update_completed_)
        OR_u32_u32_1155_sample_start_ <-& (R_iNsTr_15_1154_update_completed_)
        ;;[OR_u32_u32_1155_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1155_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1155_sample_start_ &-> (OR_u32_u32_1155_Sample)
        OR_u32_u32_1155_sample_completed_ <-& (OR_u32_u32_1155_Sample)
        OR_u32_u32_1155_sample_completed_ &-> ($null)
        OR_u32_u32_1155_update_start_ &-> (OR_u32_u32_1155_Update)
        OR_u32_u32_1155_update_completed_ <-& (OR_u32_u32_1155_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		iNsTr_33 := (iNsTr_32 | iNsTr_29)
        //  file prog.aa, line 465
        // Source expression
        // (iNsTr_32 | iNsTr_29)
        $T[OR_u32_u32_1160_sample_start_] 
        $T[OR_u32_u32_1160_sample_completed_] 
        $T[OR_u32_u32_1160_update_start_] 
        $T[OR_u32_u32_1160_update_completed_] 
        // iNsTr_32
        $T[R_iNsTr_32_1158_sample_start_] 
        $T[R_iNsTr_32_1158_sample_completed_] 
        $T[R_iNsTr_32_1158_update_start_] 
        $T[R_iNsTr_32_1158_update_completed_] 
        // implicit reference
        R_iNsTr_32_1158_sample_start_ <-& (OR_u32_u32_1155_update_completed_)
        R_iNsTr_32_1158_sample_completed_ <-& (R_iNsTr_32_1158_sample_start_)
        R_iNsTr_32_1158_update_start_ <-& (R_iNsTr_32_1158_sample_completed_)
        R_iNsTr_32_1158_update_completed_ <-& (R_iNsTr_32_1158_update_start_)
        // iNsTr_29
        $T[R_iNsTr_29_1159_sample_start_] 
        $T[R_iNsTr_29_1159_sample_completed_] 
        $T[R_iNsTr_29_1159_update_start_] 
        $T[R_iNsTr_29_1159_update_completed_] 
        // implicit reference
        R_iNsTr_29_1159_sample_start_ <-& (AND_u32_u32_1138_update_completed_)
        R_iNsTr_29_1159_sample_completed_ <-& (R_iNsTr_29_1159_sample_start_)
        R_iNsTr_29_1159_update_start_ <-& (R_iNsTr_29_1159_sample_completed_)
        R_iNsTr_29_1159_update_completed_ <-& (R_iNsTr_29_1159_update_start_)
        OR_u32_u32_1160_sample_start_ <-& (R_iNsTr_32_1158_update_completed_)
        OR_u32_u32_1160_sample_start_ <-& (R_iNsTr_29_1159_update_completed_)
        ;;[OR_u32_u32_1160_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_1160_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_1160_sample_start_ &-> (OR_u32_u32_1160_Sample)
        OR_u32_u32_1160_sample_completed_ <-& (OR_u32_u32_1160_Sample)
        OR_u32_u32_1160_sample_completed_ &-> ($null)
        OR_u32_u32_1160_update_start_ &-> (OR_u32_u32_1160_Update)
        OR_u32_u32_1160_update_completed_ <-& (OR_u32_u32_1160_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_33 )
        //  file prog.aa, line 466
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_33 )
        $T[type_cast_1164_sample_start_] 
        $T[type_cast_1164_sample_completed_] 
        $T[type_cast_1164_update_start_] 
        $T[type_cast_1164_update_completed_] 
        // iNsTr_33
        $T[R_iNsTr_33_1163_sample_start_] 
        $T[R_iNsTr_33_1163_sample_completed_] 
        $T[R_iNsTr_33_1163_update_start_] 
        $T[R_iNsTr_33_1163_update_completed_] 
        // implicit reference
        R_iNsTr_33_1163_sample_start_ <-& (OR_u32_u32_1160_update_completed_)
        R_iNsTr_33_1163_sample_completed_ <-& (R_iNsTr_33_1163_sample_start_)
        R_iNsTr_33_1163_update_start_ <-& (R_iNsTr_33_1163_sample_completed_)
        R_iNsTr_33_1163_update_completed_ <-& (R_iNsTr_33_1163_update_start_)
        type_cast_1164_sample_start_ <-& (R_iNsTr_33_1163_update_completed_)
        ;;[type_cast_1164_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1164_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1164_sample_start_ &-> (type_cast_1164_Sample)
        type_cast_1164_sample_completed_ <-& (type_cast_1164_Sample)
        type_cast_1164_sample_completed_ &-> ($null)
        type_cast_1164_update_start_ &-> (type_cast_1164_Update)
        type_cast_1164_update_completed_ <-& (type_cast_1164_Update)
        // Target expression
        // (as target) tmp3x_xi
        // tmp3x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1139_to_assign_stmt_1165__entry__ |-> (assign_stmt_1139_to_assign_stmt_1165)
      assign_stmt_1139_to_assign_stmt_1165__exit__ <-| (assign_stmt_1139_to_assign_stmt_1165)
      // control-path for merge  
      //  file prog.aa, line 341
      ;;[merge_stmt_763_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_763__entry__ |-> (merge_stmt_763_dead_link)
      merge_stmt_763__exit__ <-| (merge_stmt_763_dead_link)
      //---------------------   merge statement  file prog.aa, line 341  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_763_PhiReqMerge] 
      merge_stmt_763_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_763_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_763_PhiReqMerge |-> (merge_stmt_763_PhiAck)
      merge_stmt_763__exit__  <-| (merge_stmt_763_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 341  --------------------------
      // control-path for merge  
      //  file prog.aa, line 365
      ;;[merge_stmt_850_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_850__entry__ |-> (merge_stmt_850_dead_link)
      merge_stmt_850__exit__ <-| (merge_stmt_850_dead_link)
      //---------------------   merge statement  file prog.aa, line 365  --------------------------
      ||[bb_1_bbx_xnph7x_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bbx_xnph7x_xix_xix_xpreheader |-> (bb_1_bbx_xnph7x_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_850_PhiReqMerge] 
      merge_stmt_850_PhiReqMerge <-| ( bb_1_bbx_xnph7x_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_850_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_850_PhiReqMerge |-> (merge_stmt_850_PhiAck)
      merge_stmt_850__exit__  <-| (merge_stmt_850_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 365  --------------------------
      // control-path for merge  
      //  file prog.aa, line 369
      //---------------------   merge statement  file prog.aa, line 369  --------------------------
      ||[bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_853] 
        {
          ||[phi_stmt_853_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_37 )
            ;;[type_cast_856] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_10 )
            ;;[type_cast_858] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_853_req] 
        }
        ;;[phi_stmt_859] 
        {
          ||[phi_stmt_859_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_36 )
            ;;[type_cast_862] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_859_req] 
        }
      }
      bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi |-> (bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_853] 
        {
          ||[phi_stmt_853_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_37 )
            ;;[type_cast_856] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_10 )
            ;;[type_cast_858] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_853_req] 
        }
        ;;[phi_stmt_859] 
        {
          ||[phi_stmt_859_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_36 )
            ;;[type_cast_862] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_859_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi |-> (xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq)
      $P [merge_stmt_852_PhiReqMerge] 
      merge_stmt_852_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq  xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq )
      ||[merge_stmt_852_PhiAck] 
      {
        $T [phi_stmt_853_ack] 
        $T [phi_stmt_859_ack] 
      }
      merge_stmt_852_PhiReqMerge |-> (merge_stmt_852_PhiAck)
      merge_stmt_852__exit__  <-| (merge_stmt_852_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 369  --------------------------
      // control-path for merge  
      //  file prog.aa, line 378
      ;;[merge_stmt_884_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_884__entry__ |-> (merge_stmt_884_dead_link)
      merge_stmt_884__exit__ <-| (merge_stmt_884_dead_link)
      //---------------------   merge statement  file prog.aa, line 378  --------------------------
      ||[bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader |-> (bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_884_PhiReqMerge] 
      merge_stmt_884_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_884_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_884_PhiReqMerge |-> (merge_stmt_884_PhiAck)
      merge_stmt_884__exit__  <-| (merge_stmt_884_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 378  --------------------------
      // control-path for merge  
      //  file prog.aa, line 382
      //---------------------   merge statement  file prog.aa, line 382  --------------------------
      ||[bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_887] 
        {
          ||[phi_stmt_887_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_890] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_892] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_887_req] 
        }
        ;;[phi_stmt_893] 
        {
          ||[phi_stmt_893_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_47 )
            ;;[type_cast_896] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_893_req] 
        }
      }
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq)
      ||[bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_887] 
        {
          ||[phi_stmt_887_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_890] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_892] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_887_req] 
        }
        ;;[phi_stmt_893] 
        {
          ||[phi_stmt_893_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_47 )
            ;;[type_cast_896] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_893_req] 
        }
      }
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq)
      $P [merge_stmt_886_PhiReqMerge] 
      merge_stmt_886_PhiReqMerge <-| ( bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq  bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq )
      ||[merge_stmt_886_PhiAck] 
      {
        $T [phi_stmt_887_ack] 
        $T [phi_stmt_893_ack] 
      }
      merge_stmt_886_PhiReqMerge |-> (merge_stmt_886_PhiAck)
      merge_stmt_886__exit__  <-| (merge_stmt_886_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 382  --------------------------
      // control-path for merge  
      //  file prog.aa, line 392
      ;;[merge_stmt_924_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_924__entry__ |-> (merge_stmt_924_dead_link)
      merge_stmt_924__exit__ <-| (merge_stmt_924_dead_link)
      //---------------------   merge statement  file prog.aa, line 392  --------------------------
      ||[bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_925] 
        {
          ||[phi_stmt_925_sources] 
          {
            // sources for 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_47 )
            ;;[type_cast_928] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_925_req] 
        }
        ;;[phi_stmt_929] 
        {
          ||[phi_stmt_929_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_46 )
            ;;[type_cast_932] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_929_req] 
        }
      }
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit |-> (bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_924_PhiReqMerge] 
      merge_stmt_924_PhiReqMerge <-| ( bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_924_PhiAck] 
      {
        $T [phi_stmt_925_ack] 
        $T [phi_stmt_929_ack] 
      }
      merge_stmt_924_PhiReqMerge |-> (merge_stmt_924_PhiAck)
      merge_stmt_924__exit__  <-| (merge_stmt_924_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 392  --------------------------
      // control-path for merge  
      //  file prog.aa, line 398
      //---------------------   merge statement  file prog.aa, line 398  --------------------------
      ||[bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_936] 
        {
          ||[phi_stmt_936_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_939] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_941] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_936_req] 
        }
        ;;[phi_stmt_942] 
        {
          ||[phi_stmt_942_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_948] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_942_req] 
        }
      }
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi |-> (bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_936] 
        {
          ||[phi_stmt_936_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_939] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_941] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_936_req] 
        }
        ;;[phi_stmt_942] 
        {
          ||[phi_stmt_942_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_948] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_942_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi |-> (xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq)
      $P [merge_stmt_935_PhiReqMerge] 
      merge_stmt_935_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq )
      ||[merge_stmt_935_PhiAck] 
      {
        $T [phi_stmt_936_ack] 
        $T [phi_stmt_942_ack] 
      }
      merge_stmt_935_PhiReqMerge |-> (merge_stmt_935_PhiAck)
      merge_stmt_935__exit__  <-| (merge_stmt_935_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 398  --------------------------
      // control-path for merge  
      //  file prog.aa, line 408
      ;;[merge_stmt_971_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_971__entry__ |-> (merge_stmt_971_dead_link)
      merge_stmt_971__exit__ <-| (merge_stmt_971_dead_link)
      //---------------------   merge statement  file prog.aa, line 408  --------------------------
      ||[xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_972] 
        {
          ||[phi_stmt_972_sources] 
          {
            // sources for 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_36 )
            ;;[type_cast_975] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_972_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit |-> (xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_971_PhiReqMerge] 
      merge_stmt_971_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_971_PhiAck] 
      {
        $T [phi_stmt_972_ack] 
      }
      merge_stmt_971_PhiReqMerge |-> (merge_stmt_971_PhiAck)
      merge_stmt_971__exit__  <-| (merge_stmt_971_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 408  --------------------------
      // control-path for merge  
      //  file prog.aa, line 413
      //---------------------   merge statement  file prog.aa, line 413  --------------------------
      ||[bb_1_xx_xloopexitx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_979] 
        {
          ||[phi_stmt_979_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_985] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_979_req] 
        }
      }
      bb_1_xx_xloopexitx_xix_xi |-> (bb_1_xx_xloopexitx_xix_xi_PhiReq)
      ||[xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_979] 
        {
          ||[phi_stmt_979_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_985] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_979_req] 
        }
      }
      xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi |-> (xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq)
      $P [merge_stmt_978_PhiReqMerge] 
      merge_stmt_978_PhiReqMerge <-| ( bb_1_xx_xloopexitx_xix_xi_PhiReq  xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq )
      ||[merge_stmt_978_PhiAck] 
      {
        $T [phi_stmt_979_ack] 
      }
      merge_stmt_978_PhiReqMerge |-> (merge_stmt_978_PhiAck)
      merge_stmt_978__exit__  <-| (merge_stmt_978_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 413  --------------------------
      // control-path for merge  
      //  file prog.aa, line 418
      //---------------------   merge statement  file prog.aa, line 418  --------------------------
      ||[bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq] 
      {
        ;;[phi_stmt_989] 
        {
          ||[phi_stmt_989_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xi )
            ;;[type_cast_992] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_10 )
            ;;[type_cast_994] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_989_req] 
        }
      }
      bb_1_udiv32x_xexitx_xpreheaderx_xi |-> (bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq)
      ||[xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq] 
      {
        ;;[phi_stmt_989] 
        {
          ||[phi_stmt_989_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xi )
            ;;[type_cast_992] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_10 )
            ;;[type_cast_994] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_989_req] 
        }
      }
      xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi |-> (xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq)
      $P [merge_stmt_988_PhiReqMerge] 
      merge_stmt_988_PhiReqMerge <-| ( bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq  xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq )
      ||[merge_stmt_988_PhiAck] 
      {
        $T [phi_stmt_989_ack] 
      }
      merge_stmt_988_PhiReqMerge |-> (merge_stmt_988_PhiAck)
      merge_stmt_988__exit__  <-| (merge_stmt_988_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 418  --------------------------
      // control-path for merge  
      //  file prog.aa, line 429
      ;;[merge_stmt_1027_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1027__entry__ |-> (merge_stmt_1027_dead_link)
      merge_stmt_1027__exit__ <-| (merge_stmt_1027_dead_link)
      //---------------------   merge statement  file prog.aa, line 429  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader |-> (udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq)
      $P [merge_stmt_1027_PhiReqMerge] 
      merge_stmt_1027_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq )
      ||[merge_stmt_1027_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1027_PhiReqMerge |-> (merge_stmt_1027_PhiAck)
      merge_stmt_1027__exit__  <-| (merge_stmt_1027_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 429  --------------------------
      // control-path for merge  
      //  file prog.aa, line 433
      //---------------------   merge statement  file prog.aa, line 433  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_1030] 
        {
          ||[phi_stmt_1030_sources] 
          {
            // sources for 			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_1033] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1030_req] 
        }
        ;;[phi_stmt_1037] 
        {
          ||[phi_stmt_1037_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_41 )
            ;;[type_cast_1040] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1042] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1037_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq)
      ||[udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_1030] 
        {
          ||[phi_stmt_1030_sources] 
          {
            // sources for 			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_1033] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1030_req] 
        }
        ;;[phi_stmt_1037] 
        {
          ||[phi_stmt_1037_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_41 )
            ;;[type_cast_1040] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1042] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1037_req] 
        }
      }
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq)
      $P [merge_stmt_1029_PhiReqMerge] 
      merge_stmt_1029_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq  udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq )
      ||[merge_stmt_1029_PhiAck] 
      {
        $T [phi_stmt_1030_ack] 
        $T [phi_stmt_1037_ack] 
      }
      merge_stmt_1029_PhiReqMerge |-> (merge_stmt_1029_PhiAck)
      merge_stmt_1029__exit__  <-| (merge_stmt_1029_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 433  --------------------------
      // control-path for merge  
      //  file prog.aa, line 447
      ;;[merge_stmt_1087_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1087__entry__ |-> (merge_stmt_1087_dead_link)
      merge_stmt_1087__exit__ <-| (merge_stmt_1087_dead_link)
      //---------------------   merge statement  file prog.aa, line 447  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1088] 
        {
          ||[phi_stmt_1088_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_41 )
            ;;[type_cast_1091] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1088_req] 
        }
        ;;[phi_stmt_1092] 
        {
          ||[phi_stmt_1092_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_40 )
            ;;[type_cast_1095] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1092_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq)
      $P [merge_stmt_1087_PhiReqMerge] 
      merge_stmt_1087_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq )
      ||[merge_stmt_1087_PhiAck] 
      {
        $T [phi_stmt_1088_ack] 
        $T [phi_stmt_1092_ack] 
      }
      merge_stmt_1087_PhiReqMerge |-> (merge_stmt_1087_PhiAck)
      merge_stmt_1087__exit__  <-| (merge_stmt_1087_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 447  --------------------------
      // control-path for merge  
      //  file prog.aa, line 457
      //---------------------   merge statement  file prog.aa, line 457  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1121] 
        {
          ||[phi_stmt_1121_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_16 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_1124] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_1126] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1121_req] 
        }
        ;;[phi_stmt_1127] 
        {
          ||[phi_stmt_1127_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_1130] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1132] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1127_req] 
        }
      }
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_1121] 
        {
          ||[phi_stmt_1121_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_16 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_1124] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_1126] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1121_req] 
        }
        ;;[phi_stmt_1127] 
        {
          ||[phi_stmt_1127_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_1130] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xi )
            ;;[type_cast_1132] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1127_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq)
      $P [merge_stmt_1120_PhiReqMerge] 
      merge_stmt_1120_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq )
      ||[merge_stmt_1120_PhiAck] 
      {
        $T [phi_stmt_1121_ack] 
        $T [phi_stmt_1127_ack] 
      }
      merge_stmt_1120_PhiReqMerge |-> (merge_stmt_1120_PhiAck)
      merge_stmt_1120__exit__  <-| (merge_stmt_1120_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 457  --------------------------
      // control-path for merge  
      //  file prog.aa, line 469
      //---------------------   merge statement  file prog.aa, line 469  --------------------------
      ||[bb_0_fdiv32x_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_fdiv32x_xexit |-> (bb_0_fdiv32x_xexit_PhiReq)
      $P [merge_stmt_1167_PhiReqMerge] 
      merge_stmt_1167_PhiReqMerge <-| ( bb_0_fdiv32x_xexit_PhiReq )
      ||[merge_stmt_1167_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1167_PhiReqMerge |-> (merge_stmt_1167_PhiAck)
      merge_stmt_1167__exit__  <-| (merge_stmt_1167_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 469  --------------------------
      // control-path for merge  
      //  file prog.aa, line 473
      //---------------------   merge statement  file prog.aa, line 473  --------------------------
      ||[fdiv32x_xexit_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_1170] 
        {
          ||[phi_stmt_1170_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_1173] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1170_req] 
        }
      }
      fdiv32x_xexit_UnifiedReturnBlock |-> (fdiv32x_xexit_UnifiedReturnBlock_PhiReq)
      ||[xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_1170] 
        {
          ||[phi_stmt_1170_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_1173] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1170_req] 
        }
      }
      xx_xcritedgex_xi_UnifiedReturnBlock |-> (xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq)
      $P [merge_stmt_1169_PhiReqMerge] 
      merge_stmt_1169_PhiReqMerge <-| ( fdiv32x_xexit_UnifiedReturnBlock_PhiReq  xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq )
      ||[merge_stmt_1169_PhiAck] 
      {
        $T [phi_stmt_1170_ack] 
      }
      merge_stmt_1169_PhiReqMerge |-> (merge_stmt_1169_PhiAck)
      merge_stmt_1169__exit__  <-| (merge_stmt_1169_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 473  --------------------------
      // control-path for merge  
      //  file prog.aa, line 477
      //---------------------   merge statement  file prog.aa, line 477  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1179_PhiReqMerge] 
      merge_stmt_1179_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1179_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1179_PhiReqMerge |-> (merge_stmt_1179_PhiAck)
      merge_stmt_1179__exit__  <-| (merge_stmt_1179_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 477  --------------------------
      assign_stmt_742_to_assign_stmt_756__entry__ <-| (branch_block_stmt_736__entry__)
      if_stmt_757__entry__ <-| (assign_stmt_742_to_assign_stmt_756__exit__)
      merge_stmt_763__entry__ <-| (if_stmt_757__exit__)
      assign_stmt_769_to_assign_stmt_839__entry__ <-| (merge_stmt_763__exit__)
      switch_stmt_840__entry__ <-| (assign_stmt_769_to_assign_stmt_839__exit__)
      merge_stmt_850__entry__ <-| (switch_stmt_840__exit__)
      bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi <-| (merge_stmt_850__exit__)
      assign_stmt_872_to_assign_stmt_877__entry__ <-| (merge_stmt_852__exit__)
      if_stmt_878__entry__ <-| (assign_stmt_872_to_assign_stmt_877__exit__)
      merge_stmt_884__entry__ <-| (if_stmt_878__exit__)
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi <-| (merge_stmt_884__exit__)
      assign_stmt_906_to_assign_stmt_917__entry__ <-| (merge_stmt_886__exit__)
      if_stmt_918__entry__ <-| (assign_stmt_906_to_assign_stmt_917__exit__)
      merge_stmt_924__entry__ <-| (if_stmt_918__exit__)
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi <-| (merge_stmt_924__exit__)
      assign_stmt_954_to_assign_stmt_964__entry__ <-| (merge_stmt_935__exit__)
      if_stmt_965__entry__ <-| (assign_stmt_954_to_assign_stmt_964__exit__)
      merge_stmt_971__entry__ <-| (if_stmt_965__exit__)
      xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi <-| (merge_stmt_971__exit__)
      xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi <-| (merge_stmt_978__exit__)
      assign_stmt_1001_to_assign_stmt_1020__entry__ <-| (merge_stmt_988__exit__)
      if_stmt_1021__entry__ <-| (assign_stmt_1001_to_assign_stmt_1020__exit__)
      merge_stmt_1027__entry__ <-| (if_stmt_1021__exit__)
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi <-| (merge_stmt_1027__exit__)
      assign_stmt_1049_to_assign_stmt_1080__entry__ <-| (merge_stmt_1029__exit__)
      if_stmt_1081__entry__ <-| (assign_stmt_1049_to_assign_stmt_1080__exit__)
      merge_stmt_1087__entry__ <-| (if_stmt_1081__exit__)
      assign_stmt_1102_to_assign_stmt_1118__entry__ <-| (merge_stmt_1087__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi <-| (assign_stmt_1102_to_assign_stmt_1118__exit__)
      assign_stmt_1139_to_assign_stmt_1165__entry__ <-| (merge_stmt_1120__exit__)
      xx_xcritedgex_xi_UnifiedReturnBlock <-| (assign_stmt_1139_to_assign_stmt_1165__exit__)
      fdiv32x_xexit_UnifiedReturnBlock <-| (merge_stmt_1167__exit__)
      return__ <-| (merge_stmt_1169__exit__)
      merge_stmt_1179__exit__ |-> (branch_block_stmt_736__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 341
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 365
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 369
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 378
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 382
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 392
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 398
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 408
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 413
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 418
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 429
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 433
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 447
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 457
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 469
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 473
    // constant-object-declarations for block %omega_calc%body%
    //  file prog.aa, line 477
    // constant-object-declarations for block %omega_calc%body
    //  file prog.aa, line 331
    // constant-object-declarations for block %omega_calc
    //  file prog.aa, line 326
    // constant-declarations for block %omega_calc%body
    //  file prog.aa, line 331
    // ($bitcast ($float<8,23>) _f7.790627e+00 )
    $constant $W[type_cast_740_wire_constant] : $float<8,23> := _b01000000111110010100110011010001// 7.790627e+00
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_754_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 339
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 341
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_767_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_773_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_779_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_785_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_791_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_797_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_803_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_809_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00000000000000001111111111111111  )
    $constant $W[type_cast_815_wire_constant] : $int<32> := _b00000000000000001111111111111111// 65535
    // ($bitcast ($uint<32>) _b00000000000000010000000000000000  )
    $constant $W[type_cast_821_wire_constant] : $int<32> := _b00000000000000010000000000000000// 65536
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_832_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // constant-declarations  for switch  
    //  file prog.aa, line 356
    // _b00000000000000000000000000000000 
    $constant $W[expr_842_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b00000000000000000000000000000001 
    $constant $W[expr_845_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 365
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 369
    // constant-declarations for phi:  			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 370
    // constant-declarations for phi:  			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 371
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_865_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_870_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 376
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 378
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 382
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 383
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 384
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_899_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_904_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_910_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 390
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 392
    // constant-declarations for phi:  			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 393
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 394
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 398
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 399
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 400
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_946_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 406
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 408
    // constant-declarations for phi:  			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 409
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 413
    // constant-declarations for phi:  			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 414
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_983_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 418
    // constant-declarations for phi:  			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 419
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_999_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1005_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1013_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 427
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 429
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 433
    // constant-declarations for phi:  			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 434
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1036_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 435
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1047_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_1053_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_1059_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_1067_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_1078_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 445
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 447
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 448
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 449
    // ($bitcast ($uint<32>) _b11111111111111111111111100000000  )
    $constant $W[type_cast_1100_wire_constant] : $int<32> := _b11111111111111111111111100000000// -256
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_1106_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 457
    // constant-declarations for phi:  			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_16 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 458
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 459
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_1137_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_1143_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_1149_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 469
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 473
    // constant-declarations for phi:  			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 474
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1176_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for block %omega_calc%body%
    //  file prog.aa, line 477
    // block %omega_calc%body
    //  file prog.aa, line 331
    // 		iNsTr_0 := (iq * ($bitcast ($float<8,23>) _f7.790627e+00 ))
    //  file prog.aa, line 334
    // iNsTr_0
    $W[iNsTr_0_742] : $float<8,23>
    // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0 )
    //  file prog.aa, line 335
    // tmp10x_xi
    $W[tmp10x_xi_746] : $int<32>
    // 		tmp6x_xi := ($bitcast ($uint<32>) flux_rotor )
    //  file prog.aa, line 336
    // tmp6x_xi
    $W[tmp6x_xi_750] : $int<32>
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 338
    // iNsTr_1
    $W[iNsTr_1_756] : $int<1>
    // if statement  
    //  file prog.aa, line 339
    // 		iNsTr_4 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 343
    // iNsTr_4
    $W[iNsTr_4_769] : $int<32>
    // 		iNsTr_5 := (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 344
    // iNsTr_5
    $W[iNsTr_5_775] : $int<32>
    // 		iNsTr_6 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 345
    // iNsTr_6
    $W[iNsTr_6_781] : $int<32>
    // 		iNsTr_7 := (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 346
    // iNsTr_7
    $W[iNsTr_7_787] : $int<32>
    // 		iNsTr_8 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 347
    // iNsTr_8
    $W[iNsTr_8_793] : $int<32>
    // 		iNsTr_9 := (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 348
    // iNsTr_9
    $W[iNsTr_9_799] : $int<32>
    // 		iNsTr_10 := (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 349
    // iNsTr_10
    $W[iNsTr_10_805] : $int<32>
    // 		iNsTr_11 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 350
    // iNsTr_11
    $W[iNsTr_11_811] : $int<32>
    // 		iNsTr_12 := (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 351
    // iNsTr_12
    $W[iNsTr_12_817] : $int<32>
    // 		iNsTr_13 := (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 352
    // iNsTr_13
    $W[iNsTr_13_823] : $int<32>
    // 		iNsTr_14 := (tmp6x_xi ^ tmp10x_xi)
    //  file prog.aa, line 353
    // iNsTr_14
    $W[iNsTr_14_828] : $int<32>
    // 		iNsTr_15 := (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 354
    // iNsTr_15
    $W[iNsTr_15_834] : $int<32>
    // 		iNsTr_16 := (iNsTr_5 - iNsTr_7)
    //  file prog.aa, line 355
    // iNsTr_16
    $W[iNsTr_16_839] : $int<32>
    // switch-statement  
    //  file prog.aa, line 356
    $W[expr_842_wire_constant_cmp] : $int<1>
    $W[expr_845_wire_constant_cmp] : $int<1>
    // merge-statement  
    //  file prog.aa, line 369
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 370
    // ($cast ($uint<32>) iNsTr_37 )
    $intermediate $W[type_cast_856_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_10 )
    $intermediate $W[type_cast_858_wire] : $int<32>
    // xx_x016x_xix_xi
    $W[xx_x016x_xix_xi_853] : $int<32>
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 371
    // ($cast ($uint<32>) iNsTr_36 )
    $intermediate $W[type_cast_862_wire] : $int<32>
    // quotientx_x05x_xix_xi
    $W[quotientx_x05x_xix_xi_859] : $int<32>
    // 		iNsTr_25 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 373
    // iNsTr_25
    $W[iNsTr_25_872] : $int<32>
    // 		iNsTr_26 := (iNsTr_25 > iNsTr_13)
    //  file prog.aa, line 375
    // iNsTr_26
    $W[iNsTr_26_877] : $int<1>
    // if statement  
    //  file prog.aa, line 376
    // merge-statement  
    //  file prog.aa, line 382
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 383
    // ($cast ($uint<32>) iNsTr_46 )
    $intermediate $W[type_cast_890_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_13 )
    $intermediate $W[type_cast_892_wire] : $int<32>
    // shifted_divisorx_x03x_xix_xi
    $W[shifted_divisorx_x03x_xix_xi_887] : $int<32>
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 384
    // ($cast ($uint<32>) iNsTr_47 )
    $intermediate $W[type_cast_896_wire] : $int<32>
    // curr_quotientx_x02x_xix_xi
    $W[curr_quotientx_x02x_xix_xi_893] : $int<32>
    // 		iNsTr_46 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 386
    // iNsTr_46
    $W[iNsTr_46_906] : $int<32>
    // 		iNsTr_47 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 387
    // iNsTr_47
    $W[iNsTr_47_912] : $int<32>
    // 		iNsTr_48 := (iNsTr_46 < iNsTr_25)
    //  file prog.aa, line 389
    // iNsTr_48
    $W[iNsTr_48_917] : $int<1>
    // if statement  
    //  file prog.aa, line 390
    // merge-statement  
    //  file prog.aa, line 392
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 393
    // ($cast ($uint<32>) iNsTr_47 )
    $intermediate $W[type_cast_928_wire] : $int<32>
    // xx_xlcssa3
    $W[xx_xlcssa3_925] : $int<32>
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 394
    // ($cast ($uint<32>) iNsTr_46 )
    $intermediate $W[type_cast_932_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_929] : $int<32>
    // merge-statement  
    //  file prog.aa, line 398
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 399
    // ($cast ($uint<32>) iNsTr_13 )
    $intermediate $W[type_cast_939_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa2 )
    $intermediate $W[type_cast_941_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xix_xi
    $W[shifted_divisorx_x0x_xlcssax_xix_xi_936] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 400
    // ($cast ($uint<32>) xx_xlcssa3 )
    $intermediate $W[type_cast_948_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xix_xi
    $W[curr_quotientx_x0x_xlcssax_xix_xi_942] : $int<32>
    // 		iNsTr_36 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 402
    // iNsTr_36
    $W[iNsTr_36_954] : $int<32>
    // 		iNsTr_37 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 403
    // iNsTr_37
    $W[iNsTr_37_959] : $int<32>
    // 		iNsTr_38 := (iNsTr_37 < iNsTr_13)
    //  file prog.aa, line 405
    // iNsTr_38
    $W[iNsTr_38_964] : $int<1>
    // if statement  
    //  file prog.aa, line 406
    // merge-statement  
    //  file prog.aa, line 408
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 409
    // ($cast ($uint<32>) iNsTr_36 )
    $intermediate $W[type_cast_975_wire] : $int<32>
    // xx_xlcssa4
    $W[xx_xlcssa4_972] : $int<32>
    // merge-statement  
    //  file prog.aa, line 413
    // 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 414
    // ($cast ($uint<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_985_wire] : $int<32>
    // xx_x0x_xix_xi
    $W[xx_x0x_xix_xi_979] : $int<32>
    // merge-statement  
    //  file prog.aa, line 418
    // 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 419
    // ($cast ($uint<32>) xx_x0x_xix_xi )
    $intermediate $W[type_cast_992_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_10 )
    $intermediate $W[type_cast_994_wire] : $int<32>
    // tempx_x0x_xphx_xi
    $W[tempx_x0x_xphx_xi_989] : $int<32>
    // 		iNsTr_21 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 421
    // iNsTr_21
    $W[iNsTr_21_1001] : $int<32>
    // 		iNsTr_22 := (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 423
    // iNsTr_22
    $W[iNsTr_22_1007] : $int<1>
    // 		iNsTr_23 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 425
    // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
    $intermediate $W[type_cast_1010_wire] : $int<32>
    // iNsTr_23
    $W[iNsTr_23_1015] : $int<1>
    // 		orx_xcond11x_xi := (iNsTr_22 & iNsTr_23)
    //  file prog.aa, line 426
    // orx_xcond11x_xi
    $W[orx_xcond11x_xi_1020] : $int<1>
    // if statement  
    //  file prog.aa, line 427
    // merge-statement  
    //  file prog.aa, line 433
    // 			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 434
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    $intermediate $W[type_cast_1033_wire] : $int<32>
    // iNsTr_40
    $W[iNsTr_40_1030] : $int<32>
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 435
    // ($cast ($uint<32>) iNsTr_41 )
    $intermediate $W[type_cast_1040_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    $intermediate $W[type_cast_1042_wire] : $int<32>
    // tempx_x012x_xi
    $W[tempx_x012x_xi_1037] : $int<32>
    // 		iNsTr_41 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 437
    // iNsTr_41
    $W[iNsTr_41_1049] : $int<32>
    // 		iNsTr_42 := (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 438
    // iNsTr_42
    $W[iNsTr_42_1055] : $int<32>
    // 		iNsTr_43 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 440
    // iNsTr_43
    $W[iNsTr_43_1061] : $int<1>
    // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 442
    // ($bitcast ($int<32>) iNsTr_41 )
    $intermediate $W[type_cast_1064_wire] : $int<32>
    // iNsTr_44
    $W[iNsTr_44_1069] : $int<1>
    // 		orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
    //  file prog.aa, line 443
    // orx_xcondx_xi
    $W[orx_xcondx_xi_1074] : $int<1>
    // 		indvarx_xnextx_xi := (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 444
    // indvarx_xnextx_xi
    $W[indvarx_xnextx_xi_1080] : $int<32>
    // if statement  
    //  file prog.aa, line 445
    // merge-statement  
    //  file prog.aa, line 447
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 448
    // ($cast ($uint<32>) iNsTr_41 )
    $intermediate $W[type_cast_1091_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_1088] : $int<32>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 449
    // ($cast ($uint<32>) iNsTr_40 )
    $intermediate $W[type_cast_1095_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_1092] : $int<32>
    // 		xx_xnot := (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
    //  file prog.aa, line 451
    // xx_xnot
    $W[xx_xnot_1102] : $int<32>
    // 		tmp21x_xi := (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 452
    // tmp21x_xi
    $W[tmp21x_xi_1108] : $int<32>
    // 		tmp25x_xi := (tmp21x_xi + iNsTr_5)
    //  file prog.aa, line 453
    // tmp25x_xi
    $W[tmp25x_xi_1113] : $int<32>
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 454
    // tmp26x_xi
    $W[tmp26x_xi_1118] : $int<32>
    // merge-statement  
    //  file prog.aa, line 457
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_16 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 458
    // ($cast ($uint<32>) tmp26x_xi )
    $intermediate $W[type_cast_1124_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_16 )
    $intermediate $W[type_cast_1126_wire] : $int<32>
    // expx_x0x_xlcssax_xi
    $W[expx_x0x_xlcssax_xi_1121] : $int<32>
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 459
    // ($cast ($uint<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_1130_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    $intermediate $W[type_cast_1132_wire] : $int<32>
    // tempx_x0x_xlcssax_xi
    $W[tempx_x0x_xlcssax_xi_1127] : $int<32>
    // 		iNsTr_29 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 461
    // iNsTr_29
    $W[iNsTr_29_1139] : $int<32>
    // 		iNsTr_30 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 462
    // iNsTr_30
    $W[iNsTr_30_1145] : $int<32>
    // 		iNsTr_31 := (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 463
    // iNsTr_31
    $W[iNsTr_31_1151] : $int<32>
    // 		iNsTr_32 := (iNsTr_31 | iNsTr_15)
    //  file prog.aa, line 464
    // iNsTr_32
    $W[iNsTr_32_1156] : $int<32>
    // 		iNsTr_33 := (iNsTr_32 | iNsTr_29)
    //  file prog.aa, line 465
    // iNsTr_33
    $W[iNsTr_33_1161] : $int<32>
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_33 )
    //  file prog.aa, line 466
    // tmp3x_xi
    $W[tmp3x_xi_1165] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 473
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 474
    // ($cast ($float<8,23>) tmp3x_xi )
    $intermediate $W[type_cast_1173_wire] : $float<8,23>
    // ret_val__
    // datapath-instances for block %omega_calc%body
    //  file prog.aa, line 331
    // 		iNsTr_0 := (iq * ($bitcast ($float<8,23>) _f7.790627e+00 ))
    //  file prog.aa, line 334
    // (iq * ($bitcast ($float<8,23>) _f7.790627e+00 ))
    *[MUL_f32_f32_741_inst] (iq type_cast_740_wire_constant) (iNsTr_0_742) 
    $delay MUL_f32_f32_741_inst 24
    // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0 )
    //  file prog.aa, line 335
    // ($bitcast ($uint<32>) iNsTr_0 )
    # := [type_cast_745_inst] (iNsTr_0_742) (tmp10x_xi_746) 
    $delay type_cast_745_inst 1
    // 		tmp6x_xi := ($bitcast ($uint<32>) flux_rotor )
    //  file prog.aa, line 336
    // ($bitcast ($uint<32>) flux_rotor )
    # := [type_cast_749_inst] (flux_rotor) (tmp6x_xi_750) 
    $delay type_cast_749_inst 1
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 338
    // (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_755_inst] (iNsTr_0_742 type_cast_754_wire_constant) (iNsTr_1_756) 
    $delay EQ_f32_u1_755_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 339
    ==0? [if_stmt_757_branch] (iNsTr_1_756)
    // 		iNsTr_4 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 343
    // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_768_inst] (tmp10x_xi_746 type_cast_767_wire_constant) (iNsTr_4_769) 
    $delay LSHR_u32_u32_768_inst 1
    // 		iNsTr_5 := (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 344
    // (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_774_inst] (iNsTr_4_769 type_cast_773_wire_constant) (iNsTr_5_775) 
    $delay AND_u32_u32_774_inst 1
    // 		iNsTr_6 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 345
    // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_780_inst] (tmp6x_xi_750 type_cast_779_wire_constant) (iNsTr_6_781) 
    $delay LSHR_u32_u32_780_inst 1
    // 		iNsTr_7 := (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 346
    // (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_786_inst] (iNsTr_6_781 type_cast_785_wire_constant) (iNsTr_7_787) 
    $delay AND_u32_u32_786_inst 1
    // 		iNsTr_8 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 347
    // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_792_inst] (tmp10x_xi_746 type_cast_791_wire_constant) (iNsTr_8_793) 
    $delay SHL_u32_u32_792_inst 1
    // 		iNsTr_9 := (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 348
    // (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_798_inst] (iNsTr_8_793 type_cast_797_wire_constant) (iNsTr_9_799) 
    $delay AND_u32_u32_798_inst 1
    // 		iNsTr_10 := (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 349
    // (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_804_inst] (iNsTr_9_799 type_cast_803_wire_constant) (iNsTr_10_805) 
    $delay OR_u32_u32_804_inst 1
    // 		iNsTr_11 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 350
    // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >>[LSHR_u32_u32_810_inst] (tmp6x_xi_750 type_cast_809_wire_constant) (iNsTr_11_811) 
    $delay LSHR_u32_u32_810_inst 1
    // 		iNsTr_12 := (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 351
    // (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    &[AND_u32_u32_816_inst] (iNsTr_11_811 type_cast_815_wire_constant) (iNsTr_12_817) 
    $delay AND_u32_u32_816_inst 1
    // 		iNsTr_13 := (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 352
    // (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    |[OR_u32_u32_822_inst] (iNsTr_12_817 type_cast_821_wire_constant) (iNsTr_13_823) 
    $delay OR_u32_u32_822_inst 1
    // 		iNsTr_14 := (tmp6x_xi ^ tmp10x_xi)
    //  file prog.aa, line 353
    // (tmp6x_xi ^ tmp10x_xi)
    ^[XOR_u32_u32_827_inst] (tmp6x_xi_750 tmp10x_xi_746) (iNsTr_14_828) 
    $delay XOR_u32_u32_827_inst 1
    // 		iNsTr_15 := (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 354
    // (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_833_inst] (iNsTr_14_828 type_cast_832_wire_constant) (iNsTr_15_834) 
    $delay AND_u32_u32_833_inst 1
    // 		iNsTr_16 := (iNsTr_5 - iNsTr_7)
    //  file prog.aa, line 355
    // (iNsTr_5 - iNsTr_7)
    -[SUB_u32_u32_838_inst] (iNsTr_5_775 iNsTr_7_787) (iNsTr_16_839) 
    $delay SUB_u32_u32_838_inst 1
    // datapath-instances  for switch  
    //  file prog.aa, line 356
    ==[switch_stmt_840_select_expr_0] (iNsTr_13_823 expr_842_wire_constant) (expr_842_wire_constant_cmp) 
    ==0? [switch_stmt_840_branch_0] (expr_842_wire_constant_cmp)
    ==[switch_stmt_840_select_expr_1] (iNsTr_13_823 expr_845_wire_constant) (expr_845_wire_constant_cmp) 
    ==0? [switch_stmt_840_branch_1] (expr_845_wire_constant_cmp)
    ==0? [switch_stmt_840_branch_default] (expr_842_wire_constant_cmp expr_845_wire_constant_cmp)
    // data-path instances for merge  
    //  file prog.aa, line 369
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_37 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 370
    // ($cast ($uint<32>) iNsTr_37 )
    # := [type_cast_856_inst] (iNsTr_37_959) (type_cast_856_wire) 
    $delay type_cast_856_inst 1
    // ($cast ($uint<32>) iNsTr_10 )
    # := [type_cast_858_inst] (iNsTr_10_805) (type_cast_858_wire) 
    $delay type_cast_858_inst 1
    $phi [phi_stmt_853] (type_cast_856_wire type_cast_858_wire) ( xx_x016x_xix_xi_853 )
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 371
    // ($cast ($uint<32>) iNsTr_36 )
    # := [type_cast_862_inst] (iNsTr_36_954) (type_cast_862_wire) 
    $delay type_cast_862_inst 1
    $phi [phi_stmt_859] (type_cast_862_wire type_cast_865_wire_constant) ( quotientx_x05x_xix_xi_859 )
    // 		iNsTr_25 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 373
    // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_871_inst] (xx_x016x_xix_xi_853 type_cast_870_wire_constant) (iNsTr_25_872) 
    $delay LSHR_u32_u32_871_inst 1
    // 		iNsTr_26 := (iNsTr_25 > iNsTr_13)
    //  file prog.aa, line 375
    // (iNsTr_25 > iNsTr_13)
    >[UGT_u32_u1_876_inst] (iNsTr_25_872 iNsTr_13_823) (iNsTr_26_877) 
    $delay UGT_u32_u1_876_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 376
    ==0? [if_stmt_878_branch] (iNsTr_26_877)
    // data-path instances for merge  
    //  file prog.aa, line 382
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 383
    // ($cast ($uint<32>) iNsTr_46 )
    # := [type_cast_890_inst] (iNsTr_46_906) (type_cast_890_wire) 
    $delay type_cast_890_inst 1
    // ($cast ($uint<32>) iNsTr_13 )
    # := [type_cast_892_inst] (iNsTr_13_823) (type_cast_892_wire) 
    $delay type_cast_892_inst 1
    $phi [phi_stmt_887] (type_cast_890_wire type_cast_892_wire) ( shifted_divisorx_x03x_xix_xi_887 )
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 384
    // ($cast ($uint<32>) iNsTr_47 )
    # := [type_cast_896_inst] (iNsTr_47_912) (type_cast_896_wire) 
    $delay type_cast_896_inst 1
    $phi [phi_stmt_893] (type_cast_896_wire type_cast_899_wire_constant) ( curr_quotientx_x02x_xix_xi_893 )
    // 		iNsTr_46 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 386
    // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_905_inst] (shifted_divisorx_x03x_xix_xi_887 type_cast_904_wire_constant) (iNsTr_46_906) 
    $delay SHL_u32_u32_905_inst 1
    // 		iNsTr_47 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 387
    // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_911_inst] (curr_quotientx_x02x_xix_xi_893 type_cast_910_wire_constant) (iNsTr_47_912) 
    $delay SHL_u32_u32_911_inst 1
    // 		iNsTr_48 := (iNsTr_46 < iNsTr_25)
    //  file prog.aa, line 389
    // (iNsTr_46 < iNsTr_25)
    <[ULT_u32_u1_916_inst] (iNsTr_46_906 iNsTr_25_872) (iNsTr_48_917) 
    $delay ULT_u32_u1_916_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 390
    ==0? [if_stmt_918_branch] (iNsTr_48_917)
    // data-path instances for merge  
    //  file prog.aa, line 392
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_47 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 393
    // ($cast ($uint<32>) iNsTr_47 )
    # := [type_cast_928_inst] (iNsTr_47_912) (type_cast_928_wire) 
    $delay type_cast_928_inst 1
    $phi [phi_stmt_925] (type_cast_928_wire) ( xx_xlcssa3_925 )
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_46 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 394
    // ($cast ($uint<32>) iNsTr_46 )
    # := [type_cast_932_inst] (iNsTr_46_906) (type_cast_932_wire) 
    $delay type_cast_932_inst 1
    $phi [phi_stmt_929] (type_cast_932_wire) ( xx_xlcssa2_929 )
    // data-path instances for merge  
    //  file prog.aa, line 398
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) iNsTr_13 ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 399
    // ($cast ($uint<32>) iNsTr_13 )
    # := [type_cast_939_inst] (iNsTr_13_823) (type_cast_939_wire) 
    $delay type_cast_939_inst 1
    // ($cast ($uint<32>) xx_xlcssa2 )
    # := [type_cast_941_inst] (xx_xlcssa2_929) (type_cast_941_wire) 
    $delay type_cast_941_inst 1
    $phi [phi_stmt_936] (type_cast_939_wire type_cast_941_wire) ( shifted_divisorx_x0x_xlcssax_xix_xi_936 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 400
    // ($cast ($uint<32>) xx_xlcssa3 )
    # := [type_cast_948_inst] (xx_xlcssa3_925) (type_cast_948_wire) 
    $delay type_cast_948_inst 1
    $phi [phi_stmt_942] (type_cast_946_wire_constant type_cast_948_wire) ( curr_quotientx_x0x_xlcssax_xix_xi_942 )
    // 		iNsTr_36 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 402
    // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    +[ADD_u32_u32_953_inst] (curr_quotientx_x0x_xlcssax_xix_xi_942 quotientx_x05x_xix_xi_859) (iNsTr_36_954) 
    $delay ADD_u32_u32_953_inst 1
    // 		iNsTr_37 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 403
    // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    -[SUB_u32_u32_958_inst] (xx_x016x_xix_xi_853 shifted_divisorx_x0x_xlcssax_xix_xi_936) (iNsTr_37_959) 
    $delay SUB_u32_u32_958_inst 1
    // 		iNsTr_38 := (iNsTr_37 < iNsTr_13)
    //  file prog.aa, line 405
    // (iNsTr_37 < iNsTr_13)
    <[ULT_u32_u1_963_inst] (iNsTr_37_959 iNsTr_13_823) (iNsTr_38_964) 
    $delay ULT_u32_u1_963_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 406
    ==0? [if_stmt_965_branch] (iNsTr_38_964)
    // data-path instances for merge  
    //  file prog.aa, line 408
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_36 ) $on xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 409
    // ($cast ($uint<32>) iNsTr_36 )
    # := [type_cast_975_inst] (iNsTr_36_954) (type_cast_975_wire) 
    $delay type_cast_975_inst 1
    $phi [phi_stmt_972] (type_cast_975_wire) ( xx_xlcssa4_972 )
    // data-path instances for merge  
    //  file prog.aa, line 413
    // 			$phi xx_x0x_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_1_xx_xloopexitx_xix_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 414
    // ($cast ($uint<32>) xx_xlcssa4 )
    # := [type_cast_985_inst] (xx_xlcssa4_972) (type_cast_985_wire) 
    $delay type_cast_985_inst 1
    $phi [phi_stmt_979] (type_cast_983_wire_constant type_cast_985_wire) ( xx_x0x_xix_xi_979 )
    // data-path instances for merge  
    //  file prog.aa, line 418
    // 			$phi tempx_x0x_xphx_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xi ) $on xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi			  ($cast ($uint<32>) iNsTr_10 ) $on bb_1_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 419
    // ($cast ($uint<32>) xx_x0x_xix_xi )
    # := [type_cast_992_inst] (xx_x0x_xix_xi_979) (type_cast_992_wire) 
    $delay type_cast_992_inst 1
    // ($cast ($uint<32>) iNsTr_10 )
    # := [type_cast_994_inst] (iNsTr_10_805) (type_cast_994_wire) 
    $delay type_cast_994_inst 1
    $phi [phi_stmt_989] (type_cast_992_wire type_cast_994_wire) ( tempx_x0x_xphx_xi_989 )
    // 		iNsTr_21 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 421
    // (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_1000_inst] (tempx_x0x_xphx_xi_989 type_cast_999_wire_constant) (iNsTr_21_1001) 
    $delay AND_u32_u32_1000_inst 1
    // 		iNsTr_22 := (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 423
    // (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_1006_inst] (iNsTr_21_1001 type_cast_1005_wire_constant) (iNsTr_22_1007) 
    $delay EQ_u32_u1_1006_inst 1
    // 		iNsTr_23 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 425
    // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
    $S:=$U [type_cast_1010_inst] (tempx_x0x_xphx_xi_989) (type_cast_1010_wire)   $flowthrough
    $delay type_cast_1010_inst 0
    // (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_1014_inst] (type_cast_1010_wire type_cast_1013_wire_constant) (iNsTr_23_1015) 
    $delay NEQ_i32_u1_1014_inst 1
    // 		orx_xcond11x_xi := (iNsTr_22 & iNsTr_23)
    //  file prog.aa, line 426
    // (iNsTr_22 & iNsTr_23)
    &[AND_u1_u1_1019_inst] (iNsTr_22_1007 iNsTr_23_1015) (orx_xcond11x_xi_1020) 
    $delay AND_u1_u1_1019_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 427
    ==0? [if_stmt_1021_branch] (orx_xcond11x_xi_1020)
    // data-path instances for merge  
    //  file prog.aa, line 433
    // 			$phi iNsTr_40 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 434
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    # := [type_cast_1033_inst] (indvarx_xnextx_xi_1080) (type_cast_1033_wire) 
    $delay type_cast_1033_inst 1
    $phi [phi_stmt_1030] (type_cast_1033_wire type_cast_1036_wire_constant) ( iNsTr_40_1030 )
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 435
    // ($cast ($uint<32>) iNsTr_41 )
    # := [type_cast_1040_inst] (iNsTr_41_1049) (type_cast_1040_wire) 
    $delay type_cast_1040_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    # := [type_cast_1042_inst] (tempx_x0x_xphx_xi_989) (type_cast_1042_wire) 
    $delay type_cast_1042_inst 1
    $phi [phi_stmt_1037] (type_cast_1040_wire type_cast_1042_wire) ( tempx_x012x_xi_1037 )
    // 		iNsTr_41 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 437
    // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_1048_inst] (tempx_x012x_xi_1037 type_cast_1047_wire_constant) (iNsTr_41_1049) 
    $delay SHL_u32_u32_1048_inst 1
    // 		iNsTr_42 := (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 438
    // (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_1054_inst] (iNsTr_41_1049 type_cast_1053_wire_constant) (iNsTr_42_1055) 
    $delay AND_u32_u32_1054_inst 1
    // 		iNsTr_43 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 440
    // (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_1060_inst] (iNsTr_42_1055 type_cast_1059_wire_constant) (iNsTr_43_1061) 
    $delay EQ_u32_u1_1060_inst 1
    // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 442
    // ($bitcast ($int<32>) iNsTr_41 )
    $S:=$U [type_cast_1064_inst] (iNsTr_41_1049) (type_cast_1064_wire)   $flowthrough
    $delay type_cast_1064_inst 0
    // (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_1068_inst] (type_cast_1064_wire type_cast_1067_wire_constant) (iNsTr_44_1069) 
    $delay NEQ_i32_u1_1068_inst 1
    // 		orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
    //  file prog.aa, line 443
    // (iNsTr_43 & iNsTr_44)
    &[AND_u1_u1_1073_inst] (iNsTr_43_1061 iNsTr_44_1069) (orx_xcondx_xi_1074) 
    $delay AND_u1_u1_1073_inst 1
    // 		indvarx_xnextx_xi := (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 444
    // (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_1079_inst] (iNsTr_40_1030 type_cast_1078_wire_constant) (indvarx_xnextx_xi_1080) 
    $delay ADD_u32_u32_1079_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 445
    ==0? [if_stmt_1081_branch] (orx_xcondx_xi_1074)
    // data-path instances for merge  
    //  file prog.aa, line 447
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_41 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 448
    // ($cast ($uint<32>) iNsTr_41 )
    # := [type_cast_1091_inst] (iNsTr_41_1049) (type_cast_1091_wire) 
    $delay type_cast_1091_inst 1
    $phi [phi_stmt_1088] (type_cast_1091_wire) ( xx_xlcssa1_1088 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_40 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 449
    // ($cast ($uint<32>) iNsTr_40 )
    # := [type_cast_1095_inst] (iNsTr_40_1030) (type_cast_1095_wire) 
    $delay type_cast_1095_inst 1
    $phi [phi_stmt_1092] (type_cast_1095_wire) ( xx_xlcssa_1092 )
    // 		xx_xnot := (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
    //  file prog.aa, line 451
    // (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
    |[OR_u32_u32_1101_inst] (iNsTr_6_781 type_cast_1100_wire_constant) (xx_xnot_1102) 
    $delay OR_u32_u32_1101_inst 1
    // 		tmp21x_xi := (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 452
    // (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    ^[XOR_u32_u32_1107_inst] (xx_xnot_1102 type_cast_1106_wire_constant) (tmp21x_xi_1108) 
    $delay XOR_u32_u32_1107_inst 1
    // 		tmp25x_xi := (tmp21x_xi + iNsTr_5)
    //  file prog.aa, line 453
    // (tmp21x_xi + iNsTr_5)
    +[ADD_u32_u32_1112_inst] (tmp21x_xi_1108 iNsTr_5_775) (tmp25x_xi_1113) 
    $delay ADD_u32_u32_1112_inst 1
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 454
    // (tmp25x_xi - xx_xlcssa)
    -[SUB_u32_u32_1117_inst] (tmp25x_xi_1113 xx_xlcssa_1092) (tmp26x_xi_1118) 
    $delay SUB_u32_u32_1117_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 457
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_16 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 458
    // ($cast ($uint<32>) tmp26x_xi )
    # := [type_cast_1124_inst] (tmp26x_xi_1118) (type_cast_1124_wire) 
    $delay type_cast_1124_inst 1
    // ($cast ($uint<32>) iNsTr_16 )
    # := [type_cast_1126_inst] (iNsTr_16_839) (type_cast_1126_wire) 
    $delay type_cast_1126_inst 1
    $phi [phi_stmt_1121] (type_cast_1124_wire type_cast_1126_wire) ( expx_x0x_xlcssax_xi_1121 )
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xi ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 459
    // ($cast ($uint<32>) xx_xlcssa1 )
    # := [type_cast_1130_inst] (xx_xlcssa1_1088) (type_cast_1130_wire) 
    $delay type_cast_1130_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xi )
    # := [type_cast_1132_inst] (tempx_x0x_xphx_xi_989) (type_cast_1132_wire) 
    $delay type_cast_1132_inst 1
    $phi [phi_stmt_1127] (type_cast_1130_wire type_cast_1132_wire) ( tempx_x0x_xlcssax_xi_1127 )
    // 		iNsTr_29 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 461
    // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_1138_inst] (tempx_x0x_xlcssax_xi_1127 type_cast_1137_wire_constant) (iNsTr_29_1139) 
    $delay AND_u32_u32_1138_inst 1
    // 		iNsTr_30 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 462
    // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_1144_inst] (expx_x0x_xlcssax_xi_1121 type_cast_1143_wire_constant) (iNsTr_30_1145) 
    $delay SHL_u32_u32_1144_inst 1
    // 		iNsTr_31 := (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 463
    // (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_1150_inst] (iNsTr_30_1145 type_cast_1149_wire_constant) (iNsTr_31_1151) 
    $delay ADD_u32_u32_1150_inst 1
    // 		iNsTr_32 := (iNsTr_31 | iNsTr_15)
    //  file prog.aa, line 464
    // (iNsTr_31 | iNsTr_15)
    |[OR_u32_u32_1155_inst] (iNsTr_31_1151 iNsTr_15_834) (iNsTr_32_1156) 
    $delay OR_u32_u32_1155_inst 1
    // 		iNsTr_33 := (iNsTr_32 | iNsTr_29)
    //  file prog.aa, line 465
    // (iNsTr_32 | iNsTr_29)
    |[OR_u32_u32_1160_inst] (iNsTr_32_1156 iNsTr_29_1139) (iNsTr_33_1161) 
    $delay OR_u32_u32_1160_inst 1
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_33 )
    //  file prog.aa, line 466
    // ($bitcast ($float<8,23>) iNsTr_33 )
    # := [type_cast_1164_inst] (iNsTr_33_1161) (tmp3x_xi_1165) 
    $delay type_cast_1164_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 473
    // 			$phi ret_val__ := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_UnifiedReturnBlock			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on fdiv32x_xexit_UnifiedReturnBlock // type of target is $float<8,23>
    //  file prog.aa, line 474
    // ($cast ($float<8,23>) tmp3x_xi )
    # := [type_cast_1173_inst] (tmp3x_xi_1165) (type_cast_1173_wire) 
    $delay type_cast_1173_inst 1
    $phi [phi_stmt_1170] (type_cast_1173_wire type_cast_1176_wire_constant) ( ret_val__ )
  }
  // end data-path
  // 		iNsTr_0 := (iq * ($bitcast ($float<8,23>) _f7.790627e+00 ))
  //  file prog.aa, line 334
  // (iq * ($bitcast ($float<8,23>) _f7.790627e+00 ))
  MUL_f32_f32_741_inst <=> (branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/MUL_f32_f32_741_Sample/rr branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/MUL_f32_f32_741_Update/cr) (branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/MUL_f32_f32_741_Sample/ra branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/MUL_f32_f32_741_Update/ca)
  // 		tmp10x_xi := ($bitcast ($uint<32>) iNsTr_0 )
  //  file prog.aa, line 335
  // ($bitcast ($uint<32>) iNsTr_0 )
  type_cast_745_inst <=> (branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/type_cast_745_Sample/rr branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/type_cast_745_Update/cr) (branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/type_cast_745_Sample/ra branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/type_cast_745_Update/ca)
  // 		tmp6x_xi := ($bitcast ($uint<32>) flux_rotor )
  //  file prog.aa, line 336
  // ($bitcast ($uint<32>) flux_rotor )
  type_cast_749_inst <=> (branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/type_cast_749_Sample/rr branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/type_cast_749_Update/cr) (branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/type_cast_749_Sample/ra branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/type_cast_749_Update/ca)
  // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 338
  // (iNsTr_0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_755_inst <=> (branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/EQ_f32_u1_755_Sample/rr branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/EQ_f32_u1_755_Update/cr) (branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/EQ_f32_u1_755_Sample/ra branch_block_stmt_736/assign_stmt_742_to_assign_stmt_756/EQ_f32_u1_755_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 339
  if_stmt_757_branch <=> (branch_block_stmt_736/if_stmt_757_eval_test/branch_req) (branch_block_stmt_736/if_stmt_757_else_link/else_choice_transition branch_block_stmt_736/if_stmt_757_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 341
  // 		iNsTr_4 := (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 343
  // (tmp10x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_768_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/LSHR_u32_u32_768_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/LSHR_u32_u32_768_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/LSHR_u32_u32_768_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/LSHR_u32_u32_768_Update/ca)
  // 		iNsTr_5 := (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 344
  // (iNsTr_4 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_774_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_774_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_774_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_774_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_774_Update/ca)
  // 		iNsTr_6 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 345
  // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_780_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/LSHR_u32_u32_780_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/LSHR_u32_u32_780_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/LSHR_u32_u32_780_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/LSHR_u32_u32_780_Update/ca)
  // 		iNsTr_7 := (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 346
  // (iNsTr_6 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_786_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_786_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_786_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_786_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_786_Update/ca)
  // 		iNsTr_8 := (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 347
  // (tmp10x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_792_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/SHL_u32_u32_792_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/SHL_u32_u32_792_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/SHL_u32_u32_792_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/SHL_u32_u32_792_Update/ca)
  // 		iNsTr_9 := (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 348
  // (iNsTr_8 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_798_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_798_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_798_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_798_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_798_Update/ca)
  // 		iNsTr_10 := (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 349
  // (iNsTr_9 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_804_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/OR_u32_u32_804_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/OR_u32_u32_804_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/OR_u32_u32_804_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/OR_u32_u32_804_Update/ca)
  // 		iNsTr_11 := (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 350
  // (tmp6x_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  LSHR_u32_u32_810_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/LSHR_u32_u32_810_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/LSHR_u32_u32_810_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/LSHR_u32_u32_810_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/LSHR_u32_u32_810_Update/ca)
  // 		iNsTr_12 := (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  //  file prog.aa, line 351
  // (iNsTr_11 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  AND_u32_u32_816_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_816_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_816_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_816_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_816_Update/ca)
  // 		iNsTr_13 := (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  //  file prog.aa, line 352
  // (iNsTr_12 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  OR_u32_u32_822_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/OR_u32_u32_822_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/OR_u32_u32_822_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/OR_u32_u32_822_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/OR_u32_u32_822_Update/ca)
  // 		iNsTr_14 := (tmp6x_xi ^ tmp10x_xi)
  //  file prog.aa, line 353
  // (tmp6x_xi ^ tmp10x_xi)
  XOR_u32_u32_827_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/XOR_u32_u32_827_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/XOR_u32_u32_827_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/XOR_u32_u32_827_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/XOR_u32_u32_827_Update/ca)
  // 		iNsTr_15 := (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 354
  // (iNsTr_14 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_833_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_833_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_833_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_833_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/AND_u32_u32_833_Update/ca)
  // 		iNsTr_16 := (iNsTr_5 - iNsTr_7)
  //  file prog.aa, line 355
  // (iNsTr_5 - iNsTr_7)
  SUB_u32_u32_838_inst <=> (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/SUB_u32_u32_838_Sample/rr branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/SUB_u32_u32_838_Update/cr) (branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/SUB_u32_u32_838_Sample/ra branch_block_stmt_736/assign_stmt_769_to_assign_stmt_839/SUB_u32_u32_838_Update/ca)
  // CP-DP links for switch  
  //  file prog.aa, line 356
  switch_stmt_840_select_expr_0 <=> (branch_block_stmt_736/switch_stmt_840__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_736/switch_stmt_840__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_736/switch_stmt_840__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_736/switch_stmt_840__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_840_branch_0 <=> (branch_block_stmt_736/switch_stmt_840__condition_check__/condition_0/cmp) ($open branch_block_stmt_736/switch_stmt_840_choice_0/ack1)
  switch_stmt_840_select_expr_1 <=> (branch_block_stmt_736/switch_stmt_840__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_736/switch_stmt_840__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_736/switch_stmt_840__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_736/switch_stmt_840__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_840_branch_1 <=> (branch_block_stmt_736/switch_stmt_840__condition_check__/condition_1/cmp) ($open branch_block_stmt_736/switch_stmt_840_choice_1/ack1)
  switch_stmt_840_branch_default <=> (branch_block_stmt_736/switch_stmt_840__condition_check__/$exit) (branch_block_stmt_736/switch_stmt_840_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.aa, line 365
  // CP-DP links for merge  
  //  file prog.aa, line 369
  // ($cast ($uint<32>) iNsTr_37 )
  type_cast_856_inst <=> (branch_block_stmt_736/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_853/phi_stmt_853_sources/type_cast_856/SplitProtocol/Sample/rr branch_block_stmt_736/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_853/phi_stmt_853_sources/type_cast_856/SplitProtocol/Update/cr) (branch_block_stmt_736/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_853/phi_stmt_853_sources/type_cast_856/SplitProtocol/Sample/ra branch_block_stmt_736/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_853/phi_stmt_853_sources/type_cast_856/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_10 )
  type_cast_858_inst <=> (branch_block_stmt_736/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_853/phi_stmt_853_sources/type_cast_858/SplitProtocol/Sample/rr branch_block_stmt_736/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_853/phi_stmt_853_sources/type_cast_858/SplitProtocol/Update/cr) (branch_block_stmt_736/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_853/phi_stmt_853_sources/type_cast_858/SplitProtocol/Sample/ra branch_block_stmt_736/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_853/phi_stmt_853_sources/type_cast_858/SplitProtocol/Update/ca)
  phi_stmt_853 <=> (branch_block_stmt_736/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_853/phi_stmt_853_req branch_block_stmt_736/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_853/phi_stmt_853_req) (branch_block_stmt_736/merge_stmt_852_PhiAck/phi_stmt_853_ack)
  // ($cast ($uint<32>) iNsTr_36 )
  type_cast_862_inst <=> (branch_block_stmt_736/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_859/phi_stmt_859_sources/type_cast_862/SplitProtocol/Sample/rr branch_block_stmt_736/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_859/phi_stmt_859_sources/type_cast_862/SplitProtocol/Update/cr) (branch_block_stmt_736/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_859/phi_stmt_859_sources/type_cast_862/SplitProtocol/Sample/ra branch_block_stmt_736/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_859/phi_stmt_859_sources/type_cast_862/SplitProtocol/Update/ca)
  phi_stmt_859 <=> (branch_block_stmt_736/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_859/phi_stmt_859_req branch_block_stmt_736/bbx_xnph7x_xix_xix_xpreheader_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_859/phi_stmt_859_req) (branch_block_stmt_736/merge_stmt_852_PhiAck/phi_stmt_859_ack)
  // 		iNsTr_25 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 373
  // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_871_inst <=> (branch_block_stmt_736/assign_stmt_872_to_assign_stmt_877/LSHR_u32_u32_871_Sample/rr branch_block_stmt_736/assign_stmt_872_to_assign_stmt_877/LSHR_u32_u32_871_Update/cr) (branch_block_stmt_736/assign_stmt_872_to_assign_stmt_877/LSHR_u32_u32_871_Sample/ra branch_block_stmt_736/assign_stmt_872_to_assign_stmt_877/LSHR_u32_u32_871_Update/ca)
  // 		iNsTr_26 := (iNsTr_25 > iNsTr_13)
  //  file prog.aa, line 375
  // (iNsTr_25 > iNsTr_13)
  UGT_u32_u1_876_inst <=> (branch_block_stmt_736/assign_stmt_872_to_assign_stmt_877/UGT_u32_u1_876_Sample/rr branch_block_stmt_736/assign_stmt_872_to_assign_stmt_877/UGT_u32_u1_876_Update/cr) (branch_block_stmt_736/assign_stmt_872_to_assign_stmt_877/UGT_u32_u1_876_Sample/ra branch_block_stmt_736/assign_stmt_872_to_assign_stmt_877/UGT_u32_u1_876_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 376
  if_stmt_878_branch <=> (branch_block_stmt_736/if_stmt_878_eval_test/branch_req) (branch_block_stmt_736/if_stmt_878_else_link/else_choice_transition branch_block_stmt_736/if_stmt_878_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 378
  // CP-DP links for merge  
  //  file prog.aa, line 382
  // ($cast ($uint<32>) iNsTr_46 )
  type_cast_890_inst <=> (branch_block_stmt_736/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_887/phi_stmt_887_sources/type_cast_890/SplitProtocol/Sample/rr branch_block_stmt_736/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_887/phi_stmt_887_sources/type_cast_890/SplitProtocol/Update/cr) (branch_block_stmt_736/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_887/phi_stmt_887_sources/type_cast_890/SplitProtocol/Sample/ra branch_block_stmt_736/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_887/phi_stmt_887_sources/type_cast_890/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_13 )
  type_cast_892_inst <=> (branch_block_stmt_736/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_887/phi_stmt_887_sources/type_cast_892/SplitProtocol/Sample/rr branch_block_stmt_736/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_887/phi_stmt_887_sources/type_cast_892/SplitProtocol/Update/cr) (branch_block_stmt_736/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_887/phi_stmt_887_sources/type_cast_892/SplitProtocol/Sample/ra branch_block_stmt_736/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_887/phi_stmt_887_sources/type_cast_892/SplitProtocol/Update/ca)
  phi_stmt_887 <=> (branch_block_stmt_736/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_887/phi_stmt_887_req branch_block_stmt_736/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_887/phi_stmt_887_req) (branch_block_stmt_736/merge_stmt_886_PhiAck/phi_stmt_887_ack)
  // ($cast ($uint<32>) iNsTr_47 )
  type_cast_896_inst <=> (branch_block_stmt_736/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_893/phi_stmt_893_sources/type_cast_896/SplitProtocol/Sample/rr branch_block_stmt_736/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_893/phi_stmt_893_sources/type_cast_896/SplitProtocol/Update/cr) (branch_block_stmt_736/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_893/phi_stmt_893_sources/type_cast_896/SplitProtocol/Sample/ra branch_block_stmt_736/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_893/phi_stmt_893_sources/type_cast_896/SplitProtocol/Update/ca)
  phi_stmt_893 <=> (branch_block_stmt_736/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_893/phi_stmt_893_req branch_block_stmt_736/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_893/phi_stmt_893_req) (branch_block_stmt_736/merge_stmt_886_PhiAck/phi_stmt_893_ack)
  // 		iNsTr_46 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 386
  // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_905_inst <=> (branch_block_stmt_736/assign_stmt_906_to_assign_stmt_917/SHL_u32_u32_905_Sample/rr branch_block_stmt_736/assign_stmt_906_to_assign_stmt_917/SHL_u32_u32_905_Update/cr) (branch_block_stmt_736/assign_stmt_906_to_assign_stmt_917/SHL_u32_u32_905_Sample/ra branch_block_stmt_736/assign_stmt_906_to_assign_stmt_917/SHL_u32_u32_905_Update/ca)
  // 		iNsTr_47 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 387
  // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_911_inst <=> (branch_block_stmt_736/assign_stmt_906_to_assign_stmt_917/SHL_u32_u32_911_Sample/rr branch_block_stmt_736/assign_stmt_906_to_assign_stmt_917/SHL_u32_u32_911_Update/cr) (branch_block_stmt_736/assign_stmt_906_to_assign_stmt_917/SHL_u32_u32_911_Sample/ra branch_block_stmt_736/assign_stmt_906_to_assign_stmt_917/SHL_u32_u32_911_Update/ca)
  // 		iNsTr_48 := (iNsTr_46 < iNsTr_25)
  //  file prog.aa, line 389
  // (iNsTr_46 < iNsTr_25)
  ULT_u32_u1_916_inst <=> (branch_block_stmt_736/assign_stmt_906_to_assign_stmt_917/ULT_u32_u1_916_Sample/rr branch_block_stmt_736/assign_stmt_906_to_assign_stmt_917/ULT_u32_u1_916_Update/cr) (branch_block_stmt_736/assign_stmt_906_to_assign_stmt_917/ULT_u32_u1_916_Sample/ra branch_block_stmt_736/assign_stmt_906_to_assign_stmt_917/ULT_u32_u1_916_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 390
  if_stmt_918_branch <=> (branch_block_stmt_736/if_stmt_918_eval_test/branch_req) (branch_block_stmt_736/if_stmt_918_else_link/else_choice_transition branch_block_stmt_736/if_stmt_918_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 392
  // ($cast ($uint<32>) iNsTr_47 )
  type_cast_928_inst <=> (branch_block_stmt_736/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_925/phi_stmt_925_sources/type_cast_928/SplitProtocol/Sample/rr branch_block_stmt_736/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_925/phi_stmt_925_sources/type_cast_928/SplitProtocol/Update/cr) (branch_block_stmt_736/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_925/phi_stmt_925_sources/type_cast_928/SplitProtocol/Sample/ra branch_block_stmt_736/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_925/phi_stmt_925_sources/type_cast_928/SplitProtocol/Update/ca)
  phi_stmt_925 <=> (branch_block_stmt_736/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_925/phi_stmt_925_req) (branch_block_stmt_736/merge_stmt_924_PhiAck/phi_stmt_925_ack)
  // ($cast ($uint<32>) iNsTr_46 )
  type_cast_932_inst <=> (branch_block_stmt_736/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_929/phi_stmt_929_sources/type_cast_932/SplitProtocol/Sample/rr branch_block_stmt_736/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_929/phi_stmt_929_sources/type_cast_932/SplitProtocol/Update/cr) (branch_block_stmt_736/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_929/phi_stmt_929_sources/type_cast_932/SplitProtocol/Sample/ra branch_block_stmt_736/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_929/phi_stmt_929_sources/type_cast_932/SplitProtocol/Update/ca)
  phi_stmt_929 <=> (branch_block_stmt_736/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_929/phi_stmt_929_req) (branch_block_stmt_736/merge_stmt_924_PhiAck/phi_stmt_929_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 398
  // ($cast ($uint<32>) iNsTr_13 )
  type_cast_939_inst <=> (branch_block_stmt_736/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_936/phi_stmt_936_sources/type_cast_939/SplitProtocol/Sample/rr branch_block_stmt_736/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_936/phi_stmt_936_sources/type_cast_939/SplitProtocol/Update/cr) (branch_block_stmt_736/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_936/phi_stmt_936_sources/type_cast_939/SplitProtocol/Sample/ra branch_block_stmt_736/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_936/phi_stmt_936_sources/type_cast_939/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa2 )
  type_cast_941_inst <=> (branch_block_stmt_736/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_936/phi_stmt_936_sources/type_cast_941/SplitProtocol/Sample/rr branch_block_stmt_736/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_936/phi_stmt_936_sources/type_cast_941/SplitProtocol/Update/cr) (branch_block_stmt_736/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_936/phi_stmt_936_sources/type_cast_941/SplitProtocol/Sample/ra branch_block_stmt_736/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_936/phi_stmt_936_sources/type_cast_941/SplitProtocol/Update/ca)
  phi_stmt_936 <=> (branch_block_stmt_736/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_936/phi_stmt_936_req branch_block_stmt_736/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_936/phi_stmt_936_req) (branch_block_stmt_736/merge_stmt_935_PhiAck/phi_stmt_936_ack)
  // ($cast ($uint<32>) xx_xlcssa3 )
  type_cast_948_inst <=> (branch_block_stmt_736/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_942/phi_stmt_942_sources/type_cast_948/SplitProtocol/Sample/rr branch_block_stmt_736/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_942/phi_stmt_942_sources/type_cast_948/SplitProtocol/Update/cr) (branch_block_stmt_736/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_942/phi_stmt_942_sources/type_cast_948/SplitProtocol/Sample/ra branch_block_stmt_736/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_942/phi_stmt_942_sources/type_cast_948/SplitProtocol/Update/ca)
  phi_stmt_942 <=> (branch_block_stmt_736/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_942/phi_stmt_942_req branch_block_stmt_736/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_942/phi_stmt_942_req) (branch_block_stmt_736/merge_stmt_935_PhiAck/phi_stmt_942_ack)
  // 		iNsTr_36 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  //  file prog.aa, line 402
  // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  ADD_u32_u32_953_inst <=> (branch_block_stmt_736/assign_stmt_954_to_assign_stmt_964/ADD_u32_u32_953_Sample/rr branch_block_stmt_736/assign_stmt_954_to_assign_stmt_964/ADD_u32_u32_953_Update/cr) (branch_block_stmt_736/assign_stmt_954_to_assign_stmt_964/ADD_u32_u32_953_Sample/ra branch_block_stmt_736/assign_stmt_954_to_assign_stmt_964/ADD_u32_u32_953_Update/ca)
  // 		iNsTr_37 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  //  file prog.aa, line 403
  // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  SUB_u32_u32_958_inst <=> (branch_block_stmt_736/assign_stmt_954_to_assign_stmt_964/SUB_u32_u32_958_Sample/rr branch_block_stmt_736/assign_stmt_954_to_assign_stmt_964/SUB_u32_u32_958_Update/cr) (branch_block_stmt_736/assign_stmt_954_to_assign_stmt_964/SUB_u32_u32_958_Sample/ra branch_block_stmt_736/assign_stmt_954_to_assign_stmt_964/SUB_u32_u32_958_Update/ca)
  // 		iNsTr_38 := (iNsTr_37 < iNsTr_13)
  //  file prog.aa, line 405
  // (iNsTr_37 < iNsTr_13)
  ULT_u32_u1_963_inst <=> (branch_block_stmt_736/assign_stmt_954_to_assign_stmt_964/ULT_u32_u1_963_Sample/rr branch_block_stmt_736/assign_stmt_954_to_assign_stmt_964/ULT_u32_u1_963_Update/cr) (branch_block_stmt_736/assign_stmt_954_to_assign_stmt_964/ULT_u32_u1_963_Sample/ra branch_block_stmt_736/assign_stmt_954_to_assign_stmt_964/ULT_u32_u1_963_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 406
  if_stmt_965_branch <=> (branch_block_stmt_736/if_stmt_965_eval_test/branch_req) (branch_block_stmt_736/if_stmt_965_else_link/else_choice_transition branch_block_stmt_736/if_stmt_965_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 408
  // ($cast ($uint<32>) iNsTr_36 )
  type_cast_975_inst <=> (branch_block_stmt_736/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_972/phi_stmt_972_sources/type_cast_975/SplitProtocol/Sample/rr branch_block_stmt_736/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_972/phi_stmt_972_sources/type_cast_975/SplitProtocol/Update/cr) (branch_block_stmt_736/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_972/phi_stmt_972_sources/type_cast_975/SplitProtocol/Sample/ra branch_block_stmt_736/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_972/phi_stmt_972_sources/type_cast_975/SplitProtocol/Update/ca)
  phi_stmt_972 <=> (branch_block_stmt_736/xx_x_crit_edgex_xix_xi_xx_xloopexitx_xix_xix_xloopexit_PhiReq/phi_stmt_972/phi_stmt_972_req) (branch_block_stmt_736/merge_stmt_971_PhiAck/phi_stmt_972_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 413
  // ($cast ($uint<32>) xx_xlcssa4 )
  type_cast_985_inst <=> (branch_block_stmt_736/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_979/phi_stmt_979_sources/type_cast_985/SplitProtocol/Sample/rr branch_block_stmt_736/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_979/phi_stmt_979_sources/type_cast_985/SplitProtocol/Update/cr) (branch_block_stmt_736/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_979/phi_stmt_979_sources/type_cast_985/SplitProtocol/Sample/ra branch_block_stmt_736/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_979/phi_stmt_979_sources/type_cast_985/SplitProtocol/Update/ca)
  phi_stmt_979 <=> (branch_block_stmt_736/bb_1_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_979/phi_stmt_979_req branch_block_stmt_736/xx_xloopexitx_xix_xix_xloopexit_xx_xloopexitx_xix_xi_PhiReq/phi_stmt_979/phi_stmt_979_req) (branch_block_stmt_736/merge_stmt_978_PhiAck/phi_stmt_979_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 418
  // ($cast ($uint<32>) xx_x0x_xix_xi )
  type_cast_992_inst <=> (branch_block_stmt_736/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_989/phi_stmt_989_sources/type_cast_992/SplitProtocol/Sample/rr branch_block_stmt_736/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_989/phi_stmt_989_sources/type_cast_992/SplitProtocol/Update/cr) (branch_block_stmt_736/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_989/phi_stmt_989_sources/type_cast_992/SplitProtocol/Sample/ra branch_block_stmt_736/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_989/phi_stmt_989_sources/type_cast_992/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_10 )
  type_cast_994_inst <=> (branch_block_stmt_736/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_989/phi_stmt_989_sources/type_cast_994/SplitProtocol/Sample/rr branch_block_stmt_736/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_989/phi_stmt_989_sources/type_cast_994/SplitProtocol/Update/cr) (branch_block_stmt_736/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_989/phi_stmt_989_sources/type_cast_994/SplitProtocol/Sample/ra branch_block_stmt_736/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_989/phi_stmt_989_sources/type_cast_994/SplitProtocol/Update/ca)
  phi_stmt_989 <=> (branch_block_stmt_736/xx_xloopexitx_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_989/phi_stmt_989_req branch_block_stmt_736/bb_1_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_989/phi_stmt_989_req) (branch_block_stmt_736/merge_stmt_988_PhiAck/phi_stmt_989_ack)
  // 		iNsTr_21 := (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 421
  // (tempx_x0x_xphx_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_1000_inst <=> (branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/AND_u32_u32_1000_Sample/rr branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/AND_u32_u32_1000_Update/cr) (branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/AND_u32_u32_1000_Sample/ra branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/AND_u32_u32_1000_Update/ca)
  // 		iNsTr_22 := (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 423
  // (iNsTr_21 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_1006_inst <=> (branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/EQ_u32_u1_1006_Sample/rr branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/EQ_u32_u1_1006_Update/cr) (branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/EQ_u32_u1_1006_Sample/ra branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/EQ_u32_u1_1006_Update/ca)
  // 		iNsTr_23 := (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 425
  // (($bitcast ($int<32>) tempx_x0x_xphx_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) tempx_x0x_xphx_xi )
  type_cast_1010_inst <=> (branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/type_cast_1010_Sample/rr branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/type_cast_1010_Update/cr) (branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/type_cast_1010_Sample/ra branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/type_cast_1010_Update/ca)
  NEQ_i32_u1_1014_inst <=> (branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/NEQ_i32_u1_1014_Sample/rr branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/NEQ_i32_u1_1014_Update/cr) (branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/NEQ_i32_u1_1014_Sample/ra branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/NEQ_i32_u1_1014_Update/ca)
  // 		orx_xcond11x_xi := (iNsTr_22 & iNsTr_23)
  //  file prog.aa, line 426
  // (iNsTr_22 & iNsTr_23)
  AND_u1_u1_1019_inst <=> (branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/AND_u1_u1_1019_Sample/rr branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/AND_u1_u1_1019_Update/cr) (branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/AND_u1_u1_1019_Sample/ra branch_block_stmt_736/assign_stmt_1001_to_assign_stmt_1020/AND_u1_u1_1019_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 427
  if_stmt_1021_branch <=> (branch_block_stmt_736/if_stmt_1021_eval_test/branch_req) (branch_block_stmt_736/if_stmt_1021_else_link/else_choice_transition branch_block_stmt_736/if_stmt_1021_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 429
  // CP-DP links for merge  
  //  file prog.aa, line 433
  // ($cast ($uint<32>) indvarx_xnextx_xi )
  type_cast_1033_inst <=> (branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1030/phi_stmt_1030_sources/type_cast_1033/SplitProtocol/Sample/rr branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1030/phi_stmt_1030_sources/type_cast_1033/SplitProtocol/Update/cr) (branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1030/phi_stmt_1030_sources/type_cast_1033/SplitProtocol/Sample/ra branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1030/phi_stmt_1030_sources/type_cast_1033/SplitProtocol/Update/ca)
  phi_stmt_1030 <=> (branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1030/phi_stmt_1030_req branch_block_stmt_736/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1030/phi_stmt_1030_req) (branch_block_stmt_736/merge_stmt_1029_PhiAck/phi_stmt_1030_ack)
  // ($cast ($uint<32>) iNsTr_41 )
  type_cast_1040_inst <=> (branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1037/phi_stmt_1037_sources/type_cast_1040/SplitProtocol/Sample/rr branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1037/phi_stmt_1037_sources/type_cast_1040/SplitProtocol/Update/cr) (branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1037/phi_stmt_1037_sources/type_cast_1040/SplitProtocol/Sample/ra branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1037/phi_stmt_1037_sources/type_cast_1040/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xi )
  type_cast_1042_inst <=> (branch_block_stmt_736/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1037/phi_stmt_1037_sources/type_cast_1042/SplitProtocol/Sample/rr branch_block_stmt_736/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1037/phi_stmt_1037_sources/type_cast_1042/SplitProtocol/Update/cr) (branch_block_stmt_736/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1037/phi_stmt_1037_sources/type_cast_1042/SplitProtocol/Sample/ra branch_block_stmt_736/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1037/phi_stmt_1037_sources/type_cast_1042/SplitProtocol/Update/ca)
  phi_stmt_1037 <=> (branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_1037/phi_stmt_1037_req branch_block_stmt_736/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_1037/phi_stmt_1037_req) (branch_block_stmt_736/merge_stmt_1029_PhiAck/phi_stmt_1037_ack)
  // 		iNsTr_41 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 437
  // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_1048_inst <=> (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/SHL_u32_u32_1048_Sample/rr branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/SHL_u32_u32_1048_Update/cr) (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/SHL_u32_u32_1048_Sample/ra branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/SHL_u32_u32_1048_Update/ca)
  // 		iNsTr_42 := (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 438
  // (iNsTr_41 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_1054_inst <=> (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/AND_u32_u32_1054_Sample/rr branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/AND_u32_u32_1054_Update/cr) (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/AND_u32_u32_1054_Sample/ra branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/AND_u32_u32_1054_Update/ca)
  // 		iNsTr_43 := (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 440
  // (iNsTr_42 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_1060_inst <=> (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/EQ_u32_u1_1060_Sample/rr branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/EQ_u32_u1_1060_Update/cr) (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/EQ_u32_u1_1060_Sample/ra branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/EQ_u32_u1_1060_Update/ca)
  // 		iNsTr_44 := (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 442
  // (($bitcast ($int<32>) iNsTr_41 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_41 )
  type_cast_1064_inst <=> (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/type_cast_1064_Sample/rr branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/type_cast_1064_Update/cr) (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/type_cast_1064_Sample/ra branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/type_cast_1064_Update/ca)
  NEQ_i32_u1_1068_inst <=> (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/NEQ_i32_u1_1068_Sample/rr branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/NEQ_i32_u1_1068_Update/cr) (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/NEQ_i32_u1_1068_Sample/ra branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/NEQ_i32_u1_1068_Update/ca)
  // 		orx_xcondx_xi := (iNsTr_43 & iNsTr_44)
  //  file prog.aa, line 443
  // (iNsTr_43 & iNsTr_44)
  AND_u1_u1_1073_inst <=> (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/AND_u1_u1_1073_Sample/rr branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/AND_u1_u1_1073_Update/cr) (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/AND_u1_u1_1073_Sample/ra branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/AND_u1_u1_1073_Update/ca)
  // 		indvarx_xnextx_xi := (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 444
  // (iNsTr_40 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_1079_inst <=> (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/ADD_u32_u32_1079_Sample/rr branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/ADD_u32_u32_1079_Update/cr) (branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/ADD_u32_u32_1079_Sample/ra branch_block_stmt_736/assign_stmt_1049_to_assign_stmt_1080/ADD_u32_u32_1079_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 445
  if_stmt_1081_branch <=> (branch_block_stmt_736/if_stmt_1081_eval_test/branch_req) (branch_block_stmt_736/if_stmt_1081_else_link/else_choice_transition branch_block_stmt_736/if_stmt_1081_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 447
  // ($cast ($uint<32>) iNsTr_41 )
  type_cast_1091_inst <=> (branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1088/phi_stmt_1088_sources/type_cast_1091/SplitProtocol/Sample/rr branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1088/phi_stmt_1088_sources/type_cast_1091/SplitProtocol/Update/cr) (branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1088/phi_stmt_1088_sources/type_cast_1091/SplitProtocol/Sample/ra branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1088/phi_stmt_1088_sources/type_cast_1091/SplitProtocol/Update/ca)
  phi_stmt_1088 <=> (branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1088/phi_stmt_1088_req) (branch_block_stmt_736/merge_stmt_1087_PhiAck/phi_stmt_1088_ack)
  // ($cast ($uint<32>) iNsTr_40 )
  type_cast_1095_inst <=> (branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1092/phi_stmt_1092_sources/type_cast_1095/SplitProtocol/Sample/rr branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1092/phi_stmt_1092_sources/type_cast_1095/SplitProtocol/Update/cr) (branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1092/phi_stmt_1092_sources/type_cast_1095/SplitProtocol/Sample/ra branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1092/phi_stmt_1092_sources/type_cast_1095/SplitProtocol/Update/ca)
  phi_stmt_1092 <=> (branch_block_stmt_736/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_1092/phi_stmt_1092_req) (branch_block_stmt_736/merge_stmt_1087_PhiAck/phi_stmt_1092_ack)
  // 		xx_xnot := (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
  //  file prog.aa, line 451
  // (iNsTr_6 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
  OR_u32_u32_1101_inst <=> (branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/OR_u32_u32_1101_Sample/rr branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/OR_u32_u32_1101_Update/cr) (branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/OR_u32_u32_1101_Sample/ra branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/OR_u32_u32_1101_Update/ca)
  // 		tmp21x_xi := (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 452
  // (xx_xnot ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  XOR_u32_u32_1107_inst <=> (branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/XOR_u32_u32_1107_Sample/rr branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/XOR_u32_u32_1107_Update/cr) (branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/XOR_u32_u32_1107_Sample/ra branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/XOR_u32_u32_1107_Update/ca)
  // 		tmp25x_xi := (tmp21x_xi + iNsTr_5)
  //  file prog.aa, line 453
  // (tmp21x_xi + iNsTr_5)
  ADD_u32_u32_1112_inst <=> (branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/ADD_u32_u32_1112_Sample/rr branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/ADD_u32_u32_1112_Update/cr) (branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/ADD_u32_u32_1112_Sample/ra branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/ADD_u32_u32_1112_Update/ca)
  // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
  //  file prog.aa, line 454
  // (tmp25x_xi - xx_xlcssa)
  SUB_u32_u32_1117_inst <=> (branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/SUB_u32_u32_1117_Sample/rr branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/SUB_u32_u32_1117_Update/cr) (branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/SUB_u32_u32_1117_Sample/ra branch_block_stmt_736/assign_stmt_1102_to_assign_stmt_1118/SUB_u32_u32_1117_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 457
  // ($cast ($uint<32>) tmp26x_xi )
  type_cast_1124_inst <=> (branch_block_stmt_736/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1121/phi_stmt_1121_sources/type_cast_1124/SplitProtocol/Sample/rr branch_block_stmt_736/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1121/phi_stmt_1121_sources/type_cast_1124/SplitProtocol/Update/cr) (branch_block_stmt_736/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1121/phi_stmt_1121_sources/type_cast_1124/SplitProtocol/Sample/ra branch_block_stmt_736/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1121/phi_stmt_1121_sources/type_cast_1124/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_16 )
  type_cast_1126_inst <=> (branch_block_stmt_736/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1121/phi_stmt_1121_sources/type_cast_1126/SplitProtocol/Sample/rr branch_block_stmt_736/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1121/phi_stmt_1121_sources/type_cast_1126/SplitProtocol/Update/cr) (branch_block_stmt_736/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1121/phi_stmt_1121_sources/type_cast_1126/SplitProtocol/Sample/ra branch_block_stmt_736/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1121/phi_stmt_1121_sources/type_cast_1126/SplitProtocol/Update/ca)
  phi_stmt_1121 <=> (branch_block_stmt_736/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1121/phi_stmt_1121_req branch_block_stmt_736/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1121/phi_stmt_1121_req) (branch_block_stmt_736/merge_stmt_1120_PhiAck/phi_stmt_1121_ack)
  // ($cast ($uint<32>) xx_xlcssa1 )
  type_cast_1130_inst <=> (branch_block_stmt_736/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1127/phi_stmt_1127_sources/type_cast_1130/SplitProtocol/Sample/rr branch_block_stmt_736/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1127/phi_stmt_1127_sources/type_cast_1130/SplitProtocol/Update/cr) (branch_block_stmt_736/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1127/phi_stmt_1127_sources/type_cast_1130/SplitProtocol/Sample/ra branch_block_stmt_736/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1127/phi_stmt_1127_sources/type_cast_1130/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xi )
  type_cast_1132_inst <=> (branch_block_stmt_736/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1127/phi_stmt_1127_sources/type_cast_1132/SplitProtocol/Sample/rr branch_block_stmt_736/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1127/phi_stmt_1127_sources/type_cast_1132/SplitProtocol/Update/cr) (branch_block_stmt_736/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1127/phi_stmt_1127_sources/type_cast_1132/SplitProtocol/Sample/ra branch_block_stmt_736/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1127/phi_stmt_1127_sources/type_cast_1132/SplitProtocol/Update/ca)
  phi_stmt_1127 <=> (branch_block_stmt_736/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1127/phi_stmt_1127_req branch_block_stmt_736/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_1127/phi_stmt_1127_req) (branch_block_stmt_736/merge_stmt_1120_PhiAck/phi_stmt_1127_ack)
  // 		iNsTr_29 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 461
  // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_1138_inst <=> (branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/AND_u32_u32_1138_Sample/rr branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/AND_u32_u32_1138_Update/cr) (branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/AND_u32_u32_1138_Sample/ra branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/AND_u32_u32_1138_Update/ca)
  // 		iNsTr_30 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 462
  // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_1144_inst <=> (branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/SHL_u32_u32_1144_Sample/rr branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/SHL_u32_u32_1144_Update/cr) (branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/SHL_u32_u32_1144_Sample/ra branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/SHL_u32_u32_1144_Update/ca)
  // 		iNsTr_31 := (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 463
  // (iNsTr_30 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_1150_inst <=> (branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/ADD_u32_u32_1150_Sample/rr branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/ADD_u32_u32_1150_Update/cr) (branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/ADD_u32_u32_1150_Sample/ra branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/ADD_u32_u32_1150_Update/ca)
  // 		iNsTr_32 := (iNsTr_31 | iNsTr_15)
  //  file prog.aa, line 464
  // (iNsTr_31 | iNsTr_15)
  OR_u32_u32_1155_inst <=> (branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/OR_u32_u32_1155_Sample/rr branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/OR_u32_u32_1155_Update/cr) (branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/OR_u32_u32_1155_Sample/ra branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/OR_u32_u32_1155_Update/ca)
  // 		iNsTr_33 := (iNsTr_32 | iNsTr_29)
  //  file prog.aa, line 465
  // (iNsTr_32 | iNsTr_29)
  OR_u32_u32_1160_inst <=> (branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/OR_u32_u32_1160_Sample/rr branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/OR_u32_u32_1160_Update/cr) (branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/OR_u32_u32_1160_Sample/ra branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/OR_u32_u32_1160_Update/ca)
  // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_33 )
  //  file prog.aa, line 466
  // ($bitcast ($float<8,23>) iNsTr_33 )
  type_cast_1164_inst <=> (branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/type_cast_1164_Sample/rr branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/type_cast_1164_Update/cr) (branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/type_cast_1164_Sample/ra branch_block_stmt_736/assign_stmt_1139_to_assign_stmt_1165/type_cast_1164_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 469
  // CP-DP links for merge  
  //  file prog.aa, line 473
  // ($cast ($float<8,23>) tmp3x_xi )
  type_cast_1173_inst <=> (branch_block_stmt_736/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1170/phi_stmt_1170_sources/type_cast_1173/SplitProtocol/Sample/rr branch_block_stmt_736/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1170/phi_stmt_1170_sources/type_cast_1173/SplitProtocol/Update/cr) (branch_block_stmt_736/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1170/phi_stmt_1170_sources/type_cast_1173/SplitProtocol/Sample/ra branch_block_stmt_736/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1170/phi_stmt_1170_sources/type_cast_1173/SplitProtocol/Update/ca)
  phi_stmt_1170 <=> (branch_block_stmt_736/xx_xcritedgex_xi_UnifiedReturnBlock_PhiReq/phi_stmt_1170/phi_stmt_1170_req branch_block_stmt_736/fdiv32x_xexit_UnifiedReturnBlock_PhiReq/phi_stmt_1170/phi_stmt_1170_req) (branch_block_stmt_736/merge_stmt_1169_PhiAck/phi_stmt_1170_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 477
}
$module [rotor_flux_calc] 
{
  $in id:$float<8,23>
  // can point into  foreign( $void )
  flux_rotor_prev:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %rotor_flux_calc
  //  file prog.aa, line 311
  // pipe-declarations for block %rotor_flux_calc%body
  //  file prog.aa, line 316
  // pipe-declarations for block %rotor_flux_calc%body%
  //  file prog.aa, line 323
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_710] // Branch Block  file prog.aa, line 316
    {
      $P [branch_block_stmt_710__entry__]
      branch_block_stmt_710__entry__ <-| ($entry)
      $P [branch_block_stmt_710__exit__]
      branch_block_stmt_710__exit__ |-> ($exit)
      $P [assign_stmt_716_to_assign_stmt_727__entry__] 
      $P [assign_stmt_716_to_assign_stmt_727__exit__] 
      $P [return__]
      $P [merge_stmt_729__exit__] 
      ::[assign_stmt_716_to_assign_stmt_727] 
      {
        // 		iNsTr_0 := (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995200e-01 ))
        //  file prog.aa, line 319
        // Source expression
        // (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995200e-01 ))
        $T[MUL_f32_f32_715_sample_start_] 
        $T[MUL_f32_f32_715_sample_completed_] 
        $T[MUL_f32_f32_715_update_start_] 
        $T[MUL_f32_f32_715_update_completed_] 
        // flux_rotor_prev
        $T[R_flux_rotor_prev_712_sample_start_] 
        $T[R_flux_rotor_prev_712_sample_completed_] 
        $T[R_flux_rotor_prev_712_update_start_] 
        $T[R_flux_rotor_prev_712_update_completed_] 
        // reference to interface object
        R_flux_rotor_prev_712_sample_start_ <-& ($entry)
        R_flux_rotor_prev_712_sample_completed_ <-& (R_flux_rotor_prev_712_sample_start_)
        R_flux_rotor_prev_712_update_start_ <-& (R_flux_rotor_prev_712_sample_completed_)
        R_flux_rotor_prev_712_update_completed_ <-& (R_flux_rotor_prev_712_update_start_)
        MUL_f32_f32_715_sample_start_ <-& (R_flux_rotor_prev_712_update_completed_)
        ;;[MUL_f32_f32_715_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_715_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_715_sample_start_ &-> (MUL_f32_f32_715_Sample)
        MUL_f32_f32_715_sample_completed_ <-& (MUL_f32_f32_715_Sample)
        MUL_f32_f32_715_sample_completed_ &-> ($null)
        MUL_f32_f32_715_update_start_ &-> (MUL_f32_f32_715_Update)
        MUL_f32_f32_715_update_completed_ <-& (MUL_f32_f32_715_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (id * ($bitcast ($float<8,23>) _f3.886080e-04 ))
        //  file prog.aa, line 320
        // Source expression
        // (id * ($bitcast ($float<8,23>) _f3.886080e-04 ))
        $T[MUL_f32_f32_721_sample_start_] 
        $T[MUL_f32_f32_721_sample_completed_] 
        $T[MUL_f32_f32_721_update_start_] 
        $T[MUL_f32_f32_721_update_completed_] 
        // id
        $T[R_id_718_sample_start_] 
        $T[R_id_718_sample_completed_] 
        $T[R_id_718_update_start_] 
        $T[R_id_718_update_completed_] 
        // reference to interface object
        R_id_718_sample_start_ <-& ($entry)
        R_id_718_sample_completed_ <-& (R_id_718_sample_start_)
        R_id_718_update_start_ <-& (R_id_718_sample_completed_)
        R_id_718_update_completed_ <-& (R_id_718_update_start_)
        MUL_f32_f32_721_sample_start_ <-& (R_id_718_update_completed_)
        ;;[MUL_f32_f32_721_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_721_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_721_sample_start_ &-> (MUL_f32_f32_721_Sample)
        MUL_f32_f32_721_sample_completed_ <-& (MUL_f32_f32_721_Sample)
        MUL_f32_f32_721_sample_completed_ &-> ($null)
        MUL_f32_f32_721_update_start_ &-> (MUL_f32_f32_721_Update)
        MUL_f32_f32_721_update_completed_ <-& (MUL_f32_f32_721_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		ret_val__ := (iNsTr_1 + iNsTr_0)
        //  file prog.aa, line 321
        // Source expression
        // (iNsTr_1 + iNsTr_0)
        $T[ADD_f32_f32_726_sample_start_] 
        $T[ADD_f32_f32_726_sample_completed_] 
        $T[ADD_f32_f32_726_update_start_] 
        $T[ADD_f32_f32_726_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_724_sample_start_] 
        $T[R_iNsTr_1_724_sample_completed_] 
        $T[R_iNsTr_1_724_update_start_] 
        $T[R_iNsTr_1_724_update_completed_] 
        // implicit reference
        R_iNsTr_1_724_sample_start_ <-& (MUL_f32_f32_721_update_completed_)
        R_iNsTr_1_724_sample_completed_ <-& (R_iNsTr_1_724_sample_start_)
        R_iNsTr_1_724_update_start_ <-& (R_iNsTr_1_724_sample_completed_)
        R_iNsTr_1_724_update_completed_ <-& (R_iNsTr_1_724_update_start_)
        // iNsTr_0
        $T[R_iNsTr_0_725_sample_start_] 
        $T[R_iNsTr_0_725_sample_completed_] 
        $T[R_iNsTr_0_725_update_start_] 
        $T[R_iNsTr_0_725_update_completed_] 
        // implicit reference
        R_iNsTr_0_725_sample_start_ <-& (MUL_f32_f32_715_update_completed_)
        R_iNsTr_0_725_sample_completed_ <-& (R_iNsTr_0_725_sample_start_)
        R_iNsTr_0_725_update_start_ <-& (R_iNsTr_0_725_sample_completed_)
        R_iNsTr_0_725_update_completed_ <-& (R_iNsTr_0_725_update_start_)
        ADD_f32_f32_726_sample_start_ <-& (R_iNsTr_1_724_update_completed_)
        ADD_f32_f32_726_sample_start_ <-& (R_iNsTr_0_725_update_completed_)
        ;;[ADD_f32_f32_726_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_726_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_726_sample_start_ &-> (ADD_f32_f32_726_Sample)
        ADD_f32_f32_726_sample_completed_ <-& (ADD_f32_f32_726_Sample)
        ADD_f32_f32_726_sample_completed_ &-> ($null)
        ADD_f32_f32_726_update_start_ &-> (ADD_f32_f32_726_Update)
        ADD_f32_f32_726_update_completed_ <-& (ADD_f32_f32_726_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_716_to_assign_stmt_727__entry__ |-> (assign_stmt_716_to_assign_stmt_727)
      assign_stmt_716_to_assign_stmt_727__exit__ <-| (assign_stmt_716_to_assign_stmt_727)
      // control-path for merge  
      //  file prog.aa, line 323
      //---------------------   merge statement  file prog.aa, line 323  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_729_PhiReqMerge] 
      merge_stmt_729_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_729_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_729_PhiReqMerge |-> (merge_stmt_729_PhiAck)
      merge_stmt_729__exit__  <-| (merge_stmt_729_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 323  --------------------------
      assign_stmt_716_to_assign_stmt_727__entry__ <-| (branch_block_stmt_710__entry__)
      return__ <-| (assign_stmt_716_to_assign_stmt_727__exit__)
      merge_stmt_729__exit__ |-> (branch_block_stmt_710__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 323
    // constant-object-declarations for block %rotor_flux_calc%body
    //  file prog.aa, line 316
    // constant-object-declarations for block %rotor_flux_calc
    //  file prog.aa, line 311
    // constant-declarations for block %rotor_flux_calc%body
    //  file prog.aa, line 316
    // ($bitcast ($float<8,23>) _f9.995200e-01 )
    $constant $W[type_cast_714_wire_constant] : $float<8,23> := _b00111111011111111110000010001011// 9.995200e-01
    // ($bitcast ($float<8,23>) _f3.886080e-04 )
    $constant $W[type_cast_720_wire_constant] : $float<8,23> := _b00111001110010111011111000010101// 3.886080e-04
    // constant-declarations for block %rotor_flux_calc%body%
    //  file prog.aa, line 323
    // block %rotor_flux_calc%body
    //  file prog.aa, line 316
    // 		iNsTr_0 := (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995200e-01 ))
    //  file prog.aa, line 319
    // iNsTr_0
    $W[iNsTr_0_716] : $float<8,23>
    // 		iNsTr_1 := (id * ($bitcast ($float<8,23>) _f3.886080e-04 ))
    //  file prog.aa, line 320
    // iNsTr_1
    $W[iNsTr_1_722] : $float<8,23>
    // 		ret_val__ := (iNsTr_1 + iNsTr_0)
    //  file prog.aa, line 321
    // ret_val__
    // datapath-instances for block %rotor_flux_calc%body
    //  file prog.aa, line 316
    // 		iNsTr_0 := (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995200e-01 ))
    //  file prog.aa, line 319
    // (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995200e-01 ))
    *[MUL_f32_f32_715_inst] (flux_rotor_prev type_cast_714_wire_constant) (iNsTr_0_716) 
    $delay MUL_f32_f32_715_inst 24
    // 		iNsTr_1 := (id * ($bitcast ($float<8,23>) _f3.886080e-04 ))
    //  file prog.aa, line 320
    // (id * ($bitcast ($float<8,23>) _f3.886080e-04 ))
    *[MUL_f32_f32_721_inst] (id type_cast_720_wire_constant) (iNsTr_1_722) 
    $delay MUL_f32_f32_721_inst 24
    // 		ret_val__ := (iNsTr_1 + iNsTr_0)
    //  file prog.aa, line 321
    // (iNsTr_1 + iNsTr_0)
    +[ADD_f32_f32_726_inst] (iNsTr_1_722 iNsTr_0_716) (ret_val__) 
    $delay ADD_f32_f32_726_inst 24
  }
  // end data-path
  // 		iNsTr_0 := (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995200e-01 ))
  //  file prog.aa, line 319
  // (flux_rotor_prev * ($bitcast ($float<8,23>) _f9.995200e-01 ))
  MUL_f32_f32_715_inst <=> (branch_block_stmt_710/assign_stmt_716_to_assign_stmt_727/MUL_f32_f32_715_Sample/rr branch_block_stmt_710/assign_stmt_716_to_assign_stmt_727/MUL_f32_f32_715_Update/cr) (branch_block_stmt_710/assign_stmt_716_to_assign_stmt_727/MUL_f32_f32_715_Sample/ra branch_block_stmt_710/assign_stmt_716_to_assign_stmt_727/MUL_f32_f32_715_Update/ca)
  // 		iNsTr_1 := (id * ($bitcast ($float<8,23>) _f3.886080e-04 ))
  //  file prog.aa, line 320
  // (id * ($bitcast ($float<8,23>) _f3.886080e-04 ))
  MUL_f32_f32_721_inst <=> (branch_block_stmt_710/assign_stmt_716_to_assign_stmt_727/MUL_f32_f32_721_Sample/rr branch_block_stmt_710/assign_stmt_716_to_assign_stmt_727/MUL_f32_f32_721_Update/cr) (branch_block_stmt_710/assign_stmt_716_to_assign_stmt_727/MUL_f32_f32_721_Sample/ra branch_block_stmt_710/assign_stmt_716_to_assign_stmt_727/MUL_f32_f32_721_Update/ca)
  // 		ret_val__ := (iNsTr_1 + iNsTr_0)
  //  file prog.aa, line 321
  // (iNsTr_1 + iNsTr_0)
  ADD_f32_f32_726_inst <=> (branch_block_stmt_710/assign_stmt_716_to_assign_stmt_727/ADD_f32_f32_726_Sample/rr branch_block_stmt_710/assign_stmt_716_to_assign_stmt_727/ADD_f32_f32_726_Update/cr) (branch_block_stmt_710/assign_stmt_716_to_assign_stmt_727/ADD_f32_f32_726_Sample/ra branch_block_stmt_710/assign_stmt_716_to_assign_stmt_727/ADD_f32_f32_726_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 323
}
$module [theta_calc] 
{
  $in omega_r:$float<8,23>
  // can point into  foreign( $void )
  omega_m:$float<8,23>
  // can point into  foreign( $void )
  theta_prev:$float<8,23>
  // can point into  foreign( $void )
  del_t:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val__:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %theta_calc
  //  file prog.aa, line 480
  // pipe-declarations for block %theta_calc%body
  //  file prog.aa, line 485
  // pipe-declarations for block %theta_calc%body%
  //  file prog.aa, line 492
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1188] // Branch Block  file prog.aa, line 485
    {
      $P [branch_block_stmt_1188__entry__]
      branch_block_stmt_1188__entry__ <-| ($entry)
      $P [branch_block_stmt_1188__exit__]
      branch_block_stmt_1188__exit__ |-> ($exit)
      $P [assign_stmt_1193_to_assign_stmt_1203__entry__] 
      $P [assign_stmt_1193_to_assign_stmt_1203__exit__] 
      $P [return__]
      $P [merge_stmt_1205__exit__] 
      ::[assign_stmt_1193_to_assign_stmt_1203] 
      {
        // 		iNsTr_0 := (omega_r + omega_m)
        //  file prog.aa, line 488
        // Source expression
        // (omega_r + omega_m)
        $T[ADD_f32_f32_1192_sample_start_] 
        $T[ADD_f32_f32_1192_sample_completed_] 
        $T[ADD_f32_f32_1192_update_start_] 
        $T[ADD_f32_f32_1192_update_completed_] 
        // omega_r
        $T[R_omega_r_1190_sample_start_] 
        $T[R_omega_r_1190_sample_completed_] 
        $T[R_omega_r_1190_update_start_] 
        $T[R_omega_r_1190_update_completed_] 
        // reference to interface object
        R_omega_r_1190_sample_start_ <-& ($entry)
        R_omega_r_1190_sample_completed_ <-& (R_omega_r_1190_sample_start_)
        R_omega_r_1190_update_start_ <-& (R_omega_r_1190_sample_completed_)
        R_omega_r_1190_update_completed_ <-& (R_omega_r_1190_update_start_)
        // omega_m
        $T[R_omega_m_1191_sample_start_] 
        $T[R_omega_m_1191_sample_completed_] 
        $T[R_omega_m_1191_update_start_] 
        $T[R_omega_m_1191_update_completed_] 
        // reference to interface object
        R_omega_m_1191_sample_start_ <-& ($entry)
        R_omega_m_1191_sample_completed_ <-& (R_omega_m_1191_sample_start_)
        R_omega_m_1191_update_start_ <-& (R_omega_m_1191_sample_completed_)
        R_omega_m_1191_update_completed_ <-& (R_omega_m_1191_update_start_)
        ADD_f32_f32_1192_sample_start_ <-& (R_omega_r_1190_update_completed_)
        ADD_f32_f32_1192_sample_start_ <-& (R_omega_m_1191_update_completed_)
        ;;[ADD_f32_f32_1192_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1192_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1192_sample_start_ &-> (ADD_f32_f32_1192_Sample)
        ADD_f32_f32_1192_sample_completed_ <-& (ADD_f32_f32_1192_Sample)
        ADD_f32_f32_1192_sample_completed_ &-> ($null)
        ADD_f32_f32_1192_update_start_ &-> (ADD_f32_f32_1192_Update)
        ADD_f32_f32_1192_update_completed_ <-& (ADD_f32_f32_1192_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		iNsTr_1 := (iNsTr_0 * del_t)
        //  file prog.aa, line 489
        // Source expression
        // (iNsTr_0 * del_t)
        $T[MUL_f32_f32_1197_sample_start_] 
        $T[MUL_f32_f32_1197_sample_completed_] 
        $T[MUL_f32_f32_1197_update_start_] 
        $T[MUL_f32_f32_1197_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_1195_sample_start_] 
        $T[R_iNsTr_0_1195_sample_completed_] 
        $T[R_iNsTr_0_1195_update_start_] 
        $T[R_iNsTr_0_1195_update_completed_] 
        // implicit reference
        R_iNsTr_0_1195_sample_start_ <-& (ADD_f32_f32_1192_update_completed_)
        R_iNsTr_0_1195_sample_completed_ <-& (R_iNsTr_0_1195_sample_start_)
        R_iNsTr_0_1195_update_start_ <-& (R_iNsTr_0_1195_sample_completed_)
        R_iNsTr_0_1195_update_completed_ <-& (R_iNsTr_0_1195_update_start_)
        // del_t
        $T[R_del_t_1196_sample_start_] 
        $T[R_del_t_1196_sample_completed_] 
        $T[R_del_t_1196_update_start_] 
        $T[R_del_t_1196_update_completed_] 
        // reference to interface object
        R_del_t_1196_sample_start_ <-& ($entry)
        R_del_t_1196_sample_completed_ <-& (R_del_t_1196_sample_start_)
        R_del_t_1196_update_start_ <-& (R_del_t_1196_sample_completed_)
        R_del_t_1196_update_completed_ <-& (R_del_t_1196_update_start_)
        MUL_f32_f32_1197_sample_start_ <-& (R_iNsTr_0_1195_update_completed_)
        MUL_f32_f32_1197_sample_start_ <-& (R_del_t_1196_update_completed_)
        ;;[MUL_f32_f32_1197_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1197_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1197_sample_start_ &-> (MUL_f32_f32_1197_Sample)
        MUL_f32_f32_1197_sample_completed_ <-& (MUL_f32_f32_1197_Sample)
        MUL_f32_f32_1197_sample_completed_ &-> ($null)
        MUL_f32_f32_1197_update_start_ &-> (MUL_f32_f32_1197_Update)
        MUL_f32_f32_1197_update_completed_ <-& (MUL_f32_f32_1197_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		ret_val__ := (iNsTr_1 + theta_prev)
        //  file prog.aa, line 490
        // Source expression
        // (iNsTr_1 + theta_prev)
        $T[ADD_f32_f32_1202_sample_start_] 
        $T[ADD_f32_f32_1202_sample_completed_] 
        $T[ADD_f32_f32_1202_update_start_] 
        $T[ADD_f32_f32_1202_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_1200_sample_start_] 
        $T[R_iNsTr_1_1200_sample_completed_] 
        $T[R_iNsTr_1_1200_update_start_] 
        $T[R_iNsTr_1_1200_update_completed_] 
        // implicit reference
        R_iNsTr_1_1200_sample_start_ <-& (MUL_f32_f32_1197_update_completed_)
        R_iNsTr_1_1200_sample_completed_ <-& (R_iNsTr_1_1200_sample_start_)
        R_iNsTr_1_1200_update_start_ <-& (R_iNsTr_1_1200_sample_completed_)
        R_iNsTr_1_1200_update_completed_ <-& (R_iNsTr_1_1200_update_start_)
        // theta_prev
        $T[R_theta_prev_1201_sample_start_] 
        $T[R_theta_prev_1201_sample_completed_] 
        $T[R_theta_prev_1201_update_start_] 
        $T[R_theta_prev_1201_update_completed_] 
        // reference to interface object
        R_theta_prev_1201_sample_start_ <-& ($entry)
        R_theta_prev_1201_sample_completed_ <-& (R_theta_prev_1201_sample_start_)
        R_theta_prev_1201_update_start_ <-& (R_theta_prev_1201_sample_completed_)
        R_theta_prev_1201_update_completed_ <-& (R_theta_prev_1201_update_start_)
        ADD_f32_f32_1202_sample_start_ <-& (R_iNsTr_1_1200_update_completed_)
        ADD_f32_f32_1202_sample_start_ <-& (R_theta_prev_1201_update_completed_)
        ;;[ADD_f32_f32_1202_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1202_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1202_sample_start_ &-> (ADD_f32_f32_1202_Sample)
        ADD_f32_f32_1202_sample_completed_ <-& (ADD_f32_f32_1202_Sample)
        ADD_f32_f32_1202_sample_completed_ &-> ($null)
        ADD_f32_f32_1202_update_start_ &-> (ADD_f32_f32_1202_Update)
        ADD_f32_f32_1202_update_completed_ <-& (ADD_f32_f32_1202_Update)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_1193_to_assign_stmt_1203__entry__ |-> (assign_stmt_1193_to_assign_stmt_1203)
      assign_stmt_1193_to_assign_stmt_1203__exit__ <-| (assign_stmt_1193_to_assign_stmt_1203)
      // control-path for merge  
      //  file prog.aa, line 492
      //---------------------   merge statement  file prog.aa, line 492  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1205_PhiReqMerge] 
      merge_stmt_1205_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1205_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1205_PhiReqMerge |-> (merge_stmt_1205_PhiAck)
      merge_stmt_1205__exit__  <-| (merge_stmt_1205_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 492  --------------------------
      assign_stmt_1193_to_assign_stmt_1203__entry__ <-| (branch_block_stmt_1188__entry__)
      return__ <-| (assign_stmt_1193_to_assign_stmt_1203__exit__)
      merge_stmt_1205__exit__ |-> (branch_block_stmt_1188__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %theta_calc%body%
    //  file prog.aa, line 492
    // constant-object-declarations for block %theta_calc%body
    //  file prog.aa, line 485
    // constant-object-declarations for block %theta_calc
    //  file prog.aa, line 480
    // constant-declarations for block %theta_calc%body
    //  file prog.aa, line 485
    // constant-declarations for block %theta_calc%body%
    //  file prog.aa, line 492
    // block %theta_calc%body
    //  file prog.aa, line 485
    // 		iNsTr_0 := (omega_r + omega_m)
    //  file prog.aa, line 488
    // iNsTr_0
    $W[iNsTr_0_1193] : $float<8,23>
    // 		iNsTr_1 := (iNsTr_0 * del_t)
    //  file prog.aa, line 489
    // iNsTr_1
    $W[iNsTr_1_1198] : $float<8,23>
    // 		ret_val__ := (iNsTr_1 + theta_prev)
    //  file prog.aa, line 490
    // ret_val__
    // datapath-instances for block %theta_calc%body
    //  file prog.aa, line 485
    // 		iNsTr_0 := (omega_r + omega_m)
    //  file prog.aa, line 488
    // (omega_r + omega_m)
    +[ADD_f32_f32_1192_inst] (omega_r omega_m) (iNsTr_0_1193) 
    $delay ADD_f32_f32_1192_inst 24
    // 		iNsTr_1 := (iNsTr_0 * del_t)
    //  file prog.aa, line 489
    // (iNsTr_0 * del_t)
    *[MUL_f32_f32_1197_inst] (iNsTr_0_1193 del_t) (iNsTr_1_1198) 
    $delay MUL_f32_f32_1197_inst 24
    // 		ret_val__ := (iNsTr_1 + theta_prev)
    //  file prog.aa, line 490
    // (iNsTr_1 + theta_prev)
    +[ADD_f32_f32_1202_inst] (iNsTr_1_1198 theta_prev) (ret_val__) 
    $delay ADD_f32_f32_1202_inst 24
  }
  // end data-path
  // 		iNsTr_0 := (omega_r + omega_m)
  //  file prog.aa, line 488
  // (omega_r + omega_m)
  ADD_f32_f32_1192_inst <=> (branch_block_stmt_1188/assign_stmt_1193_to_assign_stmt_1203/ADD_f32_f32_1192_Sample/rr branch_block_stmt_1188/assign_stmt_1193_to_assign_stmt_1203/ADD_f32_f32_1192_Update/cr) (branch_block_stmt_1188/assign_stmt_1193_to_assign_stmt_1203/ADD_f32_f32_1192_Sample/ra branch_block_stmt_1188/assign_stmt_1193_to_assign_stmt_1203/ADD_f32_f32_1192_Update/ca)
  // 		iNsTr_1 := (iNsTr_0 * del_t)
  //  file prog.aa, line 489
  // (iNsTr_0 * del_t)
  MUL_f32_f32_1197_inst <=> (branch_block_stmt_1188/assign_stmt_1193_to_assign_stmt_1203/MUL_f32_f32_1197_Sample/rr branch_block_stmt_1188/assign_stmt_1193_to_assign_stmt_1203/MUL_f32_f32_1197_Update/cr) (branch_block_stmt_1188/assign_stmt_1193_to_assign_stmt_1203/MUL_f32_f32_1197_Sample/ra branch_block_stmt_1188/assign_stmt_1193_to_assign_stmt_1203/MUL_f32_f32_1197_Update/ca)
  // 		ret_val__ := (iNsTr_1 + theta_prev)
  //  file prog.aa, line 490
  // (iNsTr_1 + theta_prev)
  ADD_f32_f32_1202_inst <=> (branch_block_stmt_1188/assign_stmt_1193_to_assign_stmt_1203/ADD_f32_f32_1202_Sample/rr branch_block_stmt_1188/assign_stmt_1193_to_assign_stmt_1203/ADD_f32_f32_1202_Update/cr) (branch_block_stmt_1188/assign_stmt_1193_to_assign_stmt_1203/ADD_f32_f32_1202_Sample/ra branch_block_stmt_1188/assign_stmt_1193_to_assign_stmt_1203/ADD_f32_f32_1202_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 492
}
$module [udiv32] 
{
  $in dividend:$int<32>
  // can point into  foreign( $void )
  divisor:$int<32>
  // can point into  foreign( $void )
  $out ret_val__:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %udiv32
  //  file prog.aa, line 69
  // pipe-declarations for block %udiv32%body
  //  file prog.aa, line 74
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 86
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 90
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 99
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 103
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 112
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 116
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 126
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 132
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 142
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 147
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 152
  // pipe-declarations for block %udiv32%body%
  //  file prog.aa, line 156
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_78] // Branch Block  file prog.aa, line 74
    {
      $P [branch_block_stmt_78__entry__]
      branch_block_stmt_78__entry__ <-| ($entry)
      $P [branch_block_stmt_78__exit__]
      branch_block_stmt_78__exit__ |-> ($exit)
      $P [switch_stmt_79__entry__] 
      $P [switch_stmt_79__exit__] 
      $P [merge_stmt_89__entry__] 
      $P [merge_stmt_89__exit__] 
      $P [bb_1_UnifiedReturnBlock]
      $P [merge_stmt_91__exit__] 
      $P [assign_stmt_97_to_assign_stmt_107__entry__] 
      $P [assign_stmt_97_to_assign_stmt_107__exit__] 
      $P [if_stmt_108__entry__] 
      $P [if_stmt_108__exit__] 
      $P [merge_stmt_114__entry__] 
      $P [merge_stmt_114__exit__] 
      $P [bbx_xnph7x_xpreheader_bbx_xnph7]
      $P [merge_stmt_116__exit__] 
      $P [assign_stmt_136_to_assign_stmt_141__entry__] 
      $P [assign_stmt_136_to_assign_stmt_141__exit__] 
      $P [if_stmt_142__entry__] 
      $P [if_stmt_142__exit__] 
      $P [merge_stmt_148__entry__] 
      $P [merge_stmt_148__exit__] 
      $P [bbx_xnphx_xpreheader_bbx_xnph]
      $P [merge_stmt_150__exit__] 
      $P [assign_stmt_170_to_assign_stmt_181__entry__] 
      $P [assign_stmt_170_to_assign_stmt_181__exit__] 
      $P [if_stmt_182__entry__] 
      $P [if_stmt_182__exit__] 
      $P [merge_stmt_188__entry__] 
      $P [merge_stmt_188__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_199__exit__] 
      $P [assign_stmt_218_to_assign_stmt_228__entry__] 
      $P [assign_stmt_218_to_assign_stmt_228__exit__] 
      $P [if_stmt_229__entry__] 
      $P [if_stmt_229__exit__] 
      $P [merge_stmt_235__entry__] 
      $P [merge_stmt_235__exit__] 
      $P [xx_xloopexitx_xloopexit_xx_xloopexit]
      $P [merge_stmt_242__exit__] 
      $P [xx_xloopexit_UnifiedReturnBlock]
      $P [merge_stmt_255__exit__] 
      $P [return__]
      $P [merge_stmt_264__exit__] 
      // control-path for switch  
      //  file prog.aa, line 77
      ;;[switch_stmt_79_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_79__entry__ |-> (switch_stmt_79_dead_link)
      switch_stmt_79__exit__ <-| (switch_stmt_79_dead_link)
      //---------------------    switch statement  file prog.aa, line 77  --------------------------
      $P [switch_stmt_79__condition_check_place__] 
      switch_stmt_79__entry__ |-> (switch_stmt_79__condition_check_place__)
      ||[switch_stmt_79__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_79__condition_check_place__ |-> (switch_stmt_79__condition_check__)
      $P [switch_stmt_79__select__] 
      switch_stmt_79__select__ <-| (switch_stmt_79__condition_check__)
      // switch choice 0
      ;;[switch_stmt_79_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_xx_xloopexit]
      bb_0_xx_xloopexit <-| (switch_stmt_79_choice_0)
      // switch choice 1
      ;;[switch_stmt_79_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (switch_stmt_79_choice_1)
      ;;[switch_stmt_79_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_0_bb_2]
      bb_0_bb_2 <-| (switch_stmt_79_choice_default)
      switch_stmt_79__select__ |-> (switch_stmt_79_choice_0 switch_stmt_79_choice_1 switch_stmt_79_choice_default)
      //---------------------   end of switch statement  file prog.aa, line 77  --------------------------
      ::[assign_stmt_97_to_assign_stmt_107] 
      {
        // 		iNsTr_1 := (divisor > dividend)
        //  file prog.aa, line 93
        // Source expression
        // (divisor > dividend)
        $T[UGT_u32_u1_95_sample_start_] 
        $T[UGT_u32_u1_95_sample_completed_] 
        $T[UGT_u32_u1_95_update_start_] 
        $T[UGT_u32_u1_95_update_completed_] 
        // divisor
        $T[R_divisor_93_sample_start_] 
        $T[R_divisor_93_sample_completed_] 
        $T[R_divisor_93_update_start_] 
        $T[R_divisor_93_update_completed_] 
        // reference to interface object
        R_divisor_93_sample_start_ <-& ($entry)
        R_divisor_93_sample_completed_ <-& (R_divisor_93_sample_start_)
        R_divisor_93_update_start_ <-& (R_divisor_93_sample_completed_)
        R_divisor_93_update_completed_ <-& (R_divisor_93_update_start_)
        // dividend
        $T[R_dividend_94_sample_start_] 
        $T[R_dividend_94_sample_completed_] 
        $T[R_dividend_94_update_start_] 
        $T[R_dividend_94_update_completed_] 
        // reference to interface object
        R_dividend_94_sample_start_ <-& ($entry)
        R_dividend_94_sample_completed_ <-& (R_dividend_94_sample_start_)
        R_dividend_94_update_start_ <-& (R_dividend_94_sample_completed_)
        R_dividend_94_update_completed_ <-& (R_dividend_94_update_start_)
        UGT_u32_u1_95_sample_start_ <-& (R_divisor_93_update_completed_)
        UGT_u32_u1_95_sample_start_ <-& (R_dividend_94_update_completed_)
        ;;[UGT_u32_u1_95_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_95_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_95_sample_start_ &-> (UGT_u32_u1_95_Sample)
        UGT_u32_u1_95_sample_completed_ <-& (UGT_u32_u1_95_Sample)
        UGT_u32_u1_95_sample_completed_ &-> ($null)
        UGT_u32_u1_95_update_start_ &-> (UGT_u32_u1_95_Update)
        UGT_u32_u1_95_update_completed_ <-& (UGT_u32_u1_95_Update)
        // Target expression
        // (as target) iNsTr_1
        // iNsTr_1
        // implicit reference
        // 		iNsTr_2 := (dividend < divisor)
        //  file prog.aa, line 95
        // Source expression
        // (dividend < divisor)
        $T[ULT_u32_u1_101_sample_start_] 
        $T[ULT_u32_u1_101_sample_completed_] 
        $T[ULT_u32_u1_101_update_start_] 
        $T[ULT_u32_u1_101_update_completed_] 
        // dividend
        $T[R_dividend_99_sample_start_] 
        $T[R_dividend_99_sample_completed_] 
        $T[R_dividend_99_update_start_] 
        $T[R_dividend_99_update_completed_] 
        // reference to interface object
        R_dividend_99_sample_start_ <-& ($entry)
        R_dividend_99_sample_completed_ <-& (R_dividend_99_sample_start_)
        R_dividend_99_update_start_ <-& (R_dividend_99_sample_completed_)
        R_dividend_99_update_completed_ <-& (R_dividend_99_update_start_)
        // divisor
        $T[R_divisor_100_sample_start_] 
        $T[R_divisor_100_sample_completed_] 
        $T[R_divisor_100_update_start_] 
        $T[R_divisor_100_update_completed_] 
        // reference to interface object
        R_divisor_100_sample_start_ <-& ($entry)
        R_divisor_100_sample_completed_ <-& (R_divisor_100_sample_start_)
        R_divisor_100_update_start_ <-& (R_divisor_100_sample_completed_)
        R_divisor_100_update_completed_ <-& (R_divisor_100_update_start_)
        ULT_u32_u1_101_sample_start_ <-& (R_dividend_99_update_completed_)
        ULT_u32_u1_101_sample_start_ <-& (R_divisor_100_update_completed_)
        ;;[ULT_u32_u1_101_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_101_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_101_sample_start_ &-> (ULT_u32_u1_101_Sample)
        ULT_u32_u1_101_sample_completed_ <-& (ULT_u32_u1_101_Sample)
        ULT_u32_u1_101_sample_completed_ &-> ($null)
        ULT_u32_u1_101_update_start_ &-> (ULT_u32_u1_101_Update)
        ULT_u32_u1_101_update_completed_ <-& (ULT_u32_u1_101_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // 		orx_xcond := (iNsTr_1 | iNsTr_2)
        //  file prog.aa, line 96
        // Source expression
        // (iNsTr_1 | iNsTr_2)
        $T[OR_u1_u1_106_sample_start_] 
        $T[OR_u1_u1_106_sample_completed_] 
        $T[OR_u1_u1_106_update_start_] 
        $T[OR_u1_u1_106_update_completed_] 
        // iNsTr_1
        $T[R_iNsTr_1_104_sample_start_] 
        $T[R_iNsTr_1_104_sample_completed_] 
        $T[R_iNsTr_1_104_update_start_] 
        $T[R_iNsTr_1_104_update_completed_] 
        // implicit reference
        R_iNsTr_1_104_sample_start_ <-& (UGT_u32_u1_95_update_completed_)
        R_iNsTr_1_104_sample_completed_ <-& (R_iNsTr_1_104_sample_start_)
        R_iNsTr_1_104_update_start_ <-& (R_iNsTr_1_104_sample_completed_)
        R_iNsTr_1_104_update_completed_ <-& (R_iNsTr_1_104_update_start_)
        // iNsTr_2
        $T[R_iNsTr_2_105_sample_start_] 
        $T[R_iNsTr_2_105_sample_completed_] 
        $T[R_iNsTr_2_105_update_start_] 
        $T[R_iNsTr_2_105_update_completed_] 
        // implicit reference
        R_iNsTr_2_105_sample_start_ <-& (ULT_u32_u1_101_update_completed_)
        R_iNsTr_2_105_sample_completed_ <-& (R_iNsTr_2_105_sample_start_)
        R_iNsTr_2_105_update_start_ <-& (R_iNsTr_2_105_sample_completed_)
        R_iNsTr_2_105_update_completed_ <-& (R_iNsTr_2_105_update_start_)
        OR_u1_u1_106_sample_start_ <-& (R_iNsTr_1_104_update_completed_)
        OR_u1_u1_106_sample_start_ <-& (R_iNsTr_2_105_update_completed_)
        ;;[OR_u1_u1_106_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u1_u1_106_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u1_u1_106_sample_start_ &-> (OR_u1_u1_106_Sample)
        OR_u1_u1_106_sample_completed_ <-& (OR_u1_u1_106_Sample)
        OR_u1_u1_106_sample_completed_ &-> ($null)
        OR_u1_u1_106_update_start_ &-> (OR_u1_u1_106_Update)
        OR_u1_u1_106_update_completed_ <-& (OR_u1_u1_106_Update)
        // Target expression
        // (as target) orx_xcond
        // orx_xcond
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_97_to_assign_stmt_107__entry__ |-> (assign_stmt_97_to_assign_stmt_107)
      assign_stmt_97_to_assign_stmt_107__exit__ <-| (assign_stmt_97_to_assign_stmt_107)
      // if-statement  
      //  file prog.aa, line 97
      ;;[if_stmt_108_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_108__entry__ |-> (if_stmt_108_dead_link)
      if_stmt_108__exit__ <-| (if_stmt_108_dead_link)
      ;;[if_stmt_108_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_108__entry__ |-> (if_stmt_108_eval_test)
      $P [R_orx_xcond_109_place]
      R_orx_xcond_109_place <-| (if_stmt_108_eval_test)
      ;;[if_stmt_108_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_108_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond_109_place |-> (if_stmt_108_if_link if_stmt_108_else_link)
      $P [bb_2_xx_xloopexit]
      bb_2_xx_xloopexit <-| (if_stmt_108_if_link)
      $P [bb_2_bbx_xnph7x_xpreheader]
      bb_2_bbx_xnph7x_xpreheader <-| (if_stmt_108_else_link)
      ::[assign_stmt_136_to_assign_stmt_141] 
      {
        // 		iNsTr_8 := (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 107
        // Source expression
        // (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_135_sample_start_] 
        $T[LSHR_u32_u32_135_sample_completed_] 
        $T[LSHR_u32_u32_135_update_start_] 
        $T[LSHR_u32_u32_135_update_completed_] 
        // xx_x016
        $T[R_xx_x016_132_sample_start_] 
        $T[R_xx_x016_132_sample_completed_] 
        $T[R_xx_x016_132_update_start_] 
        $T[R_xx_x016_132_update_completed_] 
        // implicit reference
        R_xx_x016_132_sample_start_ <-& ($entry)
        R_xx_x016_132_sample_completed_ <-& (R_xx_x016_132_sample_start_)
        R_xx_x016_132_update_start_ <-& (R_xx_x016_132_sample_completed_)
        R_xx_x016_132_update_completed_ <-& (R_xx_x016_132_update_start_)
        LSHR_u32_u32_135_sample_start_ <-& (R_xx_x016_132_update_completed_)
        ;;[LSHR_u32_u32_135_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_135_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_135_sample_start_ &-> (LSHR_u32_u32_135_Sample)
        LSHR_u32_u32_135_sample_completed_ <-& (LSHR_u32_u32_135_Sample)
        LSHR_u32_u32_135_sample_completed_ &-> ($null)
        LSHR_u32_u32_135_update_start_ &-> (LSHR_u32_u32_135_Update)
        LSHR_u32_u32_135_update_completed_ <-& (LSHR_u32_u32_135_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // 		iNsTr_9 := (iNsTr_8 > divisor)
        //  file prog.aa, line 109
        // Source expression
        // (iNsTr_8 > divisor)
        $T[UGT_u32_u1_140_sample_start_] 
        $T[UGT_u32_u1_140_sample_completed_] 
        $T[UGT_u32_u1_140_update_start_] 
        $T[UGT_u32_u1_140_update_completed_] 
        // iNsTr_8
        $T[R_iNsTr_8_138_sample_start_] 
        $T[R_iNsTr_8_138_sample_completed_] 
        $T[R_iNsTr_8_138_update_start_] 
        $T[R_iNsTr_8_138_update_completed_] 
        // implicit reference
        R_iNsTr_8_138_sample_start_ <-& (LSHR_u32_u32_135_update_completed_)
        R_iNsTr_8_138_sample_completed_ <-& (R_iNsTr_8_138_sample_start_)
        R_iNsTr_8_138_update_start_ <-& (R_iNsTr_8_138_sample_completed_)
        R_iNsTr_8_138_update_completed_ <-& (R_iNsTr_8_138_update_start_)
        // divisor
        $T[R_divisor_139_sample_start_] 
        $T[R_divisor_139_sample_completed_] 
        $T[R_divisor_139_update_start_] 
        $T[R_divisor_139_update_completed_] 
        // reference to interface object
        R_divisor_139_sample_start_ <-& ($entry)
        R_divisor_139_sample_completed_ <-& (R_divisor_139_sample_start_)
        R_divisor_139_update_start_ <-& (R_divisor_139_sample_completed_)
        R_divisor_139_update_completed_ <-& (R_divisor_139_update_start_)
        UGT_u32_u1_140_sample_start_ <-& (R_iNsTr_8_138_update_completed_)
        UGT_u32_u1_140_sample_start_ <-& (R_divisor_139_update_completed_)
        ;;[UGT_u32_u1_140_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_140_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_140_sample_start_ &-> (UGT_u32_u1_140_Sample)
        UGT_u32_u1_140_sample_completed_ <-& (UGT_u32_u1_140_Sample)
        UGT_u32_u1_140_sample_completed_ &-> ($null)
        UGT_u32_u1_140_update_start_ &-> (UGT_u32_u1_140_Update)
        UGT_u32_u1_140_update_completed_ <-& (UGT_u32_u1_140_Update)
        // Target expression
        // (as target) iNsTr_9
        // iNsTr_9
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_136_to_assign_stmt_141__entry__ |-> (assign_stmt_136_to_assign_stmt_141)
      assign_stmt_136_to_assign_stmt_141__exit__ <-| (assign_stmt_136_to_assign_stmt_141)
      // if-statement  
      //  file prog.aa, line 110
      ;;[if_stmt_142_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_142__entry__ |-> (if_stmt_142_dead_link)
      if_stmt_142__exit__ <-| (if_stmt_142_dead_link)
      ;;[if_stmt_142_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_142__entry__ |-> (if_stmt_142_eval_test)
      $P [R_iNsTr_9_143_place]
      R_iNsTr_9_143_place <-| (if_stmt_142_eval_test)
      ;;[if_stmt_142_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_142_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_9_143_place |-> (if_stmt_142_if_link if_stmt_142_else_link)
      $P [bbx_xnph7_bbx_xnphx_xpreheader]
      bbx_xnph7_bbx_xnphx_xpreheader <-| (if_stmt_142_if_link)
      $P [bbx_xnph7_xx_x_crit_edge]
      bbx_xnph7_xx_x_crit_edge <-| (if_stmt_142_else_link)
      ::[assign_stmt_170_to_assign_stmt_181] 
      {
        // 		iNsTr_16 := (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 120
        // Source expression
        // (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_169_sample_start_] 
        $T[SHL_u32_u32_169_sample_completed_] 
        $T[SHL_u32_u32_169_update_start_] 
        $T[SHL_u32_u32_169_update_completed_] 
        // shifted_divisorx_x03
        $T[R_shifted_divisorx_x03_166_sample_start_] 
        $T[R_shifted_divisorx_x03_166_sample_completed_] 
        $T[R_shifted_divisorx_x03_166_update_start_] 
        $T[R_shifted_divisorx_x03_166_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03_166_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03_166_sample_completed_ <-& (R_shifted_divisorx_x03_166_sample_start_)
        R_shifted_divisorx_x03_166_update_start_ <-& (R_shifted_divisorx_x03_166_sample_completed_)
        R_shifted_divisorx_x03_166_update_completed_ <-& (R_shifted_divisorx_x03_166_update_start_)
        SHL_u32_u32_169_sample_start_ <-& (R_shifted_divisorx_x03_166_update_completed_)
        ;;[SHL_u32_u32_169_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_169_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_169_sample_start_ &-> (SHL_u32_u32_169_Sample)
        SHL_u32_u32_169_sample_completed_ <-& (SHL_u32_u32_169_Sample)
        SHL_u32_u32_169_sample_completed_ &-> ($null)
        SHL_u32_u32_169_update_start_ &-> (SHL_u32_u32_169_Update)
        SHL_u32_u32_169_update_completed_ <-& (SHL_u32_u32_169_Update)
        // Target expression
        // (as target) iNsTr_16
        // iNsTr_16
        // implicit reference
        // 		iNsTr_17 := (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 121
        // Source expression
        // (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_175_sample_start_] 
        $T[SHL_u32_u32_175_sample_completed_] 
        $T[SHL_u32_u32_175_update_start_] 
        $T[SHL_u32_u32_175_update_completed_] 
        // curr_quotientx_x02
        $T[R_curr_quotientx_x02_172_sample_start_] 
        $T[R_curr_quotientx_x02_172_sample_completed_] 
        $T[R_curr_quotientx_x02_172_update_start_] 
        $T[R_curr_quotientx_x02_172_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02_172_sample_start_ <-& ($entry)
        R_curr_quotientx_x02_172_sample_completed_ <-& (R_curr_quotientx_x02_172_sample_start_)
        R_curr_quotientx_x02_172_update_start_ <-& (R_curr_quotientx_x02_172_sample_completed_)
        R_curr_quotientx_x02_172_update_completed_ <-& (R_curr_quotientx_x02_172_update_start_)
        SHL_u32_u32_175_sample_start_ <-& (R_curr_quotientx_x02_172_update_completed_)
        ;;[SHL_u32_u32_175_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_175_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_175_sample_start_ &-> (SHL_u32_u32_175_Sample)
        SHL_u32_u32_175_sample_completed_ <-& (SHL_u32_u32_175_Sample)
        SHL_u32_u32_175_sample_completed_ &-> ($null)
        SHL_u32_u32_175_update_start_ &-> (SHL_u32_u32_175_Update)
        SHL_u32_u32_175_update_completed_ <-& (SHL_u32_u32_175_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // 		iNsTr_18 := (iNsTr_16 < iNsTr_8)
        //  file prog.aa, line 123
        // Source expression
        // (iNsTr_16 < iNsTr_8)
        $T[ULT_u32_u1_180_sample_start_] 
        $T[ULT_u32_u1_180_sample_completed_] 
        $T[ULT_u32_u1_180_update_start_] 
        $T[ULT_u32_u1_180_update_completed_] 
        // iNsTr_16
        $T[R_iNsTr_16_178_sample_start_] 
        $T[R_iNsTr_16_178_sample_completed_] 
        $T[R_iNsTr_16_178_update_start_] 
        $T[R_iNsTr_16_178_update_completed_] 
        // implicit reference
        R_iNsTr_16_178_sample_start_ <-& (SHL_u32_u32_169_update_completed_)
        R_iNsTr_16_178_sample_completed_ <-& (R_iNsTr_16_178_sample_start_)
        R_iNsTr_16_178_update_start_ <-& (R_iNsTr_16_178_sample_completed_)
        R_iNsTr_16_178_update_completed_ <-& (R_iNsTr_16_178_update_start_)
        // iNsTr_8
        $T[R_iNsTr_8_179_sample_start_] 
        $T[R_iNsTr_8_179_sample_completed_] 
        $T[R_iNsTr_8_179_update_start_] 
        $T[R_iNsTr_8_179_update_completed_] 
        // implicit reference
        R_iNsTr_8_179_sample_start_ <-& ($entry)
        R_iNsTr_8_179_sample_completed_ <-& (R_iNsTr_8_179_sample_start_)
        R_iNsTr_8_179_update_start_ <-& (R_iNsTr_8_179_sample_completed_)
        R_iNsTr_8_179_update_completed_ <-& (R_iNsTr_8_179_update_start_)
        ULT_u32_u1_180_sample_start_ <-& (R_iNsTr_16_178_update_completed_)
        ULT_u32_u1_180_sample_start_ <-& (R_iNsTr_8_179_update_completed_)
        ;;[ULT_u32_u1_180_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_180_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_180_sample_start_ &-> (ULT_u32_u1_180_Sample)
        ULT_u32_u1_180_sample_completed_ <-& (ULT_u32_u1_180_Sample)
        ULT_u32_u1_180_sample_completed_ &-> ($null)
        ULT_u32_u1_180_update_start_ &-> (ULT_u32_u1_180_Update)
        ULT_u32_u1_180_update_completed_ <-& (ULT_u32_u1_180_Update)
        // Target expression
        // (as target) iNsTr_18
        // iNsTr_18
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_170_to_assign_stmt_181__entry__ |-> (assign_stmt_170_to_assign_stmt_181)
      assign_stmt_170_to_assign_stmt_181__exit__ <-| (assign_stmt_170_to_assign_stmt_181)
      // if-statement  
      //  file prog.aa, line 124
      ;;[if_stmt_182_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_182__entry__ |-> (if_stmt_182_dead_link)
      if_stmt_182__exit__ <-| (if_stmt_182_dead_link)
      ;;[if_stmt_182_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_182__entry__ |-> (if_stmt_182_eval_test)
      $P [R_iNsTr_18_183_place]
      R_iNsTr_18_183_place <-| (if_stmt_182_eval_test)
      ;;[if_stmt_182_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_182_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_18_183_place |-> (if_stmt_182_if_link if_stmt_182_else_link)
      $P [bbx_xnph_bbx_xnph]
      bbx_xnph_bbx_xnph <-| (if_stmt_182_if_link)
      $P [bbx_xnph_xx_x_crit_edgex_xloopexit]
      bbx_xnph_xx_x_crit_edgex_xloopexit <-| (if_stmt_182_else_link)
      ::[assign_stmt_218_to_assign_stmt_228] 
      {
        // 		iNsTr_12 := (curr_quotientx_x0x_xlcssa + quotientx_x05)
        //  file prog.aa, line 136
        // Source expression
        // (curr_quotientx_x0x_xlcssa + quotientx_x05)
        $T[ADD_u32_u32_217_sample_start_] 
        $T[ADD_u32_u32_217_sample_completed_] 
        $T[ADD_u32_u32_217_update_start_] 
        $T[ADD_u32_u32_217_update_completed_] 
        // curr_quotientx_x0x_xlcssa
        $T[R_curr_quotientx_x0x_xlcssa_215_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssa_215_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssa_215_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssa_215_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssa_215_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssa_215_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssa_215_sample_start_)
        R_curr_quotientx_x0x_xlcssa_215_update_start_ <-& (R_curr_quotientx_x0x_xlcssa_215_sample_completed_)
        R_curr_quotientx_x0x_xlcssa_215_update_completed_ <-& (R_curr_quotientx_x0x_xlcssa_215_update_start_)
        // quotientx_x05
        $T[R_quotientx_x05_216_sample_start_] 
        $T[R_quotientx_x05_216_sample_completed_] 
        $T[R_quotientx_x05_216_update_start_] 
        $T[R_quotientx_x05_216_update_completed_] 
        // implicit reference
        R_quotientx_x05_216_sample_start_ <-& ($entry)
        R_quotientx_x05_216_sample_completed_ <-& (R_quotientx_x05_216_sample_start_)
        R_quotientx_x05_216_update_start_ <-& (R_quotientx_x05_216_sample_completed_)
        R_quotientx_x05_216_update_completed_ <-& (R_quotientx_x05_216_update_start_)
        ADD_u32_u32_217_sample_start_ <-& (R_curr_quotientx_x0x_xlcssa_215_update_completed_)
        ADD_u32_u32_217_sample_start_ <-& (R_quotientx_x05_216_update_completed_)
        ;;[ADD_u32_u32_217_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_217_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_217_sample_start_ &-> (ADD_u32_u32_217_Sample)
        ADD_u32_u32_217_sample_completed_ <-& (ADD_u32_u32_217_Sample)
        ADD_u32_u32_217_sample_completed_ &-> ($null)
        ADD_u32_u32_217_update_start_ &-> (ADD_u32_u32_217_Update)
        ADD_u32_u32_217_update_completed_ <-& (ADD_u32_u32_217_Update)
        // Target expression
        // (as target) iNsTr_12
        // iNsTr_12
        // implicit reference
        // 		iNsTr_13 := (xx_x016 - shifted_divisorx_x0x_xlcssa)
        //  file prog.aa, line 137
        // Source expression
        // (xx_x016 - shifted_divisorx_x0x_xlcssa)
        $T[SUB_u32_u32_222_sample_start_] 
        $T[SUB_u32_u32_222_sample_completed_] 
        $T[SUB_u32_u32_222_update_start_] 
        $T[SUB_u32_u32_222_update_completed_] 
        // xx_x016
        $T[R_xx_x016_220_sample_start_] 
        $T[R_xx_x016_220_sample_completed_] 
        $T[R_xx_x016_220_update_start_] 
        $T[R_xx_x016_220_update_completed_] 
        // implicit reference
        R_xx_x016_220_sample_start_ <-& ($entry)
        R_xx_x016_220_sample_completed_ <-& (R_xx_x016_220_sample_start_)
        R_xx_x016_220_update_start_ <-& (R_xx_x016_220_sample_completed_)
        R_xx_x016_220_update_completed_ <-& (R_xx_x016_220_update_start_)
        // shifted_divisorx_x0x_xlcssa
        $T[R_shifted_divisorx_x0x_xlcssa_221_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssa_221_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssa_221_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssa_221_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssa_221_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssa_221_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssa_221_sample_start_)
        R_shifted_divisorx_x0x_xlcssa_221_update_start_ <-& (R_shifted_divisorx_x0x_xlcssa_221_sample_completed_)
        R_shifted_divisorx_x0x_xlcssa_221_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssa_221_update_start_)
        SUB_u32_u32_222_sample_start_ <-& (R_xx_x016_220_update_completed_)
        SUB_u32_u32_222_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssa_221_update_completed_)
        ;;[SUB_u32_u32_222_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_222_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_222_sample_start_ &-> (SUB_u32_u32_222_Sample)
        SUB_u32_u32_222_sample_completed_ <-& (SUB_u32_u32_222_Sample)
        SUB_u32_u32_222_sample_completed_ &-> ($null)
        SUB_u32_u32_222_update_start_ &-> (SUB_u32_u32_222_Update)
        SUB_u32_u32_222_update_completed_ <-& (SUB_u32_u32_222_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (iNsTr_13 < divisor)
        //  file prog.aa, line 139
        // Source expression
        // (iNsTr_13 < divisor)
        $T[ULT_u32_u1_227_sample_start_] 
        $T[ULT_u32_u1_227_sample_completed_] 
        $T[ULT_u32_u1_227_update_start_] 
        $T[ULT_u32_u1_227_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_225_sample_start_] 
        $T[R_iNsTr_13_225_sample_completed_] 
        $T[R_iNsTr_13_225_update_start_] 
        $T[R_iNsTr_13_225_update_completed_] 
        // implicit reference
        R_iNsTr_13_225_sample_start_ <-& (SUB_u32_u32_222_update_completed_)
        R_iNsTr_13_225_sample_completed_ <-& (R_iNsTr_13_225_sample_start_)
        R_iNsTr_13_225_update_start_ <-& (R_iNsTr_13_225_sample_completed_)
        R_iNsTr_13_225_update_completed_ <-& (R_iNsTr_13_225_update_start_)
        // divisor
        $T[R_divisor_226_sample_start_] 
        $T[R_divisor_226_sample_completed_] 
        $T[R_divisor_226_update_start_] 
        $T[R_divisor_226_update_completed_] 
        // reference to interface object
        R_divisor_226_sample_start_ <-& ($entry)
        R_divisor_226_sample_completed_ <-& (R_divisor_226_sample_start_)
        R_divisor_226_update_start_ <-& (R_divisor_226_sample_completed_)
        R_divisor_226_update_completed_ <-& (R_divisor_226_update_start_)
        ULT_u32_u1_227_sample_start_ <-& (R_iNsTr_13_225_update_completed_)
        ULT_u32_u1_227_sample_start_ <-& (R_divisor_226_update_completed_)
        ;;[ULT_u32_u1_227_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_227_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_227_sample_start_ &-> (ULT_u32_u1_227_Sample)
        ULT_u32_u1_227_sample_completed_ <-& (ULT_u32_u1_227_Sample)
        ULT_u32_u1_227_sample_completed_ &-> ($null)
        ULT_u32_u1_227_update_start_ &-> (ULT_u32_u1_227_Update)
        ULT_u32_u1_227_update_completed_ <-& (ULT_u32_u1_227_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_218_to_assign_stmt_228__entry__ |-> (assign_stmt_218_to_assign_stmt_228)
      assign_stmt_218_to_assign_stmt_228__exit__ <-| (assign_stmt_218_to_assign_stmt_228)
      // if-statement  
      //  file prog.aa, line 140
      ;;[if_stmt_229_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_229__entry__ |-> (if_stmt_229_dead_link)
      if_stmt_229__exit__ <-| (if_stmt_229_dead_link)
      ;;[if_stmt_229_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_229__entry__ |-> (if_stmt_229_eval_test)
      $P [R_iNsTr_14_230_place]
      R_iNsTr_14_230_place <-| (if_stmt_229_eval_test)
      ;;[if_stmt_229_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_229_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_14_230_place |-> (if_stmt_229_if_link if_stmt_229_else_link)
      $P [xx_x_crit_edge_xx_xloopexitx_xloopexit]
      xx_x_crit_edge_xx_xloopexitx_xloopexit <-| (if_stmt_229_if_link)
      $P [xx_x_crit_edge_bbx_xnph7]
      xx_x_crit_edge_bbx_xnph7 <-| (if_stmt_229_else_link)
      // control-path for merge  
      //  file prog.aa, line 86
      ;;[merge_stmt_89_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_89__entry__ |-> (merge_stmt_89_dead_link)
      merge_stmt_89__exit__ <-| (merge_stmt_89_dead_link)
      //---------------------   merge statement  file prog.aa, line 86  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_89_PhiReqMerge] 
      merge_stmt_89_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_89_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_89_PhiReqMerge |-> (merge_stmt_89_PhiAck)
      merge_stmt_89__exit__  <-| (merge_stmt_89_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 86  --------------------------
      // control-path for merge  
      //  file prog.aa, line 90
      //---------------------   merge statement  file prog.aa, line 90  --------------------------
      ||[bb_0_bb_2_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_2 |-> (bb_0_bb_2_PhiReq)
      $P [merge_stmt_91_PhiReqMerge] 
      merge_stmt_91_PhiReqMerge <-| ( bb_0_bb_2_PhiReq )
      ||[merge_stmt_91_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_91_PhiReqMerge |-> (merge_stmt_91_PhiAck)
      merge_stmt_91__exit__  <-| (merge_stmt_91_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 90  --------------------------
      // control-path for merge  
      //  file prog.aa, line 99
      ;;[merge_stmt_114_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_114__entry__ |-> (merge_stmt_114_dead_link)
      merge_stmt_114__exit__ <-| (merge_stmt_114_dead_link)
      //---------------------   merge statement  file prog.aa, line 99  --------------------------
      ||[bb_2_bbx_xnph7x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_bbx_xnph7x_xpreheader |-> (bb_2_bbx_xnph7x_xpreheader_PhiReq)
      $P [merge_stmt_114_PhiReqMerge] 
      merge_stmt_114_PhiReqMerge <-| ( bb_2_bbx_xnph7x_xpreheader_PhiReq )
      ||[merge_stmt_114_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_114_PhiReqMerge |-> (merge_stmt_114_PhiAck)
      merge_stmt_114__exit__  <-| (merge_stmt_114_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 99  --------------------------
      // control-path for merge  
      //  file prog.aa, line 103
      //---------------------   merge statement  file prog.aa, line 103  --------------------------
      ||[bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq] 
      {
        ;;[phi_stmt_117] 
        {
          ||[phi_stmt_117_sources] 
          {
            // sources for 			$phi xx_x016 := 			  ($cast ($uint<32>) iNsTr_13 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) dividend ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_120] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) dividend )
            ;;[type_cast_122] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_117_req] 
        }
        ;;[phi_stmt_123] 
        {
          ||[phi_stmt_123_sources] 
          {
            // sources for 			$phi quotientx_x05 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_126] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_123_req] 
        }
      }
      bbx_xnph7x_xpreheader_bbx_xnph7 |-> (bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq)
      ||[xx_x_crit_edge_bbx_xnph7_PhiReq] 
      {
        ;;[phi_stmt_117] 
        {
          ||[phi_stmt_117_sources] 
          {
            // sources for 			$phi xx_x016 := 			  ($cast ($uint<32>) iNsTr_13 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) dividend ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_13 )
            ;;[type_cast_120] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) dividend )
            ;;[type_cast_122] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_117_req] 
        }
        ;;[phi_stmt_123] 
        {
          ||[phi_stmt_123_sources] 
          {
            // sources for 			$phi quotientx_x05 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_126] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_123_req] 
        }
      }
      xx_x_crit_edge_bbx_xnph7 |-> (xx_x_crit_edge_bbx_xnph7_PhiReq)
      $P [merge_stmt_116_PhiReqMerge] 
      merge_stmt_116_PhiReqMerge <-| ( bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq  xx_x_crit_edge_bbx_xnph7_PhiReq )
      ||[merge_stmt_116_PhiAck] 
      {
        $T [phi_stmt_117_ack] 
        $T [phi_stmt_123_ack] 
      }
      merge_stmt_116_PhiReqMerge |-> (merge_stmt_116_PhiAck)
      merge_stmt_116__exit__  <-| (merge_stmt_116_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 103  --------------------------
      // control-path for merge  
      //  file prog.aa, line 112
      ;;[merge_stmt_148_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_148__entry__ |-> (merge_stmt_148_dead_link)
      merge_stmt_148__exit__ <-| (merge_stmt_148_dead_link)
      //---------------------   merge statement  file prog.aa, line 112  --------------------------
      ||[bbx_xnph7_bbx_xnphx_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7_bbx_xnphx_xpreheader |-> (bbx_xnph7_bbx_xnphx_xpreheader_PhiReq)
      $P [merge_stmt_148_PhiReqMerge] 
      merge_stmt_148_PhiReqMerge <-| ( bbx_xnph7_bbx_xnphx_xpreheader_PhiReq )
      ||[merge_stmt_148_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_148_PhiReqMerge |-> (merge_stmt_148_PhiAck)
      merge_stmt_148__exit__  <-| (merge_stmt_148_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 112  --------------------------
      // control-path for merge  
      //  file prog.aa, line 116
      //---------------------   merge statement  file prog.aa, line 116  --------------------------
      ||[bbx_xnph_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_151] 
        {
          ||[phi_stmt_151_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03 := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) divisor ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_154] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) divisor )
            ;;[type_cast_156] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_151_req] 
        }
        ;;[phi_stmt_157] 
        {
          ||[phi_stmt_157_sources] 
          {
            // sources for 			$phi curr_quotientx_x02 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_17 )
            ;;[type_cast_160] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_157_req] 
        }
      }
      bbx_xnph_bbx_xnph |-> (bbx_xnph_bbx_xnph_PhiReq)
      ||[bbx_xnphx_xpreheader_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_151] 
        {
          ||[phi_stmt_151_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03 := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) divisor ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_154] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) divisor )
            ;;[type_cast_156] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_151_req] 
        }
        ;;[phi_stmt_157] 
        {
          ||[phi_stmt_157_sources] 
          {
            // sources for 			$phi curr_quotientx_x02 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_17 )
            ;;[type_cast_160] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_157_req] 
        }
      }
      bbx_xnphx_xpreheader_bbx_xnph |-> (bbx_xnphx_xpreheader_bbx_xnph_PhiReq)
      $P [merge_stmt_150_PhiReqMerge] 
      merge_stmt_150_PhiReqMerge <-| ( bbx_xnph_bbx_xnph_PhiReq  bbx_xnphx_xpreheader_bbx_xnph_PhiReq )
      ||[merge_stmt_150_PhiAck] 
      {
        $T [phi_stmt_151_ack] 
        $T [phi_stmt_157_ack] 
      }
      merge_stmt_150_PhiReqMerge |-> (merge_stmt_150_PhiAck)
      merge_stmt_150__exit__  <-| (merge_stmt_150_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 116  --------------------------
      // control-path for merge  
      //  file prog.aa, line 126
      ;;[merge_stmt_188_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_188__entry__ |-> (merge_stmt_188_dead_link)
      merge_stmt_188__exit__ <-| (merge_stmt_188_dead_link)
      //---------------------   merge statement  file prog.aa, line 126  --------------------------
      ||[bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_193] 
        {
          ||[phi_stmt_193_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_16 )
            ;;[type_cast_196] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_193_req] 
        }
        ;;[phi_stmt_189] 
        {
          ||[phi_stmt_189_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_17 )
            ;;[type_cast_192] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_189_req] 
        }
      }
      bbx_xnph_xx_x_crit_edgex_xloopexit |-> (bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_188_PhiReqMerge] 
      merge_stmt_188_PhiReqMerge <-| ( bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_188_PhiAck] 
      {
        $T [phi_stmt_189_ack] 
        $T [phi_stmt_193_ack] 
      }
      merge_stmt_188_PhiReqMerge |-> (merge_stmt_188_PhiAck)
      merge_stmt_188__exit__  <-| (merge_stmt_188_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 126  --------------------------
      // control-path for merge  
      //  file prog.aa, line 132
      //---------------------   merge statement  file prog.aa, line 132  --------------------------
      ||[bbx_xnph7_xx_x_crit_edge_PhiReq] 
      {
        ;;[phi_stmt_200] 
        {
          ||[phi_stmt_200_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<32>) divisor ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) divisor )
            ;;[type_cast_203] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa )
            ;;[type_cast_205] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_200_req] 
        }
        ;;[phi_stmt_206] 
        {
          ||[phi_stmt_206_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_212] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_206_req] 
        }
      }
      bbx_xnph7_xx_x_crit_edge |-> (bbx_xnph7_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        ;;[phi_stmt_200] 
        {
          ||[phi_stmt_200_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<32>) divisor ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) divisor )
            ;;[type_cast_203] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa )
            ;;[type_cast_205] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_200_req] 
        }
        ;;[phi_stmt_206] 
        {
          ||[phi_stmt_206_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_212] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_206_req] 
        }
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_199_PhiReqMerge] 
      merge_stmt_199_PhiReqMerge <-| ( bbx_xnph7_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_199_PhiAck] 
      {
        $T [phi_stmt_200_ack] 
        $T [phi_stmt_206_ack] 
      }
      merge_stmt_199_PhiReqMerge |-> (merge_stmt_199_PhiAck)
      merge_stmt_199__exit__  <-| (merge_stmt_199_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 132  --------------------------
      // control-path for merge  
      //  file prog.aa, line 142
      ;;[merge_stmt_235_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_235__entry__ |-> (merge_stmt_235_dead_link)
      merge_stmt_235__exit__ <-| (merge_stmt_235_dead_link)
      //---------------------   merge statement  file prog.aa, line 142  --------------------------
      ||[xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_236] 
        {
          ||[phi_stmt_236_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_xx_xloopexitx_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_12 )
            ;;[type_cast_239] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_236_req] 
        }
      }
      xx_x_crit_edge_xx_xloopexitx_xloopexit |-> (xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq)
      $P [merge_stmt_235_PhiReqMerge] 
      merge_stmt_235_PhiReqMerge <-| ( xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq )
      ||[merge_stmt_235_PhiAck] 
      {
        $T [phi_stmt_236_ack] 
      }
      merge_stmt_235_PhiReqMerge |-> (merge_stmt_235_PhiAck)
      merge_stmt_235__exit__  <-| (merge_stmt_235_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 142  --------------------------
      // control-path for merge  
      //  file prog.aa, line 147
      //---------------------   merge statement  file prog.aa, line 147  --------------------------
      ||[bb_0_xx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_243] 
        {
          ||[phi_stmt_243_sources] 
          {
            // sources for 			$phi xx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_2_xx_xloopexit			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_252] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_243_req] 
        }
      }
      bb_0_xx_xloopexit |-> (bb_0_xx_xloopexit_PhiReq)
      ||[bb_2_xx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_243] 
        {
          ||[phi_stmt_243_sources] 
          {
            // sources for 			$phi xx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_2_xx_xloopexit			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_252] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_243_req] 
        }
      }
      bb_2_xx_xloopexit |-> (bb_2_xx_xloopexit_PhiReq)
      ||[xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_243] 
        {
          ||[phi_stmt_243_sources] 
          {
            // sources for 			$phi xx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_2_xx_xloopexit			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_252] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_243_req] 
        }
      }
      xx_xloopexitx_xloopexit_xx_xloopexit |-> (xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq)
      $P [merge_stmt_242_PhiReqMerge] 
      merge_stmt_242_PhiReqMerge <-| ( bb_0_xx_xloopexit_PhiReq  bb_2_xx_xloopexit_PhiReq  xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq )
      ||[merge_stmt_242_PhiAck] 
      {
        $T [phi_stmt_243_ack] 
      }
      merge_stmt_242_PhiReqMerge |-> (merge_stmt_242_PhiAck)
      merge_stmt_242__exit__  <-| (merge_stmt_242_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 147  --------------------------
      // control-path for merge  
      //  file prog.aa, line 152
      //---------------------   merge statement  file prog.aa, line 152  --------------------------
      ||[bb_1_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_256] 
        {
          ||[phi_stmt_256_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($uint<32>) dividend ) $on bb_1_UnifiedReturnBlock			  ($cast ($uint<32>) xx_x0 ) $on xx_xloopexit_UnifiedReturnBlock // type of target is $uint<32>
            // ($cast ($uint<32>) dividend )
            ;;[type_cast_259] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_x0 )
            ;;[type_cast_261] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_256_req] 
        }
      }
      bb_1_UnifiedReturnBlock |-> (bb_1_UnifiedReturnBlock_PhiReq)
      ||[xx_xloopexit_UnifiedReturnBlock_PhiReq] 
      {
        ;;[phi_stmt_256] 
        {
          ||[phi_stmt_256_sources] 
          {
            // sources for 			$phi ret_val__ := 			  ($cast ($uint<32>) dividend ) $on bb_1_UnifiedReturnBlock			  ($cast ($uint<32>) xx_x0 ) $on xx_xloopexit_UnifiedReturnBlock // type of target is $uint<32>
            // ($cast ($uint<32>) dividend )
            ;;[type_cast_259] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_x0 )
            ;;[type_cast_261] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_256_req] 
        }
      }
      xx_xloopexit_UnifiedReturnBlock |-> (xx_xloopexit_UnifiedReturnBlock_PhiReq)
      $P [merge_stmt_255_PhiReqMerge] 
      merge_stmt_255_PhiReqMerge <-| ( bb_1_UnifiedReturnBlock_PhiReq  xx_xloopexit_UnifiedReturnBlock_PhiReq )
      ||[merge_stmt_255_PhiAck] 
      {
        $T [phi_stmt_256_ack] 
      }
      merge_stmt_255_PhiReqMerge |-> (merge_stmt_255_PhiAck)
      merge_stmt_255__exit__  <-| (merge_stmt_255_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 152  --------------------------
      // control-path for merge  
      //  file prog.aa, line 156
      //---------------------   merge statement  file prog.aa, line 156  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_264_PhiReqMerge] 
      merge_stmt_264_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_264_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_264_PhiReqMerge |-> (merge_stmt_264_PhiAck)
      merge_stmt_264__exit__  <-| (merge_stmt_264_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 156  --------------------------
      switch_stmt_79__entry__ <-| (branch_block_stmt_78__entry__)
      merge_stmt_89__entry__ <-| (switch_stmt_79__exit__)
      bb_1_UnifiedReturnBlock <-| (merge_stmt_89__exit__)
      assign_stmt_97_to_assign_stmt_107__entry__ <-| (merge_stmt_91__exit__)
      if_stmt_108__entry__ <-| (assign_stmt_97_to_assign_stmt_107__exit__)
      merge_stmt_114__entry__ <-| (if_stmt_108__exit__)
      bbx_xnph7x_xpreheader_bbx_xnph7 <-| (merge_stmt_114__exit__)
      assign_stmt_136_to_assign_stmt_141__entry__ <-| (merge_stmt_116__exit__)
      if_stmt_142__entry__ <-| (assign_stmt_136_to_assign_stmt_141__exit__)
      merge_stmt_148__entry__ <-| (if_stmt_142__exit__)
      bbx_xnphx_xpreheader_bbx_xnph <-| (merge_stmt_148__exit__)
      assign_stmt_170_to_assign_stmt_181__entry__ <-| (merge_stmt_150__exit__)
      if_stmt_182__entry__ <-| (assign_stmt_170_to_assign_stmt_181__exit__)
      merge_stmt_188__entry__ <-| (if_stmt_182__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_188__exit__)
      assign_stmt_218_to_assign_stmt_228__entry__ <-| (merge_stmt_199__exit__)
      if_stmt_229__entry__ <-| (assign_stmt_218_to_assign_stmt_228__exit__)
      merge_stmt_235__entry__ <-| (if_stmt_229__exit__)
      xx_xloopexitx_xloopexit_xx_xloopexit <-| (merge_stmt_235__exit__)
      xx_xloopexit_UnifiedReturnBlock <-| (merge_stmt_242__exit__)
      return__ <-| (merge_stmt_255__exit__)
      merge_stmt_264__exit__ |-> (branch_block_stmt_78__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 86
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 90
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 99
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 103
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 112
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 116
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 126
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 132
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 142
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 147
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 152
    // constant-object-declarations for block %udiv32%body%
    //  file prog.aa, line 156
    // constant-object-declarations for block %udiv32%body
    //  file prog.aa, line 74
    // constant-object-declarations for block %udiv32
    //  file prog.aa, line 69
    // constant-declarations for block %udiv32%body
    //  file prog.aa, line 74
    // constant-declarations  for switch  
    //  file prog.aa, line 77
    // _b00000000000000000000000000000000 
    $constant $W[expr_81_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b00000000000000000000000000000001 
    $constant $W[expr_84_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 86
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 90
    // if-statement  
    //  file prog.aa, line 97
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 99
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 103
    // constant-declarations for phi:  			$phi xx_x016 := 			  ($cast ($uint<32>) iNsTr_13 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) dividend ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
    //  file prog.aa, line 104
    // constant-declarations for phi:  			$phi quotientx_x05 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
    //  file prog.aa, line 105
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_129_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_134_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 110
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 112
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 116
    // constant-declarations for phi:  			$phi shifted_divisorx_x03 := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) divisor ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.aa, line 117
    // constant-declarations for phi:  			$phi curr_quotientx_x02 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.aa, line 118
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_163_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_168_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_174_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 124
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 126
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 127
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 128
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 132
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<32>) divisor ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 133
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 134
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_210_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 140
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 142
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_xx_xloopexitx_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 143
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 147
    // constant-declarations for phi:  			$phi xx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_2_xx_xloopexit			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 148
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_247_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_250_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 152
    // constant-declarations for phi:  			$phi ret_val__ := 			  ($cast ($uint<32>) dividend ) $on bb_1_UnifiedReturnBlock			  ($cast ($uint<32>) xx_x0 ) $on xx_xloopexit_UnifiedReturnBlock // type of target is $uint<32>
    //  file prog.aa, line 153
    // constant-declarations for block %udiv32%body%
    //  file prog.aa, line 156
    // block %udiv32%body
    //  file prog.aa, line 74
    // switch-statement  
    //  file prog.aa, line 77
    $W[expr_81_wire_constant_cmp] : $int<1>
    $W[expr_84_wire_constant_cmp] : $int<1>
    // 		iNsTr_1 := (divisor > dividend)
    //  file prog.aa, line 93
    // iNsTr_1
    $W[iNsTr_1_97] : $int<1>
    // 		iNsTr_2 := (dividend < divisor)
    //  file prog.aa, line 95
    // iNsTr_2
    $W[iNsTr_2_102] : $int<1>
    // 		orx_xcond := (iNsTr_1 | iNsTr_2)
    //  file prog.aa, line 96
    // orx_xcond
    $W[orx_xcond_107] : $int<1>
    // if statement  
    //  file prog.aa, line 97
    // merge-statement  
    //  file prog.aa, line 103
    // 			$phi xx_x016 := 			  ($cast ($uint<32>) iNsTr_13 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) dividend ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
    //  file prog.aa, line 104
    // ($cast ($uint<32>) iNsTr_13 )
    $intermediate $W[type_cast_120_wire] : $int<32>
    // ($cast ($uint<32>) dividend )
    $intermediate $W[type_cast_122_wire] : $int<32>
    // xx_x016
    $W[xx_x016_117] : $int<32>
    // 			$phi quotientx_x05 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
    //  file prog.aa, line 105
    // ($cast ($uint<32>) iNsTr_12 )
    $intermediate $W[type_cast_126_wire] : $int<32>
    // quotientx_x05
    $W[quotientx_x05_123] : $int<32>
    // 		iNsTr_8 := (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 107
    // iNsTr_8
    $W[iNsTr_8_136] : $int<32>
    // 		iNsTr_9 := (iNsTr_8 > divisor)
    //  file prog.aa, line 109
    // iNsTr_9
    $W[iNsTr_9_141] : $int<1>
    // if statement  
    //  file prog.aa, line 110
    // merge-statement  
    //  file prog.aa, line 116
    // 			$phi shifted_divisorx_x03 := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) divisor ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.aa, line 117
    // ($cast ($uint<32>) iNsTr_16 )
    $intermediate $W[type_cast_154_wire] : $int<32>
    // ($cast ($uint<32>) divisor )
    $intermediate $W[type_cast_156_wire] : $int<32>
    // shifted_divisorx_x03
    $W[shifted_divisorx_x03_151] : $int<32>
    // 			$phi curr_quotientx_x02 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.aa, line 118
    // ($cast ($uint<32>) iNsTr_17 )
    $intermediate $W[type_cast_160_wire] : $int<32>
    // curr_quotientx_x02
    $W[curr_quotientx_x02_157] : $int<32>
    // 		iNsTr_16 := (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 120
    // iNsTr_16
    $W[iNsTr_16_170] : $int<32>
    // 		iNsTr_17 := (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 121
    // iNsTr_17
    $W[iNsTr_17_176] : $int<32>
    // 		iNsTr_18 := (iNsTr_16 < iNsTr_8)
    //  file prog.aa, line 123
    // iNsTr_18
    $W[iNsTr_18_181] : $int<1>
    // if statement  
    //  file prog.aa, line 124
    // merge-statement  
    //  file prog.aa, line 126
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 127
    // ($cast ($uint<32>) iNsTr_17 )
    $intermediate $W[type_cast_192_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_189] : $int<32>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 128
    // ($cast ($uint<32>) iNsTr_16 )
    $intermediate $W[type_cast_196_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_193] : $int<32>
    // merge-statement  
    //  file prog.aa, line 132
    // 			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<32>) divisor ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 133
    // ($cast ($uint<32>) divisor )
    $intermediate $W[type_cast_203_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa )
    $intermediate $W[type_cast_205_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssa
    $W[shifted_divisorx_x0x_xlcssa_200] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 134
    // ($cast ($uint<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_212_wire] : $int<32>
    // curr_quotientx_x0x_xlcssa
    $W[curr_quotientx_x0x_xlcssa_206] : $int<32>
    // 		iNsTr_12 := (curr_quotientx_x0x_xlcssa + quotientx_x05)
    //  file prog.aa, line 136
    // iNsTr_12
    $W[iNsTr_12_218] : $int<32>
    // 		iNsTr_13 := (xx_x016 - shifted_divisorx_x0x_xlcssa)
    //  file prog.aa, line 137
    // iNsTr_13
    $W[iNsTr_13_223] : $int<32>
    // 		iNsTr_14 := (iNsTr_13 < divisor)
    //  file prog.aa, line 139
    // iNsTr_14
    $W[iNsTr_14_228] : $int<1>
    // if statement  
    //  file prog.aa, line 140
    // merge-statement  
    //  file prog.aa, line 142
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_xx_xloopexitx_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 143
    // ($cast ($uint<32>) iNsTr_12 )
    $intermediate $W[type_cast_239_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_236] : $int<32>
    // merge-statement  
    //  file prog.aa, line 147
    // 			$phi xx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_2_xx_xloopexit			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 148
    // ($cast ($uint<32>) xx_xlcssa2 )
    $intermediate $W[type_cast_252_wire] : $int<32>
    // xx_x0
    $W[xx_x0_243] : $int<32>
    // merge-statement  
    //  file prog.aa, line 152
    // 			$phi ret_val__ := 			  ($cast ($uint<32>) dividend ) $on bb_1_UnifiedReturnBlock			  ($cast ($uint<32>) xx_x0 ) $on xx_xloopexit_UnifiedReturnBlock // type of target is $uint<32>
    //  file prog.aa, line 153
    // ($cast ($uint<32>) dividend )
    $intermediate $W[type_cast_259_wire] : $int<32>
    // ($cast ($uint<32>) xx_x0 )
    $intermediate $W[type_cast_261_wire] : $int<32>
    // ret_val__
    // datapath-instances for block %udiv32%body
    //  file prog.aa, line 74
    // datapath-instances  for switch  
    //  file prog.aa, line 77
    ==[switch_stmt_79_select_expr_0] (divisor expr_81_wire_constant) (expr_81_wire_constant_cmp) 
    ==0? [switch_stmt_79_branch_0] (expr_81_wire_constant_cmp)
    ==[switch_stmt_79_select_expr_1] (divisor expr_84_wire_constant) (expr_84_wire_constant_cmp) 
    ==0? [switch_stmt_79_branch_1] (expr_84_wire_constant_cmp)
    ==0? [switch_stmt_79_branch_default] (expr_81_wire_constant_cmp expr_84_wire_constant_cmp)
    // 		iNsTr_1 := (divisor > dividend)
    //  file prog.aa, line 93
    // (divisor > dividend)
    >[UGT_u32_u1_95_inst] (divisor dividend) (iNsTr_1_97) 
    $delay UGT_u32_u1_95_inst 1
    // 		iNsTr_2 := (dividend < divisor)
    //  file prog.aa, line 95
    // (dividend < divisor)
    <[ULT_u32_u1_101_inst] (dividend divisor) (iNsTr_2_102) 
    $delay ULT_u32_u1_101_inst 1
    // 		orx_xcond := (iNsTr_1 | iNsTr_2)
    //  file prog.aa, line 96
    // (iNsTr_1 | iNsTr_2)
    |[OR_u1_u1_106_inst] (iNsTr_1_97 iNsTr_2_102) (orx_xcond_107) 
    $delay OR_u1_u1_106_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 97
    ==0? [if_stmt_108_branch] (orx_xcond_107)
    // data-path instances for merge  
    //  file prog.aa, line 103
    // 			$phi xx_x016 := 			  ($cast ($uint<32>) iNsTr_13 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) dividend ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
    //  file prog.aa, line 104
    // ($cast ($uint<32>) iNsTr_13 )
    # := [type_cast_120_inst] (iNsTr_13_223) (type_cast_120_wire) 
    $delay type_cast_120_inst 1
    // ($cast ($uint<32>) dividend )
    # := [type_cast_122_inst] (dividend) (type_cast_122_wire) 
    $delay type_cast_122_inst 1
    $phi [phi_stmt_117] (type_cast_120_wire type_cast_122_wire) ( xx_x016_117 )
    // 			$phi quotientx_x05 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_bbx_xnph7			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xpreheader_bbx_xnph7 // type of target is $uint<32>
    //  file prog.aa, line 105
    // ($cast ($uint<32>) iNsTr_12 )
    # := [type_cast_126_inst] (iNsTr_12_218) (type_cast_126_wire) 
    $delay type_cast_126_inst 1
    $phi [phi_stmt_123] (type_cast_126_wire type_cast_129_wire_constant) ( quotientx_x05_123 )
    // 		iNsTr_8 := (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 107
    // (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_135_inst] (xx_x016_117 type_cast_134_wire_constant) (iNsTr_8_136) 
    $delay LSHR_u32_u32_135_inst 1
    // 		iNsTr_9 := (iNsTr_8 > divisor)
    //  file prog.aa, line 109
    // (iNsTr_8 > divisor)
    >[UGT_u32_u1_140_inst] (iNsTr_8_136 divisor) (iNsTr_9_141) 
    $delay UGT_u32_u1_140_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 110
    ==0? [if_stmt_142_branch] (iNsTr_9_141)
    // data-path instances for merge  
    //  file prog.aa, line 116
    // 			$phi shifted_divisorx_x03 := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) divisor ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.aa, line 117
    // ($cast ($uint<32>) iNsTr_16 )
    # := [type_cast_154_inst] (iNsTr_16_170) (type_cast_154_wire) 
    $delay type_cast_154_inst 1
    // ($cast ($uint<32>) divisor )
    # := [type_cast_156_inst] (divisor) (type_cast_156_wire) 
    $delay type_cast_156_inst 1
    $phi [phi_stmt_151] (type_cast_154_wire type_cast_156_wire) ( shifted_divisorx_x03_151 )
    // 			$phi curr_quotientx_x02 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<32>
    //  file prog.aa, line 118
    // ($cast ($uint<32>) iNsTr_17 )
    # := [type_cast_160_inst] (iNsTr_17_176) (type_cast_160_wire) 
    $delay type_cast_160_inst 1
    $phi [phi_stmt_157] (type_cast_160_wire type_cast_163_wire_constant) ( curr_quotientx_x02_157 )
    // 		iNsTr_16 := (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 120
    // (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_169_inst] (shifted_divisorx_x03_151 type_cast_168_wire_constant) (iNsTr_16_170) 
    $delay SHL_u32_u32_169_inst 1
    // 		iNsTr_17 := (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 121
    // (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_175_inst] (curr_quotientx_x02_157 type_cast_174_wire_constant) (iNsTr_17_176) 
    $delay SHL_u32_u32_175_inst 1
    // 		iNsTr_18 := (iNsTr_16 < iNsTr_8)
    //  file prog.aa, line 123
    // (iNsTr_16 < iNsTr_8)
    <[ULT_u32_u1_180_inst] (iNsTr_16_170 iNsTr_8_136) (iNsTr_18_181) 
    $delay ULT_u32_u1_180_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 124
    ==0? [if_stmt_182_branch] (iNsTr_18_181)
    // data-path instances for merge  
    //  file prog.aa, line 126
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_17 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 127
    // ($cast ($uint<32>) iNsTr_17 )
    # := [type_cast_192_inst] (iNsTr_17_176) (type_cast_192_wire) 
    $delay type_cast_192_inst 1
    $phi [phi_stmt_189] (type_cast_192_wire) ( xx_xlcssa1_189 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_16 ) $on bbx_xnph_xx_x_crit_edgex_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 128
    // ($cast ($uint<32>) iNsTr_16 )
    # := [type_cast_196_inst] (iNsTr_16_170) (type_cast_196_wire) 
    $delay type_cast_196_inst 1
    $phi [phi_stmt_193] (type_cast_196_wire) ( xx_xlcssa_193 )
    // data-path instances for merge  
    //  file prog.aa, line 132
    // 			$phi shifted_divisorx_x0x_xlcssa := 			  ($cast ($uint<32>) divisor ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 133
    // ($cast ($uint<32>) divisor )
    # := [type_cast_203_inst] (divisor) (type_cast_203_wire) 
    $delay type_cast_203_inst 1
    // ($cast ($uint<32>) xx_xlcssa )
    # := [type_cast_205_inst] (xx_xlcssa_193) (type_cast_205_wire) 
    $delay type_cast_205_inst 1
    $phi [phi_stmt_200] (type_cast_203_wire type_cast_205_wire) ( shifted_divisorx_x0x_xlcssa_200 )
    // 			$phi curr_quotientx_x0x_xlcssa := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7_xx_x_crit_edge			  ($cast ($uint<32>) xx_xlcssa1 ) $on xx_x_crit_edgex_xloopexit_xx_x_crit_edge // type of target is $uint<32>
    //  file prog.aa, line 134
    // ($cast ($uint<32>) xx_xlcssa1 )
    # := [type_cast_212_inst] (xx_xlcssa1_189) (type_cast_212_wire) 
    $delay type_cast_212_inst 1
    $phi [phi_stmt_206] (type_cast_210_wire_constant type_cast_212_wire) ( curr_quotientx_x0x_xlcssa_206 )
    // 		iNsTr_12 := (curr_quotientx_x0x_xlcssa + quotientx_x05)
    //  file prog.aa, line 136
    // (curr_quotientx_x0x_xlcssa + quotientx_x05)
    +[ADD_u32_u32_217_inst] (curr_quotientx_x0x_xlcssa_206 quotientx_x05_123) (iNsTr_12_218) 
    $delay ADD_u32_u32_217_inst 1
    // 		iNsTr_13 := (xx_x016 - shifted_divisorx_x0x_xlcssa)
    //  file prog.aa, line 137
    // (xx_x016 - shifted_divisorx_x0x_xlcssa)
    -[SUB_u32_u32_222_inst] (xx_x016_117 shifted_divisorx_x0x_xlcssa_200) (iNsTr_13_223) 
    $delay SUB_u32_u32_222_inst 1
    // 		iNsTr_14 := (iNsTr_13 < divisor)
    //  file prog.aa, line 139
    // (iNsTr_13 < divisor)
    <[ULT_u32_u1_227_inst] (iNsTr_13_223 divisor) (iNsTr_14_228) 
    $delay ULT_u32_u1_227_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 140
    ==0? [if_stmt_229_branch] (iNsTr_14_228)
    // data-path instances for merge  
    //  file prog.aa, line 142
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_12 ) $on xx_x_crit_edge_xx_xloopexitx_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 143
    // ($cast ($uint<32>) iNsTr_12 )
    # := [type_cast_239_inst] (iNsTr_12_218) (type_cast_239_wire) 
    $delay type_cast_239_inst 1
    $phi [phi_stmt_236] (type_cast_239_wire) ( xx_xlcssa2_236 )
    // data-path instances for merge  
    //  file prog.aa, line 147
    // 			$phi xx_x0 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_0_xx_xloopexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_2_xx_xloopexit			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_xloopexitx_xloopexit_xx_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 148
    // ($cast ($uint<32>) xx_xlcssa2 )
    # := [type_cast_252_inst] (xx_xlcssa2_236) (type_cast_252_wire) 
    $delay type_cast_252_inst 1
    $phi [phi_stmt_243] (type_cast_247_wire_constant type_cast_250_wire_constant type_cast_252_wire) ( xx_x0_243 )
    // data-path instances for merge  
    //  file prog.aa, line 152
    // 			$phi ret_val__ := 			  ($cast ($uint<32>) dividend ) $on bb_1_UnifiedReturnBlock			  ($cast ($uint<32>) xx_x0 ) $on xx_xloopexit_UnifiedReturnBlock // type of target is $uint<32>
    //  file prog.aa, line 153
    // ($cast ($uint<32>) dividend )
    # := [type_cast_259_inst] (dividend) (type_cast_259_wire) 
    $delay type_cast_259_inst 1
    // ($cast ($uint<32>) xx_x0 )
    # := [type_cast_261_inst] (xx_x0_243) (type_cast_261_wire) 
    $delay type_cast_261_inst 1
    $phi [phi_stmt_256] (type_cast_259_wire type_cast_261_wire) ( ret_val__ )
  }
  // end data-path
  // CP-DP links for switch  
  //  file prog.aa, line 77
  switch_stmt_79_select_expr_0 <=> (branch_block_stmt_78/switch_stmt_79__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_78/switch_stmt_79__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_78/switch_stmt_79__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_78/switch_stmt_79__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_79_branch_0 <=> (branch_block_stmt_78/switch_stmt_79__condition_check__/condition_0/cmp) ($open branch_block_stmt_78/switch_stmt_79_choice_0/ack1)
  switch_stmt_79_select_expr_1 <=> (branch_block_stmt_78/switch_stmt_79__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_78/switch_stmt_79__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_78/switch_stmt_79__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_78/switch_stmt_79__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_79_branch_1 <=> (branch_block_stmt_78/switch_stmt_79__condition_check__/condition_1/cmp) ($open branch_block_stmt_78/switch_stmt_79_choice_1/ack1)
  switch_stmt_79_branch_default <=> (branch_block_stmt_78/switch_stmt_79__condition_check__/$exit) (branch_block_stmt_78/switch_stmt_79_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.aa, line 86
  // CP-DP links for merge  
  //  file prog.aa, line 90
  // 		iNsTr_1 := (divisor > dividend)
  //  file prog.aa, line 93
  // (divisor > dividend)
  UGT_u32_u1_95_inst <=> (branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/UGT_u32_u1_95_Sample/rr branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/UGT_u32_u1_95_Update/cr) (branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/UGT_u32_u1_95_Sample/ra branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/UGT_u32_u1_95_Update/ca)
  // 		iNsTr_2 := (dividend < divisor)
  //  file prog.aa, line 95
  // (dividend < divisor)
  ULT_u32_u1_101_inst <=> (branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/ULT_u32_u1_101_Sample/rr branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/ULT_u32_u1_101_Update/cr) (branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/ULT_u32_u1_101_Sample/ra branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/ULT_u32_u1_101_Update/ca)
  // 		orx_xcond := (iNsTr_1 | iNsTr_2)
  //  file prog.aa, line 96
  // (iNsTr_1 | iNsTr_2)
  OR_u1_u1_106_inst <=> (branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/OR_u1_u1_106_Sample/rr branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/OR_u1_u1_106_Update/cr) (branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/OR_u1_u1_106_Sample/ra branch_block_stmt_78/assign_stmt_97_to_assign_stmt_107/OR_u1_u1_106_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 97
  if_stmt_108_branch <=> (branch_block_stmt_78/if_stmt_108_eval_test/branch_req) (branch_block_stmt_78/if_stmt_108_else_link/else_choice_transition branch_block_stmt_78/if_stmt_108_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 99
  // CP-DP links for merge  
  //  file prog.aa, line 103
  // ($cast ($uint<32>) iNsTr_13 )
  type_cast_120_inst <=> (branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_120/SplitProtocol/Sample/rr branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_120/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_120/SplitProtocol/Sample/ra branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_120/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) dividend )
  type_cast_122_inst <=> (branch_block_stmt_78/bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_122/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_122/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_122/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_sources/type_cast_122/SplitProtocol/Update/ca)
  phi_stmt_117 <=> (branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_req branch_block_stmt_78/bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq/phi_stmt_117/phi_stmt_117_req) (branch_block_stmt_78/merge_stmt_116_PhiAck/phi_stmt_117_ack)
  // ($cast ($uint<32>) iNsTr_12 )
  type_cast_126_inst <=> (branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_123/phi_stmt_123_sources/type_cast_126/SplitProtocol/Sample/rr branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_123/phi_stmt_123_sources/type_cast_126/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_123/phi_stmt_123_sources/type_cast_126/SplitProtocol/Sample/ra branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_123/phi_stmt_123_sources/type_cast_126/SplitProtocol/Update/ca)
  phi_stmt_123 <=> (branch_block_stmt_78/xx_x_crit_edge_bbx_xnph7_PhiReq/phi_stmt_123/phi_stmt_123_req branch_block_stmt_78/bbx_xnph7x_xpreheader_bbx_xnph7_PhiReq/phi_stmt_123/phi_stmt_123_req) (branch_block_stmt_78/merge_stmt_116_PhiAck/phi_stmt_123_ack)
  // 		iNsTr_8 := (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 107
  // (xx_x016 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_135_inst <=> (branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/LSHR_u32_u32_135_Sample/rr branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/LSHR_u32_u32_135_Update/cr) (branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/LSHR_u32_u32_135_Sample/ra branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/LSHR_u32_u32_135_Update/ca)
  // 		iNsTr_9 := (iNsTr_8 > divisor)
  //  file prog.aa, line 109
  // (iNsTr_8 > divisor)
  UGT_u32_u1_140_inst <=> (branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/UGT_u32_u1_140_Sample/rr branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/UGT_u32_u1_140_Update/cr) (branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/UGT_u32_u1_140_Sample/ra branch_block_stmt_78/assign_stmt_136_to_assign_stmt_141/UGT_u32_u1_140_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 110
  if_stmt_142_branch <=> (branch_block_stmt_78/if_stmt_142_eval_test/branch_req) (branch_block_stmt_78/if_stmt_142_else_link/else_choice_transition branch_block_stmt_78/if_stmt_142_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 112
  // CP-DP links for merge  
  //  file prog.aa, line 116
  // ($cast ($uint<32>) iNsTr_16 )
  type_cast_154_inst <=> (branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_154/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_154/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_154/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_154/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) divisor )
  type_cast_156_inst <=> (branch_block_stmt_78/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_156/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_156/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_156/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_sources/type_cast_156/SplitProtocol/Update/ca)
  phi_stmt_151 <=> (branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_req branch_block_stmt_78/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_151/phi_stmt_151_req) (branch_block_stmt_78/merge_stmt_150_PhiAck/phi_stmt_151_ack)
  // ($cast ($uint<32>) iNsTr_17 )
  type_cast_160_inst <=> (branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_157/phi_stmt_157_sources/type_cast_160/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_157/phi_stmt_157_sources/type_cast_160/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_157/phi_stmt_157_sources/type_cast_160/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_157/phi_stmt_157_sources/type_cast_160/SplitProtocol/Update/ca)
  phi_stmt_157 <=> (branch_block_stmt_78/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_157/phi_stmt_157_req branch_block_stmt_78/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_157/phi_stmt_157_req) (branch_block_stmt_78/merge_stmt_150_PhiAck/phi_stmt_157_ack)
  // 		iNsTr_16 := (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 120
  // (shifted_divisorx_x03 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_169_inst <=> (branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_169_Sample/rr branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_169_Update/cr) (branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_169_Sample/ra branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_169_Update/ca)
  // 		iNsTr_17 := (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 121
  // (curr_quotientx_x02 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_175_inst <=> (branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_175_Sample/rr branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_175_Update/cr) (branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_175_Sample/ra branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/SHL_u32_u32_175_Update/ca)
  // 		iNsTr_18 := (iNsTr_16 < iNsTr_8)
  //  file prog.aa, line 123
  // (iNsTr_16 < iNsTr_8)
  ULT_u32_u1_180_inst <=> (branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/ULT_u32_u1_180_Sample/rr branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/ULT_u32_u1_180_Update/cr) (branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/ULT_u32_u1_180_Sample/ra branch_block_stmt_78/assign_stmt_170_to_assign_stmt_181/ULT_u32_u1_180_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 124
  if_stmt_182_branch <=> (branch_block_stmt_78/if_stmt_182_eval_test/branch_req) (branch_block_stmt_78/if_stmt_182_else_link/else_choice_transition branch_block_stmt_78/if_stmt_182_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 126
  // ($cast ($uint<32>) iNsTr_17 )
  type_cast_192_inst <=> (branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_189/phi_stmt_189_sources/type_cast_192/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_189/phi_stmt_189_sources/type_cast_192/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_189/phi_stmt_189_sources/type_cast_192/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_189/phi_stmt_189_sources/type_cast_192/SplitProtocol/Update/ca)
  phi_stmt_189 <=> (branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_189/phi_stmt_189_req) (branch_block_stmt_78/merge_stmt_188_PhiAck/phi_stmt_189_ack)
  // ($cast ($uint<32>) iNsTr_16 )
  type_cast_196_inst <=> (branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_196/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_196/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_196/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_193/phi_stmt_193_sources/type_cast_196/SplitProtocol/Update/ca)
  phi_stmt_193 <=> (branch_block_stmt_78/bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq/phi_stmt_193/phi_stmt_193_req) (branch_block_stmt_78/merge_stmt_188_PhiAck/phi_stmt_193_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 132
  // ($cast ($uint<32>) divisor )
  type_cast_203_inst <=> (branch_block_stmt_78/bbx_xnph7_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_203/SplitProtocol/Sample/rr branch_block_stmt_78/bbx_xnph7_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_203/SplitProtocol/Update/cr) (branch_block_stmt_78/bbx_xnph7_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_203/SplitProtocol/Sample/ra branch_block_stmt_78/bbx_xnph7_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_203/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa )
  type_cast_205_inst <=> (branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_205/SplitProtocol/Sample/rr branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_205/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_205/SplitProtocol/Sample/ra branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_sources/type_cast_205/SplitProtocol/Update/ca)
  phi_stmt_200 <=> (branch_block_stmt_78/bbx_xnph7_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_req branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_200/phi_stmt_200_req) (branch_block_stmt_78/merge_stmt_199_PhiAck/phi_stmt_200_ack)
  // ($cast ($uint<32>) xx_xlcssa1 )
  type_cast_212_inst <=> (branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_206/phi_stmt_206_sources/type_cast_212/SplitProtocol/Sample/rr branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_206/phi_stmt_206_sources/type_cast_212/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_206/phi_stmt_206_sources/type_cast_212/SplitProtocol/Sample/ra branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_206/phi_stmt_206_sources/type_cast_212/SplitProtocol/Update/ca)
  phi_stmt_206 <=> (branch_block_stmt_78/bbx_xnph7_xx_x_crit_edge_PhiReq/phi_stmt_206/phi_stmt_206_req branch_block_stmt_78/xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq/phi_stmt_206/phi_stmt_206_req) (branch_block_stmt_78/merge_stmt_199_PhiAck/phi_stmt_206_ack)
  // 		iNsTr_12 := (curr_quotientx_x0x_xlcssa + quotientx_x05)
  //  file prog.aa, line 136
  // (curr_quotientx_x0x_xlcssa + quotientx_x05)
  ADD_u32_u32_217_inst <=> (branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ADD_u32_u32_217_Sample/rr branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ADD_u32_u32_217_Update/cr) (branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ADD_u32_u32_217_Sample/ra branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ADD_u32_u32_217_Update/ca)
  // 		iNsTr_13 := (xx_x016 - shifted_divisorx_x0x_xlcssa)
  //  file prog.aa, line 137
  // (xx_x016 - shifted_divisorx_x0x_xlcssa)
  SUB_u32_u32_222_inst <=> (branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/SUB_u32_u32_222_Sample/rr branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/SUB_u32_u32_222_Update/cr) (branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/SUB_u32_u32_222_Sample/ra branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/SUB_u32_u32_222_Update/ca)
  // 		iNsTr_14 := (iNsTr_13 < divisor)
  //  file prog.aa, line 139
  // (iNsTr_13 < divisor)
  ULT_u32_u1_227_inst <=> (branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ULT_u32_u1_227_Sample/rr branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ULT_u32_u1_227_Update/cr) (branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ULT_u32_u1_227_Sample/ra branch_block_stmt_78/assign_stmt_218_to_assign_stmt_228/ULT_u32_u1_227_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 140
  if_stmt_229_branch <=> (branch_block_stmt_78/if_stmt_229_eval_test/branch_req) (branch_block_stmt_78/if_stmt_229_else_link/else_choice_transition branch_block_stmt_78/if_stmt_229_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 142
  // ($cast ($uint<32>) iNsTr_12 )
  type_cast_239_inst <=> (branch_block_stmt_78/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_236/phi_stmt_236_sources/type_cast_239/SplitProtocol/Sample/rr branch_block_stmt_78/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_236/phi_stmt_236_sources/type_cast_239/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_236/phi_stmt_236_sources/type_cast_239/SplitProtocol/Sample/ra branch_block_stmt_78/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_236/phi_stmt_236_sources/type_cast_239/SplitProtocol/Update/ca)
  phi_stmt_236 <=> (branch_block_stmt_78/xx_x_crit_edge_xx_xloopexitx_xloopexit_PhiReq/phi_stmt_236/phi_stmt_236_req) (branch_block_stmt_78/merge_stmt_235_PhiAck/phi_stmt_236_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 147
  // ($cast ($uint<32>) xx_xlcssa2 )
  type_cast_252_inst <=> (branch_block_stmt_78/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_sources/type_cast_252/SplitProtocol/Sample/rr branch_block_stmt_78/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_sources/type_cast_252/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_sources/type_cast_252/SplitProtocol/Sample/ra branch_block_stmt_78/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_sources/type_cast_252/SplitProtocol/Update/ca)
  phi_stmt_243 <=> (branch_block_stmt_78/bb_0_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_req branch_block_stmt_78/bb_2_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_req branch_block_stmt_78/xx_xloopexitx_xloopexit_xx_xloopexit_PhiReq/phi_stmt_243/phi_stmt_243_req) (branch_block_stmt_78/merge_stmt_242_PhiAck/phi_stmt_243_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 152
  // ($cast ($uint<32>) dividend )
  type_cast_259_inst <=> (branch_block_stmt_78/bb_1_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_259/SplitProtocol/Sample/rr branch_block_stmt_78/bb_1_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_259/SplitProtocol/Update/cr) (branch_block_stmt_78/bb_1_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_259/SplitProtocol/Sample/ra branch_block_stmt_78/bb_1_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_259/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_x0 )
  type_cast_261_inst <=> (branch_block_stmt_78/xx_xloopexit_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_261/SplitProtocol/Sample/rr branch_block_stmt_78/xx_xloopexit_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_261/SplitProtocol/Update/cr) (branch_block_stmt_78/xx_xloopexit_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_261/SplitProtocol/Sample/ra branch_block_stmt_78/xx_xloopexit_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_sources/type_cast_261/SplitProtocol/Update/ca)
  phi_stmt_256 <=> (branch_block_stmt_78/bb_1_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_req branch_block_stmt_78/xx_xloopexit_UnifiedReturnBlock_PhiReq/phi_stmt_256/phi_stmt_256_req) (branch_block_stmt_78/merge_stmt_255_PhiAck/phi_stmt_256_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 156
}
$module [vector_control_daemon] 
{
  // pipe-declarations for block %vector_control_daemon
  //  file prog.aa, line 649
  // pipe-declarations for block %vector_control_daemon%body
  //  file prog.aa, line 654
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 659
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 678
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 685
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 691
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 698
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 712
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 718
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 722
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 731
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 737
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 742
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 754
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 778
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 782
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 791
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 795
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 805
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 811
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 821
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 826
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 831
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 842
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 846
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 860
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 870
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 882
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 893
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 917
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 921
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 930
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 934
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 944
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 950
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 960
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 965
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 970
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 981
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 985
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 999
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1009
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1021
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1034
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1040
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1044
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1053
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1059
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1065
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1074
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1083
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1087
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1097
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1103
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1113
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1128
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1132
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1146
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1154
  // pipe-declarations for block %vector_control_daemon%body%
  //  file prog.aa, line 1166
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1659] // Branch Block  file prog.aa, line 654
    {
      $P [branch_block_stmt_1659__entry__]
      branch_block_stmt_1659__entry__ <-| ($entry)
      $P [branch_block_stmt_1659__exit__]
      branch_block_stmt_1659__exit__ |-> ($exit)
      $P [bb_0_bb_1]
      $P [merge_stmt_1661__exit__] 
      $P [assign_stmt_1721__entry__] 
      $P [assign_stmt_1721__exit__] 
      $P [assign_stmt_1724__entry__] 
      $P [assign_stmt_1724__exit__] 
      $P [assign_stmt_1727__entry__] 
      $P [assign_stmt_1727__exit__] 
      $P [assign_stmt_1730__entry__] 
      $P [assign_stmt_1730__exit__] 
      $P [assign_stmt_1733__entry__] 
      $P [assign_stmt_1733__exit__] 
      $P [assign_stmt_1738__entry__] 
      $P [assign_stmt_1738__exit__] 
      $P [if_stmt_1739__entry__] 
      $P [if_stmt_1739__exit__] 
      $P [merge_stmt_1745__entry__] 
      $P [merge_stmt_1745__exit__] 
      $P [assign_stmt_1750_to_assign_stmt_1760__entry__] 
      $P [assign_stmt_1750_to_assign_stmt_1760__exit__] 
      $P [bb_2_bb_5]
      $P [merge_stmt_1762__exit__] 
      $P [assign_stmt_1767__entry__] 
      $P [assign_stmt_1767__exit__] 
      $P [if_stmt_1768__entry__] 
      $P [if_stmt_1768__exit__] 
      $P [merge_stmt_1774__entry__] 
      $P [merge_stmt_1774__exit__] 
      $P [assign_stmt_1778_to_assign_stmt_1788__entry__] 
      $P [assign_stmt_1778_to_assign_stmt_1788__exit__] 
      $P [bb_4_bb_5]
      $P [merge_stmt_1790__exit__] 
      $P [assign_stmt_1805_to_assign_stmt_1841__entry__] 
      $P [assign_stmt_1805_to_assign_stmt_1841__exit__] 
      $P [if_stmt_1842__entry__] 
      $P [if_stmt_1842__exit__] 
      $P [merge_stmt_1848__entry__] 
      $P [merge_stmt_1848__exit__] 
      $P [assign_stmt_1854__entry__] 
      $P [assign_stmt_1854__exit__] 
      $P [if_stmt_1855__entry__] 
      $P [if_stmt_1855__exit__] 
      $P [merge_stmt_1861__entry__] 
      $P [merge_stmt_1861__exit__] 
      $P [bb_7_bb_8]
      $P [merge_stmt_1863__exit__] 
      $P [assign_stmt_1880_to_assign_stmt_1891__entry__] 
      $P [assign_stmt_1880_to_assign_stmt_1891__exit__] 
      $P [if_stmt_1892__entry__] 
      $P [if_stmt_1892__exit__] 
      $P [merge_stmt_1898__entry__] 
      $P [merge_stmt_1898__exit__] 
      $P [assign_stmt_1904__entry__] 
      $P [assign_stmt_1904__exit__] 
      $P [if_stmt_1905__entry__] 
      $P [if_stmt_1905__exit__] 
      $P [merge_stmt_1911__entry__] 
      $P [merge_stmt_1911__exit__] 
      $P [assign_stmt_1917__entry__] 
      $P [assign_stmt_1917__exit__] 
      $P [bb_10_bb_11]
      $P [merge_stmt_1919__exit__] 
      $P [assign_stmt_1936_to_assign_stmt_1961__entry__] 
      $P [assign_stmt_1936_to_assign_stmt_1961__exit__] 
      $P [if_stmt_1962__entry__] 
      $P [if_stmt_1962__exit__] 
      $P [merge_stmt_1968__entry__] 
      $P [merge_stmt_1968__exit__] 
      $P [assign_stmt_1974_to_assign_stmt_2044__entry__] 
      $P [assign_stmt_1974_to_assign_stmt_2044__exit__] 
      $P [switch_stmt_2045__entry__] 
      $P [switch_stmt_2045__exit__] 
      $P [merge_stmt_2055__entry__] 
      $P [merge_stmt_2055__exit__] 
      $P [bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5]
      $P [merge_stmt_2057__exit__] 
      $P [assign_stmt_2077_to_assign_stmt_2082__entry__] 
      $P [assign_stmt_2077_to_assign_stmt_2082__exit__] 
      $P [if_stmt_2083__entry__] 
      $P [if_stmt_2083__exit__] 
      $P [merge_stmt_2089__entry__] 
      $P [merge_stmt_2089__exit__] 
      $P [bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8]
      $P [merge_stmt_2091__exit__] 
      $P [assign_stmt_2111_to_assign_stmt_2122__entry__] 
      $P [assign_stmt_2111_to_assign_stmt_2122__exit__] 
      $P [if_stmt_2123__entry__] 
      $P [if_stmt_2123__exit__] 
      $P [merge_stmt_2129__entry__] 
      $P [merge_stmt_2129__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11]
      $P [merge_stmt_2140__exit__] 
      $P [assign_stmt_2159_to_assign_stmt_2169__entry__] 
      $P [assign_stmt_2159_to_assign_stmt_2169__exit__] 
      $P [if_stmt_2170__entry__] 
      $P [if_stmt_2170__exit__] 
      $P [merge_stmt_2176__entry__] 
      $P [merge_stmt_2176__exit__] 
      $P [xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13]
      $P [merge_stmt_2183__exit__] 
      $P [xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16]
      $P [merge_stmt_2193__exit__] 
      $P [assign_stmt_2206_to_assign_stmt_2225__entry__] 
      $P [assign_stmt_2206_to_assign_stmt_2225__exit__] 
      $P [if_stmt_2226__entry__] 
      $P [if_stmt_2226__exit__] 
      $P [merge_stmt_2232__entry__] 
      $P [merge_stmt_2232__exit__] 
      $P [udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20]
      $P [merge_stmt_2234__exit__] 
      $P [assign_stmt_2254_to_assign_stmt_2285__entry__] 
      $P [assign_stmt_2254_to_assign_stmt_2285__exit__] 
      $P [if_stmt_2286__entry__] 
      $P [if_stmt_2286__exit__] 
      $P [merge_stmt_2292__entry__] 
      $P [merge_stmt_2292__exit__] 
      $P [assign_stmt_2307_to_assign_stmt_2323__entry__] 
      $P [assign_stmt_2307_to_assign_stmt_2323__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29]
      $P [merge_stmt_2325__exit__] 
      $P [assign_stmt_2344_to_assign_stmt_2370__entry__] 
      $P [assign_stmt_2344_to_assign_stmt_2370__exit__] 
      $P [xx_xcritedgex_xix_xi29_omega_calcx_xexit]
      $P [merge_stmt_2372__exit__] 
      $P [assign_stmt_2385_to_assign_stmt_2406__entry__] 
      $P [assign_stmt_2385_to_assign_stmt_2406__exit__] 
      $P [if_stmt_2407__entry__] 
      $P [if_stmt_2407__exit__] 
      $P [merge_stmt_2413__entry__] 
      $P [merge_stmt_2413__exit__] 
      $P [assign_stmt_2419_to_assign_stmt_2489__entry__] 
      $P [assign_stmt_2419_to_assign_stmt_2489__exit__] 
      $P [switch_stmt_2490__entry__] 
      $P [switch_stmt_2490__exit__] 
      $P [merge_stmt_2500__entry__] 
      $P [merge_stmt_2500__exit__] 
      $P [bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi]
      $P [merge_stmt_2502__exit__] 
      $P [assign_stmt_2522_to_assign_stmt_2527__entry__] 
      $P [assign_stmt_2522_to_assign_stmt_2527__exit__] 
      $P [if_stmt_2528__entry__] 
      $P [if_stmt_2528__exit__] 
      $P [merge_stmt_2534__entry__] 
      $P [merge_stmt_2534__exit__] 
      $P [bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi]
      $P [merge_stmt_2536__exit__] 
      $P [assign_stmt_2556_to_assign_stmt_2567__entry__] 
      $P [assign_stmt_2556_to_assign_stmt_2567__exit__] 
      $P [if_stmt_2568__entry__] 
      $P [if_stmt_2568__exit__] 
      $P [merge_stmt_2574__entry__] 
      $P [merge_stmt_2574__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi]
      $P [merge_stmt_2585__exit__] 
      $P [assign_stmt_2604_to_assign_stmt_2614__entry__] 
      $P [assign_stmt_2604_to_assign_stmt_2614__exit__] 
      $P [if_stmt_2615__entry__] 
      $P [if_stmt_2615__exit__] 
      $P [merge_stmt_2621__entry__] 
      $P [merge_stmt_2621__exit__] 
      $P [xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi]
      $P [merge_stmt_2628__exit__] 
      $P [xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi]
      $P [merge_stmt_2638__exit__] 
      $P [assign_stmt_2651_to_assign_stmt_2670__entry__] 
      $P [assign_stmt_2651_to_assign_stmt_2670__exit__] 
      $P [if_stmt_2671__entry__] 
      $P [if_stmt_2671__exit__] 
      $P [merge_stmt_2677__entry__] 
      $P [merge_stmt_2677__exit__] 
      $P [udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi]
      $P [merge_stmt_2679__exit__] 
      $P [assign_stmt_2699_to_assign_stmt_2730__entry__] 
      $P [assign_stmt_2699_to_assign_stmt_2730__exit__] 
      $P [if_stmt_2731__entry__] 
      $P [if_stmt_2731__exit__] 
      $P [merge_stmt_2737__entry__] 
      $P [merge_stmt_2737__exit__] 
      $P [assign_stmt_2752_to_assign_stmt_2768__entry__] 
      $P [assign_stmt_2752_to_assign_stmt_2768__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi]
      $P [merge_stmt_2770__exit__] 
      $P [assign_stmt_2789_to_assign_stmt_2815__entry__] 
      $P [assign_stmt_2789_to_assign_stmt_2815__exit__] 
      $P [xx_xcritedgex_xix_xi_iq_err_calcx_xexit]
      $P [merge_stmt_2817__exit__] 
      $P [assign_stmt_2831_to_assign_stmt_2865__entry__] 
      $P [assign_stmt_2831_to_assign_stmt_2865__exit__] 
      $P [if_stmt_2866__entry__] 
      $P [if_stmt_2866__exit__] 
      $P [merge_stmt_2872__entry__] 
      $P [merge_stmt_2872__exit__] 
      $P [assign_stmt_2878__entry__] 
      $P [assign_stmt_2878__exit__] 
      $P [if_stmt_2879__entry__] 
      $P [if_stmt_2879__exit__] 
      $P [merge_stmt_2885__entry__] 
      $P [merge_stmt_2885__exit__] 
      $P [bb_43_bb_44]
      $P [merge_stmt_2887__exit__] 
      $P [assign_stmt_2904_to_assign_stmt_2915__entry__] 
      $P [assign_stmt_2904_to_assign_stmt_2915__exit__] 
      $P [if_stmt_2916__entry__] 
      $P [if_stmt_2916__exit__] 
      $P [merge_stmt_2922__entry__] 
      $P [merge_stmt_2922__exit__] 
      $P [assign_stmt_2928__entry__] 
      $P [assign_stmt_2928__exit__] 
      $P [if_stmt_2929__entry__] 
      $P [if_stmt_2929__exit__] 
      $P [merge_stmt_2935__entry__] 
      $P [merge_stmt_2935__exit__] 
      $P [assign_stmt_2941__entry__] 
      $P [assign_stmt_2941__exit__] 
      $P [if_stmt_2942__entry__] 
      $P [if_stmt_2942__exit__] 
      $P [merge_stmt_2948__entry__] 
      $P [merge_stmt_2948__exit__] 
      $P [assign_stmt_2963_to_assign_stmt_2981__entry__] 
      $P [assign_stmt_2963_to_assign_stmt_2981__exit__] 
      $P [xx_xthread_bbx_xnph7x_xix_xi]
      $P [merge_stmt_2983__exit__] 
      $P [assign_stmt_3003_to_assign_stmt_3009__entry__] 
      $P [assign_stmt_3003_to_assign_stmt_3009__exit__] 
      $P [if_stmt_3010__entry__] 
      $P [if_stmt_3010__exit__] 
      $P [merge_stmt_3016__entry__] 
      $P [merge_stmt_3016__exit__] 
      $P [bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi]
      $P [merge_stmt_3018__exit__] 
      $P [assign_stmt_3039_to_assign_stmt_3050__entry__] 
      $P [assign_stmt_3039_to_assign_stmt_3050__exit__] 
      $P [if_stmt_3051__entry__] 
      $P [if_stmt_3051__exit__] 
      $P [merge_stmt_3057__entry__] 
      $P [merge_stmt_3057__exit__] 
      $P [xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi]
      $P [merge_stmt_3068__exit__] 
      $P [assign_stmt_3088_to_assign_stmt_3099__entry__] 
      $P [assign_stmt_3088_to_assign_stmt_3099__exit__] 
      $P [if_stmt_3100__entry__] 
      $P [if_stmt_3100__exit__] 
      $P [merge_stmt_3106__entry__] 
      $P [merge_stmt_3106__exit__] 
      $P [assign_stmt_3117_to_assign_stmt_3160__entry__] 
      $P [assign_stmt_3117_to_assign_stmt_3160__exit__] 
      $P [if_stmt_3161__entry__] 
      $P [if_stmt_3161__exit__] 
      $P [merge_stmt_3167__entry__] 
      $P [merge_stmt_3167__exit__] 
      $P [udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi]
      $P [merge_stmt_3169__exit__] 
      $P [assign_stmt_3189_to_assign_stmt_3220__entry__] 
      $P [assign_stmt_3189_to_assign_stmt_3220__exit__] 
      $P [if_stmt_3221__entry__] 
      $P [if_stmt_3221__exit__] 
      $P [merge_stmt_3227__entry__] 
      $P [merge_stmt_3227__exit__] 
      $P [assign_stmt_3242_to_assign_stmt_3247__entry__] 
      $P [assign_stmt_3242_to_assign_stmt_3247__exit__] 
      $P [udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi]
      $P [merge_stmt_3249__exit__] 
      $P [assign_stmt_3268_to_assign_stmt_3294__entry__] 
      $P [assign_stmt_3268_to_assign_stmt_3294__exit__] 
      $P [xx_xcritedgex_xi_fdiv32x_xexit]
      $P [merge_stmt_3296__exit__] 
      $P [assign_stmt_3307__entry__] 
      $P [assign_stmt_3307__exit__] 
      $P [assign_stmt_3310__entry__] 
      $P [assign_stmt_3310__exit__] 
      $P [assign_stmt_3313__entry__] 
      $P [assign_stmt_3313__exit__] 
      $P [assign_stmt_3316__entry__] 
      $P [assign_stmt_3316__exit__] 
      $P [assign_stmt_3322_to_assign_stmt_3334__entry__] 
      $P [assign_stmt_3322_to_assign_stmt_3334__exit__] 
      $P [fdiv32x_xexit_bb_1]
      ::[assign_stmt_1721] 
      {
        // 		iNsTr_2 := in_data
        //  file prog.aa, line 669
        // Source expression
        // in_data
        $T[RPIPE_in_data_1720_sample_start_] 
        $T[RPIPE_in_data_1720_sample_completed_] 
        $T[RPIPE_in_data_1720_update_start_] 
        $T[RPIPE_in_data_1720_update_completed_] 
        ;;[RPIPE_in_data_1720_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data_1720_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data_1720_sample_start_ &-> (RPIPE_in_data_1720_Sample)
        RPIPE_in_data_1720_sample_completed_ <-& (RPIPE_in_data_1720_Sample)
        RPIPE_in_data_1720_sample_completed_ &-> ($null)
        RPIPE_in_data_1720_update_start_ &-> (RPIPE_in_data_1720_Update)
        RPIPE_in_data_1720_update_completed_ <-& (RPIPE_in_data_1720_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // barrier: 		iNsTr_2 := in_data
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data
      }
      assign_stmt_1721__entry__ |-> (assign_stmt_1721)
      assign_stmt_1721__exit__ <-| (assign_stmt_1721)
      ::[assign_stmt_1724] 
      {
        // 		iNsTr_4 := in_data
        //  file prog.aa, line 670
        // Source expression
        // in_data
        $T[RPIPE_in_data_1723_sample_start_] 
        $T[RPIPE_in_data_1723_sample_completed_] 
        $T[RPIPE_in_data_1723_update_start_] 
        $T[RPIPE_in_data_1723_update_completed_] 
        ;;[RPIPE_in_data_1723_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data_1723_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data_1723_sample_start_ &-> (RPIPE_in_data_1723_Sample)
        RPIPE_in_data_1723_sample_completed_ <-& (RPIPE_in_data_1723_Sample)
        RPIPE_in_data_1723_sample_completed_ &-> ($null)
        RPIPE_in_data_1723_update_start_ &-> (RPIPE_in_data_1723_Update)
        RPIPE_in_data_1723_update_completed_ <-& (RPIPE_in_data_1723_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // barrier: 		iNsTr_4 := in_data
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data
      }
      assign_stmt_1724__entry__ |-> (assign_stmt_1724)
      assign_stmt_1724__exit__ <-| (assign_stmt_1724)
      ::[assign_stmt_1727] 
      {
        // 		iNsTr_6 := in_data
        //  file prog.aa, line 671
        // Source expression
        // in_data
        $T[RPIPE_in_data_1726_sample_start_] 
        $T[RPIPE_in_data_1726_sample_completed_] 
        $T[RPIPE_in_data_1726_update_start_] 
        $T[RPIPE_in_data_1726_update_completed_] 
        ;;[RPIPE_in_data_1726_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data_1726_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data_1726_sample_start_ &-> (RPIPE_in_data_1726_Sample)
        RPIPE_in_data_1726_sample_completed_ <-& (RPIPE_in_data_1726_Sample)
        RPIPE_in_data_1726_sample_completed_ &-> ($null)
        RPIPE_in_data_1726_update_start_ &-> (RPIPE_in_data_1726_Update)
        RPIPE_in_data_1726_update_completed_ <-& (RPIPE_in_data_1726_Update)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // barrier: 		iNsTr_6 := in_data
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data
      }
      assign_stmt_1727__entry__ |-> (assign_stmt_1727)
      assign_stmt_1727__exit__ <-| (assign_stmt_1727)
      ::[assign_stmt_1730] 
      {
        // 		iNsTr_8 := in_data
        //  file prog.aa, line 672
        // Source expression
        // in_data
        $T[RPIPE_in_data_1729_sample_start_] 
        $T[RPIPE_in_data_1729_sample_completed_] 
        $T[RPIPE_in_data_1729_update_start_] 
        $T[RPIPE_in_data_1729_update_completed_] 
        ;;[RPIPE_in_data_1729_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data_1729_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data_1729_sample_start_ &-> (RPIPE_in_data_1729_Sample)
        RPIPE_in_data_1729_sample_completed_ <-& (RPIPE_in_data_1729_Sample)
        RPIPE_in_data_1729_sample_completed_ &-> ($null)
        RPIPE_in_data_1729_update_start_ &-> (RPIPE_in_data_1729_Update)
        RPIPE_in_data_1729_update_completed_ <-& (RPIPE_in_data_1729_Update)
        // Target expression
        // (as target) iNsTr_8
        // iNsTr_8
        // implicit reference
        // barrier: 		iNsTr_8 := in_data
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data
      }
      assign_stmt_1730__entry__ |-> (assign_stmt_1730)
      assign_stmt_1730__exit__ <-| (assign_stmt_1730)
      ::[assign_stmt_1733] 
      {
        // 		iNsTr_10 := in_data
        //  file prog.aa, line 673
        // Source expression
        // in_data
        $T[RPIPE_in_data_1732_sample_start_] 
        $T[RPIPE_in_data_1732_sample_completed_] 
        $T[RPIPE_in_data_1732_update_start_] 
        $T[RPIPE_in_data_1732_update_completed_] 
        ;;[RPIPE_in_data_1732_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data_1732_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data_1732_sample_start_ &-> (RPIPE_in_data_1732_Sample)
        RPIPE_in_data_1732_sample_completed_ <-& (RPIPE_in_data_1732_Sample)
        RPIPE_in_data_1732_sample_completed_ &-> ($null)
        RPIPE_in_data_1732_update_start_ &-> (RPIPE_in_data_1732_Update)
        RPIPE_in_data_1732_update_completed_ <-& (RPIPE_in_data_1732_Update)
        // Target expression
        // (as target) iNsTr_10
        // iNsTr_10
        // implicit reference
        // barrier: 		iNsTr_10 := in_data
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data
      }
      assign_stmt_1733__entry__ |-> (assign_stmt_1733)
      assign_stmt_1733__exit__ <-| (assign_stmt_1733)
      ::[assign_stmt_1738] 
      {
        // 		iNsTr_11 := (speed_refx_x1 < iNsTr_8)
        //  file prog.aa, line 675
        // Source expression
        // (speed_refx_x1 < iNsTr_8)
        $T[SLT_f32_u1_1737_sample_start_] 
        $T[SLT_f32_u1_1737_sample_completed_] 
        $T[SLT_f32_u1_1737_update_start_] 
        $T[SLT_f32_u1_1737_update_completed_] 
        // speed_refx_x1
        $T[R_speed_refx_x1_1735_sample_start_] 
        $T[R_speed_refx_x1_1735_sample_completed_] 
        $T[R_speed_refx_x1_1735_update_start_] 
        $T[R_speed_refx_x1_1735_update_completed_] 
        // implicit reference
        R_speed_refx_x1_1735_sample_start_ <-& ($entry)
        R_speed_refx_x1_1735_sample_completed_ <-& (R_speed_refx_x1_1735_sample_start_)
        R_speed_refx_x1_1735_update_start_ <-& (R_speed_refx_x1_1735_sample_completed_)
        R_speed_refx_x1_1735_update_completed_ <-& (R_speed_refx_x1_1735_update_start_)
        // iNsTr_8
        $T[R_iNsTr_8_1736_sample_start_] 
        $T[R_iNsTr_8_1736_sample_completed_] 
        $T[R_iNsTr_8_1736_update_start_] 
        $T[R_iNsTr_8_1736_update_completed_] 
        // implicit reference
        R_iNsTr_8_1736_sample_start_ <-& ($entry)
        R_iNsTr_8_1736_sample_completed_ <-& (R_iNsTr_8_1736_sample_start_)
        R_iNsTr_8_1736_update_start_ <-& (R_iNsTr_8_1736_sample_completed_)
        R_iNsTr_8_1736_update_completed_ <-& (R_iNsTr_8_1736_update_start_)
        SLT_f32_u1_1737_sample_start_ <-& (R_speed_refx_x1_1735_update_completed_)
        SLT_f32_u1_1737_sample_start_ <-& (R_iNsTr_8_1736_update_completed_)
        ;;[SLT_f32_u1_1737_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_1737_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_1737_sample_start_ &-> (SLT_f32_u1_1737_Sample)
        SLT_f32_u1_1737_sample_completed_ <-& (SLT_f32_u1_1737_Sample)
        SLT_f32_u1_1737_sample_completed_ &-> ($null)
        SLT_f32_u1_1737_update_start_ &-> (SLT_f32_u1_1737_Update)
        SLT_f32_u1_1737_update_completed_ <-& (SLT_f32_u1_1737_Update)
        // Target expression
        // (as target) iNsTr_11
        // iNsTr_11
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1738__entry__ |-> (assign_stmt_1738)
      assign_stmt_1738__exit__ <-| (assign_stmt_1738)
      // if-statement  
      //  file prog.aa, line 676
      ;;[if_stmt_1739_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1739__entry__ |-> (if_stmt_1739_dead_link)
      if_stmt_1739__exit__ <-| (if_stmt_1739_dead_link)
      ;;[if_stmt_1739_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1739__entry__ |-> (if_stmt_1739_eval_test)
      $P [R_iNsTr_11_1740_place]
      R_iNsTr_11_1740_place <-| (if_stmt_1739_eval_test)
      ;;[if_stmt_1739_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1739_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_11_1740_place |-> (if_stmt_1739_if_link if_stmt_1739_else_link)
      $P [bb_1_bb_2]
      bb_1_bb_2 <-| (if_stmt_1739_if_link)
      $P [bb_1_bb_3]
      bb_1_bb_3 <-| (if_stmt_1739_else_link)
      ::[assign_stmt_1750_to_assign_stmt_1760] 
      {
        // 		iNsTr_13 := ($cast ($float<11,52>) speed_refx_x1 )
        //  file prog.aa, line 680
        // Source expression
        // ($cast ($float<11,52>) speed_refx_x1 )
        $T[type_cast_1749_sample_start_] 
        $T[type_cast_1749_sample_completed_] 
        $T[type_cast_1749_update_start_] 
        $T[type_cast_1749_update_completed_] 
        // speed_refx_x1
        $T[R_speed_refx_x1_1748_sample_start_] 
        $T[R_speed_refx_x1_1748_sample_completed_] 
        $T[R_speed_refx_x1_1748_update_start_] 
        $T[R_speed_refx_x1_1748_update_completed_] 
        // implicit reference
        R_speed_refx_x1_1748_sample_start_ <-& ($entry)
        R_speed_refx_x1_1748_sample_completed_ <-& (R_speed_refx_x1_1748_sample_start_)
        R_speed_refx_x1_1748_update_start_ <-& (R_speed_refx_x1_1748_sample_completed_)
        R_speed_refx_x1_1748_update_completed_ <-& (R_speed_refx_x1_1748_update_start_)
        type_cast_1749_sample_start_ <-& (R_speed_refx_x1_1748_update_completed_)
        ;;[type_cast_1749_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1749_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1749_sample_start_ &-> (type_cast_1749_Sample)
        type_cast_1749_sample_completed_ <-& (type_cast_1749_Sample)
        type_cast_1749_sample_completed_ &-> ($null)
        type_cast_1749_update_start_ &-> (type_cast_1749_Update)
        type_cast_1749_update_completed_ <-& (type_cast_1749_Update)
        // Target expression
        // (as target) iNsTr_13
        // iNsTr_13
        // implicit reference
        // 		iNsTr_14 := (iNsTr_13 + ($bitcast ($float<11,52>) _f5.000000e-02 ))
        //  file prog.aa, line 681
        // Source expression
        // (iNsTr_13 + ($bitcast ($float<11,52>) _f5.000000e-02 ))
        $T[ADD_f64_f64_1755_sample_start_] 
        $T[ADD_f64_f64_1755_sample_completed_] 
        $T[ADD_f64_f64_1755_update_start_] 
        $T[ADD_f64_f64_1755_update_completed_] 
        // iNsTr_13
        $T[R_iNsTr_13_1752_sample_start_] 
        $T[R_iNsTr_13_1752_sample_completed_] 
        $T[R_iNsTr_13_1752_update_start_] 
        $T[R_iNsTr_13_1752_update_completed_] 
        // implicit reference
        R_iNsTr_13_1752_sample_start_ <-& (type_cast_1749_update_completed_)
        R_iNsTr_13_1752_sample_completed_ <-& (R_iNsTr_13_1752_sample_start_)
        R_iNsTr_13_1752_update_start_ <-& (R_iNsTr_13_1752_sample_completed_)
        R_iNsTr_13_1752_update_completed_ <-& (R_iNsTr_13_1752_update_start_)
        ADD_f64_f64_1755_sample_start_ <-& (R_iNsTr_13_1752_update_completed_)
        ;;[ADD_f64_f64_1755_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f64_f64_1755_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f64_f64_1755_sample_start_ &-> (ADD_f64_f64_1755_Sample)
        ADD_f64_f64_1755_sample_completed_ <-& (ADD_f64_f64_1755_Sample)
        ADD_f64_f64_1755_sample_completed_ &-> ($null)
        ADD_f64_f64_1755_update_start_ &-> (ADD_f64_f64_1755_Update)
        ADD_f64_f64_1755_update_completed_ <-& (ADD_f64_f64_1755_Update)
        // Target expression
        // (as target) iNsTr_14
        // iNsTr_14
        // implicit reference
        // 		iNsTr_15 := ($cast ($float<8,23>) iNsTr_14 )
        //  file prog.aa, line 682
        // Source expression
        // ($cast ($float<8,23>) iNsTr_14 )
        $T[type_cast_1759_sample_start_] 
        $T[type_cast_1759_sample_completed_] 
        $T[type_cast_1759_update_start_] 
        $T[type_cast_1759_update_completed_] 
        // iNsTr_14
        $T[R_iNsTr_14_1758_sample_start_] 
        $T[R_iNsTr_14_1758_sample_completed_] 
        $T[R_iNsTr_14_1758_update_start_] 
        $T[R_iNsTr_14_1758_update_completed_] 
        // implicit reference
        R_iNsTr_14_1758_sample_start_ <-& (ADD_f64_f64_1755_update_completed_)
        R_iNsTr_14_1758_sample_completed_ <-& (R_iNsTr_14_1758_sample_start_)
        R_iNsTr_14_1758_update_start_ <-& (R_iNsTr_14_1758_sample_completed_)
        R_iNsTr_14_1758_update_completed_ <-& (R_iNsTr_14_1758_update_start_)
        type_cast_1759_sample_start_ <-& (R_iNsTr_14_1758_update_completed_)
        ;;[type_cast_1759_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1759_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1759_sample_start_ &-> (type_cast_1759_Sample)
        type_cast_1759_sample_completed_ <-& (type_cast_1759_Sample)
        type_cast_1759_sample_completed_ &-> ($null)
        type_cast_1759_update_start_ &-> (type_cast_1759_Update)
        type_cast_1759_update_completed_ <-& (type_cast_1759_Update)
        // Target expression
        // (as target) iNsTr_15
        // iNsTr_15
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1750_to_assign_stmt_1760__entry__ |-> (assign_stmt_1750_to_assign_stmt_1760)
      assign_stmt_1750_to_assign_stmt_1760__exit__ <-| (assign_stmt_1750_to_assign_stmt_1760)
      ::[assign_stmt_1767] 
      {
        // 		iNsTr_17 := (speed_refx_x1 > iNsTr_8)
        //  file prog.aa, line 688
        // Source expression
        // (speed_refx_x1 > iNsTr_8)
        $T[SGT_f32_u1_1766_sample_start_] 
        $T[SGT_f32_u1_1766_sample_completed_] 
        $T[SGT_f32_u1_1766_update_start_] 
        $T[SGT_f32_u1_1766_update_completed_] 
        // speed_refx_x1
        $T[R_speed_refx_x1_1764_sample_start_] 
        $T[R_speed_refx_x1_1764_sample_completed_] 
        $T[R_speed_refx_x1_1764_update_start_] 
        $T[R_speed_refx_x1_1764_update_completed_] 
        // implicit reference
        R_speed_refx_x1_1764_sample_start_ <-& ($entry)
        R_speed_refx_x1_1764_sample_completed_ <-& (R_speed_refx_x1_1764_sample_start_)
        R_speed_refx_x1_1764_update_start_ <-& (R_speed_refx_x1_1764_sample_completed_)
        R_speed_refx_x1_1764_update_completed_ <-& (R_speed_refx_x1_1764_update_start_)
        // iNsTr_8
        $T[R_iNsTr_8_1765_sample_start_] 
        $T[R_iNsTr_8_1765_sample_completed_] 
        $T[R_iNsTr_8_1765_update_start_] 
        $T[R_iNsTr_8_1765_update_completed_] 
        // implicit reference
        R_iNsTr_8_1765_sample_start_ <-& ($entry)
        R_iNsTr_8_1765_sample_completed_ <-& (R_iNsTr_8_1765_sample_start_)
        R_iNsTr_8_1765_update_start_ <-& (R_iNsTr_8_1765_sample_completed_)
        R_iNsTr_8_1765_update_completed_ <-& (R_iNsTr_8_1765_update_start_)
        SGT_f32_u1_1766_sample_start_ <-& (R_speed_refx_x1_1764_update_completed_)
        SGT_f32_u1_1766_sample_start_ <-& (R_iNsTr_8_1765_update_completed_)
        ;;[SGT_f32_u1_1766_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f32_u1_1766_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f32_u1_1766_sample_start_ &-> (SGT_f32_u1_1766_Sample)
        SGT_f32_u1_1766_sample_completed_ <-& (SGT_f32_u1_1766_Sample)
        SGT_f32_u1_1766_sample_completed_ &-> ($null)
        SGT_f32_u1_1766_update_start_ &-> (SGT_f32_u1_1766_Update)
        SGT_f32_u1_1766_update_completed_ <-& (SGT_f32_u1_1766_Update)
        // Target expression
        // (as target) iNsTr_17
        // iNsTr_17
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1767__entry__ |-> (assign_stmt_1767)
      assign_stmt_1767__exit__ <-| (assign_stmt_1767)
      // if-statement  
      //  file prog.aa, line 689
      ;;[if_stmt_1768_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1768__entry__ |-> (if_stmt_1768_dead_link)
      if_stmt_1768__exit__ <-| (if_stmt_1768_dead_link)
      ;;[if_stmt_1768_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1768__entry__ |-> (if_stmt_1768_eval_test)
      $P [R_iNsTr_17_1769_place]
      R_iNsTr_17_1769_place <-| (if_stmt_1768_eval_test)
      ;;[if_stmt_1768_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1768_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_17_1769_place |-> (if_stmt_1768_if_link if_stmt_1768_else_link)
      $P [bb_3_bb_4]
      bb_3_bb_4 <-| (if_stmt_1768_if_link)
      $P [bb_3_bb_5]
      bb_3_bb_5 <-| (if_stmt_1768_else_link)
      ::[assign_stmt_1778_to_assign_stmt_1788] 
      {
        // 		iNsTr_28 := ($cast ($float<11,52>) speed_refx_x1 )
        //  file prog.aa, line 693
        // Source expression
        // ($cast ($float<11,52>) speed_refx_x1 )
        $T[type_cast_1777_sample_start_] 
        $T[type_cast_1777_sample_completed_] 
        $T[type_cast_1777_update_start_] 
        $T[type_cast_1777_update_completed_] 
        // speed_refx_x1
        $T[R_speed_refx_x1_1776_sample_start_] 
        $T[R_speed_refx_x1_1776_sample_completed_] 
        $T[R_speed_refx_x1_1776_update_start_] 
        $T[R_speed_refx_x1_1776_update_completed_] 
        // implicit reference
        R_speed_refx_x1_1776_sample_start_ <-& ($entry)
        R_speed_refx_x1_1776_sample_completed_ <-& (R_speed_refx_x1_1776_sample_start_)
        R_speed_refx_x1_1776_update_start_ <-& (R_speed_refx_x1_1776_sample_completed_)
        R_speed_refx_x1_1776_update_completed_ <-& (R_speed_refx_x1_1776_update_start_)
        type_cast_1777_sample_start_ <-& (R_speed_refx_x1_1776_update_completed_)
        ;;[type_cast_1777_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1777_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1777_sample_start_ &-> (type_cast_1777_Sample)
        type_cast_1777_sample_completed_ <-& (type_cast_1777_Sample)
        type_cast_1777_sample_completed_ &-> ($null)
        type_cast_1777_update_start_ &-> (type_cast_1777_Update)
        type_cast_1777_update_completed_ <-& (type_cast_1777_Update)
        // Target expression
        // (as target) iNsTr_28
        // iNsTr_28
        // implicit reference
        // 		iNsTr_29 := (iNsTr_28 + ($bitcast ($float<11,52>) _f-5.000000e-02 ))
        //  file prog.aa, line 694
        // Source expression
        // (iNsTr_28 + ($bitcast ($float<11,52>) _f-5.000000e-02 ))
        $T[ADD_f64_f64_1783_sample_start_] 
        $T[ADD_f64_f64_1783_sample_completed_] 
        $T[ADD_f64_f64_1783_update_start_] 
        $T[ADD_f64_f64_1783_update_completed_] 
        // iNsTr_28
        $T[R_iNsTr_28_1780_sample_start_] 
        $T[R_iNsTr_28_1780_sample_completed_] 
        $T[R_iNsTr_28_1780_update_start_] 
        $T[R_iNsTr_28_1780_update_completed_] 
        // implicit reference
        R_iNsTr_28_1780_sample_start_ <-& (type_cast_1777_update_completed_)
        R_iNsTr_28_1780_sample_completed_ <-& (R_iNsTr_28_1780_sample_start_)
        R_iNsTr_28_1780_update_start_ <-& (R_iNsTr_28_1780_sample_completed_)
        R_iNsTr_28_1780_update_completed_ <-& (R_iNsTr_28_1780_update_start_)
        ADD_f64_f64_1783_sample_start_ <-& (R_iNsTr_28_1780_update_completed_)
        ;;[ADD_f64_f64_1783_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f64_f64_1783_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f64_f64_1783_sample_start_ &-> (ADD_f64_f64_1783_Sample)
        ADD_f64_f64_1783_sample_completed_ <-& (ADD_f64_f64_1783_Sample)
        ADD_f64_f64_1783_sample_completed_ &-> ($null)
        ADD_f64_f64_1783_update_start_ &-> (ADD_f64_f64_1783_Update)
        ADD_f64_f64_1783_update_completed_ <-& (ADD_f64_f64_1783_Update)
        // Target expression
        // (as target) iNsTr_29
        // iNsTr_29
        // implicit reference
        // 		iNsTr_30 := ($cast ($float<8,23>) iNsTr_29 )
        //  file prog.aa, line 695
        // Source expression
        // ($cast ($float<8,23>) iNsTr_29 )
        $T[type_cast_1787_sample_start_] 
        $T[type_cast_1787_sample_completed_] 
        $T[type_cast_1787_update_start_] 
        $T[type_cast_1787_update_completed_] 
        // iNsTr_29
        $T[R_iNsTr_29_1786_sample_start_] 
        $T[R_iNsTr_29_1786_sample_completed_] 
        $T[R_iNsTr_29_1786_update_start_] 
        $T[R_iNsTr_29_1786_update_completed_] 
        // implicit reference
        R_iNsTr_29_1786_sample_start_ <-& (ADD_f64_f64_1783_update_completed_)
        R_iNsTr_29_1786_sample_completed_ <-& (R_iNsTr_29_1786_sample_start_)
        R_iNsTr_29_1786_update_start_ <-& (R_iNsTr_29_1786_sample_completed_)
        R_iNsTr_29_1786_update_completed_ <-& (R_iNsTr_29_1786_update_start_)
        type_cast_1787_sample_start_ <-& (R_iNsTr_29_1786_update_completed_)
        ;;[type_cast_1787_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1787_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1787_sample_start_ &-> (type_cast_1787_Sample)
        type_cast_1787_sample_completed_ <-& (type_cast_1787_Sample)
        type_cast_1787_sample_completed_ &-> ($null)
        type_cast_1787_update_start_ &-> (type_cast_1787_Update)
        type_cast_1787_update_completed_ <-& (type_cast_1787_Update)
        // Target expression
        // (as target) iNsTr_30
        // iNsTr_30
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1778_to_assign_stmt_1788__entry__ |-> (assign_stmt_1778_to_assign_stmt_1788)
      assign_stmt_1778_to_assign_stmt_1788__exit__ <-| (assign_stmt_1778_to_assign_stmt_1788)
      ::[assign_stmt_1805_to_assign_stmt_1841] 
      {
        // 		iNsTr_19 := (iNsTr_6 * ($bitcast ($float<8,23>) _f7.000000e-01 ))
        //  file prog.aa, line 701
        // Source expression
        // (iNsTr_6 * ($bitcast ($float<8,23>) _f7.000000e-01 ))
        $T[MUL_f32_f32_1804_sample_start_] 
        $T[MUL_f32_f32_1804_sample_completed_] 
        $T[MUL_f32_f32_1804_update_start_] 
        $T[MUL_f32_f32_1804_update_completed_] 
        // iNsTr_6
        $T[R_iNsTr_6_1801_sample_start_] 
        $T[R_iNsTr_6_1801_sample_completed_] 
        $T[R_iNsTr_6_1801_update_start_] 
        $T[R_iNsTr_6_1801_update_completed_] 
        // implicit reference
        R_iNsTr_6_1801_sample_start_ <-& ($entry)
        R_iNsTr_6_1801_sample_completed_ <-& (R_iNsTr_6_1801_sample_start_)
        R_iNsTr_6_1801_update_start_ <-& (R_iNsTr_6_1801_sample_completed_)
        R_iNsTr_6_1801_update_completed_ <-& (R_iNsTr_6_1801_update_start_)
        MUL_f32_f32_1804_sample_start_ <-& (R_iNsTr_6_1801_update_completed_)
        ;;[MUL_f32_f32_1804_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1804_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1804_sample_start_ &-> (MUL_f32_f32_1804_Sample)
        MUL_f32_f32_1804_sample_completed_ <-& (MUL_f32_f32_1804_Sample)
        MUL_f32_f32_1804_sample_completed_ &-> ($null)
        MUL_f32_f32_1804_update_start_ &-> (MUL_f32_f32_1804_Update)
        MUL_f32_f32_1804_update_completed_ <-& (MUL_f32_f32_1804_Update)
        // Target expression
        // (as target) iNsTr_19
        // iNsTr_19
        // implicit reference
        // 		iNsTr_20 := (iNsTr_19 + spd_lpf_prevx_x0)
        //  file prog.aa, line 702
        // Source expression
        // (iNsTr_19 + spd_lpf_prevx_x0)
        $T[ADD_f32_f32_1809_sample_start_] 
        $T[ADD_f32_f32_1809_sample_completed_] 
        $T[ADD_f32_f32_1809_update_start_] 
        $T[ADD_f32_f32_1809_update_completed_] 
        // iNsTr_19
        $T[R_iNsTr_19_1807_sample_start_] 
        $T[R_iNsTr_19_1807_sample_completed_] 
        $T[R_iNsTr_19_1807_update_start_] 
        $T[R_iNsTr_19_1807_update_completed_] 
        // implicit reference
        R_iNsTr_19_1807_sample_start_ <-& (MUL_f32_f32_1804_update_completed_)
        R_iNsTr_19_1807_sample_completed_ <-& (R_iNsTr_19_1807_sample_start_)
        R_iNsTr_19_1807_update_start_ <-& (R_iNsTr_19_1807_sample_completed_)
        R_iNsTr_19_1807_update_completed_ <-& (R_iNsTr_19_1807_update_start_)
        // spd_lpf_prevx_x0
        $T[R_spd_lpf_prevx_x0_1808_sample_start_] 
        $T[R_spd_lpf_prevx_x0_1808_sample_completed_] 
        $T[R_spd_lpf_prevx_x0_1808_update_start_] 
        $T[R_spd_lpf_prevx_x0_1808_update_completed_] 
        // implicit reference
        R_spd_lpf_prevx_x0_1808_sample_start_ <-& ($entry)
        R_spd_lpf_prevx_x0_1808_sample_completed_ <-& (R_spd_lpf_prevx_x0_1808_sample_start_)
        R_spd_lpf_prevx_x0_1808_update_start_ <-& (R_spd_lpf_prevx_x0_1808_sample_completed_)
        R_spd_lpf_prevx_x0_1808_update_completed_ <-& (R_spd_lpf_prevx_x0_1808_update_start_)
        ADD_f32_f32_1809_sample_start_ <-& (R_iNsTr_19_1807_update_completed_)
        ADD_f32_f32_1809_sample_start_ <-& (R_spd_lpf_prevx_x0_1808_update_completed_)
        ;;[ADD_f32_f32_1809_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1809_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1809_sample_start_ &-> (ADD_f32_f32_1809_Sample)
        ADD_f32_f32_1809_sample_completed_ <-& (ADD_f32_f32_1809_Sample)
        ADD_f32_f32_1809_sample_completed_ &-> ($null)
        ADD_f32_f32_1809_update_start_ &-> (ADD_f32_f32_1809_Update)
        ADD_f32_f32_1809_update_completed_ <-& (ADD_f32_f32_1809_Update)
        // Target expression
        // (as target) iNsTr_20
        // iNsTr_20
        // implicit reference
        // 		iNsTr_21 := (speed_refx_x0 - iNsTr_20)
        //  file prog.aa, line 703
        // Source expression
        // (speed_refx_x0 - iNsTr_20)
        $T[SUB_f32_f32_1814_sample_start_] 
        $T[SUB_f32_f32_1814_sample_completed_] 
        $T[SUB_f32_f32_1814_update_start_] 
        $T[SUB_f32_f32_1814_update_completed_] 
        // speed_refx_x0
        $T[R_speed_refx_x0_1812_sample_start_] 
        $T[R_speed_refx_x0_1812_sample_completed_] 
        $T[R_speed_refx_x0_1812_update_start_] 
        $T[R_speed_refx_x0_1812_update_completed_] 
        // implicit reference
        R_speed_refx_x0_1812_sample_start_ <-& ($entry)
        R_speed_refx_x0_1812_sample_completed_ <-& (R_speed_refx_x0_1812_sample_start_)
        R_speed_refx_x0_1812_update_start_ <-& (R_speed_refx_x0_1812_sample_completed_)
        R_speed_refx_x0_1812_update_completed_ <-& (R_speed_refx_x0_1812_update_start_)
        // iNsTr_20
        $T[R_iNsTr_20_1813_sample_start_] 
        $T[R_iNsTr_20_1813_sample_completed_] 
        $T[R_iNsTr_20_1813_update_start_] 
        $T[R_iNsTr_20_1813_update_completed_] 
        // implicit reference
        R_iNsTr_20_1813_sample_start_ <-& (ADD_f32_f32_1809_update_completed_)
        R_iNsTr_20_1813_sample_completed_ <-& (R_iNsTr_20_1813_sample_start_)
        R_iNsTr_20_1813_update_start_ <-& (R_iNsTr_20_1813_sample_completed_)
        R_iNsTr_20_1813_update_completed_ <-& (R_iNsTr_20_1813_update_start_)
        SUB_f32_f32_1814_sample_start_ <-& (R_speed_refx_x0_1812_update_completed_)
        SUB_f32_f32_1814_sample_start_ <-& (R_iNsTr_20_1813_update_completed_)
        ;;[SUB_f32_f32_1814_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f32_f32_1814_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f32_f32_1814_sample_start_ &-> (SUB_f32_f32_1814_Sample)
        SUB_f32_f32_1814_sample_completed_ <-& (SUB_f32_f32_1814_Sample)
        SUB_f32_f32_1814_sample_completed_ &-> ($null)
        SUB_f32_f32_1814_update_start_ &-> (SUB_f32_f32_1814_Update)
        SUB_f32_f32_1814_update_completed_ <-& (SUB_f32_f32_1814_Update)
        // Target expression
        // (as target) iNsTr_21
        // iNsTr_21
        // implicit reference
        // 		iNsTr_22 := (iNsTr_21 + speed_err_prevx_x0)
        //  file prog.aa, line 704
        // Source expression
        // (iNsTr_21 + speed_err_prevx_x0)
        $T[ADD_f32_f32_1819_sample_start_] 
        $T[ADD_f32_f32_1819_sample_completed_] 
        $T[ADD_f32_f32_1819_update_start_] 
        $T[ADD_f32_f32_1819_update_completed_] 
        // iNsTr_21
        $T[R_iNsTr_21_1817_sample_start_] 
        $T[R_iNsTr_21_1817_sample_completed_] 
        $T[R_iNsTr_21_1817_update_start_] 
        $T[R_iNsTr_21_1817_update_completed_] 
        // implicit reference
        R_iNsTr_21_1817_sample_start_ <-& (SUB_f32_f32_1814_update_completed_)
        R_iNsTr_21_1817_sample_completed_ <-& (R_iNsTr_21_1817_sample_start_)
        R_iNsTr_21_1817_update_start_ <-& (R_iNsTr_21_1817_sample_completed_)
        R_iNsTr_21_1817_update_completed_ <-& (R_iNsTr_21_1817_update_start_)
        // speed_err_prevx_x0
        $T[R_speed_err_prevx_x0_1818_sample_start_] 
        $T[R_speed_err_prevx_x0_1818_sample_completed_] 
        $T[R_speed_err_prevx_x0_1818_update_start_] 
        $T[R_speed_err_prevx_x0_1818_update_completed_] 
        // implicit reference
        R_speed_err_prevx_x0_1818_sample_start_ <-& ($entry)
        R_speed_err_prevx_x0_1818_sample_completed_ <-& (R_speed_err_prevx_x0_1818_sample_start_)
        R_speed_err_prevx_x0_1818_update_start_ <-& (R_speed_err_prevx_x0_1818_sample_completed_)
        R_speed_err_prevx_x0_1818_update_completed_ <-& (R_speed_err_prevx_x0_1818_update_start_)
        ADD_f32_f32_1819_sample_start_ <-& (R_iNsTr_21_1817_update_completed_)
        ADD_f32_f32_1819_sample_start_ <-& (R_speed_err_prevx_x0_1818_update_completed_)
        ;;[ADD_f32_f32_1819_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1819_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1819_sample_start_ &-> (ADD_f32_f32_1819_Sample)
        ADD_f32_f32_1819_sample_completed_ <-& (ADD_f32_f32_1819_Sample)
        ADD_f32_f32_1819_sample_completed_ &-> ($null)
        ADD_f32_f32_1819_update_start_ &-> (ADD_f32_f32_1819_Update)
        ADD_f32_f32_1819_update_completed_ <-& (ADD_f32_f32_1819_Update)
        // Target expression
        // (as target) iNsTr_22
        // iNsTr_22
        // implicit reference
        // 		iNsTr_23 := (iNsTr_22 * ($bitcast ($float<8,23>) _f2.500000e-04 ))
        //  file prog.aa, line 705
        // Source expression
        // (iNsTr_22 * ($bitcast ($float<8,23>) _f2.500000e-04 ))
        $T[MUL_f32_f32_1825_sample_start_] 
        $T[MUL_f32_f32_1825_sample_completed_] 
        $T[MUL_f32_f32_1825_update_start_] 
        $T[MUL_f32_f32_1825_update_completed_] 
        // iNsTr_22
        $T[R_iNsTr_22_1822_sample_start_] 
        $T[R_iNsTr_22_1822_sample_completed_] 
        $T[R_iNsTr_22_1822_update_start_] 
        $T[R_iNsTr_22_1822_update_completed_] 
        // implicit reference
        R_iNsTr_22_1822_sample_start_ <-& (ADD_f32_f32_1819_update_completed_)
        R_iNsTr_22_1822_sample_completed_ <-& (R_iNsTr_22_1822_sample_start_)
        R_iNsTr_22_1822_update_start_ <-& (R_iNsTr_22_1822_sample_completed_)
        R_iNsTr_22_1822_update_completed_ <-& (R_iNsTr_22_1822_update_start_)
        MUL_f32_f32_1825_sample_start_ <-& (R_iNsTr_22_1822_update_completed_)
        ;;[MUL_f32_f32_1825_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1825_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1825_sample_start_ &-> (MUL_f32_f32_1825_Sample)
        MUL_f32_f32_1825_sample_completed_ <-& (MUL_f32_f32_1825_Sample)
        MUL_f32_f32_1825_sample_completed_ &-> ($null)
        MUL_f32_f32_1825_update_start_ &-> (MUL_f32_f32_1825_Update)
        MUL_f32_f32_1825_update_completed_ <-& (MUL_f32_f32_1825_Update)
        // Target expression
        // (as target) iNsTr_23
        // iNsTr_23
        // implicit reference
        // 		iNsTr_24 := (iNsTr_23 + int_speed_err_prevx_x0)
        //  file prog.aa, line 706
        // Source expression
        // (iNsTr_23 + int_speed_err_prevx_x0)
        $T[ADD_f32_f32_1830_sample_start_] 
        $T[ADD_f32_f32_1830_sample_completed_] 
        $T[ADD_f32_f32_1830_update_start_] 
        $T[ADD_f32_f32_1830_update_completed_] 
        // iNsTr_23
        $T[R_iNsTr_23_1828_sample_start_] 
        $T[R_iNsTr_23_1828_sample_completed_] 
        $T[R_iNsTr_23_1828_update_start_] 
        $T[R_iNsTr_23_1828_update_completed_] 
        // implicit reference
        R_iNsTr_23_1828_sample_start_ <-& (MUL_f32_f32_1825_update_completed_)
        R_iNsTr_23_1828_sample_completed_ <-& (R_iNsTr_23_1828_sample_start_)
        R_iNsTr_23_1828_update_start_ <-& (R_iNsTr_23_1828_sample_completed_)
        R_iNsTr_23_1828_update_completed_ <-& (R_iNsTr_23_1828_update_start_)
        // int_speed_err_prevx_x0
        $T[R_int_speed_err_prevx_x0_1829_sample_start_] 
        $T[R_int_speed_err_prevx_x0_1829_sample_completed_] 
        $T[R_int_speed_err_prevx_x0_1829_update_start_] 
        $T[R_int_speed_err_prevx_x0_1829_update_completed_] 
        // implicit reference
        R_int_speed_err_prevx_x0_1829_sample_start_ <-& ($entry)
        R_int_speed_err_prevx_x0_1829_sample_completed_ <-& (R_int_speed_err_prevx_x0_1829_sample_start_)
        R_int_speed_err_prevx_x0_1829_update_start_ <-& (R_int_speed_err_prevx_x0_1829_sample_completed_)
        R_int_speed_err_prevx_x0_1829_update_completed_ <-& (R_int_speed_err_prevx_x0_1829_update_start_)
        ADD_f32_f32_1830_sample_start_ <-& (R_iNsTr_23_1828_update_completed_)
        ADD_f32_f32_1830_sample_start_ <-& (R_int_speed_err_prevx_x0_1829_update_completed_)
        ;;[ADD_f32_f32_1830_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1830_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1830_sample_start_ &-> (ADD_f32_f32_1830_Sample)
        ADD_f32_f32_1830_sample_completed_ <-& (ADD_f32_f32_1830_Sample)
        ADD_f32_f32_1830_sample_completed_ &-> ($null)
        ADD_f32_f32_1830_update_start_ &-> (ADD_f32_f32_1830_Update)
        ADD_f32_f32_1830_update_completed_ <-& (ADD_f32_f32_1830_Update)
        // Target expression
        // (as target) iNsTr_24
        // iNsTr_24
        // implicit reference
        // 		iNsTr_25 := ($cast ($float<11,52>) iNsTr_24 )
        //  file prog.aa, line 707
        // Source expression
        // ($cast ($float<11,52>) iNsTr_24 )
        $T[type_cast_1834_sample_start_] 
        $T[type_cast_1834_sample_completed_] 
        $T[type_cast_1834_update_start_] 
        $T[type_cast_1834_update_completed_] 
        // iNsTr_24
        $T[R_iNsTr_24_1833_sample_start_] 
        $T[R_iNsTr_24_1833_sample_completed_] 
        $T[R_iNsTr_24_1833_update_start_] 
        $T[R_iNsTr_24_1833_update_completed_] 
        // implicit reference
        R_iNsTr_24_1833_sample_start_ <-& (ADD_f32_f32_1830_update_completed_)
        R_iNsTr_24_1833_sample_completed_ <-& (R_iNsTr_24_1833_sample_start_)
        R_iNsTr_24_1833_update_start_ <-& (R_iNsTr_24_1833_sample_completed_)
        R_iNsTr_24_1833_update_completed_ <-& (R_iNsTr_24_1833_update_start_)
        type_cast_1834_sample_start_ <-& (R_iNsTr_24_1833_update_completed_)
        ;;[type_cast_1834_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1834_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1834_sample_start_ &-> (type_cast_1834_Sample)
        type_cast_1834_sample_completed_ <-& (type_cast_1834_Sample)
        type_cast_1834_sample_completed_ &-> ($null)
        type_cast_1834_update_start_ &-> (type_cast_1834_Update)
        type_cast_1834_update_completed_ <-& (type_cast_1834_Update)
        // Target expression
        // (as target) iNsTr_25
        // iNsTr_25
        // implicit reference
        // 		iNsTr_26 := (iNsTr_25 < ($bitcast ($float<11,52>) _f-1.000000e+01 ))
        //  file prog.aa, line 709
        // Source expression
        // (iNsTr_25 < ($bitcast ($float<11,52>) _f-1.000000e+01 ))
        $T[SLT_f64_u1_1840_sample_start_] 
        $T[SLT_f64_u1_1840_sample_completed_] 
        $T[SLT_f64_u1_1840_update_start_] 
        $T[SLT_f64_u1_1840_update_completed_] 
        // iNsTr_25
        $T[R_iNsTr_25_1837_sample_start_] 
        $T[R_iNsTr_25_1837_sample_completed_] 
        $T[R_iNsTr_25_1837_update_start_] 
        $T[R_iNsTr_25_1837_update_completed_] 
        // implicit reference
        R_iNsTr_25_1837_sample_start_ <-& (type_cast_1834_update_completed_)
        R_iNsTr_25_1837_sample_completed_ <-& (R_iNsTr_25_1837_sample_start_)
        R_iNsTr_25_1837_update_start_ <-& (R_iNsTr_25_1837_sample_completed_)
        R_iNsTr_25_1837_update_completed_ <-& (R_iNsTr_25_1837_update_start_)
        SLT_f64_u1_1840_sample_start_ <-& (R_iNsTr_25_1837_update_completed_)
        ;;[SLT_f64_u1_1840_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f64_u1_1840_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f64_u1_1840_sample_start_ &-> (SLT_f64_u1_1840_Sample)
        SLT_f64_u1_1840_sample_completed_ <-& (SLT_f64_u1_1840_Sample)
        SLT_f64_u1_1840_sample_completed_ &-> ($null)
        SLT_f64_u1_1840_update_start_ &-> (SLT_f64_u1_1840_Update)
        SLT_f64_u1_1840_update_completed_ <-& (SLT_f64_u1_1840_Update)
        // Target expression
        // (as target) iNsTr_26
        // iNsTr_26
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1805_to_assign_stmt_1841__entry__ |-> (assign_stmt_1805_to_assign_stmt_1841)
      assign_stmt_1805_to_assign_stmt_1841__exit__ <-| (assign_stmt_1805_to_assign_stmt_1841)
      // if-statement  
      //  file prog.aa, line 710
      ;;[if_stmt_1842_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1842__entry__ |-> (if_stmt_1842_dead_link)
      if_stmt_1842__exit__ <-| (if_stmt_1842_dead_link)
      ;;[if_stmt_1842_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1842__entry__ |-> (if_stmt_1842_eval_test)
      $P [R_iNsTr_26_1843_place]
      R_iNsTr_26_1843_place <-| (if_stmt_1842_eval_test)
      ;;[if_stmt_1842_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1842_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_26_1843_place |-> (if_stmt_1842_if_link if_stmt_1842_else_link)
      $P [bb_5_bb_8]
      bb_5_bb_8 <-| (if_stmt_1842_if_link)
      $P [bb_5_bb_6]
      bb_5_bb_6 <-| (if_stmt_1842_else_link)
      ::[assign_stmt_1854] 
      {
        // 		iNsTr_36 := (iNsTr_25 > ($bitcast ($float<11,52>) _f1.000000e+01 ))
        //  file prog.aa, line 715
        // Source expression
        // (iNsTr_25 > ($bitcast ($float<11,52>) _f1.000000e+01 ))
        $T[SGT_f64_u1_1853_sample_start_] 
        $T[SGT_f64_u1_1853_sample_completed_] 
        $T[SGT_f64_u1_1853_update_start_] 
        $T[SGT_f64_u1_1853_update_completed_] 
        // iNsTr_25
        $T[R_iNsTr_25_1850_sample_start_] 
        $T[R_iNsTr_25_1850_sample_completed_] 
        $T[R_iNsTr_25_1850_update_start_] 
        $T[R_iNsTr_25_1850_update_completed_] 
        // implicit reference
        R_iNsTr_25_1850_sample_start_ <-& ($entry)
        R_iNsTr_25_1850_sample_completed_ <-& (R_iNsTr_25_1850_sample_start_)
        R_iNsTr_25_1850_update_start_ <-& (R_iNsTr_25_1850_sample_completed_)
        R_iNsTr_25_1850_update_completed_ <-& (R_iNsTr_25_1850_update_start_)
        SGT_f64_u1_1853_sample_start_ <-& (R_iNsTr_25_1850_update_completed_)
        ;;[SGT_f64_u1_1853_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_1853_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_1853_sample_start_ &-> (SGT_f64_u1_1853_Sample)
        SGT_f64_u1_1853_sample_completed_ <-& (SGT_f64_u1_1853_Sample)
        SGT_f64_u1_1853_sample_completed_ &-> ($null)
        SGT_f64_u1_1853_update_start_ &-> (SGT_f64_u1_1853_Update)
        SGT_f64_u1_1853_update_completed_ <-& (SGT_f64_u1_1853_Update)
        // Target expression
        // (as target) iNsTr_36
        // iNsTr_36
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1854__entry__ |-> (assign_stmt_1854)
      assign_stmt_1854__exit__ <-| (assign_stmt_1854)
      // if-statement  
      //  file prog.aa, line 716
      ;;[if_stmt_1855_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1855__entry__ |-> (if_stmt_1855_dead_link)
      if_stmt_1855__exit__ <-| (if_stmt_1855_dead_link)
      ;;[if_stmt_1855_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1855__entry__ |-> (if_stmt_1855_eval_test)
      $P [R_iNsTr_36_1856_place]
      R_iNsTr_36_1856_place <-| (if_stmt_1855_eval_test)
      ;;[if_stmt_1855_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1855_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_36_1856_place |-> (if_stmt_1855_if_link if_stmt_1855_else_link)
      $P [bb_6_bb_8]
      bb_6_bb_8 <-| (if_stmt_1855_if_link)
      $P [bb_6_bb_7]
      bb_6_bb_7 <-| (if_stmt_1855_else_link)
      ::[assign_stmt_1880_to_assign_stmt_1891] 
      {
        // 		iNsTr_32 := (iNsTr_21 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
        //  file prog.aa, line 725
        // Source expression
        // (iNsTr_21 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
        $T[MUL_f32_f32_1879_sample_start_] 
        $T[MUL_f32_f32_1879_sample_completed_] 
        $T[MUL_f32_f32_1879_update_start_] 
        $T[MUL_f32_f32_1879_update_completed_] 
        // iNsTr_21
        $T[R_iNsTr_21_1876_sample_start_] 
        $T[R_iNsTr_21_1876_sample_completed_] 
        $T[R_iNsTr_21_1876_update_start_] 
        $T[R_iNsTr_21_1876_update_completed_] 
        // implicit reference
        R_iNsTr_21_1876_sample_start_ <-& ($entry)
        R_iNsTr_21_1876_sample_completed_ <-& (R_iNsTr_21_1876_sample_start_)
        R_iNsTr_21_1876_update_start_ <-& (R_iNsTr_21_1876_sample_completed_)
        R_iNsTr_21_1876_update_completed_ <-& (R_iNsTr_21_1876_update_start_)
        MUL_f32_f32_1879_sample_start_ <-& (R_iNsTr_21_1876_update_completed_)
        ;;[MUL_f32_f32_1879_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1879_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1879_sample_start_ &-> (MUL_f32_f32_1879_Sample)
        MUL_f32_f32_1879_sample_completed_ <-& (MUL_f32_f32_1879_Sample)
        MUL_f32_f32_1879_sample_completed_ &-> ($null)
        MUL_f32_f32_1879_update_start_ &-> (MUL_f32_f32_1879_Update)
        MUL_f32_f32_1879_update_completed_ <-& (MUL_f32_f32_1879_Update)
        // Target expression
        // (as target) iNsTr_32
        // iNsTr_32
        // implicit reference
        // 		iNsTr_33 := (int_speed_errx_x0 + iNsTr_32)
        //  file prog.aa, line 726
        // Source expression
        // (int_speed_errx_x0 + iNsTr_32)
        $T[ADD_f32_f32_1884_sample_start_] 
        $T[ADD_f32_f32_1884_sample_completed_] 
        $T[ADD_f32_f32_1884_update_start_] 
        $T[ADD_f32_f32_1884_update_completed_] 
        // int_speed_errx_x0
        $T[R_int_speed_errx_x0_1882_sample_start_] 
        $T[R_int_speed_errx_x0_1882_sample_completed_] 
        $T[R_int_speed_errx_x0_1882_update_start_] 
        $T[R_int_speed_errx_x0_1882_update_completed_] 
        // implicit reference
        R_int_speed_errx_x0_1882_sample_start_ <-& ($entry)
        R_int_speed_errx_x0_1882_sample_completed_ <-& (R_int_speed_errx_x0_1882_sample_start_)
        R_int_speed_errx_x0_1882_update_start_ <-& (R_int_speed_errx_x0_1882_sample_completed_)
        R_int_speed_errx_x0_1882_update_completed_ <-& (R_int_speed_errx_x0_1882_update_start_)
        // iNsTr_32
        $T[R_iNsTr_32_1883_sample_start_] 
        $T[R_iNsTr_32_1883_sample_completed_] 
        $T[R_iNsTr_32_1883_update_start_] 
        $T[R_iNsTr_32_1883_update_completed_] 
        // implicit reference
        R_iNsTr_32_1883_sample_start_ <-& (MUL_f32_f32_1879_update_completed_)
        R_iNsTr_32_1883_sample_completed_ <-& (R_iNsTr_32_1883_sample_start_)
        R_iNsTr_32_1883_update_start_ <-& (R_iNsTr_32_1883_sample_completed_)
        R_iNsTr_32_1883_update_completed_ <-& (R_iNsTr_32_1883_update_start_)
        ADD_f32_f32_1884_sample_start_ <-& (R_int_speed_errx_x0_1882_update_completed_)
        ADD_f32_f32_1884_sample_start_ <-& (R_iNsTr_32_1883_update_completed_)
        ;;[ADD_f32_f32_1884_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1884_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1884_sample_start_ &-> (ADD_f32_f32_1884_Sample)
        ADD_f32_f32_1884_sample_completed_ <-& (ADD_f32_f32_1884_Sample)
        ADD_f32_f32_1884_sample_completed_ &-> ($null)
        ADD_f32_f32_1884_update_start_ &-> (ADD_f32_f32_1884_Update)
        ADD_f32_f32_1884_update_completed_ <-& (ADD_f32_f32_1884_Update)
        // Target expression
        // (as target) iNsTr_33
        // iNsTr_33
        // implicit reference
        // 		iNsTr_34 := (iNsTr_33 < ($bitcast ($float<8,23>) _f-2.000000e+01 ))
        //  file prog.aa, line 728
        // Source expression
        // (iNsTr_33 < ($bitcast ($float<8,23>) _f-2.000000e+01 ))
        $T[SLT_f32_u1_1890_sample_start_] 
        $T[SLT_f32_u1_1890_sample_completed_] 
        $T[SLT_f32_u1_1890_update_start_] 
        $T[SLT_f32_u1_1890_update_completed_] 
        // iNsTr_33
        $T[R_iNsTr_33_1887_sample_start_] 
        $T[R_iNsTr_33_1887_sample_completed_] 
        $T[R_iNsTr_33_1887_update_start_] 
        $T[R_iNsTr_33_1887_update_completed_] 
        // implicit reference
        R_iNsTr_33_1887_sample_start_ <-& (ADD_f32_f32_1884_update_completed_)
        R_iNsTr_33_1887_sample_completed_ <-& (R_iNsTr_33_1887_sample_start_)
        R_iNsTr_33_1887_update_start_ <-& (R_iNsTr_33_1887_sample_completed_)
        R_iNsTr_33_1887_update_completed_ <-& (R_iNsTr_33_1887_update_start_)
        SLT_f32_u1_1890_sample_start_ <-& (R_iNsTr_33_1887_update_completed_)
        ;;[SLT_f32_u1_1890_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_1890_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_1890_sample_start_ &-> (SLT_f32_u1_1890_Sample)
        SLT_f32_u1_1890_sample_completed_ <-& (SLT_f32_u1_1890_Sample)
        SLT_f32_u1_1890_sample_completed_ &-> ($null)
        SLT_f32_u1_1890_update_start_ &-> (SLT_f32_u1_1890_Update)
        SLT_f32_u1_1890_update_completed_ <-& (SLT_f32_u1_1890_Update)
        // Target expression
        // (as target) iNsTr_34
        // iNsTr_34
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1880_to_assign_stmt_1891__entry__ |-> (assign_stmt_1880_to_assign_stmt_1891)
      assign_stmt_1880_to_assign_stmt_1891__exit__ <-| (assign_stmt_1880_to_assign_stmt_1891)
      // if-statement  
      //  file prog.aa, line 729
      ;;[if_stmt_1892_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1892__entry__ |-> (if_stmt_1892_dead_link)
      if_stmt_1892__exit__ <-| (if_stmt_1892_dead_link)
      ;;[if_stmt_1892_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1892__entry__ |-> (if_stmt_1892_eval_test)
      $P [R_iNsTr_34_1893_place]
      R_iNsTr_34_1893_place <-| (if_stmt_1892_eval_test)
      ;;[if_stmt_1892_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1892_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_34_1893_place |-> (if_stmt_1892_if_link if_stmt_1892_else_link)
      $P [bb_8_bb_11]
      bb_8_bb_11 <-| (if_stmt_1892_if_link)
      $P [bb_8_bb_9]
      bb_8_bb_9 <-| (if_stmt_1892_else_link)
      ::[assign_stmt_1904] 
      {
        // 		iNsTr_43 := (iNsTr_33 > ($bitcast ($float<8,23>) _f2.000000e+01 ))
        //  file prog.aa, line 734
        // Source expression
        // (iNsTr_33 > ($bitcast ($float<8,23>) _f2.000000e+01 ))
        $T[SGT_f32_u1_1903_sample_start_] 
        $T[SGT_f32_u1_1903_sample_completed_] 
        $T[SGT_f32_u1_1903_update_start_] 
        $T[SGT_f32_u1_1903_update_completed_] 
        // iNsTr_33
        $T[R_iNsTr_33_1900_sample_start_] 
        $T[R_iNsTr_33_1900_sample_completed_] 
        $T[R_iNsTr_33_1900_update_start_] 
        $T[R_iNsTr_33_1900_update_completed_] 
        // implicit reference
        R_iNsTr_33_1900_sample_start_ <-& ($entry)
        R_iNsTr_33_1900_sample_completed_ <-& (R_iNsTr_33_1900_sample_start_)
        R_iNsTr_33_1900_update_start_ <-& (R_iNsTr_33_1900_sample_completed_)
        R_iNsTr_33_1900_update_completed_ <-& (R_iNsTr_33_1900_update_start_)
        SGT_f32_u1_1903_sample_start_ <-& (R_iNsTr_33_1900_update_completed_)
        ;;[SGT_f32_u1_1903_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f32_u1_1903_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f32_u1_1903_sample_start_ &-> (SGT_f32_u1_1903_Sample)
        SGT_f32_u1_1903_sample_completed_ <-& (SGT_f32_u1_1903_Sample)
        SGT_f32_u1_1903_sample_completed_ &-> ($null)
        SGT_f32_u1_1903_update_start_ &-> (SGT_f32_u1_1903_Update)
        SGT_f32_u1_1903_update_completed_ <-& (SGT_f32_u1_1903_Update)
        // Target expression
        // (as target) iNsTr_43
        // iNsTr_43
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1904__entry__ |-> (assign_stmt_1904)
      assign_stmt_1904__exit__ <-| (assign_stmt_1904)
      // if-statement  
      //  file prog.aa, line 735
      ;;[if_stmt_1905_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1905__entry__ |-> (if_stmt_1905_dead_link)
      if_stmt_1905__exit__ <-| (if_stmt_1905_dead_link)
      ;;[if_stmt_1905_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1905__entry__ |-> (if_stmt_1905_eval_test)
      $P [R_iNsTr_43_1906_place]
      R_iNsTr_43_1906_place <-| (if_stmt_1905_eval_test)
      ;;[if_stmt_1905_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1905_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_43_1906_place |-> (if_stmt_1905_if_link if_stmt_1905_else_link)
      $P [bb_9_bb_11]
      bb_9_bb_11 <-| (if_stmt_1905_if_link)
      $P [bb_9_bb_10]
      bb_9_bb_10 <-| (if_stmt_1905_else_link)
      ::[assign_stmt_1917] 
      {
        // 		phitmp32 := (iNsTr_33 * ($bitcast ($float<8,23>) _f3.465703e-01 ))
        //  file prog.aa, line 739
        // Source expression
        // (iNsTr_33 * ($bitcast ($float<8,23>) _f3.465703e-01 ))
        $T[MUL_f32_f32_1916_sample_start_] 
        $T[MUL_f32_f32_1916_sample_completed_] 
        $T[MUL_f32_f32_1916_update_start_] 
        $T[MUL_f32_f32_1916_update_completed_] 
        // iNsTr_33
        $T[R_iNsTr_33_1913_sample_start_] 
        $T[R_iNsTr_33_1913_sample_completed_] 
        $T[R_iNsTr_33_1913_update_start_] 
        $T[R_iNsTr_33_1913_update_completed_] 
        // implicit reference
        R_iNsTr_33_1913_sample_start_ <-& ($entry)
        R_iNsTr_33_1913_sample_completed_ <-& (R_iNsTr_33_1913_sample_start_)
        R_iNsTr_33_1913_update_start_ <-& (R_iNsTr_33_1913_sample_completed_)
        R_iNsTr_33_1913_update_completed_ <-& (R_iNsTr_33_1913_update_start_)
        MUL_f32_f32_1916_sample_start_ <-& (R_iNsTr_33_1913_update_completed_)
        ;;[MUL_f32_f32_1916_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1916_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1916_sample_start_ &-> (MUL_f32_f32_1916_Sample)
        MUL_f32_f32_1916_sample_completed_ <-& (MUL_f32_f32_1916_Sample)
        MUL_f32_f32_1916_sample_completed_ &-> ($null)
        MUL_f32_f32_1916_update_start_ &-> (MUL_f32_f32_1916_Update)
        MUL_f32_f32_1916_update_completed_ <-& (MUL_f32_f32_1916_Update)
        // Target expression
        // (as target) phitmp32
        // phitmp32
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1917__entry__ |-> (assign_stmt_1917)
      assign_stmt_1917__exit__ <-| (assign_stmt_1917)
      ::[assign_stmt_1936_to_assign_stmt_1961] 
      {
        // 		iNsTr_38 := (iNsTr_2 * ($bitcast ($float<8,23>) _f3.886080e-04 ))
        //  file prog.aa, line 745
        // Source expression
        // (iNsTr_2 * ($bitcast ($float<8,23>) _f3.886080e-04 ))
        $T[MUL_f32_f32_1935_sample_start_] 
        $T[MUL_f32_f32_1935_sample_completed_] 
        $T[MUL_f32_f32_1935_update_start_] 
        $T[MUL_f32_f32_1935_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_1932_sample_start_] 
        $T[R_iNsTr_2_1932_sample_completed_] 
        $T[R_iNsTr_2_1932_update_start_] 
        $T[R_iNsTr_2_1932_update_completed_] 
        // implicit reference
        R_iNsTr_2_1932_sample_start_ <-& ($entry)
        R_iNsTr_2_1932_sample_completed_ <-& (R_iNsTr_2_1932_sample_start_)
        R_iNsTr_2_1932_update_start_ <-& (R_iNsTr_2_1932_sample_completed_)
        R_iNsTr_2_1932_update_completed_ <-& (R_iNsTr_2_1932_update_start_)
        MUL_f32_f32_1935_sample_start_ <-& (R_iNsTr_2_1932_update_completed_)
        ;;[MUL_f32_f32_1935_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1935_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1935_sample_start_ &-> (MUL_f32_f32_1935_Sample)
        MUL_f32_f32_1935_sample_completed_ <-& (MUL_f32_f32_1935_Sample)
        MUL_f32_f32_1935_sample_completed_ &-> ($null)
        MUL_f32_f32_1935_update_start_ &-> (MUL_f32_f32_1935_Update)
        MUL_f32_f32_1935_update_completed_ <-& (MUL_f32_f32_1935_Update)
        // Target expression
        // (as target) iNsTr_38
        // iNsTr_38
        // implicit reference
        // 		iNsTr_39 := (iNsTr_38 + flux_rotor_prevx_x0)
        //  file prog.aa, line 746
        // Source expression
        // (iNsTr_38 + flux_rotor_prevx_x0)
        $T[ADD_f32_f32_1940_sample_start_] 
        $T[ADD_f32_f32_1940_sample_completed_] 
        $T[ADD_f32_f32_1940_update_start_] 
        $T[ADD_f32_f32_1940_update_completed_] 
        // iNsTr_38
        $T[R_iNsTr_38_1938_sample_start_] 
        $T[R_iNsTr_38_1938_sample_completed_] 
        $T[R_iNsTr_38_1938_update_start_] 
        $T[R_iNsTr_38_1938_update_completed_] 
        // implicit reference
        R_iNsTr_38_1938_sample_start_ <-& (MUL_f32_f32_1935_update_completed_)
        R_iNsTr_38_1938_sample_completed_ <-& (R_iNsTr_38_1938_sample_start_)
        R_iNsTr_38_1938_update_start_ <-& (R_iNsTr_38_1938_sample_completed_)
        R_iNsTr_38_1938_update_completed_ <-& (R_iNsTr_38_1938_update_start_)
        // flux_rotor_prevx_x0
        $T[R_flux_rotor_prevx_x0_1939_sample_start_] 
        $T[R_flux_rotor_prevx_x0_1939_sample_completed_] 
        $T[R_flux_rotor_prevx_x0_1939_update_start_] 
        $T[R_flux_rotor_prevx_x0_1939_update_completed_] 
        // implicit reference
        R_flux_rotor_prevx_x0_1939_sample_start_ <-& ($entry)
        R_flux_rotor_prevx_x0_1939_sample_completed_ <-& (R_flux_rotor_prevx_x0_1939_sample_start_)
        R_flux_rotor_prevx_x0_1939_update_start_ <-& (R_flux_rotor_prevx_x0_1939_sample_completed_)
        R_flux_rotor_prevx_x0_1939_update_completed_ <-& (R_flux_rotor_prevx_x0_1939_update_start_)
        ADD_f32_f32_1940_sample_start_ <-& (R_iNsTr_38_1938_update_completed_)
        ADD_f32_f32_1940_sample_start_ <-& (R_flux_rotor_prevx_x0_1939_update_completed_)
        ;;[ADD_f32_f32_1940_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_1940_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_1940_sample_start_ &-> (ADD_f32_f32_1940_Sample)
        ADD_f32_f32_1940_sample_completed_ <-& (ADD_f32_f32_1940_Sample)
        ADD_f32_f32_1940_sample_completed_ &-> ($null)
        ADD_f32_f32_1940_update_start_ &-> (ADD_f32_f32_1940_Update)
        ADD_f32_f32_1940_update_completed_ <-& (ADD_f32_f32_1940_Update)
        // Target expression
        // (as target) iNsTr_39
        // iNsTr_39
        // implicit reference
        // 		iNsTr_40 := (iNsTr_4 * ($bitcast ($float<8,23>) _f7.790627e+00 ))
        //  file prog.aa, line 747
        // Source expression
        // (iNsTr_4 * ($bitcast ($float<8,23>) _f7.790627e+00 ))
        $T[MUL_f32_f32_1946_sample_start_] 
        $T[MUL_f32_f32_1946_sample_completed_] 
        $T[MUL_f32_f32_1946_update_start_] 
        $T[MUL_f32_f32_1946_update_completed_] 
        // iNsTr_4
        $T[R_iNsTr_4_1943_sample_start_] 
        $T[R_iNsTr_4_1943_sample_completed_] 
        $T[R_iNsTr_4_1943_update_start_] 
        $T[R_iNsTr_4_1943_update_completed_] 
        // implicit reference
        R_iNsTr_4_1943_sample_start_ <-& ($entry)
        R_iNsTr_4_1943_sample_completed_ <-& (R_iNsTr_4_1943_sample_start_)
        R_iNsTr_4_1943_update_start_ <-& (R_iNsTr_4_1943_sample_completed_)
        R_iNsTr_4_1943_update_completed_ <-& (R_iNsTr_4_1943_update_start_)
        MUL_f32_f32_1946_sample_start_ <-& (R_iNsTr_4_1943_update_completed_)
        ;;[MUL_f32_f32_1946_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1946_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1946_sample_start_ &-> (MUL_f32_f32_1946_Sample)
        MUL_f32_f32_1946_sample_completed_ <-& (MUL_f32_f32_1946_Sample)
        MUL_f32_f32_1946_sample_completed_ &-> ($null)
        MUL_f32_f32_1946_update_start_ &-> (MUL_f32_f32_1946_Update)
        MUL_f32_f32_1946_update_completed_ <-& (MUL_f32_f32_1946_Update)
        // Target expression
        // (as target) iNsTr_40
        // iNsTr_40
        // implicit reference
        // 		tmp10x_xix_xi1 := ($bitcast ($uint<32>) iNsTr_40 )
        //  file prog.aa, line 748
        // Source expression
        // ($bitcast ($uint<32>) iNsTr_40 )
        $T[type_cast_1950_sample_start_] 
        $T[type_cast_1950_sample_completed_] 
        $T[type_cast_1950_update_start_] 
        $T[type_cast_1950_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_1949_sample_start_] 
        $T[R_iNsTr_40_1949_sample_completed_] 
        $T[R_iNsTr_40_1949_update_start_] 
        $T[R_iNsTr_40_1949_update_completed_] 
        // implicit reference
        R_iNsTr_40_1949_sample_start_ <-& (MUL_f32_f32_1946_update_completed_)
        R_iNsTr_40_1949_sample_completed_ <-& (R_iNsTr_40_1949_sample_start_)
        R_iNsTr_40_1949_update_start_ <-& (R_iNsTr_40_1949_sample_completed_)
        R_iNsTr_40_1949_update_completed_ <-& (R_iNsTr_40_1949_update_start_)
        type_cast_1950_sample_start_ <-& (R_iNsTr_40_1949_update_completed_)
        ;;[type_cast_1950_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1950_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1950_sample_start_ &-> (type_cast_1950_Sample)
        type_cast_1950_sample_completed_ <-& (type_cast_1950_Sample)
        type_cast_1950_sample_completed_ &-> ($null)
        type_cast_1950_update_start_ &-> (type_cast_1950_Update)
        type_cast_1950_update_completed_ <-& (type_cast_1950_Update)
        // Target expression
        // (as target) tmp10x_xix_xi1
        // tmp10x_xix_xi1
        // implicit reference
        // 		tmp6x_xix_xi2 := ($bitcast ($uint<32>) iNsTr_39 )
        //  file prog.aa, line 749
        // Source expression
        // ($bitcast ($uint<32>) iNsTr_39 )
        $T[type_cast_1954_sample_start_] 
        $T[type_cast_1954_sample_completed_] 
        $T[type_cast_1954_update_start_] 
        $T[type_cast_1954_update_completed_] 
        // iNsTr_39
        $T[R_iNsTr_39_1953_sample_start_] 
        $T[R_iNsTr_39_1953_sample_completed_] 
        $T[R_iNsTr_39_1953_update_start_] 
        $T[R_iNsTr_39_1953_update_completed_] 
        // implicit reference
        R_iNsTr_39_1953_sample_start_ <-& (ADD_f32_f32_1940_update_completed_)
        R_iNsTr_39_1953_sample_completed_ <-& (R_iNsTr_39_1953_sample_start_)
        R_iNsTr_39_1953_update_start_ <-& (R_iNsTr_39_1953_sample_completed_)
        R_iNsTr_39_1953_update_completed_ <-& (R_iNsTr_39_1953_update_start_)
        type_cast_1954_sample_start_ <-& (R_iNsTr_39_1953_update_completed_)
        ;;[type_cast_1954_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1954_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1954_sample_start_ &-> (type_cast_1954_Sample)
        type_cast_1954_sample_completed_ <-& (type_cast_1954_Sample)
        type_cast_1954_sample_completed_ &-> ($null)
        type_cast_1954_update_start_ &-> (type_cast_1954_Update)
        type_cast_1954_update_completed_ <-& (type_cast_1954_Update)
        // Target expression
        // (as target) tmp6x_xix_xi2
        // tmp6x_xix_xi2
        // implicit reference
        // 		iNsTr_41 := (iNsTr_40 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 751
        // Source expression
        // (iNsTr_40 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_1960_sample_start_] 
        $T[EQ_f32_u1_1960_sample_completed_] 
        $T[EQ_f32_u1_1960_update_start_] 
        $T[EQ_f32_u1_1960_update_completed_] 
        // iNsTr_40
        $T[R_iNsTr_40_1957_sample_start_] 
        $T[R_iNsTr_40_1957_sample_completed_] 
        $T[R_iNsTr_40_1957_update_start_] 
        $T[R_iNsTr_40_1957_update_completed_] 
        // implicit reference
        R_iNsTr_40_1957_sample_start_ <-& (MUL_f32_f32_1946_update_completed_)
        R_iNsTr_40_1957_sample_completed_ <-& (R_iNsTr_40_1957_sample_start_)
        R_iNsTr_40_1957_update_start_ <-& (R_iNsTr_40_1957_sample_completed_)
        R_iNsTr_40_1957_update_completed_ <-& (R_iNsTr_40_1957_update_start_)
        EQ_f32_u1_1960_sample_start_ <-& (R_iNsTr_40_1957_update_completed_)
        ;;[EQ_f32_u1_1960_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_1960_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_1960_sample_start_ &-> (EQ_f32_u1_1960_Sample)
        EQ_f32_u1_1960_sample_completed_ <-& (EQ_f32_u1_1960_Sample)
        EQ_f32_u1_1960_sample_completed_ &-> ($null)
        EQ_f32_u1_1960_update_start_ &-> (EQ_f32_u1_1960_Update)
        EQ_f32_u1_1960_update_completed_ <-& (EQ_f32_u1_1960_Update)
        // Target expression
        // (as target) iNsTr_41
        // iNsTr_41
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1936_to_assign_stmt_1961__entry__ |-> (assign_stmt_1936_to_assign_stmt_1961)
      assign_stmt_1936_to_assign_stmt_1961__exit__ <-| (assign_stmt_1936_to_assign_stmt_1961)
      // if-statement  
      //  file prog.aa, line 752
      ;;[if_stmt_1962_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1962__entry__ |-> (if_stmt_1962_dead_link)
      if_stmt_1962__exit__ <-| (if_stmt_1962_dead_link)
      ;;[if_stmt_1962_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1962__entry__ |-> (if_stmt_1962_eval_test)
      $P [R_iNsTr_41_1963_place]
      R_iNsTr_41_1963_place <-| (if_stmt_1962_eval_test)
      ;;[if_stmt_1962_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1962_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_41_1963_place |-> (if_stmt_1962_if_link if_stmt_1962_else_link)
      $P [bb_11_omega_calcx_xexit]
      bb_11_omega_calcx_xexit <-| (if_stmt_1962_if_link)
      $P [bb_11_bb_12]
      bb_11_bb_12 <-| (if_stmt_1962_else_link)
      ::[assign_stmt_1974_to_assign_stmt_2044] 
      {
        // 		iNsTr_52 := (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 756
        // Source expression
        // (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_1973_sample_start_] 
        $T[LSHR_u32_u32_1973_sample_completed_] 
        $T[LSHR_u32_u32_1973_update_start_] 
        $T[LSHR_u32_u32_1973_update_completed_] 
        // tmp10x_xix_xi1
        $T[R_tmp10x_xix_xi1_1970_sample_start_] 
        $T[R_tmp10x_xix_xi1_1970_sample_completed_] 
        $T[R_tmp10x_xix_xi1_1970_update_start_] 
        $T[R_tmp10x_xix_xi1_1970_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi1_1970_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi1_1970_sample_completed_ <-& (R_tmp10x_xix_xi1_1970_sample_start_)
        R_tmp10x_xix_xi1_1970_update_start_ <-& (R_tmp10x_xix_xi1_1970_sample_completed_)
        R_tmp10x_xix_xi1_1970_update_completed_ <-& (R_tmp10x_xix_xi1_1970_update_start_)
        LSHR_u32_u32_1973_sample_start_ <-& (R_tmp10x_xix_xi1_1970_update_completed_)
        ;;[LSHR_u32_u32_1973_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1973_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1973_sample_start_ &-> (LSHR_u32_u32_1973_Sample)
        LSHR_u32_u32_1973_sample_completed_ <-& (LSHR_u32_u32_1973_Sample)
        LSHR_u32_u32_1973_sample_completed_ &-> ($null)
        LSHR_u32_u32_1973_update_start_ &-> (LSHR_u32_u32_1973_Update)
        LSHR_u32_u32_1973_update_completed_ <-& (LSHR_u32_u32_1973_Update)
        // Target expression
        // (as target) iNsTr_52
        // iNsTr_52
        // implicit reference
        // 		iNsTr_53 := (iNsTr_52 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 757
        // Source expression
        // (iNsTr_52 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_1979_sample_start_] 
        $T[AND_u32_u32_1979_sample_completed_] 
        $T[AND_u32_u32_1979_update_start_] 
        $T[AND_u32_u32_1979_update_completed_] 
        // iNsTr_52
        $T[R_iNsTr_52_1976_sample_start_] 
        $T[R_iNsTr_52_1976_sample_completed_] 
        $T[R_iNsTr_52_1976_update_start_] 
        $T[R_iNsTr_52_1976_update_completed_] 
        // implicit reference
        R_iNsTr_52_1976_sample_start_ <-& (LSHR_u32_u32_1973_update_completed_)
        R_iNsTr_52_1976_sample_completed_ <-& (R_iNsTr_52_1976_sample_start_)
        R_iNsTr_52_1976_update_start_ <-& (R_iNsTr_52_1976_sample_completed_)
        R_iNsTr_52_1976_update_completed_ <-& (R_iNsTr_52_1976_update_start_)
        AND_u32_u32_1979_sample_start_ <-& (R_iNsTr_52_1976_update_completed_)
        ;;[AND_u32_u32_1979_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1979_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1979_sample_start_ &-> (AND_u32_u32_1979_Sample)
        AND_u32_u32_1979_sample_completed_ <-& (AND_u32_u32_1979_Sample)
        AND_u32_u32_1979_sample_completed_ &-> ($null)
        AND_u32_u32_1979_update_start_ &-> (AND_u32_u32_1979_Update)
        AND_u32_u32_1979_update_completed_ <-& (AND_u32_u32_1979_Update)
        // Target expression
        // (as target) iNsTr_53
        // iNsTr_53
        // implicit reference
        // 		iNsTr_54 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 758
        // Source expression
        // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_1985_sample_start_] 
        $T[LSHR_u32_u32_1985_sample_completed_] 
        $T[LSHR_u32_u32_1985_update_start_] 
        $T[LSHR_u32_u32_1985_update_completed_] 
        // tmp6x_xix_xi2
        $T[R_tmp6x_xix_xi2_1982_sample_start_] 
        $T[R_tmp6x_xix_xi2_1982_sample_completed_] 
        $T[R_tmp6x_xix_xi2_1982_update_start_] 
        $T[R_tmp6x_xix_xi2_1982_update_completed_] 
        // implicit reference
        R_tmp6x_xix_xi2_1982_sample_start_ <-& ($entry)
        R_tmp6x_xix_xi2_1982_sample_completed_ <-& (R_tmp6x_xix_xi2_1982_sample_start_)
        R_tmp6x_xix_xi2_1982_update_start_ <-& (R_tmp6x_xix_xi2_1982_sample_completed_)
        R_tmp6x_xix_xi2_1982_update_completed_ <-& (R_tmp6x_xix_xi2_1982_update_start_)
        LSHR_u32_u32_1985_sample_start_ <-& (R_tmp6x_xix_xi2_1982_update_completed_)
        ;;[LSHR_u32_u32_1985_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_1985_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_1985_sample_start_ &-> (LSHR_u32_u32_1985_Sample)
        LSHR_u32_u32_1985_sample_completed_ <-& (LSHR_u32_u32_1985_Sample)
        LSHR_u32_u32_1985_sample_completed_ &-> ($null)
        LSHR_u32_u32_1985_update_start_ &-> (LSHR_u32_u32_1985_Update)
        LSHR_u32_u32_1985_update_completed_ <-& (LSHR_u32_u32_1985_Update)
        // Target expression
        // (as target) iNsTr_54
        // iNsTr_54
        // implicit reference
        // 		iNsTr_55 := (iNsTr_54 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 759
        // Source expression
        // (iNsTr_54 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_1991_sample_start_] 
        $T[AND_u32_u32_1991_sample_completed_] 
        $T[AND_u32_u32_1991_update_start_] 
        $T[AND_u32_u32_1991_update_completed_] 
        // iNsTr_54
        $T[R_iNsTr_54_1988_sample_start_] 
        $T[R_iNsTr_54_1988_sample_completed_] 
        $T[R_iNsTr_54_1988_update_start_] 
        $T[R_iNsTr_54_1988_update_completed_] 
        // implicit reference
        R_iNsTr_54_1988_sample_start_ <-& (LSHR_u32_u32_1985_update_completed_)
        R_iNsTr_54_1988_sample_completed_ <-& (R_iNsTr_54_1988_sample_start_)
        R_iNsTr_54_1988_update_start_ <-& (R_iNsTr_54_1988_sample_completed_)
        R_iNsTr_54_1988_update_completed_ <-& (R_iNsTr_54_1988_update_start_)
        AND_u32_u32_1991_sample_start_ <-& (R_iNsTr_54_1988_update_completed_)
        ;;[AND_u32_u32_1991_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_1991_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_1991_sample_start_ &-> (AND_u32_u32_1991_Sample)
        AND_u32_u32_1991_sample_completed_ <-& (AND_u32_u32_1991_Sample)
        AND_u32_u32_1991_sample_completed_ &-> ($null)
        AND_u32_u32_1991_update_start_ &-> (AND_u32_u32_1991_Update)
        AND_u32_u32_1991_update_completed_ <-& (AND_u32_u32_1991_Update)
        // Target expression
        // (as target) iNsTr_55
        // iNsTr_55
        // implicit reference
        // 		iNsTr_56 := (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 760
        // Source expression
        // (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_1997_sample_start_] 
        $T[SHL_u32_u32_1997_sample_completed_] 
        $T[SHL_u32_u32_1997_update_start_] 
        $T[SHL_u32_u32_1997_update_completed_] 
        // tmp10x_xix_xi1
        $T[R_tmp10x_xix_xi1_1994_sample_start_] 
        $T[R_tmp10x_xix_xi1_1994_sample_completed_] 
        $T[R_tmp10x_xix_xi1_1994_update_start_] 
        $T[R_tmp10x_xix_xi1_1994_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi1_1994_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi1_1994_sample_completed_ <-& (R_tmp10x_xix_xi1_1994_sample_start_)
        R_tmp10x_xix_xi1_1994_update_start_ <-& (R_tmp10x_xix_xi1_1994_sample_completed_)
        R_tmp10x_xix_xi1_1994_update_completed_ <-& (R_tmp10x_xix_xi1_1994_update_start_)
        SHL_u32_u32_1997_sample_start_ <-& (R_tmp10x_xix_xi1_1994_update_completed_)
        ;;[SHL_u32_u32_1997_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_1997_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_1997_sample_start_ &-> (SHL_u32_u32_1997_Sample)
        SHL_u32_u32_1997_sample_completed_ <-& (SHL_u32_u32_1997_Sample)
        SHL_u32_u32_1997_sample_completed_ &-> ($null)
        SHL_u32_u32_1997_update_start_ &-> (SHL_u32_u32_1997_Update)
        SHL_u32_u32_1997_update_completed_ <-& (SHL_u32_u32_1997_Update)
        // Target expression
        // (as target) iNsTr_56
        // iNsTr_56
        // implicit reference
        // 		iNsTr_57 := (iNsTr_56 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 761
        // Source expression
        // (iNsTr_56 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_2003_sample_start_] 
        $T[AND_u32_u32_2003_sample_completed_] 
        $T[AND_u32_u32_2003_update_start_] 
        $T[AND_u32_u32_2003_update_completed_] 
        // iNsTr_56
        $T[R_iNsTr_56_2000_sample_start_] 
        $T[R_iNsTr_56_2000_sample_completed_] 
        $T[R_iNsTr_56_2000_update_start_] 
        $T[R_iNsTr_56_2000_update_completed_] 
        // implicit reference
        R_iNsTr_56_2000_sample_start_ <-& (SHL_u32_u32_1997_update_completed_)
        R_iNsTr_56_2000_sample_completed_ <-& (R_iNsTr_56_2000_sample_start_)
        R_iNsTr_56_2000_update_start_ <-& (R_iNsTr_56_2000_sample_completed_)
        R_iNsTr_56_2000_update_completed_ <-& (R_iNsTr_56_2000_update_start_)
        AND_u32_u32_2003_sample_start_ <-& (R_iNsTr_56_2000_update_completed_)
        ;;[AND_u32_u32_2003_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2003_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2003_sample_start_ &-> (AND_u32_u32_2003_Sample)
        AND_u32_u32_2003_sample_completed_ <-& (AND_u32_u32_2003_Sample)
        AND_u32_u32_2003_sample_completed_ &-> ($null)
        AND_u32_u32_2003_update_start_ &-> (AND_u32_u32_2003_Update)
        AND_u32_u32_2003_update_completed_ <-& (AND_u32_u32_2003_Update)
        // Target expression
        // (as target) iNsTr_57
        // iNsTr_57
        // implicit reference
        // 		iNsTr_58 := (iNsTr_57 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 762
        // Source expression
        // (iNsTr_57 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_2009_sample_start_] 
        $T[OR_u32_u32_2009_sample_completed_] 
        $T[OR_u32_u32_2009_update_start_] 
        $T[OR_u32_u32_2009_update_completed_] 
        // iNsTr_57
        $T[R_iNsTr_57_2006_sample_start_] 
        $T[R_iNsTr_57_2006_sample_completed_] 
        $T[R_iNsTr_57_2006_update_start_] 
        $T[R_iNsTr_57_2006_update_completed_] 
        // implicit reference
        R_iNsTr_57_2006_sample_start_ <-& (AND_u32_u32_2003_update_completed_)
        R_iNsTr_57_2006_sample_completed_ <-& (R_iNsTr_57_2006_sample_start_)
        R_iNsTr_57_2006_update_start_ <-& (R_iNsTr_57_2006_sample_completed_)
        R_iNsTr_57_2006_update_completed_ <-& (R_iNsTr_57_2006_update_start_)
        OR_u32_u32_2009_sample_start_ <-& (R_iNsTr_57_2006_update_completed_)
        ;;[OR_u32_u32_2009_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2009_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2009_sample_start_ &-> (OR_u32_u32_2009_Sample)
        OR_u32_u32_2009_sample_completed_ <-& (OR_u32_u32_2009_Sample)
        OR_u32_u32_2009_sample_completed_ &-> ($null)
        OR_u32_u32_2009_update_start_ &-> (OR_u32_u32_2009_Update)
        OR_u32_u32_2009_update_completed_ <-& (OR_u32_u32_2009_Update)
        // Target expression
        // (as target) iNsTr_58
        // iNsTr_58
        // implicit reference
        // 		iNsTr_59 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 763
        // Source expression
        // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[LSHR_u32_u32_2015_sample_start_] 
        $T[LSHR_u32_u32_2015_sample_completed_] 
        $T[LSHR_u32_u32_2015_update_start_] 
        $T[LSHR_u32_u32_2015_update_completed_] 
        // tmp6x_xix_xi2
        $T[R_tmp6x_xix_xi2_2012_sample_start_] 
        $T[R_tmp6x_xix_xi2_2012_sample_completed_] 
        $T[R_tmp6x_xix_xi2_2012_update_start_] 
        $T[R_tmp6x_xix_xi2_2012_update_completed_] 
        // implicit reference
        R_tmp6x_xix_xi2_2012_sample_start_ <-& ($entry)
        R_tmp6x_xix_xi2_2012_sample_completed_ <-& (R_tmp6x_xix_xi2_2012_sample_start_)
        R_tmp6x_xix_xi2_2012_update_start_ <-& (R_tmp6x_xix_xi2_2012_sample_completed_)
        R_tmp6x_xix_xi2_2012_update_completed_ <-& (R_tmp6x_xix_xi2_2012_update_start_)
        LSHR_u32_u32_2015_sample_start_ <-& (R_tmp6x_xix_xi2_2012_update_completed_)
        ;;[LSHR_u32_u32_2015_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_2015_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_2015_sample_start_ &-> (LSHR_u32_u32_2015_Sample)
        LSHR_u32_u32_2015_sample_completed_ <-& (LSHR_u32_u32_2015_Sample)
        LSHR_u32_u32_2015_sample_completed_ &-> ($null)
        LSHR_u32_u32_2015_update_start_ &-> (LSHR_u32_u32_2015_Update)
        LSHR_u32_u32_2015_update_completed_ <-& (LSHR_u32_u32_2015_Update)
        // Target expression
        // (as target) iNsTr_59
        // iNsTr_59
        // implicit reference
        // 		iNsTr_60 := (iNsTr_59 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        //  file prog.aa, line 764
        // Source expression
        // (iNsTr_59 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        $T[AND_u32_u32_2021_sample_start_] 
        $T[AND_u32_u32_2021_sample_completed_] 
        $T[AND_u32_u32_2021_update_start_] 
        $T[AND_u32_u32_2021_update_completed_] 
        // iNsTr_59
        $T[R_iNsTr_59_2018_sample_start_] 
        $T[R_iNsTr_59_2018_sample_completed_] 
        $T[R_iNsTr_59_2018_update_start_] 
        $T[R_iNsTr_59_2018_update_completed_] 
        // implicit reference
        R_iNsTr_59_2018_sample_start_ <-& (LSHR_u32_u32_2015_update_completed_)
        R_iNsTr_59_2018_sample_completed_ <-& (R_iNsTr_59_2018_sample_start_)
        R_iNsTr_59_2018_update_start_ <-& (R_iNsTr_59_2018_sample_completed_)
        R_iNsTr_59_2018_update_completed_ <-& (R_iNsTr_59_2018_update_start_)
        AND_u32_u32_2021_sample_start_ <-& (R_iNsTr_59_2018_update_completed_)
        ;;[AND_u32_u32_2021_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2021_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2021_sample_start_ &-> (AND_u32_u32_2021_Sample)
        AND_u32_u32_2021_sample_completed_ <-& (AND_u32_u32_2021_Sample)
        AND_u32_u32_2021_sample_completed_ &-> ($null)
        AND_u32_u32_2021_update_start_ &-> (AND_u32_u32_2021_Update)
        AND_u32_u32_2021_update_completed_ <-& (AND_u32_u32_2021_Update)
        // Target expression
        // (as target) iNsTr_60
        // iNsTr_60
        // implicit reference
        // 		iNsTr_61 := (iNsTr_60 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        //  file prog.aa, line 765
        // Source expression
        // (iNsTr_60 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        $T[OR_u32_u32_2027_sample_start_] 
        $T[OR_u32_u32_2027_sample_completed_] 
        $T[OR_u32_u32_2027_update_start_] 
        $T[OR_u32_u32_2027_update_completed_] 
        // iNsTr_60
        $T[R_iNsTr_60_2024_sample_start_] 
        $T[R_iNsTr_60_2024_sample_completed_] 
        $T[R_iNsTr_60_2024_update_start_] 
        $T[R_iNsTr_60_2024_update_completed_] 
        // implicit reference
        R_iNsTr_60_2024_sample_start_ <-& (AND_u32_u32_2021_update_completed_)
        R_iNsTr_60_2024_sample_completed_ <-& (R_iNsTr_60_2024_sample_start_)
        R_iNsTr_60_2024_update_start_ <-& (R_iNsTr_60_2024_sample_completed_)
        R_iNsTr_60_2024_update_completed_ <-& (R_iNsTr_60_2024_update_start_)
        OR_u32_u32_2027_sample_start_ <-& (R_iNsTr_60_2024_update_completed_)
        ;;[OR_u32_u32_2027_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2027_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2027_sample_start_ &-> (OR_u32_u32_2027_Sample)
        OR_u32_u32_2027_sample_completed_ <-& (OR_u32_u32_2027_Sample)
        OR_u32_u32_2027_sample_completed_ &-> ($null)
        OR_u32_u32_2027_update_start_ &-> (OR_u32_u32_2027_Update)
        OR_u32_u32_2027_update_completed_ <-& (OR_u32_u32_2027_Update)
        // Target expression
        // (as target) iNsTr_61
        // iNsTr_61
        // implicit reference
        // 		iNsTr_62 := (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
        //  file prog.aa, line 766
        // Source expression
        // (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
        $T[XOR_u32_u32_2032_sample_start_] 
        $T[XOR_u32_u32_2032_sample_completed_] 
        $T[XOR_u32_u32_2032_update_start_] 
        $T[XOR_u32_u32_2032_update_completed_] 
        // tmp6x_xix_xi2
        $T[R_tmp6x_xix_xi2_2030_sample_start_] 
        $T[R_tmp6x_xix_xi2_2030_sample_completed_] 
        $T[R_tmp6x_xix_xi2_2030_update_start_] 
        $T[R_tmp6x_xix_xi2_2030_update_completed_] 
        // implicit reference
        R_tmp6x_xix_xi2_2030_sample_start_ <-& ($entry)
        R_tmp6x_xix_xi2_2030_sample_completed_ <-& (R_tmp6x_xix_xi2_2030_sample_start_)
        R_tmp6x_xix_xi2_2030_update_start_ <-& (R_tmp6x_xix_xi2_2030_sample_completed_)
        R_tmp6x_xix_xi2_2030_update_completed_ <-& (R_tmp6x_xix_xi2_2030_update_start_)
        // tmp10x_xix_xi1
        $T[R_tmp10x_xix_xi1_2031_sample_start_] 
        $T[R_tmp10x_xix_xi1_2031_sample_completed_] 
        $T[R_tmp10x_xix_xi1_2031_update_start_] 
        $T[R_tmp10x_xix_xi1_2031_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi1_2031_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi1_2031_sample_completed_ <-& (R_tmp10x_xix_xi1_2031_sample_start_)
        R_tmp10x_xix_xi1_2031_update_start_ <-& (R_tmp10x_xix_xi1_2031_sample_completed_)
        R_tmp10x_xix_xi1_2031_update_completed_ <-& (R_tmp10x_xix_xi1_2031_update_start_)
        XOR_u32_u32_2032_sample_start_ <-& (R_tmp6x_xix_xi2_2030_update_completed_)
        XOR_u32_u32_2032_sample_start_ <-& (R_tmp10x_xix_xi1_2031_update_completed_)
        ;;[XOR_u32_u32_2032_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_2032_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_2032_sample_start_ &-> (XOR_u32_u32_2032_Sample)
        XOR_u32_u32_2032_sample_completed_ <-& (XOR_u32_u32_2032_Sample)
        XOR_u32_u32_2032_sample_completed_ &-> ($null)
        XOR_u32_u32_2032_update_start_ &-> (XOR_u32_u32_2032_Update)
        XOR_u32_u32_2032_update_completed_ <-& (XOR_u32_u32_2032_Update)
        // Target expression
        // (as target) iNsTr_62
        // iNsTr_62
        // implicit reference
        // 		iNsTr_63 := (iNsTr_62 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 767
        // Source expression
        // (iNsTr_62 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_2038_sample_start_] 
        $T[AND_u32_u32_2038_sample_completed_] 
        $T[AND_u32_u32_2038_update_start_] 
        $T[AND_u32_u32_2038_update_completed_] 
        // iNsTr_62
        $T[R_iNsTr_62_2035_sample_start_] 
        $T[R_iNsTr_62_2035_sample_completed_] 
        $T[R_iNsTr_62_2035_update_start_] 
        $T[R_iNsTr_62_2035_update_completed_] 
        // implicit reference
        R_iNsTr_62_2035_sample_start_ <-& (XOR_u32_u32_2032_update_completed_)
        R_iNsTr_62_2035_sample_completed_ <-& (R_iNsTr_62_2035_sample_start_)
        R_iNsTr_62_2035_update_start_ <-& (R_iNsTr_62_2035_sample_completed_)
        R_iNsTr_62_2035_update_completed_ <-& (R_iNsTr_62_2035_update_start_)
        AND_u32_u32_2038_sample_start_ <-& (R_iNsTr_62_2035_update_completed_)
        ;;[AND_u32_u32_2038_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2038_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2038_sample_start_ &-> (AND_u32_u32_2038_Sample)
        AND_u32_u32_2038_sample_completed_ <-& (AND_u32_u32_2038_Sample)
        AND_u32_u32_2038_sample_completed_ &-> ($null)
        AND_u32_u32_2038_update_start_ &-> (AND_u32_u32_2038_Update)
        AND_u32_u32_2038_update_completed_ <-& (AND_u32_u32_2038_Update)
        // Target expression
        // (as target) iNsTr_63
        // iNsTr_63
        // implicit reference
        // 		iNsTr_64 := (iNsTr_53 - iNsTr_55)
        //  file prog.aa, line 768
        // Source expression
        // (iNsTr_53 - iNsTr_55)
        $T[SUB_u32_u32_2043_sample_start_] 
        $T[SUB_u32_u32_2043_sample_completed_] 
        $T[SUB_u32_u32_2043_update_start_] 
        $T[SUB_u32_u32_2043_update_completed_] 
        // iNsTr_53
        $T[R_iNsTr_53_2041_sample_start_] 
        $T[R_iNsTr_53_2041_sample_completed_] 
        $T[R_iNsTr_53_2041_update_start_] 
        $T[R_iNsTr_53_2041_update_completed_] 
        // implicit reference
        R_iNsTr_53_2041_sample_start_ <-& (AND_u32_u32_1979_update_completed_)
        R_iNsTr_53_2041_sample_completed_ <-& (R_iNsTr_53_2041_sample_start_)
        R_iNsTr_53_2041_update_start_ <-& (R_iNsTr_53_2041_sample_completed_)
        R_iNsTr_53_2041_update_completed_ <-& (R_iNsTr_53_2041_update_start_)
        // iNsTr_55
        $T[R_iNsTr_55_2042_sample_start_] 
        $T[R_iNsTr_55_2042_sample_completed_] 
        $T[R_iNsTr_55_2042_update_start_] 
        $T[R_iNsTr_55_2042_update_completed_] 
        // implicit reference
        R_iNsTr_55_2042_sample_start_ <-& (AND_u32_u32_1991_update_completed_)
        R_iNsTr_55_2042_sample_completed_ <-& (R_iNsTr_55_2042_sample_start_)
        R_iNsTr_55_2042_update_start_ <-& (R_iNsTr_55_2042_sample_completed_)
        R_iNsTr_55_2042_update_completed_ <-& (R_iNsTr_55_2042_update_start_)
        SUB_u32_u32_2043_sample_start_ <-& (R_iNsTr_53_2041_update_completed_)
        SUB_u32_u32_2043_sample_start_ <-& (R_iNsTr_55_2042_update_completed_)
        ;;[SUB_u32_u32_2043_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_2043_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_2043_sample_start_ &-> (SUB_u32_u32_2043_Sample)
        SUB_u32_u32_2043_sample_completed_ <-& (SUB_u32_u32_2043_Sample)
        SUB_u32_u32_2043_sample_completed_ &-> ($null)
        SUB_u32_u32_2043_update_start_ &-> (SUB_u32_u32_2043_Update)
        SUB_u32_u32_2043_update_completed_ <-& (SUB_u32_u32_2043_Update)
        // Target expression
        // (as target) iNsTr_64
        // iNsTr_64
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_1974_to_assign_stmt_2044__entry__ |-> (assign_stmt_1974_to_assign_stmt_2044)
      assign_stmt_1974_to_assign_stmt_2044__exit__ <-| (assign_stmt_1974_to_assign_stmt_2044)
      // control-path for switch  
      //  file prog.aa, line 769
      ;;[switch_stmt_2045_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_2045__entry__ |-> (switch_stmt_2045_dead_link)
      switch_stmt_2045__exit__ <-| (switch_stmt_2045_dead_link)
      //---------------------    switch statement  file prog.aa, line 769  --------------------------
      $P [switch_stmt_2045__condition_check_place__] 
      switch_stmt_2045__entry__ |-> (switch_stmt_2045__condition_check_place__)
      ||[switch_stmt_2045__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_2045__condition_check_place__ |-> (switch_stmt_2045__condition_check__)
      $P [switch_stmt_2045__select__] 
      switch_stmt_2045__select__ <-| (switch_stmt_2045__condition_check__)
      // switch choice 0
      ;;[switch_stmt_2045_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_12_xx_xloopexitx_xix_xix_xi13]
      bb_12_xx_xloopexitx_xix_xix_xi13 <-| (switch_stmt_2045_choice_0)
      // switch choice 1
      ;;[switch_stmt_2045_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16]
      bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16 <-| (switch_stmt_2045_choice_1)
      ;;[switch_stmt_2045_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_12_bbx_xnph7x_xix_xix_xi5x_xpreheader]
      bb_12_bbx_xnph7x_xix_xix_xi5x_xpreheader <-| (switch_stmt_2045_choice_default)
      switch_stmt_2045__select__ |-> (switch_stmt_2045_choice_0 switch_stmt_2045_choice_1 switch_stmt_2045_choice_default)
      //---------------------   end of switch statement  file prog.aa, line 769  --------------------------
      ::[assign_stmt_2077_to_assign_stmt_2082] 
      {
        // 		iNsTr_108 := (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 786
        // Source expression
        // (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_2076_sample_start_] 
        $T[LSHR_u32_u32_2076_sample_completed_] 
        $T[LSHR_u32_u32_2076_update_start_] 
        $T[LSHR_u32_u32_2076_update_completed_] 
        // xx_x016x_xix_xix_xi3
        $T[R_xx_x016x_xix_xix_xi3_2073_sample_start_] 
        $T[R_xx_x016x_xix_xix_xi3_2073_sample_completed_] 
        $T[R_xx_x016x_xix_xix_xi3_2073_update_start_] 
        $T[R_xx_x016x_xix_xix_xi3_2073_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xix_xi3_2073_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xix_xi3_2073_sample_completed_ <-& (R_xx_x016x_xix_xix_xi3_2073_sample_start_)
        R_xx_x016x_xix_xix_xi3_2073_update_start_ <-& (R_xx_x016x_xix_xix_xi3_2073_sample_completed_)
        R_xx_x016x_xix_xix_xi3_2073_update_completed_ <-& (R_xx_x016x_xix_xix_xi3_2073_update_start_)
        LSHR_u32_u32_2076_sample_start_ <-& (R_xx_x016x_xix_xix_xi3_2073_update_completed_)
        ;;[LSHR_u32_u32_2076_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_2076_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_2076_sample_start_ &-> (LSHR_u32_u32_2076_Sample)
        LSHR_u32_u32_2076_sample_completed_ <-& (LSHR_u32_u32_2076_Sample)
        LSHR_u32_u32_2076_sample_completed_ &-> ($null)
        LSHR_u32_u32_2076_update_start_ &-> (LSHR_u32_u32_2076_Update)
        LSHR_u32_u32_2076_update_completed_ <-& (LSHR_u32_u32_2076_Update)
        // Target expression
        // (as target) iNsTr_108
        // iNsTr_108
        // implicit reference
        // 		iNsTr_109 := (iNsTr_108 > iNsTr_61)
        //  file prog.aa, line 788
        // Source expression
        // (iNsTr_108 > iNsTr_61)
        $T[UGT_u32_u1_2081_sample_start_] 
        $T[UGT_u32_u1_2081_sample_completed_] 
        $T[UGT_u32_u1_2081_update_start_] 
        $T[UGT_u32_u1_2081_update_completed_] 
        // iNsTr_108
        $T[R_iNsTr_108_2079_sample_start_] 
        $T[R_iNsTr_108_2079_sample_completed_] 
        $T[R_iNsTr_108_2079_update_start_] 
        $T[R_iNsTr_108_2079_update_completed_] 
        // implicit reference
        R_iNsTr_108_2079_sample_start_ <-& (LSHR_u32_u32_2076_update_completed_)
        R_iNsTr_108_2079_sample_completed_ <-& (R_iNsTr_108_2079_sample_start_)
        R_iNsTr_108_2079_update_start_ <-& (R_iNsTr_108_2079_sample_completed_)
        R_iNsTr_108_2079_update_completed_ <-& (R_iNsTr_108_2079_update_start_)
        // iNsTr_61
        $T[R_iNsTr_61_2080_sample_start_] 
        $T[R_iNsTr_61_2080_sample_completed_] 
        $T[R_iNsTr_61_2080_update_start_] 
        $T[R_iNsTr_61_2080_update_completed_] 
        // implicit reference
        R_iNsTr_61_2080_sample_start_ <-& ($entry)
        R_iNsTr_61_2080_sample_completed_ <-& (R_iNsTr_61_2080_sample_start_)
        R_iNsTr_61_2080_update_start_ <-& (R_iNsTr_61_2080_sample_completed_)
        R_iNsTr_61_2080_update_completed_ <-& (R_iNsTr_61_2080_update_start_)
        UGT_u32_u1_2081_sample_start_ <-& (R_iNsTr_108_2079_update_completed_)
        UGT_u32_u1_2081_sample_start_ <-& (R_iNsTr_61_2080_update_completed_)
        ;;[UGT_u32_u1_2081_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_2081_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_2081_sample_start_ &-> (UGT_u32_u1_2081_Sample)
        UGT_u32_u1_2081_sample_completed_ <-& (UGT_u32_u1_2081_Sample)
        UGT_u32_u1_2081_sample_completed_ &-> ($null)
        UGT_u32_u1_2081_update_start_ &-> (UGT_u32_u1_2081_Update)
        UGT_u32_u1_2081_update_completed_ <-& (UGT_u32_u1_2081_Update)
        // Target expression
        // (as target) iNsTr_109
        // iNsTr_109
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2077_to_assign_stmt_2082__entry__ |-> (assign_stmt_2077_to_assign_stmt_2082)
      assign_stmt_2077_to_assign_stmt_2082__exit__ <-| (assign_stmt_2077_to_assign_stmt_2082)
      // if-statement  
      //  file prog.aa, line 789
      ;;[if_stmt_2083_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2083__entry__ |-> (if_stmt_2083_dead_link)
      if_stmt_2083__exit__ <-| (if_stmt_2083_dead_link)
      ;;[if_stmt_2083_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2083__entry__ |-> (if_stmt_2083_eval_test)
      $P [R_iNsTr_109_2084_place]
      R_iNsTr_109_2084_place <-| (if_stmt_2083_eval_test)
      ;;[if_stmt_2083_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2083_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_109_2084_place |-> (if_stmt_2083_if_link if_stmt_2083_else_link)
      $P [bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader]
      bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader <-| (if_stmt_2083_if_link)
      $P [bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11]
      bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11 <-| (if_stmt_2083_else_link)
      ::[assign_stmt_2111_to_assign_stmt_2122] 
      {
        // 		iNsTr_162 := (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 799
        // Source expression
        // (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_2110_sample_start_] 
        $T[SHL_u32_u32_2110_sample_completed_] 
        $T[SHL_u32_u32_2110_update_start_] 
        $T[SHL_u32_u32_2110_update_completed_] 
        // shifted_divisorx_x03x_xix_xix_xi6
        $T[R_shifted_divisorx_x03x_xix_xix_xi6_2107_sample_start_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi6_2107_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi6_2107_update_start_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi6_2107_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xix_xix_xi6_2107_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xix_xix_xi6_2107_sample_completed_ <-& (R_shifted_divisorx_x03x_xix_xix_xi6_2107_sample_start_)
        R_shifted_divisorx_x03x_xix_xix_xi6_2107_update_start_ <-& (R_shifted_divisorx_x03x_xix_xix_xi6_2107_sample_completed_)
        R_shifted_divisorx_x03x_xix_xix_xi6_2107_update_completed_ <-& (R_shifted_divisorx_x03x_xix_xix_xi6_2107_update_start_)
        SHL_u32_u32_2110_sample_start_ <-& (R_shifted_divisorx_x03x_xix_xix_xi6_2107_update_completed_)
        ;;[SHL_u32_u32_2110_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2110_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2110_sample_start_ &-> (SHL_u32_u32_2110_Sample)
        SHL_u32_u32_2110_sample_completed_ <-& (SHL_u32_u32_2110_Sample)
        SHL_u32_u32_2110_sample_completed_ &-> ($null)
        SHL_u32_u32_2110_update_start_ &-> (SHL_u32_u32_2110_Update)
        SHL_u32_u32_2110_update_completed_ <-& (SHL_u32_u32_2110_Update)
        // Target expression
        // (as target) iNsTr_162
        // iNsTr_162
        // implicit reference
        // 		iNsTr_163 := (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 800
        // Source expression
        // (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_2116_sample_start_] 
        $T[SHL_u32_u32_2116_sample_completed_] 
        $T[SHL_u32_u32_2116_update_start_] 
        $T[SHL_u32_u32_2116_update_completed_] 
        // curr_quotientx_x02x_xix_xix_xi7
        $T[R_curr_quotientx_x02x_xix_xix_xi7_2113_sample_start_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi7_2113_sample_completed_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi7_2113_update_start_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi7_2113_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xix_xix_xi7_2113_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xix_xix_xi7_2113_sample_completed_ <-& (R_curr_quotientx_x02x_xix_xix_xi7_2113_sample_start_)
        R_curr_quotientx_x02x_xix_xix_xi7_2113_update_start_ <-& (R_curr_quotientx_x02x_xix_xix_xi7_2113_sample_completed_)
        R_curr_quotientx_x02x_xix_xix_xi7_2113_update_completed_ <-& (R_curr_quotientx_x02x_xix_xix_xi7_2113_update_start_)
        SHL_u32_u32_2116_sample_start_ <-& (R_curr_quotientx_x02x_xix_xix_xi7_2113_update_completed_)
        ;;[SHL_u32_u32_2116_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2116_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2116_sample_start_ &-> (SHL_u32_u32_2116_Sample)
        SHL_u32_u32_2116_sample_completed_ <-& (SHL_u32_u32_2116_Sample)
        SHL_u32_u32_2116_sample_completed_ &-> ($null)
        SHL_u32_u32_2116_update_start_ &-> (SHL_u32_u32_2116_Update)
        SHL_u32_u32_2116_update_completed_ <-& (SHL_u32_u32_2116_Update)
        // Target expression
        // (as target) iNsTr_163
        // iNsTr_163
        // implicit reference
        // 		iNsTr_164 := (iNsTr_162 < iNsTr_108)
        //  file prog.aa, line 802
        // Source expression
        // (iNsTr_162 < iNsTr_108)
        $T[ULT_u32_u1_2121_sample_start_] 
        $T[ULT_u32_u1_2121_sample_completed_] 
        $T[ULT_u32_u1_2121_update_start_] 
        $T[ULT_u32_u1_2121_update_completed_] 
        // iNsTr_162
        $T[R_iNsTr_162_2119_sample_start_] 
        $T[R_iNsTr_162_2119_sample_completed_] 
        $T[R_iNsTr_162_2119_update_start_] 
        $T[R_iNsTr_162_2119_update_completed_] 
        // implicit reference
        R_iNsTr_162_2119_sample_start_ <-& (SHL_u32_u32_2110_update_completed_)
        R_iNsTr_162_2119_sample_completed_ <-& (R_iNsTr_162_2119_sample_start_)
        R_iNsTr_162_2119_update_start_ <-& (R_iNsTr_162_2119_sample_completed_)
        R_iNsTr_162_2119_update_completed_ <-& (R_iNsTr_162_2119_update_start_)
        // iNsTr_108
        $T[R_iNsTr_108_2120_sample_start_] 
        $T[R_iNsTr_108_2120_sample_completed_] 
        $T[R_iNsTr_108_2120_update_start_] 
        $T[R_iNsTr_108_2120_update_completed_] 
        // implicit reference
        R_iNsTr_108_2120_sample_start_ <-& ($entry)
        R_iNsTr_108_2120_sample_completed_ <-& (R_iNsTr_108_2120_sample_start_)
        R_iNsTr_108_2120_update_start_ <-& (R_iNsTr_108_2120_sample_completed_)
        R_iNsTr_108_2120_update_completed_ <-& (R_iNsTr_108_2120_update_start_)
        ULT_u32_u1_2121_sample_start_ <-& (R_iNsTr_162_2119_update_completed_)
        ULT_u32_u1_2121_sample_start_ <-& (R_iNsTr_108_2120_update_completed_)
        ;;[ULT_u32_u1_2121_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_2121_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_2121_sample_start_ &-> (ULT_u32_u1_2121_Sample)
        ULT_u32_u1_2121_sample_completed_ <-& (ULT_u32_u1_2121_Sample)
        ULT_u32_u1_2121_sample_completed_ &-> ($null)
        ULT_u32_u1_2121_update_start_ &-> (ULT_u32_u1_2121_Update)
        ULT_u32_u1_2121_update_completed_ <-& (ULT_u32_u1_2121_Update)
        // Target expression
        // (as target) iNsTr_164
        // iNsTr_164
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2111_to_assign_stmt_2122__entry__ |-> (assign_stmt_2111_to_assign_stmt_2122)
      assign_stmt_2111_to_assign_stmt_2122__exit__ <-| (assign_stmt_2111_to_assign_stmt_2122)
      // if-statement  
      //  file prog.aa, line 803
      ;;[if_stmt_2123_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2123__entry__ |-> (if_stmt_2123_dead_link)
      if_stmt_2123__exit__ <-| (if_stmt_2123_dead_link)
      ;;[if_stmt_2123_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2123__entry__ |-> (if_stmt_2123_eval_test)
      $P [R_iNsTr_164_2124_place]
      R_iNsTr_164_2124_place <-| (if_stmt_2123_eval_test)
      ;;[if_stmt_2123_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2123_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_164_2124_place |-> (if_stmt_2123_if_link if_stmt_2123_else_link)
      $P [bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8]
      bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8 <-| (if_stmt_2123_if_link)
      $P [bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit]
      bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit <-| (if_stmt_2123_else_link)
      ::[assign_stmt_2159_to_assign_stmt_2169] 
      {
        // 		iNsTr_136 := (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
        //  file prog.aa, line 815
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
        $T[ADD_u32_u32_2158_sample_start_] 
        $T[ADD_u32_u32_2158_sample_completed_] 
        $T[ADD_u32_u32_2158_update_start_] 
        $T[ADD_u32_u32_2158_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xix_xi10
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2156_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2156_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2156_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2156_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2156_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2156_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2156_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2156_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2156_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2156_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2156_update_start_)
        // quotientx_x05x_xix_xix_xi4
        $T[R_quotientx_x05x_xix_xix_xi4_2157_sample_start_] 
        $T[R_quotientx_x05x_xix_xix_xi4_2157_sample_completed_] 
        $T[R_quotientx_x05x_xix_xix_xi4_2157_update_start_] 
        $T[R_quotientx_x05x_xix_xix_xi4_2157_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xix_xix_xi4_2157_sample_start_ <-& ($entry)
        R_quotientx_x05x_xix_xix_xi4_2157_sample_completed_ <-& (R_quotientx_x05x_xix_xix_xi4_2157_sample_start_)
        R_quotientx_x05x_xix_xix_xi4_2157_update_start_ <-& (R_quotientx_x05x_xix_xix_xi4_2157_sample_completed_)
        R_quotientx_x05x_xix_xix_xi4_2157_update_completed_ <-& (R_quotientx_x05x_xix_xix_xi4_2157_update_start_)
        ADD_u32_u32_2158_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi10_2156_update_completed_)
        ADD_u32_u32_2158_sample_start_ <-& (R_quotientx_x05x_xix_xix_xi4_2157_update_completed_)
        ;;[ADD_u32_u32_2158_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2158_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2158_sample_start_ &-> (ADD_u32_u32_2158_Sample)
        ADD_u32_u32_2158_sample_completed_ <-& (ADD_u32_u32_2158_Sample)
        ADD_u32_u32_2158_sample_completed_ &-> ($null)
        ADD_u32_u32_2158_update_start_ &-> (ADD_u32_u32_2158_Update)
        ADD_u32_u32_2158_update_completed_ <-& (ADD_u32_u32_2158_Update)
        // Target expression
        // (as target) iNsTr_136
        // iNsTr_136
        // implicit reference
        // 		iNsTr_137 := (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
        //  file prog.aa, line 816
        // Source expression
        // (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
        $T[SUB_u32_u32_2163_sample_start_] 
        $T[SUB_u32_u32_2163_sample_completed_] 
        $T[SUB_u32_u32_2163_update_start_] 
        $T[SUB_u32_u32_2163_update_completed_] 
        // xx_x016x_xix_xix_xi3
        $T[R_xx_x016x_xix_xix_xi3_2161_sample_start_] 
        $T[R_xx_x016x_xix_xix_xi3_2161_sample_completed_] 
        $T[R_xx_x016x_xix_xix_xi3_2161_update_start_] 
        $T[R_xx_x016x_xix_xix_xi3_2161_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xix_xi3_2161_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xix_xi3_2161_sample_completed_ <-& (R_xx_x016x_xix_xix_xi3_2161_sample_start_)
        R_xx_x016x_xix_xix_xi3_2161_update_start_ <-& (R_xx_x016x_xix_xix_xi3_2161_sample_completed_)
        R_xx_x016x_xix_xix_xi3_2161_update_completed_ <-& (R_xx_x016x_xix_xix_xi3_2161_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xix_xi9
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2162_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2162_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2162_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2162_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2162_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2162_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2162_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2162_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2162_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2162_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2162_update_start_)
        SUB_u32_u32_2163_sample_start_ <-& (R_xx_x016x_xix_xix_xi3_2161_update_completed_)
        SUB_u32_u32_2163_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2162_update_completed_)
        ;;[SUB_u32_u32_2163_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_2163_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_2163_sample_start_ &-> (SUB_u32_u32_2163_Sample)
        SUB_u32_u32_2163_sample_completed_ <-& (SUB_u32_u32_2163_Sample)
        SUB_u32_u32_2163_sample_completed_ &-> ($null)
        SUB_u32_u32_2163_update_start_ &-> (SUB_u32_u32_2163_Update)
        SUB_u32_u32_2163_update_completed_ <-& (SUB_u32_u32_2163_Update)
        // Target expression
        // (as target) iNsTr_137
        // iNsTr_137
        // implicit reference
        // 		iNsTr_138 := (iNsTr_137 < iNsTr_61)
        //  file prog.aa, line 818
        // Source expression
        // (iNsTr_137 < iNsTr_61)
        $T[ULT_u32_u1_2168_sample_start_] 
        $T[ULT_u32_u1_2168_sample_completed_] 
        $T[ULT_u32_u1_2168_update_start_] 
        $T[ULT_u32_u1_2168_update_completed_] 
        // iNsTr_137
        $T[R_iNsTr_137_2166_sample_start_] 
        $T[R_iNsTr_137_2166_sample_completed_] 
        $T[R_iNsTr_137_2166_update_start_] 
        $T[R_iNsTr_137_2166_update_completed_] 
        // implicit reference
        R_iNsTr_137_2166_sample_start_ <-& (SUB_u32_u32_2163_update_completed_)
        R_iNsTr_137_2166_sample_completed_ <-& (R_iNsTr_137_2166_sample_start_)
        R_iNsTr_137_2166_update_start_ <-& (R_iNsTr_137_2166_sample_completed_)
        R_iNsTr_137_2166_update_completed_ <-& (R_iNsTr_137_2166_update_start_)
        // iNsTr_61
        $T[R_iNsTr_61_2167_sample_start_] 
        $T[R_iNsTr_61_2167_sample_completed_] 
        $T[R_iNsTr_61_2167_update_start_] 
        $T[R_iNsTr_61_2167_update_completed_] 
        // implicit reference
        R_iNsTr_61_2167_sample_start_ <-& ($entry)
        R_iNsTr_61_2167_sample_completed_ <-& (R_iNsTr_61_2167_sample_start_)
        R_iNsTr_61_2167_update_start_ <-& (R_iNsTr_61_2167_sample_completed_)
        R_iNsTr_61_2167_update_completed_ <-& (R_iNsTr_61_2167_update_start_)
        ULT_u32_u1_2168_sample_start_ <-& (R_iNsTr_137_2166_update_completed_)
        ULT_u32_u1_2168_sample_start_ <-& (R_iNsTr_61_2167_update_completed_)
        ;;[ULT_u32_u1_2168_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_2168_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_2168_sample_start_ &-> (ULT_u32_u1_2168_Sample)
        ULT_u32_u1_2168_sample_completed_ <-& (ULT_u32_u1_2168_Sample)
        ULT_u32_u1_2168_sample_completed_ &-> ($null)
        ULT_u32_u1_2168_update_start_ &-> (ULT_u32_u1_2168_Update)
        ULT_u32_u1_2168_update_completed_ <-& (ULT_u32_u1_2168_Update)
        // Target expression
        // (as target) iNsTr_138
        // iNsTr_138
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2159_to_assign_stmt_2169__entry__ |-> (assign_stmt_2159_to_assign_stmt_2169)
      assign_stmt_2159_to_assign_stmt_2169__exit__ <-| (assign_stmt_2159_to_assign_stmt_2169)
      // if-statement  
      //  file prog.aa, line 819
      ;;[if_stmt_2170_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2170__entry__ |-> (if_stmt_2170_dead_link)
      if_stmt_2170__exit__ <-| (if_stmt_2170_dead_link)
      ;;[if_stmt_2170_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2170__entry__ |-> (if_stmt_2170_eval_test)
      $P [R_iNsTr_138_2171_place]
      R_iNsTr_138_2171_place <-| (if_stmt_2170_eval_test)
      ;;[if_stmt_2170_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2170_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_138_2171_place |-> (if_stmt_2170_if_link if_stmt_2170_else_link)
      $P [xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit]
      xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit <-| (if_stmt_2170_if_link)
      $P [xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5]
      xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5 <-| (if_stmt_2170_else_link)
      ::[assign_stmt_2206_to_assign_stmt_2225] 
      {
        // 		iNsTr_92 := (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 834
        // Source expression
        // (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_2205_sample_start_] 
        $T[AND_u32_u32_2205_sample_completed_] 
        $T[AND_u32_u32_2205_update_start_] 
        $T[AND_u32_u32_2205_update_completed_] 
        // tempx_x0x_xphx_xix_xi14
        $T[R_tempx_x0x_xphx_xix_xi14_2202_sample_start_] 
        $T[R_tempx_x0x_xphx_xix_xi14_2202_sample_completed_] 
        $T[R_tempx_x0x_xphx_xix_xi14_2202_update_start_] 
        $T[R_tempx_x0x_xphx_xix_xi14_2202_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xix_xi14_2202_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xix_xi14_2202_sample_completed_ <-& (R_tempx_x0x_xphx_xix_xi14_2202_sample_start_)
        R_tempx_x0x_xphx_xix_xi14_2202_update_start_ <-& (R_tempx_x0x_xphx_xix_xi14_2202_sample_completed_)
        R_tempx_x0x_xphx_xix_xi14_2202_update_completed_ <-& (R_tempx_x0x_xphx_xix_xi14_2202_update_start_)
        AND_u32_u32_2205_sample_start_ <-& (R_tempx_x0x_xphx_xix_xi14_2202_update_completed_)
        ;;[AND_u32_u32_2205_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2205_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2205_sample_start_ &-> (AND_u32_u32_2205_Sample)
        AND_u32_u32_2205_sample_completed_ <-& (AND_u32_u32_2205_Sample)
        AND_u32_u32_2205_sample_completed_ &-> ($null)
        AND_u32_u32_2205_update_start_ &-> (AND_u32_u32_2205_Update)
        AND_u32_u32_2205_update_completed_ <-& (AND_u32_u32_2205_Update)
        // Target expression
        // (as target) iNsTr_92
        // iNsTr_92
        // implicit reference
        // 		iNsTr_93 := (iNsTr_92 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 836
        // Source expression
        // (iNsTr_92 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_2211_sample_start_] 
        $T[EQ_u32_u1_2211_sample_completed_] 
        $T[EQ_u32_u1_2211_update_start_] 
        $T[EQ_u32_u1_2211_update_completed_] 
        // iNsTr_92
        $T[R_iNsTr_92_2208_sample_start_] 
        $T[R_iNsTr_92_2208_sample_completed_] 
        $T[R_iNsTr_92_2208_update_start_] 
        $T[R_iNsTr_92_2208_update_completed_] 
        // implicit reference
        R_iNsTr_92_2208_sample_start_ <-& (AND_u32_u32_2205_update_completed_)
        R_iNsTr_92_2208_sample_completed_ <-& (R_iNsTr_92_2208_sample_start_)
        R_iNsTr_92_2208_update_start_ <-& (R_iNsTr_92_2208_sample_completed_)
        R_iNsTr_92_2208_update_completed_ <-& (R_iNsTr_92_2208_update_start_)
        EQ_u32_u1_2211_sample_start_ <-& (R_iNsTr_92_2208_update_completed_)
        ;;[EQ_u32_u1_2211_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_2211_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_2211_sample_start_ &-> (EQ_u32_u1_2211_Sample)
        EQ_u32_u1_2211_sample_completed_ <-& (EQ_u32_u1_2211_Sample)
        EQ_u32_u1_2211_sample_completed_ &-> ($null)
        EQ_u32_u1_2211_update_start_ &-> (EQ_u32_u1_2211_Update)
        EQ_u32_u1_2211_update_completed_ <-& (EQ_u32_u1_2211_Update)
        // Target expression
        // (as target) iNsTr_93
        // iNsTr_93
        // implicit reference
        // 		iNsTr_94 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 838
        // Source expression
        // (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_2219_sample_start_] 
        $T[NEQ_i32_u1_2219_sample_completed_] 
        $T[NEQ_i32_u1_2219_update_start_] 
        $T[NEQ_i32_u1_2219_update_completed_] 
        // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 )
        $T[type_cast_2215_sample_start_] 
        $T[type_cast_2215_sample_completed_] 
        $T[type_cast_2215_update_start_] 
        $T[type_cast_2215_update_completed_] 
        // tempx_x0x_xphx_xix_xi14
        $T[R_tempx_x0x_xphx_xix_xi14_2214_sample_start_] 
        $T[R_tempx_x0x_xphx_xix_xi14_2214_sample_completed_] 
        $T[R_tempx_x0x_xphx_xix_xi14_2214_update_start_] 
        $T[R_tempx_x0x_xphx_xix_xi14_2214_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xix_xi14_2214_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xix_xi14_2214_sample_completed_ <-& (R_tempx_x0x_xphx_xix_xi14_2214_sample_start_)
        R_tempx_x0x_xphx_xix_xi14_2214_update_start_ <-& (R_tempx_x0x_xphx_xix_xi14_2214_sample_completed_)
        R_tempx_x0x_xphx_xix_xi14_2214_update_completed_ <-& (R_tempx_x0x_xphx_xix_xi14_2214_update_start_)
        type_cast_2215_sample_start_ <-& (R_tempx_x0x_xphx_xix_xi14_2214_update_completed_)
        ;;[type_cast_2215_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2215_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2215_sample_start_ &-> (type_cast_2215_Sample)
        type_cast_2215_sample_completed_ <-& (type_cast_2215_Sample)
        type_cast_2215_sample_completed_ &-> ($null)
        type_cast_2215_update_start_ &-> (type_cast_2215_Update)
        type_cast_2215_update_completed_ <-& (type_cast_2215_Update)
        // flow-through
        type_cast_2215_update_start_ <-& (type_cast_2215_sample_completed_)
        NEQ_i32_u1_2219_sample_start_ <-& (type_cast_2215_update_completed_)
        ;;[NEQ_i32_u1_2219_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_2219_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_2219_sample_start_ &-> (NEQ_i32_u1_2219_Sample)
        NEQ_i32_u1_2219_sample_completed_ <-& (NEQ_i32_u1_2219_Sample)
        NEQ_i32_u1_2219_sample_completed_ &-> ($null)
        NEQ_i32_u1_2219_update_start_ &-> (NEQ_i32_u1_2219_Update)
        NEQ_i32_u1_2219_update_completed_ <-& (NEQ_i32_u1_2219_Update)
        // Target expression
        // (as target) iNsTr_94
        // iNsTr_94
        // implicit reference
        // 		orx_xcond11x_xix_xi15 := (iNsTr_93 & iNsTr_94)
        //  file prog.aa, line 839
        // Source expression
        // (iNsTr_93 & iNsTr_94)
        $T[AND_u1_u1_2224_sample_start_] 
        $T[AND_u1_u1_2224_sample_completed_] 
        $T[AND_u1_u1_2224_update_start_] 
        $T[AND_u1_u1_2224_update_completed_] 
        // iNsTr_93
        $T[R_iNsTr_93_2222_sample_start_] 
        $T[R_iNsTr_93_2222_sample_completed_] 
        $T[R_iNsTr_93_2222_update_start_] 
        $T[R_iNsTr_93_2222_update_completed_] 
        // implicit reference
        R_iNsTr_93_2222_sample_start_ <-& (EQ_u32_u1_2211_update_completed_)
        R_iNsTr_93_2222_sample_completed_ <-& (R_iNsTr_93_2222_sample_start_)
        R_iNsTr_93_2222_update_start_ <-& (R_iNsTr_93_2222_sample_completed_)
        R_iNsTr_93_2222_update_completed_ <-& (R_iNsTr_93_2222_update_start_)
        // iNsTr_94
        $T[R_iNsTr_94_2223_sample_start_] 
        $T[R_iNsTr_94_2223_sample_completed_] 
        $T[R_iNsTr_94_2223_update_start_] 
        $T[R_iNsTr_94_2223_update_completed_] 
        // implicit reference
        R_iNsTr_94_2223_sample_start_ <-& (NEQ_i32_u1_2219_update_completed_)
        R_iNsTr_94_2223_sample_completed_ <-& (R_iNsTr_94_2223_sample_start_)
        R_iNsTr_94_2223_update_start_ <-& (R_iNsTr_94_2223_sample_completed_)
        R_iNsTr_94_2223_update_completed_ <-& (R_iNsTr_94_2223_update_start_)
        AND_u1_u1_2224_sample_start_ <-& (R_iNsTr_93_2222_update_completed_)
        AND_u1_u1_2224_sample_start_ <-& (R_iNsTr_94_2223_update_completed_)
        ;;[AND_u1_u1_2224_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_2224_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_2224_sample_start_ &-> (AND_u1_u1_2224_Sample)
        AND_u1_u1_2224_sample_completed_ <-& (AND_u1_u1_2224_Sample)
        AND_u1_u1_2224_sample_completed_ &-> ($null)
        AND_u1_u1_2224_update_start_ &-> (AND_u1_u1_2224_Update)
        AND_u1_u1_2224_update_completed_ <-& (AND_u1_u1_2224_Update)
        // Target expression
        // (as target) orx_xcond11x_xix_xi15
        // orx_xcond11x_xix_xi15
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2206_to_assign_stmt_2225__entry__ |-> (assign_stmt_2206_to_assign_stmt_2225)
      assign_stmt_2206_to_assign_stmt_2225__exit__ <-| (assign_stmt_2206_to_assign_stmt_2225)
      // if-statement  
      //  file prog.aa, line 840
      ;;[if_stmt_2226_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2226__entry__ |-> (if_stmt_2226_dead_link)
      if_stmt_2226__exit__ <-| (if_stmt_2226_dead_link)
      ;;[if_stmt_2226_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2226__entry__ |-> (if_stmt_2226_eval_test)
      $P [R_orx_xcond11x_xix_xi15_2227_place]
      R_orx_xcond11x_xix_xi15_2227_place <-| (if_stmt_2226_eval_test)
      ;;[if_stmt_2226_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2226_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11x_xix_xi15_2227_place |-> (if_stmt_2226_if_link if_stmt_2226_else_link)
      $P [udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader]
      udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader <-| (if_stmt_2226_if_link)
      $P [udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29]
      udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 <-| (if_stmt_2226_else_link)
      ::[assign_stmt_2254_to_assign_stmt_2285] 
      {
        // 		iNsTr_141 := (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 850
        // Source expression
        // (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_2253_sample_start_] 
        $T[SHL_u32_u32_2253_sample_completed_] 
        $T[SHL_u32_u32_2253_update_start_] 
        $T[SHL_u32_u32_2253_update_completed_] 
        // tempx_x012x_xix_xi17
        $T[R_tempx_x012x_xix_xi17_2250_sample_start_] 
        $T[R_tempx_x012x_xix_xi17_2250_sample_completed_] 
        $T[R_tempx_x012x_xix_xi17_2250_update_start_] 
        $T[R_tempx_x012x_xix_xi17_2250_update_completed_] 
        // implicit reference
        R_tempx_x012x_xix_xi17_2250_sample_start_ <-& ($entry)
        R_tempx_x012x_xix_xi17_2250_sample_completed_ <-& (R_tempx_x012x_xix_xi17_2250_sample_start_)
        R_tempx_x012x_xix_xi17_2250_update_start_ <-& (R_tempx_x012x_xix_xi17_2250_sample_completed_)
        R_tempx_x012x_xix_xi17_2250_update_completed_ <-& (R_tempx_x012x_xix_xi17_2250_update_start_)
        SHL_u32_u32_2253_sample_start_ <-& (R_tempx_x012x_xix_xi17_2250_update_completed_)
        ;;[SHL_u32_u32_2253_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2253_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2253_sample_start_ &-> (SHL_u32_u32_2253_Sample)
        SHL_u32_u32_2253_sample_completed_ <-& (SHL_u32_u32_2253_Sample)
        SHL_u32_u32_2253_sample_completed_ &-> ($null)
        SHL_u32_u32_2253_update_start_ &-> (SHL_u32_u32_2253_Update)
        SHL_u32_u32_2253_update_completed_ <-& (SHL_u32_u32_2253_Update)
        // Target expression
        // (as target) iNsTr_141
        // iNsTr_141
        // implicit reference
        // 		iNsTr_142 := (iNsTr_141 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 851
        // Source expression
        // (iNsTr_141 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_2259_sample_start_] 
        $T[AND_u32_u32_2259_sample_completed_] 
        $T[AND_u32_u32_2259_update_start_] 
        $T[AND_u32_u32_2259_update_completed_] 
        // iNsTr_141
        $T[R_iNsTr_141_2256_sample_start_] 
        $T[R_iNsTr_141_2256_sample_completed_] 
        $T[R_iNsTr_141_2256_update_start_] 
        $T[R_iNsTr_141_2256_update_completed_] 
        // implicit reference
        R_iNsTr_141_2256_sample_start_ <-& (SHL_u32_u32_2253_update_completed_)
        R_iNsTr_141_2256_sample_completed_ <-& (R_iNsTr_141_2256_sample_start_)
        R_iNsTr_141_2256_update_start_ <-& (R_iNsTr_141_2256_sample_completed_)
        R_iNsTr_141_2256_update_completed_ <-& (R_iNsTr_141_2256_update_start_)
        AND_u32_u32_2259_sample_start_ <-& (R_iNsTr_141_2256_update_completed_)
        ;;[AND_u32_u32_2259_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2259_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2259_sample_start_ &-> (AND_u32_u32_2259_Sample)
        AND_u32_u32_2259_sample_completed_ <-& (AND_u32_u32_2259_Sample)
        AND_u32_u32_2259_sample_completed_ &-> ($null)
        AND_u32_u32_2259_update_start_ &-> (AND_u32_u32_2259_Update)
        AND_u32_u32_2259_update_completed_ <-& (AND_u32_u32_2259_Update)
        // Target expression
        // (as target) iNsTr_142
        // iNsTr_142
        // implicit reference
        // 		iNsTr_143 := (iNsTr_142 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 853
        // Source expression
        // (iNsTr_142 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_2265_sample_start_] 
        $T[EQ_u32_u1_2265_sample_completed_] 
        $T[EQ_u32_u1_2265_update_start_] 
        $T[EQ_u32_u1_2265_update_completed_] 
        // iNsTr_142
        $T[R_iNsTr_142_2262_sample_start_] 
        $T[R_iNsTr_142_2262_sample_completed_] 
        $T[R_iNsTr_142_2262_update_start_] 
        $T[R_iNsTr_142_2262_update_completed_] 
        // implicit reference
        R_iNsTr_142_2262_sample_start_ <-& (AND_u32_u32_2259_update_completed_)
        R_iNsTr_142_2262_sample_completed_ <-& (R_iNsTr_142_2262_sample_start_)
        R_iNsTr_142_2262_update_start_ <-& (R_iNsTr_142_2262_sample_completed_)
        R_iNsTr_142_2262_update_completed_ <-& (R_iNsTr_142_2262_update_start_)
        EQ_u32_u1_2265_sample_start_ <-& (R_iNsTr_142_2262_update_completed_)
        ;;[EQ_u32_u1_2265_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_2265_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_2265_sample_start_ &-> (EQ_u32_u1_2265_Sample)
        EQ_u32_u1_2265_sample_completed_ <-& (EQ_u32_u1_2265_Sample)
        EQ_u32_u1_2265_sample_completed_ &-> ($null)
        EQ_u32_u1_2265_update_start_ &-> (EQ_u32_u1_2265_Update)
        EQ_u32_u1_2265_update_completed_ <-& (EQ_u32_u1_2265_Update)
        // Target expression
        // (as target) iNsTr_143
        // iNsTr_143
        // implicit reference
        // 		iNsTr_144 := (($bitcast ($int<32>) iNsTr_141 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 855
        // Source expression
        // (($bitcast ($int<32>) iNsTr_141 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_2273_sample_start_] 
        $T[NEQ_i32_u1_2273_sample_completed_] 
        $T[NEQ_i32_u1_2273_update_start_] 
        $T[NEQ_i32_u1_2273_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_141 )
        $T[type_cast_2269_sample_start_] 
        $T[type_cast_2269_sample_completed_] 
        $T[type_cast_2269_update_start_] 
        $T[type_cast_2269_update_completed_] 
        // iNsTr_141
        $T[R_iNsTr_141_2268_sample_start_] 
        $T[R_iNsTr_141_2268_sample_completed_] 
        $T[R_iNsTr_141_2268_update_start_] 
        $T[R_iNsTr_141_2268_update_completed_] 
        // implicit reference
        R_iNsTr_141_2268_sample_start_ <-& (SHL_u32_u32_2253_update_completed_)
        R_iNsTr_141_2268_sample_completed_ <-& (R_iNsTr_141_2268_sample_start_)
        R_iNsTr_141_2268_update_start_ <-& (R_iNsTr_141_2268_sample_completed_)
        R_iNsTr_141_2268_update_completed_ <-& (R_iNsTr_141_2268_update_start_)
        type_cast_2269_sample_start_ <-& (R_iNsTr_141_2268_update_completed_)
        ;;[type_cast_2269_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2269_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2269_sample_start_ &-> (type_cast_2269_Sample)
        type_cast_2269_sample_completed_ <-& (type_cast_2269_Sample)
        type_cast_2269_sample_completed_ &-> ($null)
        type_cast_2269_update_start_ &-> (type_cast_2269_Update)
        type_cast_2269_update_completed_ <-& (type_cast_2269_Update)
        // flow-through
        type_cast_2269_update_start_ <-& (type_cast_2269_sample_completed_)
        NEQ_i32_u1_2273_sample_start_ <-& (type_cast_2269_update_completed_)
        ;;[NEQ_i32_u1_2273_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_2273_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_2273_sample_start_ &-> (NEQ_i32_u1_2273_Sample)
        NEQ_i32_u1_2273_sample_completed_ <-& (NEQ_i32_u1_2273_Sample)
        NEQ_i32_u1_2273_sample_completed_ &-> ($null)
        NEQ_i32_u1_2273_update_start_ &-> (NEQ_i32_u1_2273_Update)
        NEQ_i32_u1_2273_update_completed_ <-& (NEQ_i32_u1_2273_Update)
        // Target expression
        // (as target) iNsTr_144
        // iNsTr_144
        // implicit reference
        // 		orx_xcondx_xix_xi18 := (iNsTr_143 & iNsTr_144)
        //  file prog.aa, line 856
        // Source expression
        // (iNsTr_143 & iNsTr_144)
        $T[AND_u1_u1_2278_sample_start_] 
        $T[AND_u1_u1_2278_sample_completed_] 
        $T[AND_u1_u1_2278_update_start_] 
        $T[AND_u1_u1_2278_update_completed_] 
        // iNsTr_143
        $T[R_iNsTr_143_2276_sample_start_] 
        $T[R_iNsTr_143_2276_sample_completed_] 
        $T[R_iNsTr_143_2276_update_start_] 
        $T[R_iNsTr_143_2276_update_completed_] 
        // implicit reference
        R_iNsTr_143_2276_sample_start_ <-& (EQ_u32_u1_2265_update_completed_)
        R_iNsTr_143_2276_sample_completed_ <-& (R_iNsTr_143_2276_sample_start_)
        R_iNsTr_143_2276_update_start_ <-& (R_iNsTr_143_2276_sample_completed_)
        R_iNsTr_143_2276_update_completed_ <-& (R_iNsTr_143_2276_update_start_)
        // iNsTr_144
        $T[R_iNsTr_144_2277_sample_start_] 
        $T[R_iNsTr_144_2277_sample_completed_] 
        $T[R_iNsTr_144_2277_update_start_] 
        $T[R_iNsTr_144_2277_update_completed_] 
        // implicit reference
        R_iNsTr_144_2277_sample_start_ <-& (NEQ_i32_u1_2273_update_completed_)
        R_iNsTr_144_2277_sample_completed_ <-& (R_iNsTr_144_2277_sample_start_)
        R_iNsTr_144_2277_update_start_ <-& (R_iNsTr_144_2277_sample_completed_)
        R_iNsTr_144_2277_update_completed_ <-& (R_iNsTr_144_2277_update_start_)
        AND_u1_u1_2278_sample_start_ <-& (R_iNsTr_143_2276_update_completed_)
        AND_u1_u1_2278_sample_start_ <-& (R_iNsTr_144_2277_update_completed_)
        ;;[AND_u1_u1_2278_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_2278_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_2278_sample_start_ &-> (AND_u1_u1_2278_Sample)
        AND_u1_u1_2278_sample_completed_ <-& (AND_u1_u1_2278_Sample)
        AND_u1_u1_2278_sample_completed_ &-> ($null)
        AND_u1_u1_2278_update_start_ &-> (AND_u1_u1_2278_Update)
        AND_u1_u1_2278_update_completed_ <-& (AND_u1_u1_2278_Update)
        // Target expression
        // (as target) orx_xcondx_xix_xi18
        // orx_xcondx_xix_xi18
        // implicit reference
        // 		indvarx_xnextx_xix_xi19 := (iNsTr_140 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 857
        // Source expression
        // (iNsTr_140 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_2284_sample_start_] 
        $T[ADD_u32_u32_2284_sample_completed_] 
        $T[ADD_u32_u32_2284_update_start_] 
        $T[ADD_u32_u32_2284_update_completed_] 
        // iNsTr_140
        $T[R_iNsTr_140_2281_sample_start_] 
        $T[R_iNsTr_140_2281_sample_completed_] 
        $T[R_iNsTr_140_2281_update_start_] 
        $T[R_iNsTr_140_2281_update_completed_] 
        // implicit reference
        R_iNsTr_140_2281_sample_start_ <-& ($entry)
        R_iNsTr_140_2281_sample_completed_ <-& (R_iNsTr_140_2281_sample_start_)
        R_iNsTr_140_2281_update_start_ <-& (R_iNsTr_140_2281_sample_completed_)
        R_iNsTr_140_2281_update_completed_ <-& (R_iNsTr_140_2281_update_start_)
        ADD_u32_u32_2284_sample_start_ <-& (R_iNsTr_140_2281_update_completed_)
        ;;[ADD_u32_u32_2284_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2284_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2284_sample_start_ &-> (ADD_u32_u32_2284_Sample)
        ADD_u32_u32_2284_sample_completed_ <-& (ADD_u32_u32_2284_Sample)
        ADD_u32_u32_2284_sample_completed_ &-> ($null)
        ADD_u32_u32_2284_update_start_ &-> (ADD_u32_u32_2284_Update)
        ADD_u32_u32_2284_update_completed_ <-& (ADD_u32_u32_2284_Update)
        // Target expression
        // (as target) indvarx_xnextx_xix_xi19
        // indvarx_xnextx_xix_xi19
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2254_to_assign_stmt_2285__entry__ |-> (assign_stmt_2254_to_assign_stmt_2285)
      assign_stmt_2254_to_assign_stmt_2285__exit__ <-| (assign_stmt_2254_to_assign_stmt_2285)
      // if-statement  
      //  file prog.aa, line 858
      ;;[if_stmt_2286_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2286__entry__ |-> (if_stmt_2286_dead_link)
      if_stmt_2286__exit__ <-| (if_stmt_2286_dead_link)
      ;;[if_stmt_2286_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2286__entry__ |-> (if_stmt_2286_eval_test)
      $P [R_orx_xcondx_xix_xi18_2287_place]
      R_orx_xcondx_xix_xi18_2287_place <-| (if_stmt_2286_eval_test)
      ;;[if_stmt_2286_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2286_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xix_xi18_2287_place |-> (if_stmt_2286_if_link if_stmt_2286_else_link)
      $P [udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20]
      udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20 <-| (if_stmt_2286_if_link)
      $P [udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25]
      udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25 <-| (if_stmt_2286_else_link)
      ::[assign_stmt_2307_to_assign_stmt_2323] 
      {
        // 		xx_xnotx_xi21 := (iNsTr_54 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
        //  file prog.aa, line 864
        // Source expression
        // (iNsTr_54 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
        $T[OR_u32_u32_2306_sample_start_] 
        $T[OR_u32_u32_2306_sample_completed_] 
        $T[OR_u32_u32_2306_update_start_] 
        $T[OR_u32_u32_2306_update_completed_] 
        // iNsTr_54
        $T[R_iNsTr_54_2303_sample_start_] 
        $T[R_iNsTr_54_2303_sample_completed_] 
        $T[R_iNsTr_54_2303_update_start_] 
        $T[R_iNsTr_54_2303_update_completed_] 
        // implicit reference
        R_iNsTr_54_2303_sample_start_ <-& ($entry)
        R_iNsTr_54_2303_sample_completed_ <-& (R_iNsTr_54_2303_sample_start_)
        R_iNsTr_54_2303_update_start_ <-& (R_iNsTr_54_2303_sample_completed_)
        R_iNsTr_54_2303_update_completed_ <-& (R_iNsTr_54_2303_update_start_)
        OR_u32_u32_2306_sample_start_ <-& (R_iNsTr_54_2303_update_completed_)
        ;;[OR_u32_u32_2306_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2306_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2306_sample_start_ &-> (OR_u32_u32_2306_Sample)
        OR_u32_u32_2306_sample_completed_ <-& (OR_u32_u32_2306_Sample)
        OR_u32_u32_2306_sample_completed_ &-> ($null)
        OR_u32_u32_2306_update_start_ &-> (OR_u32_u32_2306_Update)
        OR_u32_u32_2306_update_completed_ <-& (OR_u32_u32_2306_Update)
        // Target expression
        // (as target) xx_xnotx_xi21
        // xx_xnotx_xi21
        // implicit reference
        // 		tmp21x_xix_xi22 := (xx_xnotx_xi21 ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 865
        // Source expression
        // (xx_xnotx_xi21 ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[XOR_u32_u32_2312_sample_start_] 
        $T[XOR_u32_u32_2312_sample_completed_] 
        $T[XOR_u32_u32_2312_update_start_] 
        $T[XOR_u32_u32_2312_update_completed_] 
        // xx_xnotx_xi21
        $T[R_xx_xnotx_xi21_2309_sample_start_] 
        $T[R_xx_xnotx_xi21_2309_sample_completed_] 
        $T[R_xx_xnotx_xi21_2309_update_start_] 
        $T[R_xx_xnotx_xi21_2309_update_completed_] 
        // implicit reference
        R_xx_xnotx_xi21_2309_sample_start_ <-& (OR_u32_u32_2306_update_completed_)
        R_xx_xnotx_xi21_2309_sample_completed_ <-& (R_xx_xnotx_xi21_2309_sample_start_)
        R_xx_xnotx_xi21_2309_update_start_ <-& (R_xx_xnotx_xi21_2309_sample_completed_)
        R_xx_xnotx_xi21_2309_update_completed_ <-& (R_xx_xnotx_xi21_2309_update_start_)
        XOR_u32_u32_2312_sample_start_ <-& (R_xx_xnotx_xi21_2309_update_completed_)
        ;;[XOR_u32_u32_2312_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_2312_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_2312_sample_start_ &-> (XOR_u32_u32_2312_Sample)
        XOR_u32_u32_2312_sample_completed_ <-& (XOR_u32_u32_2312_Sample)
        XOR_u32_u32_2312_sample_completed_ &-> ($null)
        XOR_u32_u32_2312_update_start_ &-> (XOR_u32_u32_2312_Update)
        XOR_u32_u32_2312_update_completed_ <-& (XOR_u32_u32_2312_Update)
        // Target expression
        // (as target) tmp21x_xix_xi22
        // tmp21x_xix_xi22
        // implicit reference
        // 		tmp25x_xix_xi23 := (tmp21x_xix_xi22 + iNsTr_53)
        //  file prog.aa, line 866
        // Source expression
        // (tmp21x_xix_xi22 + iNsTr_53)
        $T[ADD_u32_u32_2317_sample_start_] 
        $T[ADD_u32_u32_2317_sample_completed_] 
        $T[ADD_u32_u32_2317_update_start_] 
        $T[ADD_u32_u32_2317_update_completed_] 
        // tmp21x_xix_xi22
        $T[R_tmp21x_xix_xi22_2315_sample_start_] 
        $T[R_tmp21x_xix_xi22_2315_sample_completed_] 
        $T[R_tmp21x_xix_xi22_2315_update_start_] 
        $T[R_tmp21x_xix_xi22_2315_update_completed_] 
        // implicit reference
        R_tmp21x_xix_xi22_2315_sample_start_ <-& (XOR_u32_u32_2312_update_completed_)
        R_tmp21x_xix_xi22_2315_sample_completed_ <-& (R_tmp21x_xix_xi22_2315_sample_start_)
        R_tmp21x_xix_xi22_2315_update_start_ <-& (R_tmp21x_xix_xi22_2315_sample_completed_)
        R_tmp21x_xix_xi22_2315_update_completed_ <-& (R_tmp21x_xix_xi22_2315_update_start_)
        // iNsTr_53
        $T[R_iNsTr_53_2316_sample_start_] 
        $T[R_iNsTr_53_2316_sample_completed_] 
        $T[R_iNsTr_53_2316_update_start_] 
        $T[R_iNsTr_53_2316_update_completed_] 
        // implicit reference
        R_iNsTr_53_2316_sample_start_ <-& ($entry)
        R_iNsTr_53_2316_sample_completed_ <-& (R_iNsTr_53_2316_sample_start_)
        R_iNsTr_53_2316_update_start_ <-& (R_iNsTr_53_2316_sample_completed_)
        R_iNsTr_53_2316_update_completed_ <-& (R_iNsTr_53_2316_update_start_)
        ADD_u32_u32_2317_sample_start_ <-& (R_tmp21x_xix_xi22_2315_update_completed_)
        ADD_u32_u32_2317_sample_start_ <-& (R_iNsTr_53_2316_update_completed_)
        ;;[ADD_u32_u32_2317_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2317_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2317_sample_start_ &-> (ADD_u32_u32_2317_Sample)
        ADD_u32_u32_2317_sample_completed_ <-& (ADD_u32_u32_2317_Sample)
        ADD_u32_u32_2317_sample_completed_ &-> ($null)
        ADD_u32_u32_2317_update_start_ &-> (ADD_u32_u32_2317_Update)
        ADD_u32_u32_2317_update_completed_ <-& (ADD_u32_u32_2317_Update)
        // Target expression
        // (as target) tmp25x_xix_xi23
        // tmp25x_xix_xi23
        // implicit reference
        // 		tmp26x_xix_xi24 := (tmp25x_xix_xi23 - xx_xlcssa10)
        //  file prog.aa, line 867
        // Source expression
        // (tmp25x_xix_xi23 - xx_xlcssa10)
        $T[SUB_u32_u32_2322_sample_start_] 
        $T[SUB_u32_u32_2322_sample_completed_] 
        $T[SUB_u32_u32_2322_update_start_] 
        $T[SUB_u32_u32_2322_update_completed_] 
        // tmp25x_xix_xi23
        $T[R_tmp25x_xix_xi23_2320_sample_start_] 
        $T[R_tmp25x_xix_xi23_2320_sample_completed_] 
        $T[R_tmp25x_xix_xi23_2320_update_start_] 
        $T[R_tmp25x_xix_xi23_2320_update_completed_] 
        // implicit reference
        R_tmp25x_xix_xi23_2320_sample_start_ <-& (ADD_u32_u32_2317_update_completed_)
        R_tmp25x_xix_xi23_2320_sample_completed_ <-& (R_tmp25x_xix_xi23_2320_sample_start_)
        R_tmp25x_xix_xi23_2320_update_start_ <-& (R_tmp25x_xix_xi23_2320_sample_completed_)
        R_tmp25x_xix_xi23_2320_update_completed_ <-& (R_tmp25x_xix_xi23_2320_update_start_)
        // xx_xlcssa10
        $T[R_xx_xlcssa10_2321_sample_start_] 
        $T[R_xx_xlcssa10_2321_sample_completed_] 
        $T[R_xx_xlcssa10_2321_update_start_] 
        $T[R_xx_xlcssa10_2321_update_completed_] 
        // implicit reference
        R_xx_xlcssa10_2321_sample_start_ <-& ($entry)
        R_xx_xlcssa10_2321_sample_completed_ <-& (R_xx_xlcssa10_2321_sample_start_)
        R_xx_xlcssa10_2321_update_start_ <-& (R_xx_xlcssa10_2321_sample_completed_)
        R_xx_xlcssa10_2321_update_completed_ <-& (R_xx_xlcssa10_2321_update_start_)
        SUB_u32_u32_2322_sample_start_ <-& (R_tmp25x_xix_xi23_2320_update_completed_)
        SUB_u32_u32_2322_sample_start_ <-& (R_xx_xlcssa10_2321_update_completed_)
        ;;[SUB_u32_u32_2322_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_2322_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_2322_sample_start_ &-> (SUB_u32_u32_2322_Sample)
        SUB_u32_u32_2322_sample_completed_ <-& (SUB_u32_u32_2322_Sample)
        SUB_u32_u32_2322_sample_completed_ &-> ($null)
        SUB_u32_u32_2322_update_start_ &-> (SUB_u32_u32_2322_Update)
        SUB_u32_u32_2322_update_completed_ <-& (SUB_u32_u32_2322_Update)
        // Target expression
        // (as target) tmp26x_xix_xi24
        // tmp26x_xix_xi24
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2307_to_assign_stmt_2323__entry__ |-> (assign_stmt_2307_to_assign_stmt_2323)
      assign_stmt_2307_to_assign_stmt_2323__exit__ <-| (assign_stmt_2307_to_assign_stmt_2323)
      ::[assign_stmt_2344_to_assign_stmt_2370] 
      {
        // 		iNsTr_112 := (tempx_x0x_xlcssax_xix_xi27 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 874
        // Source expression
        // (tempx_x0x_xlcssax_xix_xi27 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_2343_sample_start_] 
        $T[AND_u32_u32_2343_sample_completed_] 
        $T[AND_u32_u32_2343_update_start_] 
        $T[AND_u32_u32_2343_update_completed_] 
        // tempx_x0x_xlcssax_xix_xi27
        $T[R_tempx_x0x_xlcssax_xix_xi27_2340_sample_start_] 
        $T[R_tempx_x0x_xlcssax_xix_xi27_2340_sample_completed_] 
        $T[R_tempx_x0x_xlcssax_xix_xi27_2340_update_start_] 
        $T[R_tempx_x0x_xlcssax_xix_xi27_2340_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssax_xix_xi27_2340_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssax_xix_xi27_2340_sample_completed_ <-& (R_tempx_x0x_xlcssax_xix_xi27_2340_sample_start_)
        R_tempx_x0x_xlcssax_xix_xi27_2340_update_start_ <-& (R_tempx_x0x_xlcssax_xix_xi27_2340_sample_completed_)
        R_tempx_x0x_xlcssax_xix_xi27_2340_update_completed_ <-& (R_tempx_x0x_xlcssax_xix_xi27_2340_update_start_)
        AND_u32_u32_2343_sample_start_ <-& (R_tempx_x0x_xlcssax_xix_xi27_2340_update_completed_)
        ;;[AND_u32_u32_2343_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2343_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2343_sample_start_ &-> (AND_u32_u32_2343_Sample)
        AND_u32_u32_2343_sample_completed_ <-& (AND_u32_u32_2343_Sample)
        AND_u32_u32_2343_sample_completed_ &-> ($null)
        AND_u32_u32_2343_update_start_ &-> (AND_u32_u32_2343_Update)
        AND_u32_u32_2343_update_completed_ <-& (AND_u32_u32_2343_Update)
        // Target expression
        // (as target) iNsTr_112
        // iNsTr_112
        // implicit reference
        // 		iNsTr_113 := (expx_x0x_xlcssax_xix_xi26 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 875
        // Source expression
        // (expx_x0x_xlcssax_xix_xi26 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_2349_sample_start_] 
        $T[SHL_u32_u32_2349_sample_completed_] 
        $T[SHL_u32_u32_2349_update_start_] 
        $T[SHL_u32_u32_2349_update_completed_] 
        // expx_x0x_xlcssax_xix_xi26
        $T[R_expx_x0x_xlcssax_xix_xi26_2346_sample_start_] 
        $T[R_expx_x0x_xlcssax_xix_xi26_2346_sample_completed_] 
        $T[R_expx_x0x_xlcssax_xix_xi26_2346_update_start_] 
        $T[R_expx_x0x_xlcssax_xix_xi26_2346_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssax_xix_xi26_2346_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssax_xix_xi26_2346_sample_completed_ <-& (R_expx_x0x_xlcssax_xix_xi26_2346_sample_start_)
        R_expx_x0x_xlcssax_xix_xi26_2346_update_start_ <-& (R_expx_x0x_xlcssax_xix_xi26_2346_sample_completed_)
        R_expx_x0x_xlcssax_xix_xi26_2346_update_completed_ <-& (R_expx_x0x_xlcssax_xix_xi26_2346_update_start_)
        SHL_u32_u32_2349_sample_start_ <-& (R_expx_x0x_xlcssax_xix_xi26_2346_update_completed_)
        ;;[SHL_u32_u32_2349_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2349_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2349_sample_start_ &-> (SHL_u32_u32_2349_Sample)
        SHL_u32_u32_2349_sample_completed_ <-& (SHL_u32_u32_2349_Sample)
        SHL_u32_u32_2349_sample_completed_ &-> ($null)
        SHL_u32_u32_2349_update_start_ &-> (SHL_u32_u32_2349_Update)
        SHL_u32_u32_2349_update_completed_ <-& (SHL_u32_u32_2349_Update)
        // Target expression
        // (as target) iNsTr_113
        // iNsTr_113
        // implicit reference
        // 		iNsTr_114 := (iNsTr_113 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 876
        // Source expression
        // (iNsTr_113 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_2355_sample_start_] 
        $T[ADD_u32_u32_2355_sample_completed_] 
        $T[ADD_u32_u32_2355_update_start_] 
        $T[ADD_u32_u32_2355_update_completed_] 
        // iNsTr_113
        $T[R_iNsTr_113_2352_sample_start_] 
        $T[R_iNsTr_113_2352_sample_completed_] 
        $T[R_iNsTr_113_2352_update_start_] 
        $T[R_iNsTr_113_2352_update_completed_] 
        // implicit reference
        R_iNsTr_113_2352_sample_start_ <-& (SHL_u32_u32_2349_update_completed_)
        R_iNsTr_113_2352_sample_completed_ <-& (R_iNsTr_113_2352_sample_start_)
        R_iNsTr_113_2352_update_start_ <-& (R_iNsTr_113_2352_sample_completed_)
        R_iNsTr_113_2352_update_completed_ <-& (R_iNsTr_113_2352_update_start_)
        ADD_u32_u32_2355_sample_start_ <-& (R_iNsTr_113_2352_update_completed_)
        ;;[ADD_u32_u32_2355_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2355_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2355_sample_start_ &-> (ADD_u32_u32_2355_Sample)
        ADD_u32_u32_2355_sample_completed_ <-& (ADD_u32_u32_2355_Sample)
        ADD_u32_u32_2355_sample_completed_ &-> ($null)
        ADD_u32_u32_2355_update_start_ &-> (ADD_u32_u32_2355_Update)
        ADD_u32_u32_2355_update_completed_ <-& (ADD_u32_u32_2355_Update)
        // Target expression
        // (as target) iNsTr_114
        // iNsTr_114
        // implicit reference
        // 		iNsTr_115 := (iNsTr_112 | iNsTr_63)
        //  file prog.aa, line 877
        // Source expression
        // (iNsTr_112 | iNsTr_63)
        $T[OR_u32_u32_2360_sample_start_] 
        $T[OR_u32_u32_2360_sample_completed_] 
        $T[OR_u32_u32_2360_update_start_] 
        $T[OR_u32_u32_2360_update_completed_] 
        // iNsTr_112
        $T[R_iNsTr_112_2358_sample_start_] 
        $T[R_iNsTr_112_2358_sample_completed_] 
        $T[R_iNsTr_112_2358_update_start_] 
        $T[R_iNsTr_112_2358_update_completed_] 
        // implicit reference
        R_iNsTr_112_2358_sample_start_ <-& (AND_u32_u32_2343_update_completed_)
        R_iNsTr_112_2358_sample_completed_ <-& (R_iNsTr_112_2358_sample_start_)
        R_iNsTr_112_2358_update_start_ <-& (R_iNsTr_112_2358_sample_completed_)
        R_iNsTr_112_2358_update_completed_ <-& (R_iNsTr_112_2358_update_start_)
        // iNsTr_63
        $T[R_iNsTr_63_2359_sample_start_] 
        $T[R_iNsTr_63_2359_sample_completed_] 
        $T[R_iNsTr_63_2359_update_start_] 
        $T[R_iNsTr_63_2359_update_completed_] 
        // implicit reference
        R_iNsTr_63_2359_sample_start_ <-& ($entry)
        R_iNsTr_63_2359_sample_completed_ <-& (R_iNsTr_63_2359_sample_start_)
        R_iNsTr_63_2359_update_start_ <-& (R_iNsTr_63_2359_sample_completed_)
        R_iNsTr_63_2359_update_completed_ <-& (R_iNsTr_63_2359_update_start_)
        OR_u32_u32_2360_sample_start_ <-& (R_iNsTr_112_2358_update_completed_)
        OR_u32_u32_2360_sample_start_ <-& (R_iNsTr_63_2359_update_completed_)
        ;;[OR_u32_u32_2360_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2360_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2360_sample_start_ &-> (OR_u32_u32_2360_Sample)
        OR_u32_u32_2360_sample_completed_ <-& (OR_u32_u32_2360_Sample)
        OR_u32_u32_2360_sample_completed_ &-> ($null)
        OR_u32_u32_2360_update_start_ &-> (OR_u32_u32_2360_Update)
        OR_u32_u32_2360_update_completed_ <-& (OR_u32_u32_2360_Update)
        // Target expression
        // (as target) iNsTr_115
        // iNsTr_115
        // implicit reference
        // 		iNsTr_116 := (iNsTr_115 | iNsTr_114)
        //  file prog.aa, line 878
        // Source expression
        // (iNsTr_115 | iNsTr_114)
        $T[OR_u32_u32_2365_sample_start_] 
        $T[OR_u32_u32_2365_sample_completed_] 
        $T[OR_u32_u32_2365_update_start_] 
        $T[OR_u32_u32_2365_update_completed_] 
        // iNsTr_115
        $T[R_iNsTr_115_2363_sample_start_] 
        $T[R_iNsTr_115_2363_sample_completed_] 
        $T[R_iNsTr_115_2363_update_start_] 
        $T[R_iNsTr_115_2363_update_completed_] 
        // implicit reference
        R_iNsTr_115_2363_sample_start_ <-& (OR_u32_u32_2360_update_completed_)
        R_iNsTr_115_2363_sample_completed_ <-& (R_iNsTr_115_2363_sample_start_)
        R_iNsTr_115_2363_update_start_ <-& (R_iNsTr_115_2363_sample_completed_)
        R_iNsTr_115_2363_update_completed_ <-& (R_iNsTr_115_2363_update_start_)
        // iNsTr_114
        $T[R_iNsTr_114_2364_sample_start_] 
        $T[R_iNsTr_114_2364_sample_completed_] 
        $T[R_iNsTr_114_2364_update_start_] 
        $T[R_iNsTr_114_2364_update_completed_] 
        // implicit reference
        R_iNsTr_114_2364_sample_start_ <-& (ADD_u32_u32_2355_update_completed_)
        R_iNsTr_114_2364_sample_completed_ <-& (R_iNsTr_114_2364_sample_start_)
        R_iNsTr_114_2364_update_start_ <-& (R_iNsTr_114_2364_sample_completed_)
        R_iNsTr_114_2364_update_completed_ <-& (R_iNsTr_114_2364_update_start_)
        OR_u32_u32_2365_sample_start_ <-& (R_iNsTr_115_2363_update_completed_)
        OR_u32_u32_2365_sample_start_ <-& (R_iNsTr_114_2364_update_completed_)
        ;;[OR_u32_u32_2365_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2365_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2365_sample_start_ &-> (OR_u32_u32_2365_Sample)
        OR_u32_u32_2365_sample_completed_ <-& (OR_u32_u32_2365_Sample)
        OR_u32_u32_2365_sample_completed_ &-> ($null)
        OR_u32_u32_2365_update_start_ &-> (OR_u32_u32_2365_Update)
        OR_u32_u32_2365_update_completed_ <-& (OR_u32_u32_2365_Update)
        // Target expression
        // (as target) iNsTr_116
        // iNsTr_116
        // implicit reference
        // 		tmp3x_xix_xi28 := ($bitcast ($float<8,23>) iNsTr_116 )
        //  file prog.aa, line 879
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_116 )
        $T[type_cast_2369_sample_start_] 
        $T[type_cast_2369_sample_completed_] 
        $T[type_cast_2369_update_start_] 
        $T[type_cast_2369_update_completed_] 
        // iNsTr_116
        $T[R_iNsTr_116_2368_sample_start_] 
        $T[R_iNsTr_116_2368_sample_completed_] 
        $T[R_iNsTr_116_2368_update_start_] 
        $T[R_iNsTr_116_2368_update_completed_] 
        // implicit reference
        R_iNsTr_116_2368_sample_start_ <-& (OR_u32_u32_2365_update_completed_)
        R_iNsTr_116_2368_sample_completed_ <-& (R_iNsTr_116_2368_sample_start_)
        R_iNsTr_116_2368_update_start_ <-& (R_iNsTr_116_2368_sample_completed_)
        R_iNsTr_116_2368_update_completed_ <-& (R_iNsTr_116_2368_update_start_)
        type_cast_2369_sample_start_ <-& (R_iNsTr_116_2368_update_completed_)
        ;;[type_cast_2369_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2369_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2369_sample_start_ &-> (type_cast_2369_Sample)
        type_cast_2369_sample_completed_ <-& (type_cast_2369_Sample)
        type_cast_2369_sample_completed_ &-> ($null)
        type_cast_2369_update_start_ &-> (type_cast_2369_Update)
        type_cast_2369_update_completed_ <-& (type_cast_2369_Update)
        // Target expression
        // (as target) tmp3x_xix_xi28
        // tmp3x_xix_xi28
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2344_to_assign_stmt_2370__entry__ |-> (assign_stmt_2344_to_assign_stmt_2370)
      assign_stmt_2344_to_assign_stmt_2370__exit__ <-| (assign_stmt_2344_to_assign_stmt_2370)
      ::[assign_stmt_2385_to_assign_stmt_2406] 
      {
        // 		iNsTr_47 := (iNsTr_46 + iNsTr_10)
        //  file prog.aa, line 885
        // Source expression
        // (iNsTr_46 + iNsTr_10)
        $T[ADD_f32_f32_2384_sample_start_] 
        $T[ADD_f32_f32_2384_sample_completed_] 
        $T[ADD_f32_f32_2384_update_start_] 
        $T[ADD_f32_f32_2384_update_completed_] 
        // iNsTr_46
        $T[R_iNsTr_46_2382_sample_start_] 
        $T[R_iNsTr_46_2382_sample_completed_] 
        $T[R_iNsTr_46_2382_update_start_] 
        $T[R_iNsTr_46_2382_update_completed_] 
        // implicit reference
        R_iNsTr_46_2382_sample_start_ <-& ($entry)
        R_iNsTr_46_2382_sample_completed_ <-& (R_iNsTr_46_2382_sample_start_)
        R_iNsTr_46_2382_update_start_ <-& (R_iNsTr_46_2382_sample_completed_)
        R_iNsTr_46_2382_update_completed_ <-& (R_iNsTr_46_2382_update_start_)
        // iNsTr_10
        $T[R_iNsTr_10_2383_sample_start_] 
        $T[R_iNsTr_10_2383_sample_completed_] 
        $T[R_iNsTr_10_2383_update_start_] 
        $T[R_iNsTr_10_2383_update_completed_] 
        // implicit reference
        R_iNsTr_10_2383_sample_start_ <-& ($entry)
        R_iNsTr_10_2383_sample_completed_ <-& (R_iNsTr_10_2383_sample_start_)
        R_iNsTr_10_2383_update_start_ <-& (R_iNsTr_10_2383_sample_completed_)
        R_iNsTr_10_2383_update_completed_ <-& (R_iNsTr_10_2383_update_start_)
        ADD_f32_f32_2384_sample_start_ <-& (R_iNsTr_46_2382_update_completed_)
        ADD_f32_f32_2384_sample_start_ <-& (R_iNsTr_10_2383_update_completed_)
        ;;[ADD_f32_f32_2384_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_2384_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_2384_sample_start_ &-> (ADD_f32_f32_2384_Sample)
        ADD_f32_f32_2384_sample_completed_ <-& (ADD_f32_f32_2384_Sample)
        ADD_f32_f32_2384_sample_completed_ &-> ($null)
        ADD_f32_f32_2384_update_start_ &-> (ADD_f32_f32_2384_Update)
        ADD_f32_f32_2384_update_completed_ <-& (ADD_f32_f32_2384_Update)
        // Target expression
        // (as target) iNsTr_47
        // iNsTr_47
        // implicit reference
        // 		iNsTr_48 := (iNsTr_47 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
        //  file prog.aa, line 886
        // Source expression
        // (iNsTr_47 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
        $T[MUL_f32_f32_2390_sample_start_] 
        $T[MUL_f32_f32_2390_sample_completed_] 
        $T[MUL_f32_f32_2390_update_start_] 
        $T[MUL_f32_f32_2390_update_completed_] 
        // iNsTr_47
        $T[R_iNsTr_47_2387_sample_start_] 
        $T[R_iNsTr_47_2387_sample_completed_] 
        $T[R_iNsTr_47_2387_update_start_] 
        $T[R_iNsTr_47_2387_update_completed_] 
        // implicit reference
        R_iNsTr_47_2387_sample_start_ <-& (ADD_f32_f32_2384_update_completed_)
        R_iNsTr_47_2387_sample_completed_ <-& (R_iNsTr_47_2387_sample_start_)
        R_iNsTr_47_2387_update_start_ <-& (R_iNsTr_47_2387_sample_completed_)
        R_iNsTr_47_2387_update_completed_ <-& (R_iNsTr_47_2387_update_start_)
        MUL_f32_f32_2390_sample_start_ <-& (R_iNsTr_47_2387_update_completed_)
        ;;[MUL_f32_f32_2390_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2390_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2390_sample_start_ &-> (MUL_f32_f32_2390_Sample)
        MUL_f32_f32_2390_sample_completed_ <-& (MUL_f32_f32_2390_Sample)
        MUL_f32_f32_2390_sample_completed_ &-> ($null)
        MUL_f32_f32_2390_update_start_ &-> (MUL_f32_f32_2390_Update)
        MUL_f32_f32_2390_update_completed_ <-& (MUL_f32_f32_2390_Update)
        // Target expression
        // (as target) iNsTr_48
        // iNsTr_48
        // implicit reference
        // 		iNsTr_49 := (iNsTr_48 + theta_prevx_x0)
        //  file prog.aa, line 887
        // Source expression
        // (iNsTr_48 + theta_prevx_x0)
        $T[ADD_f32_f32_2395_sample_start_] 
        $T[ADD_f32_f32_2395_sample_completed_] 
        $T[ADD_f32_f32_2395_update_start_] 
        $T[ADD_f32_f32_2395_update_completed_] 
        // iNsTr_48
        $T[R_iNsTr_48_2393_sample_start_] 
        $T[R_iNsTr_48_2393_sample_completed_] 
        $T[R_iNsTr_48_2393_update_start_] 
        $T[R_iNsTr_48_2393_update_completed_] 
        // implicit reference
        R_iNsTr_48_2393_sample_start_ <-& (MUL_f32_f32_2390_update_completed_)
        R_iNsTr_48_2393_sample_completed_ <-& (R_iNsTr_48_2393_sample_start_)
        R_iNsTr_48_2393_update_start_ <-& (R_iNsTr_48_2393_sample_completed_)
        R_iNsTr_48_2393_update_completed_ <-& (R_iNsTr_48_2393_update_start_)
        // theta_prevx_x0
        $T[R_theta_prevx_x0_2394_sample_start_] 
        $T[R_theta_prevx_x0_2394_sample_completed_] 
        $T[R_theta_prevx_x0_2394_update_start_] 
        $T[R_theta_prevx_x0_2394_update_completed_] 
        // implicit reference
        R_theta_prevx_x0_2394_sample_start_ <-& ($entry)
        R_theta_prevx_x0_2394_sample_completed_ <-& (R_theta_prevx_x0_2394_sample_start_)
        R_theta_prevx_x0_2394_update_start_ <-& (R_theta_prevx_x0_2394_sample_completed_)
        R_theta_prevx_x0_2394_update_completed_ <-& (R_theta_prevx_x0_2394_update_start_)
        ADD_f32_f32_2395_sample_start_ <-& (R_iNsTr_48_2393_update_completed_)
        ADD_f32_f32_2395_sample_start_ <-& (R_theta_prevx_x0_2394_update_completed_)
        ;;[ADD_f32_f32_2395_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_2395_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_2395_sample_start_ &-> (ADD_f32_f32_2395_Sample)
        ADD_f32_f32_2395_sample_completed_ <-& (ADD_f32_f32_2395_Sample)
        ADD_f32_f32_2395_sample_completed_ &-> ($null)
        ADD_f32_f32_2395_update_start_ &-> (ADD_f32_f32_2395_Update)
        ADD_f32_f32_2395_update_completed_ <-& (ADD_f32_f32_2395_Update)
        // Target expression
        // (as target) iNsTr_49
        // iNsTr_49
        // implicit reference
        // 		tmp10x_xix_xi := ($bitcast ($uint<32>) torque_refx_x0 )
        //  file prog.aa, line 888
        // Source expression
        // ($bitcast ($uint<32>) torque_refx_x0 )
        $T[type_cast_2399_sample_start_] 
        $T[type_cast_2399_sample_completed_] 
        $T[type_cast_2399_update_start_] 
        $T[type_cast_2399_update_completed_] 
        // torque_refx_x0
        $T[R_torque_refx_x0_2398_sample_start_] 
        $T[R_torque_refx_x0_2398_sample_completed_] 
        $T[R_torque_refx_x0_2398_update_start_] 
        $T[R_torque_refx_x0_2398_update_completed_] 
        // implicit reference
        R_torque_refx_x0_2398_sample_start_ <-& ($entry)
        R_torque_refx_x0_2398_sample_completed_ <-& (R_torque_refx_x0_2398_sample_start_)
        R_torque_refx_x0_2398_update_start_ <-& (R_torque_refx_x0_2398_sample_completed_)
        R_torque_refx_x0_2398_update_completed_ <-& (R_torque_refx_x0_2398_update_start_)
        type_cast_2399_sample_start_ <-& (R_torque_refx_x0_2398_update_completed_)
        ;;[type_cast_2399_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2399_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2399_sample_start_ &-> (type_cast_2399_Sample)
        type_cast_2399_sample_completed_ <-& (type_cast_2399_Sample)
        type_cast_2399_sample_completed_ &-> ($null)
        type_cast_2399_update_start_ &-> (type_cast_2399_Update)
        type_cast_2399_update_completed_ <-& (type_cast_2399_Update)
        // Target expression
        // (as target) tmp10x_xix_xi
        // tmp10x_xix_xi
        // implicit reference
        // 		iNsTr_50 := (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 890
        // Source expression
        // (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_2405_sample_start_] 
        $T[EQ_f32_u1_2405_sample_completed_] 
        $T[EQ_f32_u1_2405_update_start_] 
        $T[EQ_f32_u1_2405_update_completed_] 
        // torque_refx_x0
        $T[R_torque_refx_x0_2402_sample_start_] 
        $T[R_torque_refx_x0_2402_sample_completed_] 
        $T[R_torque_refx_x0_2402_update_start_] 
        $T[R_torque_refx_x0_2402_update_completed_] 
        // implicit reference
        R_torque_refx_x0_2402_sample_start_ <-& ($entry)
        R_torque_refx_x0_2402_sample_completed_ <-& (R_torque_refx_x0_2402_sample_start_)
        R_torque_refx_x0_2402_update_start_ <-& (R_torque_refx_x0_2402_sample_completed_)
        R_torque_refx_x0_2402_update_completed_ <-& (R_torque_refx_x0_2402_update_start_)
        EQ_f32_u1_2405_sample_start_ <-& (R_torque_refx_x0_2402_update_completed_)
        ;;[EQ_f32_u1_2405_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_2405_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_2405_sample_start_ &-> (EQ_f32_u1_2405_Sample)
        EQ_f32_u1_2405_sample_completed_ <-& (EQ_f32_u1_2405_Sample)
        EQ_f32_u1_2405_sample_completed_ &-> ($null)
        EQ_f32_u1_2405_update_start_ &-> (EQ_f32_u1_2405_Update)
        EQ_f32_u1_2405_update_completed_ <-& (EQ_f32_u1_2405_Update)
        // Target expression
        // (as target) iNsTr_50
        // iNsTr_50
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2385_to_assign_stmt_2406__entry__ |-> (assign_stmt_2385_to_assign_stmt_2406)
      assign_stmt_2385_to_assign_stmt_2406__exit__ <-| (assign_stmt_2385_to_assign_stmt_2406)
      // if-statement  
      //  file prog.aa, line 891
      ;;[if_stmt_2407_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2407__entry__ |-> (if_stmt_2407_dead_link)
      if_stmt_2407__exit__ <-| (if_stmt_2407_dead_link)
      ;;[if_stmt_2407_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2407__entry__ |-> (if_stmt_2407_eval_test)
      $P [R_iNsTr_50_2408_place]
      R_iNsTr_50_2408_place <-| (if_stmt_2407_eval_test)
      ;;[if_stmt_2407_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2407_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_50_2408_place |-> (if_stmt_2407_if_link if_stmt_2407_else_link)
      $P [omega_calcx_xexit_iq_err_calcx_xexit]
      omega_calcx_xexit_iq_err_calcx_xexit <-| (if_stmt_2407_if_link)
      $P [omega_calcx_xexit_bb_27]
      omega_calcx_xexit_bb_27 <-| (if_stmt_2407_else_link)
      ::[assign_stmt_2419_to_assign_stmt_2489] 
      {
        // 		iNsTr_76 := (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 895
        // Source expression
        // (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_2418_sample_start_] 
        $T[LSHR_u32_u32_2418_sample_completed_] 
        $T[LSHR_u32_u32_2418_update_start_] 
        $T[LSHR_u32_u32_2418_update_completed_] 
        // tmp10x_xix_xi
        $T[R_tmp10x_xix_xi_2415_sample_start_] 
        $T[R_tmp10x_xix_xi_2415_sample_completed_] 
        $T[R_tmp10x_xix_xi_2415_update_start_] 
        $T[R_tmp10x_xix_xi_2415_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi_2415_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi_2415_sample_completed_ <-& (R_tmp10x_xix_xi_2415_sample_start_)
        R_tmp10x_xix_xi_2415_update_start_ <-& (R_tmp10x_xix_xi_2415_sample_completed_)
        R_tmp10x_xix_xi_2415_update_completed_ <-& (R_tmp10x_xix_xi_2415_update_start_)
        LSHR_u32_u32_2418_sample_start_ <-& (R_tmp10x_xix_xi_2415_update_completed_)
        ;;[LSHR_u32_u32_2418_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_2418_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_2418_sample_start_ &-> (LSHR_u32_u32_2418_Sample)
        LSHR_u32_u32_2418_sample_completed_ <-& (LSHR_u32_u32_2418_Sample)
        LSHR_u32_u32_2418_sample_completed_ &-> ($null)
        LSHR_u32_u32_2418_update_start_ &-> (LSHR_u32_u32_2418_Update)
        LSHR_u32_u32_2418_update_completed_ <-& (LSHR_u32_u32_2418_Update)
        // Target expression
        // (as target) iNsTr_76
        // iNsTr_76
        // implicit reference
        // 		iNsTr_77 := (iNsTr_76 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 896
        // Source expression
        // (iNsTr_76 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_2424_sample_start_] 
        $T[AND_u32_u32_2424_sample_completed_] 
        $T[AND_u32_u32_2424_update_start_] 
        $T[AND_u32_u32_2424_update_completed_] 
        // iNsTr_76
        $T[R_iNsTr_76_2421_sample_start_] 
        $T[R_iNsTr_76_2421_sample_completed_] 
        $T[R_iNsTr_76_2421_update_start_] 
        $T[R_iNsTr_76_2421_update_completed_] 
        // implicit reference
        R_iNsTr_76_2421_sample_start_ <-& (LSHR_u32_u32_2418_update_completed_)
        R_iNsTr_76_2421_sample_completed_ <-& (R_iNsTr_76_2421_sample_start_)
        R_iNsTr_76_2421_update_start_ <-& (R_iNsTr_76_2421_sample_completed_)
        R_iNsTr_76_2421_update_completed_ <-& (R_iNsTr_76_2421_update_start_)
        AND_u32_u32_2424_sample_start_ <-& (R_iNsTr_76_2421_update_completed_)
        ;;[AND_u32_u32_2424_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2424_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2424_sample_start_ &-> (AND_u32_u32_2424_Sample)
        AND_u32_u32_2424_sample_completed_ <-& (AND_u32_u32_2424_Sample)
        AND_u32_u32_2424_sample_completed_ &-> ($null)
        AND_u32_u32_2424_update_start_ &-> (AND_u32_u32_2424_Update)
        AND_u32_u32_2424_update_completed_ <-& (AND_u32_u32_2424_Update)
        // Target expression
        // (as target) iNsTr_77
        // iNsTr_77
        // implicit reference
        // 		iNsTr_78 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 897
        // Source expression
        // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_2430_sample_start_] 
        $T[LSHR_u32_u32_2430_sample_completed_] 
        $T[LSHR_u32_u32_2430_update_start_] 
        $T[LSHR_u32_u32_2430_update_completed_] 
        // tmp6x_xix_xi2
        $T[R_tmp6x_xix_xi2_2427_sample_start_] 
        $T[R_tmp6x_xix_xi2_2427_sample_completed_] 
        $T[R_tmp6x_xix_xi2_2427_update_start_] 
        $T[R_tmp6x_xix_xi2_2427_update_completed_] 
        // implicit reference
        R_tmp6x_xix_xi2_2427_sample_start_ <-& ($entry)
        R_tmp6x_xix_xi2_2427_sample_completed_ <-& (R_tmp6x_xix_xi2_2427_sample_start_)
        R_tmp6x_xix_xi2_2427_update_start_ <-& (R_tmp6x_xix_xi2_2427_sample_completed_)
        R_tmp6x_xix_xi2_2427_update_completed_ <-& (R_tmp6x_xix_xi2_2427_update_start_)
        LSHR_u32_u32_2430_sample_start_ <-& (R_tmp6x_xix_xi2_2427_update_completed_)
        ;;[LSHR_u32_u32_2430_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_2430_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_2430_sample_start_ &-> (LSHR_u32_u32_2430_Sample)
        LSHR_u32_u32_2430_sample_completed_ <-& (LSHR_u32_u32_2430_Sample)
        LSHR_u32_u32_2430_sample_completed_ &-> ($null)
        LSHR_u32_u32_2430_update_start_ &-> (LSHR_u32_u32_2430_Update)
        LSHR_u32_u32_2430_update_completed_ <-& (LSHR_u32_u32_2430_Update)
        // Target expression
        // (as target) iNsTr_78
        // iNsTr_78
        // implicit reference
        // 		iNsTr_79 := (iNsTr_78 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 898
        // Source expression
        // (iNsTr_78 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_2436_sample_start_] 
        $T[AND_u32_u32_2436_sample_completed_] 
        $T[AND_u32_u32_2436_update_start_] 
        $T[AND_u32_u32_2436_update_completed_] 
        // iNsTr_78
        $T[R_iNsTr_78_2433_sample_start_] 
        $T[R_iNsTr_78_2433_sample_completed_] 
        $T[R_iNsTr_78_2433_update_start_] 
        $T[R_iNsTr_78_2433_update_completed_] 
        // implicit reference
        R_iNsTr_78_2433_sample_start_ <-& (LSHR_u32_u32_2430_update_completed_)
        R_iNsTr_78_2433_sample_completed_ <-& (R_iNsTr_78_2433_sample_start_)
        R_iNsTr_78_2433_update_start_ <-& (R_iNsTr_78_2433_sample_completed_)
        R_iNsTr_78_2433_update_completed_ <-& (R_iNsTr_78_2433_update_start_)
        AND_u32_u32_2436_sample_start_ <-& (R_iNsTr_78_2433_update_completed_)
        ;;[AND_u32_u32_2436_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2436_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2436_sample_start_ &-> (AND_u32_u32_2436_Sample)
        AND_u32_u32_2436_sample_completed_ <-& (AND_u32_u32_2436_Sample)
        AND_u32_u32_2436_sample_completed_ &-> ($null)
        AND_u32_u32_2436_update_start_ &-> (AND_u32_u32_2436_Update)
        AND_u32_u32_2436_update_completed_ <-& (AND_u32_u32_2436_Update)
        // Target expression
        // (as target) iNsTr_79
        // iNsTr_79
        // implicit reference
        // 		iNsTr_80 := (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 899
        // Source expression
        // (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_2442_sample_start_] 
        $T[SHL_u32_u32_2442_sample_completed_] 
        $T[SHL_u32_u32_2442_update_start_] 
        $T[SHL_u32_u32_2442_update_completed_] 
        // tmp10x_xix_xi
        $T[R_tmp10x_xix_xi_2439_sample_start_] 
        $T[R_tmp10x_xix_xi_2439_sample_completed_] 
        $T[R_tmp10x_xix_xi_2439_update_start_] 
        $T[R_tmp10x_xix_xi_2439_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi_2439_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi_2439_sample_completed_ <-& (R_tmp10x_xix_xi_2439_sample_start_)
        R_tmp10x_xix_xi_2439_update_start_ <-& (R_tmp10x_xix_xi_2439_sample_completed_)
        R_tmp10x_xix_xi_2439_update_completed_ <-& (R_tmp10x_xix_xi_2439_update_start_)
        SHL_u32_u32_2442_sample_start_ <-& (R_tmp10x_xix_xi_2439_update_completed_)
        ;;[SHL_u32_u32_2442_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2442_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2442_sample_start_ &-> (SHL_u32_u32_2442_Sample)
        SHL_u32_u32_2442_sample_completed_ <-& (SHL_u32_u32_2442_Sample)
        SHL_u32_u32_2442_sample_completed_ &-> ($null)
        SHL_u32_u32_2442_update_start_ &-> (SHL_u32_u32_2442_Update)
        SHL_u32_u32_2442_update_completed_ <-& (SHL_u32_u32_2442_Update)
        // Target expression
        // (as target) iNsTr_80
        // iNsTr_80
        // implicit reference
        // 		iNsTr_81 := (iNsTr_80 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 900
        // Source expression
        // (iNsTr_80 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_2448_sample_start_] 
        $T[AND_u32_u32_2448_sample_completed_] 
        $T[AND_u32_u32_2448_update_start_] 
        $T[AND_u32_u32_2448_update_completed_] 
        // iNsTr_80
        $T[R_iNsTr_80_2445_sample_start_] 
        $T[R_iNsTr_80_2445_sample_completed_] 
        $T[R_iNsTr_80_2445_update_start_] 
        $T[R_iNsTr_80_2445_update_completed_] 
        // implicit reference
        R_iNsTr_80_2445_sample_start_ <-& (SHL_u32_u32_2442_update_completed_)
        R_iNsTr_80_2445_sample_completed_ <-& (R_iNsTr_80_2445_sample_start_)
        R_iNsTr_80_2445_update_start_ <-& (R_iNsTr_80_2445_sample_completed_)
        R_iNsTr_80_2445_update_completed_ <-& (R_iNsTr_80_2445_update_start_)
        AND_u32_u32_2448_sample_start_ <-& (R_iNsTr_80_2445_update_completed_)
        ;;[AND_u32_u32_2448_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2448_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2448_sample_start_ &-> (AND_u32_u32_2448_Sample)
        AND_u32_u32_2448_sample_completed_ <-& (AND_u32_u32_2448_Sample)
        AND_u32_u32_2448_sample_completed_ &-> ($null)
        AND_u32_u32_2448_update_start_ &-> (AND_u32_u32_2448_Update)
        AND_u32_u32_2448_update_completed_ <-& (AND_u32_u32_2448_Update)
        // Target expression
        // (as target) iNsTr_81
        // iNsTr_81
        // implicit reference
        // 		iNsTr_82 := (iNsTr_81 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 901
        // Source expression
        // (iNsTr_81 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_2454_sample_start_] 
        $T[OR_u32_u32_2454_sample_completed_] 
        $T[OR_u32_u32_2454_update_start_] 
        $T[OR_u32_u32_2454_update_completed_] 
        // iNsTr_81
        $T[R_iNsTr_81_2451_sample_start_] 
        $T[R_iNsTr_81_2451_sample_completed_] 
        $T[R_iNsTr_81_2451_update_start_] 
        $T[R_iNsTr_81_2451_update_completed_] 
        // implicit reference
        R_iNsTr_81_2451_sample_start_ <-& (AND_u32_u32_2448_update_completed_)
        R_iNsTr_81_2451_sample_completed_ <-& (R_iNsTr_81_2451_sample_start_)
        R_iNsTr_81_2451_update_start_ <-& (R_iNsTr_81_2451_sample_completed_)
        R_iNsTr_81_2451_update_completed_ <-& (R_iNsTr_81_2451_update_start_)
        OR_u32_u32_2454_sample_start_ <-& (R_iNsTr_81_2451_update_completed_)
        ;;[OR_u32_u32_2454_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2454_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2454_sample_start_ &-> (OR_u32_u32_2454_Sample)
        OR_u32_u32_2454_sample_completed_ <-& (OR_u32_u32_2454_Sample)
        OR_u32_u32_2454_sample_completed_ &-> ($null)
        OR_u32_u32_2454_update_start_ &-> (OR_u32_u32_2454_Update)
        OR_u32_u32_2454_update_completed_ <-& (OR_u32_u32_2454_Update)
        // Target expression
        // (as target) iNsTr_82
        // iNsTr_82
        // implicit reference
        // 		iNsTr_83 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 902
        // Source expression
        // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[LSHR_u32_u32_2460_sample_start_] 
        $T[LSHR_u32_u32_2460_sample_completed_] 
        $T[LSHR_u32_u32_2460_update_start_] 
        $T[LSHR_u32_u32_2460_update_completed_] 
        // tmp6x_xix_xi2
        $T[R_tmp6x_xix_xi2_2457_sample_start_] 
        $T[R_tmp6x_xix_xi2_2457_sample_completed_] 
        $T[R_tmp6x_xix_xi2_2457_update_start_] 
        $T[R_tmp6x_xix_xi2_2457_update_completed_] 
        // implicit reference
        R_tmp6x_xix_xi2_2457_sample_start_ <-& ($entry)
        R_tmp6x_xix_xi2_2457_sample_completed_ <-& (R_tmp6x_xix_xi2_2457_sample_start_)
        R_tmp6x_xix_xi2_2457_update_start_ <-& (R_tmp6x_xix_xi2_2457_sample_completed_)
        R_tmp6x_xix_xi2_2457_update_completed_ <-& (R_tmp6x_xix_xi2_2457_update_start_)
        LSHR_u32_u32_2460_sample_start_ <-& (R_tmp6x_xix_xi2_2457_update_completed_)
        ;;[LSHR_u32_u32_2460_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_2460_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_2460_sample_start_ &-> (LSHR_u32_u32_2460_Sample)
        LSHR_u32_u32_2460_sample_completed_ <-& (LSHR_u32_u32_2460_Sample)
        LSHR_u32_u32_2460_sample_completed_ &-> ($null)
        LSHR_u32_u32_2460_update_start_ &-> (LSHR_u32_u32_2460_Update)
        LSHR_u32_u32_2460_update_completed_ <-& (LSHR_u32_u32_2460_Update)
        // Target expression
        // (as target) iNsTr_83
        // iNsTr_83
        // implicit reference
        // 		iNsTr_84 := (iNsTr_83 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        //  file prog.aa, line 903
        // Source expression
        // (iNsTr_83 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
        $T[AND_u32_u32_2466_sample_start_] 
        $T[AND_u32_u32_2466_sample_completed_] 
        $T[AND_u32_u32_2466_update_start_] 
        $T[AND_u32_u32_2466_update_completed_] 
        // iNsTr_83
        $T[R_iNsTr_83_2463_sample_start_] 
        $T[R_iNsTr_83_2463_sample_completed_] 
        $T[R_iNsTr_83_2463_update_start_] 
        $T[R_iNsTr_83_2463_update_completed_] 
        // implicit reference
        R_iNsTr_83_2463_sample_start_ <-& (LSHR_u32_u32_2460_update_completed_)
        R_iNsTr_83_2463_sample_completed_ <-& (R_iNsTr_83_2463_sample_start_)
        R_iNsTr_83_2463_update_start_ <-& (R_iNsTr_83_2463_sample_completed_)
        R_iNsTr_83_2463_update_completed_ <-& (R_iNsTr_83_2463_update_start_)
        AND_u32_u32_2466_sample_start_ <-& (R_iNsTr_83_2463_update_completed_)
        ;;[AND_u32_u32_2466_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2466_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2466_sample_start_ &-> (AND_u32_u32_2466_Sample)
        AND_u32_u32_2466_sample_completed_ <-& (AND_u32_u32_2466_Sample)
        AND_u32_u32_2466_sample_completed_ &-> ($null)
        AND_u32_u32_2466_update_start_ &-> (AND_u32_u32_2466_Update)
        AND_u32_u32_2466_update_completed_ <-& (AND_u32_u32_2466_Update)
        // Target expression
        // (as target) iNsTr_84
        // iNsTr_84
        // implicit reference
        // 		iNsTr_85 := (iNsTr_84 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        //  file prog.aa, line 904
        // Source expression
        // (iNsTr_84 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
        $T[OR_u32_u32_2472_sample_start_] 
        $T[OR_u32_u32_2472_sample_completed_] 
        $T[OR_u32_u32_2472_update_start_] 
        $T[OR_u32_u32_2472_update_completed_] 
        // iNsTr_84
        $T[R_iNsTr_84_2469_sample_start_] 
        $T[R_iNsTr_84_2469_sample_completed_] 
        $T[R_iNsTr_84_2469_update_start_] 
        $T[R_iNsTr_84_2469_update_completed_] 
        // implicit reference
        R_iNsTr_84_2469_sample_start_ <-& (AND_u32_u32_2466_update_completed_)
        R_iNsTr_84_2469_sample_completed_ <-& (R_iNsTr_84_2469_sample_start_)
        R_iNsTr_84_2469_update_start_ <-& (R_iNsTr_84_2469_sample_completed_)
        R_iNsTr_84_2469_update_completed_ <-& (R_iNsTr_84_2469_update_start_)
        OR_u32_u32_2472_sample_start_ <-& (R_iNsTr_84_2469_update_completed_)
        ;;[OR_u32_u32_2472_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2472_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2472_sample_start_ &-> (OR_u32_u32_2472_Sample)
        OR_u32_u32_2472_sample_completed_ <-& (OR_u32_u32_2472_Sample)
        OR_u32_u32_2472_sample_completed_ &-> ($null)
        OR_u32_u32_2472_update_start_ &-> (OR_u32_u32_2472_Update)
        OR_u32_u32_2472_update_completed_ <-& (OR_u32_u32_2472_Update)
        // Target expression
        // (as target) iNsTr_85
        // iNsTr_85
        // implicit reference
        // 		iNsTr_86 := (tmp10x_xix_xi ^ tmp6x_xix_xi2)
        //  file prog.aa, line 905
        // Source expression
        // (tmp10x_xix_xi ^ tmp6x_xix_xi2)
        $T[XOR_u32_u32_2477_sample_start_] 
        $T[XOR_u32_u32_2477_sample_completed_] 
        $T[XOR_u32_u32_2477_update_start_] 
        $T[XOR_u32_u32_2477_update_completed_] 
        // tmp10x_xix_xi
        $T[R_tmp10x_xix_xi_2475_sample_start_] 
        $T[R_tmp10x_xix_xi_2475_sample_completed_] 
        $T[R_tmp10x_xix_xi_2475_update_start_] 
        $T[R_tmp10x_xix_xi_2475_update_completed_] 
        // implicit reference
        R_tmp10x_xix_xi_2475_sample_start_ <-& ($entry)
        R_tmp10x_xix_xi_2475_sample_completed_ <-& (R_tmp10x_xix_xi_2475_sample_start_)
        R_tmp10x_xix_xi_2475_update_start_ <-& (R_tmp10x_xix_xi_2475_sample_completed_)
        R_tmp10x_xix_xi_2475_update_completed_ <-& (R_tmp10x_xix_xi_2475_update_start_)
        // tmp6x_xix_xi2
        $T[R_tmp6x_xix_xi2_2476_sample_start_] 
        $T[R_tmp6x_xix_xi2_2476_sample_completed_] 
        $T[R_tmp6x_xix_xi2_2476_update_start_] 
        $T[R_tmp6x_xix_xi2_2476_update_completed_] 
        // implicit reference
        R_tmp6x_xix_xi2_2476_sample_start_ <-& ($entry)
        R_tmp6x_xix_xi2_2476_sample_completed_ <-& (R_tmp6x_xix_xi2_2476_sample_start_)
        R_tmp6x_xix_xi2_2476_update_start_ <-& (R_tmp6x_xix_xi2_2476_sample_completed_)
        R_tmp6x_xix_xi2_2476_update_completed_ <-& (R_tmp6x_xix_xi2_2476_update_start_)
        XOR_u32_u32_2477_sample_start_ <-& (R_tmp10x_xix_xi_2475_update_completed_)
        XOR_u32_u32_2477_sample_start_ <-& (R_tmp6x_xix_xi2_2476_update_completed_)
        ;;[XOR_u32_u32_2477_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_2477_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_2477_sample_start_ &-> (XOR_u32_u32_2477_Sample)
        XOR_u32_u32_2477_sample_completed_ <-& (XOR_u32_u32_2477_Sample)
        XOR_u32_u32_2477_sample_completed_ &-> ($null)
        XOR_u32_u32_2477_update_start_ &-> (XOR_u32_u32_2477_Update)
        XOR_u32_u32_2477_update_completed_ <-& (XOR_u32_u32_2477_Update)
        // Target expression
        // (as target) iNsTr_86
        // iNsTr_86
        // implicit reference
        // 		iNsTr_87 := (iNsTr_86 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 906
        // Source expression
        // (iNsTr_86 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_2483_sample_start_] 
        $T[AND_u32_u32_2483_sample_completed_] 
        $T[AND_u32_u32_2483_update_start_] 
        $T[AND_u32_u32_2483_update_completed_] 
        // iNsTr_86
        $T[R_iNsTr_86_2480_sample_start_] 
        $T[R_iNsTr_86_2480_sample_completed_] 
        $T[R_iNsTr_86_2480_update_start_] 
        $T[R_iNsTr_86_2480_update_completed_] 
        // implicit reference
        R_iNsTr_86_2480_sample_start_ <-& (XOR_u32_u32_2477_update_completed_)
        R_iNsTr_86_2480_sample_completed_ <-& (R_iNsTr_86_2480_sample_start_)
        R_iNsTr_86_2480_update_start_ <-& (R_iNsTr_86_2480_sample_completed_)
        R_iNsTr_86_2480_update_completed_ <-& (R_iNsTr_86_2480_update_start_)
        AND_u32_u32_2483_sample_start_ <-& (R_iNsTr_86_2480_update_completed_)
        ;;[AND_u32_u32_2483_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2483_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2483_sample_start_ &-> (AND_u32_u32_2483_Sample)
        AND_u32_u32_2483_sample_completed_ <-& (AND_u32_u32_2483_Sample)
        AND_u32_u32_2483_sample_completed_ &-> ($null)
        AND_u32_u32_2483_update_start_ &-> (AND_u32_u32_2483_Update)
        AND_u32_u32_2483_update_completed_ <-& (AND_u32_u32_2483_Update)
        // Target expression
        // (as target) iNsTr_87
        // iNsTr_87
        // implicit reference
        // 		iNsTr_88 := (iNsTr_77 - iNsTr_79)
        //  file prog.aa, line 907
        // Source expression
        // (iNsTr_77 - iNsTr_79)
        $T[SUB_u32_u32_2488_sample_start_] 
        $T[SUB_u32_u32_2488_sample_completed_] 
        $T[SUB_u32_u32_2488_update_start_] 
        $T[SUB_u32_u32_2488_update_completed_] 
        // iNsTr_77
        $T[R_iNsTr_77_2486_sample_start_] 
        $T[R_iNsTr_77_2486_sample_completed_] 
        $T[R_iNsTr_77_2486_update_start_] 
        $T[R_iNsTr_77_2486_update_completed_] 
        // implicit reference
        R_iNsTr_77_2486_sample_start_ <-& (AND_u32_u32_2424_update_completed_)
        R_iNsTr_77_2486_sample_completed_ <-& (R_iNsTr_77_2486_sample_start_)
        R_iNsTr_77_2486_update_start_ <-& (R_iNsTr_77_2486_sample_completed_)
        R_iNsTr_77_2486_update_completed_ <-& (R_iNsTr_77_2486_update_start_)
        // iNsTr_79
        $T[R_iNsTr_79_2487_sample_start_] 
        $T[R_iNsTr_79_2487_sample_completed_] 
        $T[R_iNsTr_79_2487_update_start_] 
        $T[R_iNsTr_79_2487_update_completed_] 
        // implicit reference
        R_iNsTr_79_2487_sample_start_ <-& (AND_u32_u32_2436_update_completed_)
        R_iNsTr_79_2487_sample_completed_ <-& (R_iNsTr_79_2487_sample_start_)
        R_iNsTr_79_2487_update_start_ <-& (R_iNsTr_79_2487_sample_completed_)
        R_iNsTr_79_2487_update_completed_ <-& (R_iNsTr_79_2487_update_start_)
        SUB_u32_u32_2488_sample_start_ <-& (R_iNsTr_77_2486_update_completed_)
        SUB_u32_u32_2488_sample_start_ <-& (R_iNsTr_79_2487_update_completed_)
        ;;[SUB_u32_u32_2488_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_2488_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_2488_sample_start_ &-> (SUB_u32_u32_2488_Sample)
        SUB_u32_u32_2488_sample_completed_ <-& (SUB_u32_u32_2488_Sample)
        SUB_u32_u32_2488_sample_completed_ &-> ($null)
        SUB_u32_u32_2488_update_start_ &-> (SUB_u32_u32_2488_Update)
        SUB_u32_u32_2488_update_completed_ <-& (SUB_u32_u32_2488_Update)
        // Target expression
        // (as target) iNsTr_88
        // iNsTr_88
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2419_to_assign_stmt_2489__entry__ |-> (assign_stmt_2419_to_assign_stmt_2489)
      assign_stmt_2419_to_assign_stmt_2489__exit__ <-| (assign_stmt_2419_to_assign_stmt_2489)
      // control-path for switch  
      //  file prog.aa, line 908
      ;;[switch_stmt_2490_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_2490__entry__ |-> (switch_stmt_2490_dead_link)
      switch_stmt_2490__exit__ <-| (switch_stmt_2490_dead_link)
      //---------------------    switch statement  file prog.aa, line 908  --------------------------
      $P [switch_stmt_2490__condition_check_place__] 
      switch_stmt_2490__entry__ |-> (switch_stmt_2490__condition_check_place__)
      ||[switch_stmt_2490__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_2490__condition_check_place__ |-> (switch_stmt_2490__condition_check__)
      $P [switch_stmt_2490__select__] 
      switch_stmt_2490__select__ <-| (switch_stmt_2490__condition_check__)
      // switch choice 0
      ;;[switch_stmt_2490_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_27_xx_xloopexitx_xix_xix_xi]
      bb_27_xx_xloopexitx_xix_xix_xi <-| (switch_stmt_2490_choice_0)
      // switch choice 1
      ;;[switch_stmt_2490_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_27_udiv32x_xexitx_xpreheaderx_xix_xi]
      bb_27_udiv32x_xexitx_xpreheaderx_xix_xi <-| (switch_stmt_2490_choice_1)
      ;;[switch_stmt_2490_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_27_bbx_xnph7x_xix_xix_xix_xpreheader]
      bb_27_bbx_xnph7x_xix_xix_xix_xpreheader <-| (switch_stmt_2490_choice_default)
      switch_stmt_2490__select__ |-> (switch_stmt_2490_choice_0 switch_stmt_2490_choice_1 switch_stmt_2490_choice_default)
      //---------------------   end of switch statement  file prog.aa, line 908  --------------------------
      ::[assign_stmt_2522_to_assign_stmt_2527] 
      {
        // 		iNsTr_125 := (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 925
        // Source expression
        // (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_2521_sample_start_] 
        $T[LSHR_u32_u32_2521_sample_completed_] 
        $T[LSHR_u32_u32_2521_update_start_] 
        $T[LSHR_u32_u32_2521_update_completed_] 
        // xx_x016x_xix_xix_xi
        $T[R_xx_x016x_xix_xix_xi_2518_sample_start_] 
        $T[R_xx_x016x_xix_xix_xi_2518_sample_completed_] 
        $T[R_xx_x016x_xix_xix_xi_2518_update_start_] 
        $T[R_xx_x016x_xix_xix_xi_2518_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xix_xi_2518_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xix_xi_2518_sample_completed_ <-& (R_xx_x016x_xix_xix_xi_2518_sample_start_)
        R_xx_x016x_xix_xix_xi_2518_update_start_ <-& (R_xx_x016x_xix_xix_xi_2518_sample_completed_)
        R_xx_x016x_xix_xix_xi_2518_update_completed_ <-& (R_xx_x016x_xix_xix_xi_2518_update_start_)
        LSHR_u32_u32_2521_sample_start_ <-& (R_xx_x016x_xix_xix_xi_2518_update_completed_)
        ;;[LSHR_u32_u32_2521_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_2521_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_2521_sample_start_ &-> (LSHR_u32_u32_2521_Sample)
        LSHR_u32_u32_2521_sample_completed_ <-& (LSHR_u32_u32_2521_Sample)
        LSHR_u32_u32_2521_sample_completed_ &-> ($null)
        LSHR_u32_u32_2521_update_start_ &-> (LSHR_u32_u32_2521_Update)
        LSHR_u32_u32_2521_update_completed_ <-& (LSHR_u32_u32_2521_Update)
        // Target expression
        // (as target) iNsTr_125
        // iNsTr_125
        // implicit reference
        // 		iNsTr_126 := (iNsTr_125 > iNsTr_85)
        //  file prog.aa, line 927
        // Source expression
        // (iNsTr_125 > iNsTr_85)
        $T[UGT_u32_u1_2526_sample_start_] 
        $T[UGT_u32_u1_2526_sample_completed_] 
        $T[UGT_u32_u1_2526_update_start_] 
        $T[UGT_u32_u1_2526_update_completed_] 
        // iNsTr_125
        $T[R_iNsTr_125_2524_sample_start_] 
        $T[R_iNsTr_125_2524_sample_completed_] 
        $T[R_iNsTr_125_2524_update_start_] 
        $T[R_iNsTr_125_2524_update_completed_] 
        // implicit reference
        R_iNsTr_125_2524_sample_start_ <-& (LSHR_u32_u32_2521_update_completed_)
        R_iNsTr_125_2524_sample_completed_ <-& (R_iNsTr_125_2524_sample_start_)
        R_iNsTr_125_2524_update_start_ <-& (R_iNsTr_125_2524_sample_completed_)
        R_iNsTr_125_2524_update_completed_ <-& (R_iNsTr_125_2524_update_start_)
        // iNsTr_85
        $T[R_iNsTr_85_2525_sample_start_] 
        $T[R_iNsTr_85_2525_sample_completed_] 
        $T[R_iNsTr_85_2525_update_start_] 
        $T[R_iNsTr_85_2525_update_completed_] 
        // implicit reference
        R_iNsTr_85_2525_sample_start_ <-& ($entry)
        R_iNsTr_85_2525_sample_completed_ <-& (R_iNsTr_85_2525_sample_start_)
        R_iNsTr_85_2525_update_start_ <-& (R_iNsTr_85_2525_sample_completed_)
        R_iNsTr_85_2525_update_completed_ <-& (R_iNsTr_85_2525_update_start_)
        UGT_u32_u1_2526_sample_start_ <-& (R_iNsTr_125_2524_update_completed_)
        UGT_u32_u1_2526_sample_start_ <-& (R_iNsTr_85_2525_update_completed_)
        ;;[UGT_u32_u1_2526_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_2526_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_2526_sample_start_ &-> (UGT_u32_u1_2526_Sample)
        UGT_u32_u1_2526_sample_completed_ <-& (UGT_u32_u1_2526_Sample)
        UGT_u32_u1_2526_sample_completed_ &-> ($null)
        UGT_u32_u1_2526_update_start_ &-> (UGT_u32_u1_2526_Update)
        UGT_u32_u1_2526_update_completed_ <-& (UGT_u32_u1_2526_Update)
        // Target expression
        // (as target) iNsTr_126
        // iNsTr_126
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2522_to_assign_stmt_2527__entry__ |-> (assign_stmt_2522_to_assign_stmt_2527)
      assign_stmt_2522_to_assign_stmt_2527__exit__ <-| (assign_stmt_2522_to_assign_stmt_2527)
      // if-statement  
      //  file prog.aa, line 928
      ;;[if_stmt_2528_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2528__entry__ |-> (if_stmt_2528_dead_link)
      if_stmt_2528__exit__ <-| (if_stmt_2528_dead_link)
      ;;[if_stmt_2528_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2528__entry__ |-> (if_stmt_2528_eval_test)
      $P [R_iNsTr_126_2529_place]
      R_iNsTr_126_2529_place <-| (if_stmt_2528_eval_test)
      ;;[if_stmt_2528_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2528_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_126_2529_place |-> (if_stmt_2528_if_link if_stmt_2528_else_link)
      $P [bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader]
      bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader <-| (if_stmt_2528_if_link)
      $P [bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi]
      bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi <-| (if_stmt_2528_else_link)
      ::[assign_stmt_2556_to_assign_stmt_2567] 
      {
        // 		iNsTr_183 := (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 938
        // Source expression
        // (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_2555_sample_start_] 
        $T[SHL_u32_u32_2555_sample_completed_] 
        $T[SHL_u32_u32_2555_update_start_] 
        $T[SHL_u32_u32_2555_update_completed_] 
        // shifted_divisorx_x03x_xix_xix_xi
        $T[R_shifted_divisorx_x03x_xix_xix_xi_2552_sample_start_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi_2552_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi_2552_update_start_] 
        $T[R_shifted_divisorx_x03x_xix_xix_xi_2552_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xix_xix_xi_2552_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xix_xix_xi_2552_sample_completed_ <-& (R_shifted_divisorx_x03x_xix_xix_xi_2552_sample_start_)
        R_shifted_divisorx_x03x_xix_xix_xi_2552_update_start_ <-& (R_shifted_divisorx_x03x_xix_xix_xi_2552_sample_completed_)
        R_shifted_divisorx_x03x_xix_xix_xi_2552_update_completed_ <-& (R_shifted_divisorx_x03x_xix_xix_xi_2552_update_start_)
        SHL_u32_u32_2555_sample_start_ <-& (R_shifted_divisorx_x03x_xix_xix_xi_2552_update_completed_)
        ;;[SHL_u32_u32_2555_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2555_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2555_sample_start_ &-> (SHL_u32_u32_2555_Sample)
        SHL_u32_u32_2555_sample_completed_ <-& (SHL_u32_u32_2555_Sample)
        SHL_u32_u32_2555_sample_completed_ &-> ($null)
        SHL_u32_u32_2555_update_start_ &-> (SHL_u32_u32_2555_Update)
        SHL_u32_u32_2555_update_completed_ <-& (SHL_u32_u32_2555_Update)
        // Target expression
        // (as target) iNsTr_183
        // iNsTr_183
        // implicit reference
        // 		iNsTr_184 := (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 939
        // Source expression
        // (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_2561_sample_start_] 
        $T[SHL_u32_u32_2561_sample_completed_] 
        $T[SHL_u32_u32_2561_update_start_] 
        $T[SHL_u32_u32_2561_update_completed_] 
        // curr_quotientx_x02x_xix_xix_xi
        $T[R_curr_quotientx_x02x_xix_xix_xi_2558_sample_start_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi_2558_sample_completed_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi_2558_update_start_] 
        $T[R_curr_quotientx_x02x_xix_xix_xi_2558_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xix_xix_xi_2558_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xix_xix_xi_2558_sample_completed_ <-& (R_curr_quotientx_x02x_xix_xix_xi_2558_sample_start_)
        R_curr_quotientx_x02x_xix_xix_xi_2558_update_start_ <-& (R_curr_quotientx_x02x_xix_xix_xi_2558_sample_completed_)
        R_curr_quotientx_x02x_xix_xix_xi_2558_update_completed_ <-& (R_curr_quotientx_x02x_xix_xix_xi_2558_update_start_)
        SHL_u32_u32_2561_sample_start_ <-& (R_curr_quotientx_x02x_xix_xix_xi_2558_update_completed_)
        ;;[SHL_u32_u32_2561_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2561_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2561_sample_start_ &-> (SHL_u32_u32_2561_Sample)
        SHL_u32_u32_2561_sample_completed_ <-& (SHL_u32_u32_2561_Sample)
        SHL_u32_u32_2561_sample_completed_ &-> ($null)
        SHL_u32_u32_2561_update_start_ &-> (SHL_u32_u32_2561_Update)
        SHL_u32_u32_2561_update_completed_ <-& (SHL_u32_u32_2561_Update)
        // Target expression
        // (as target) iNsTr_184
        // iNsTr_184
        // implicit reference
        // 		iNsTr_185 := (iNsTr_183 < iNsTr_125)
        //  file prog.aa, line 941
        // Source expression
        // (iNsTr_183 < iNsTr_125)
        $T[ULT_u32_u1_2566_sample_start_] 
        $T[ULT_u32_u1_2566_sample_completed_] 
        $T[ULT_u32_u1_2566_update_start_] 
        $T[ULT_u32_u1_2566_update_completed_] 
        // iNsTr_183
        $T[R_iNsTr_183_2564_sample_start_] 
        $T[R_iNsTr_183_2564_sample_completed_] 
        $T[R_iNsTr_183_2564_update_start_] 
        $T[R_iNsTr_183_2564_update_completed_] 
        // implicit reference
        R_iNsTr_183_2564_sample_start_ <-& (SHL_u32_u32_2555_update_completed_)
        R_iNsTr_183_2564_sample_completed_ <-& (R_iNsTr_183_2564_sample_start_)
        R_iNsTr_183_2564_update_start_ <-& (R_iNsTr_183_2564_sample_completed_)
        R_iNsTr_183_2564_update_completed_ <-& (R_iNsTr_183_2564_update_start_)
        // iNsTr_125
        $T[R_iNsTr_125_2565_sample_start_] 
        $T[R_iNsTr_125_2565_sample_completed_] 
        $T[R_iNsTr_125_2565_update_start_] 
        $T[R_iNsTr_125_2565_update_completed_] 
        // implicit reference
        R_iNsTr_125_2565_sample_start_ <-& ($entry)
        R_iNsTr_125_2565_sample_completed_ <-& (R_iNsTr_125_2565_sample_start_)
        R_iNsTr_125_2565_update_start_ <-& (R_iNsTr_125_2565_sample_completed_)
        R_iNsTr_125_2565_update_completed_ <-& (R_iNsTr_125_2565_update_start_)
        ULT_u32_u1_2566_sample_start_ <-& (R_iNsTr_183_2564_update_completed_)
        ULT_u32_u1_2566_sample_start_ <-& (R_iNsTr_125_2565_update_completed_)
        ;;[ULT_u32_u1_2566_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_2566_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_2566_sample_start_ &-> (ULT_u32_u1_2566_Sample)
        ULT_u32_u1_2566_sample_completed_ <-& (ULT_u32_u1_2566_Sample)
        ULT_u32_u1_2566_sample_completed_ &-> ($null)
        ULT_u32_u1_2566_update_start_ &-> (ULT_u32_u1_2566_Update)
        ULT_u32_u1_2566_update_completed_ <-& (ULT_u32_u1_2566_Update)
        // Target expression
        // (as target) iNsTr_185
        // iNsTr_185
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2556_to_assign_stmt_2567__entry__ |-> (assign_stmt_2556_to_assign_stmt_2567)
      assign_stmt_2556_to_assign_stmt_2567__exit__ <-| (assign_stmt_2556_to_assign_stmt_2567)
      // if-statement  
      //  file prog.aa, line 942
      ;;[if_stmt_2568_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2568__entry__ |-> (if_stmt_2568_dead_link)
      if_stmt_2568__exit__ <-| (if_stmt_2568_dead_link)
      ;;[if_stmt_2568_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2568__entry__ |-> (if_stmt_2568_eval_test)
      $P [R_iNsTr_185_2569_place]
      R_iNsTr_185_2569_place <-| (if_stmt_2568_eval_test)
      ;;[if_stmt_2568_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2568_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_185_2569_place |-> (if_stmt_2568_if_link if_stmt_2568_else_link)
      $P [bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi]
      bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi <-| (if_stmt_2568_if_link)
      $P [bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit]
      bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit <-| (if_stmt_2568_else_link)
      ::[assign_stmt_2604_to_assign_stmt_2614] 
      {
        // 		iNsTr_152 := (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
        //  file prog.aa, line 954
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
        $T[ADD_u32_u32_2603_sample_start_] 
        $T[ADD_u32_u32_2603_sample_completed_] 
        $T[ADD_u32_u32_2603_update_start_] 
        $T[ADD_u32_u32_2603_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xix_xi
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi_2601_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi_2601_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi_2601_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xix_xi_2601_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi_2601_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi_2601_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi_2601_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi_2601_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi_2601_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xix_xi_2601_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi_2601_update_start_)
        // quotientx_x05x_xix_xix_xi
        $T[R_quotientx_x05x_xix_xix_xi_2602_sample_start_] 
        $T[R_quotientx_x05x_xix_xix_xi_2602_sample_completed_] 
        $T[R_quotientx_x05x_xix_xix_xi_2602_update_start_] 
        $T[R_quotientx_x05x_xix_xix_xi_2602_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xix_xix_xi_2602_sample_start_ <-& ($entry)
        R_quotientx_x05x_xix_xix_xi_2602_sample_completed_ <-& (R_quotientx_x05x_xix_xix_xi_2602_sample_start_)
        R_quotientx_x05x_xix_xix_xi_2602_update_start_ <-& (R_quotientx_x05x_xix_xix_xi_2602_sample_completed_)
        R_quotientx_x05x_xix_xix_xi_2602_update_completed_ <-& (R_quotientx_x05x_xix_xix_xi_2602_update_start_)
        ADD_u32_u32_2603_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xix_xi_2601_update_completed_)
        ADD_u32_u32_2603_sample_start_ <-& (R_quotientx_x05x_xix_xix_xi_2602_update_completed_)
        ;;[ADD_u32_u32_2603_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2603_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2603_sample_start_ &-> (ADD_u32_u32_2603_Sample)
        ADD_u32_u32_2603_sample_completed_ <-& (ADD_u32_u32_2603_Sample)
        ADD_u32_u32_2603_sample_completed_ &-> ($null)
        ADD_u32_u32_2603_update_start_ &-> (ADD_u32_u32_2603_Update)
        ADD_u32_u32_2603_update_completed_ <-& (ADD_u32_u32_2603_Update)
        // Target expression
        // (as target) iNsTr_152
        // iNsTr_152
        // implicit reference
        // 		iNsTr_153 := (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
        //  file prog.aa, line 955
        // Source expression
        // (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
        $T[SUB_u32_u32_2608_sample_start_] 
        $T[SUB_u32_u32_2608_sample_completed_] 
        $T[SUB_u32_u32_2608_update_start_] 
        $T[SUB_u32_u32_2608_update_completed_] 
        // xx_x016x_xix_xix_xi
        $T[R_xx_x016x_xix_xix_xi_2606_sample_start_] 
        $T[R_xx_x016x_xix_xix_xi_2606_sample_completed_] 
        $T[R_xx_x016x_xix_xix_xi_2606_update_start_] 
        $T[R_xx_x016x_xix_xix_xi_2606_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xix_xi_2606_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xix_xi_2606_sample_completed_ <-& (R_xx_x016x_xix_xix_xi_2606_sample_start_)
        R_xx_x016x_xix_xix_xi_2606_update_start_ <-& (R_xx_x016x_xix_xix_xi_2606_sample_completed_)
        R_xx_x016x_xix_xix_xi_2606_update_completed_ <-& (R_xx_x016x_xix_xix_xi_2606_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xix_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_2607_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_2607_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_2607_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_2607_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_2607_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_2607_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_2607_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_2607_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_2607_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_2607_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_2607_update_start_)
        SUB_u32_u32_2608_sample_start_ <-& (R_xx_x016x_xix_xix_xi_2606_update_completed_)
        SUB_u32_u32_2608_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xix_xi_2607_update_completed_)
        ;;[SUB_u32_u32_2608_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_2608_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_2608_sample_start_ &-> (SUB_u32_u32_2608_Sample)
        SUB_u32_u32_2608_sample_completed_ <-& (SUB_u32_u32_2608_Sample)
        SUB_u32_u32_2608_sample_completed_ &-> ($null)
        SUB_u32_u32_2608_update_start_ &-> (SUB_u32_u32_2608_Update)
        SUB_u32_u32_2608_update_completed_ <-& (SUB_u32_u32_2608_Update)
        // Target expression
        // (as target) iNsTr_153
        // iNsTr_153
        // implicit reference
        // 		iNsTr_154 := (iNsTr_153 < iNsTr_85)
        //  file prog.aa, line 957
        // Source expression
        // (iNsTr_153 < iNsTr_85)
        $T[ULT_u32_u1_2613_sample_start_] 
        $T[ULT_u32_u1_2613_sample_completed_] 
        $T[ULT_u32_u1_2613_update_start_] 
        $T[ULT_u32_u1_2613_update_completed_] 
        // iNsTr_153
        $T[R_iNsTr_153_2611_sample_start_] 
        $T[R_iNsTr_153_2611_sample_completed_] 
        $T[R_iNsTr_153_2611_update_start_] 
        $T[R_iNsTr_153_2611_update_completed_] 
        // implicit reference
        R_iNsTr_153_2611_sample_start_ <-& (SUB_u32_u32_2608_update_completed_)
        R_iNsTr_153_2611_sample_completed_ <-& (R_iNsTr_153_2611_sample_start_)
        R_iNsTr_153_2611_update_start_ <-& (R_iNsTr_153_2611_sample_completed_)
        R_iNsTr_153_2611_update_completed_ <-& (R_iNsTr_153_2611_update_start_)
        // iNsTr_85
        $T[R_iNsTr_85_2612_sample_start_] 
        $T[R_iNsTr_85_2612_sample_completed_] 
        $T[R_iNsTr_85_2612_update_start_] 
        $T[R_iNsTr_85_2612_update_completed_] 
        // implicit reference
        R_iNsTr_85_2612_sample_start_ <-& ($entry)
        R_iNsTr_85_2612_sample_completed_ <-& (R_iNsTr_85_2612_sample_start_)
        R_iNsTr_85_2612_update_start_ <-& (R_iNsTr_85_2612_sample_completed_)
        R_iNsTr_85_2612_update_completed_ <-& (R_iNsTr_85_2612_update_start_)
        ULT_u32_u1_2613_sample_start_ <-& (R_iNsTr_153_2611_update_completed_)
        ULT_u32_u1_2613_sample_start_ <-& (R_iNsTr_85_2612_update_completed_)
        ;;[ULT_u32_u1_2613_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_2613_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_2613_sample_start_ &-> (ULT_u32_u1_2613_Sample)
        ULT_u32_u1_2613_sample_completed_ <-& (ULT_u32_u1_2613_Sample)
        ULT_u32_u1_2613_sample_completed_ &-> ($null)
        ULT_u32_u1_2613_update_start_ &-> (ULT_u32_u1_2613_Update)
        ULT_u32_u1_2613_update_completed_ <-& (ULT_u32_u1_2613_Update)
        // Target expression
        // (as target) iNsTr_154
        // iNsTr_154
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2604_to_assign_stmt_2614__entry__ |-> (assign_stmt_2604_to_assign_stmt_2614)
      assign_stmt_2604_to_assign_stmt_2614__exit__ <-| (assign_stmt_2604_to_assign_stmt_2614)
      // if-statement  
      //  file prog.aa, line 958
      ;;[if_stmt_2615_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2615__entry__ |-> (if_stmt_2615_dead_link)
      if_stmt_2615__exit__ <-| (if_stmt_2615_dead_link)
      ;;[if_stmt_2615_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2615__entry__ |-> (if_stmt_2615_eval_test)
      $P [R_iNsTr_154_2616_place]
      R_iNsTr_154_2616_place <-| (if_stmt_2615_eval_test)
      ;;[if_stmt_2615_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2615_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_154_2616_place |-> (if_stmt_2615_if_link if_stmt_2615_else_link)
      $P [xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit]
      xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit <-| (if_stmt_2615_if_link)
      $P [xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi]
      xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi <-| (if_stmt_2615_else_link)
      ::[assign_stmt_2651_to_assign_stmt_2670] 
      {
        // 		iNsTr_104 := (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 973
        // Source expression
        // (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_2650_sample_start_] 
        $T[AND_u32_u32_2650_sample_completed_] 
        $T[AND_u32_u32_2650_update_start_] 
        $T[AND_u32_u32_2650_update_completed_] 
        // tempx_x0x_xphx_xix_xi
        $T[R_tempx_x0x_xphx_xix_xi_2647_sample_start_] 
        $T[R_tempx_x0x_xphx_xix_xi_2647_sample_completed_] 
        $T[R_tempx_x0x_xphx_xix_xi_2647_update_start_] 
        $T[R_tempx_x0x_xphx_xix_xi_2647_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xix_xi_2647_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xix_xi_2647_sample_completed_ <-& (R_tempx_x0x_xphx_xix_xi_2647_sample_start_)
        R_tempx_x0x_xphx_xix_xi_2647_update_start_ <-& (R_tempx_x0x_xphx_xix_xi_2647_sample_completed_)
        R_tempx_x0x_xphx_xix_xi_2647_update_completed_ <-& (R_tempx_x0x_xphx_xix_xi_2647_update_start_)
        AND_u32_u32_2650_sample_start_ <-& (R_tempx_x0x_xphx_xix_xi_2647_update_completed_)
        ;;[AND_u32_u32_2650_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2650_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2650_sample_start_ &-> (AND_u32_u32_2650_Sample)
        AND_u32_u32_2650_sample_completed_ <-& (AND_u32_u32_2650_Sample)
        AND_u32_u32_2650_sample_completed_ &-> ($null)
        AND_u32_u32_2650_update_start_ &-> (AND_u32_u32_2650_Update)
        AND_u32_u32_2650_update_completed_ <-& (AND_u32_u32_2650_Update)
        // Target expression
        // (as target) iNsTr_104
        // iNsTr_104
        // implicit reference
        // 		iNsTr_105 := (iNsTr_104 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 975
        // Source expression
        // (iNsTr_104 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_2656_sample_start_] 
        $T[EQ_u32_u1_2656_sample_completed_] 
        $T[EQ_u32_u1_2656_update_start_] 
        $T[EQ_u32_u1_2656_update_completed_] 
        // iNsTr_104
        $T[R_iNsTr_104_2653_sample_start_] 
        $T[R_iNsTr_104_2653_sample_completed_] 
        $T[R_iNsTr_104_2653_update_start_] 
        $T[R_iNsTr_104_2653_update_completed_] 
        // implicit reference
        R_iNsTr_104_2653_sample_start_ <-& (AND_u32_u32_2650_update_completed_)
        R_iNsTr_104_2653_sample_completed_ <-& (R_iNsTr_104_2653_sample_start_)
        R_iNsTr_104_2653_update_start_ <-& (R_iNsTr_104_2653_sample_completed_)
        R_iNsTr_104_2653_update_completed_ <-& (R_iNsTr_104_2653_update_start_)
        EQ_u32_u1_2656_sample_start_ <-& (R_iNsTr_104_2653_update_completed_)
        ;;[EQ_u32_u1_2656_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_2656_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_2656_sample_start_ &-> (EQ_u32_u1_2656_Sample)
        EQ_u32_u1_2656_sample_completed_ <-& (EQ_u32_u1_2656_Sample)
        EQ_u32_u1_2656_sample_completed_ &-> ($null)
        EQ_u32_u1_2656_update_start_ &-> (EQ_u32_u1_2656_Update)
        EQ_u32_u1_2656_update_completed_ <-& (EQ_u32_u1_2656_Update)
        // Target expression
        // (as target) iNsTr_105
        // iNsTr_105
        // implicit reference
        // 		iNsTr_106 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 977
        // Source expression
        // (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_2664_sample_start_] 
        $T[NEQ_i32_u1_2664_sample_completed_] 
        $T[NEQ_i32_u1_2664_update_start_] 
        $T[NEQ_i32_u1_2664_update_completed_] 
        // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi )
        $T[type_cast_2660_sample_start_] 
        $T[type_cast_2660_sample_completed_] 
        $T[type_cast_2660_update_start_] 
        $T[type_cast_2660_update_completed_] 
        // tempx_x0x_xphx_xix_xi
        $T[R_tempx_x0x_xphx_xix_xi_2659_sample_start_] 
        $T[R_tempx_x0x_xphx_xix_xi_2659_sample_completed_] 
        $T[R_tempx_x0x_xphx_xix_xi_2659_update_start_] 
        $T[R_tempx_x0x_xphx_xix_xi_2659_update_completed_] 
        // implicit reference
        R_tempx_x0x_xphx_xix_xi_2659_sample_start_ <-& ($entry)
        R_tempx_x0x_xphx_xix_xi_2659_sample_completed_ <-& (R_tempx_x0x_xphx_xix_xi_2659_sample_start_)
        R_tempx_x0x_xphx_xix_xi_2659_update_start_ <-& (R_tempx_x0x_xphx_xix_xi_2659_sample_completed_)
        R_tempx_x0x_xphx_xix_xi_2659_update_completed_ <-& (R_tempx_x0x_xphx_xix_xi_2659_update_start_)
        type_cast_2660_sample_start_ <-& (R_tempx_x0x_xphx_xix_xi_2659_update_completed_)
        ;;[type_cast_2660_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2660_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2660_sample_start_ &-> (type_cast_2660_Sample)
        type_cast_2660_sample_completed_ <-& (type_cast_2660_Sample)
        type_cast_2660_sample_completed_ &-> ($null)
        type_cast_2660_update_start_ &-> (type_cast_2660_Update)
        type_cast_2660_update_completed_ <-& (type_cast_2660_Update)
        // flow-through
        type_cast_2660_update_start_ <-& (type_cast_2660_sample_completed_)
        NEQ_i32_u1_2664_sample_start_ <-& (type_cast_2660_update_completed_)
        ;;[NEQ_i32_u1_2664_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_2664_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_2664_sample_start_ &-> (NEQ_i32_u1_2664_Sample)
        NEQ_i32_u1_2664_sample_completed_ <-& (NEQ_i32_u1_2664_Sample)
        NEQ_i32_u1_2664_sample_completed_ &-> ($null)
        NEQ_i32_u1_2664_update_start_ &-> (NEQ_i32_u1_2664_Update)
        NEQ_i32_u1_2664_update_completed_ <-& (NEQ_i32_u1_2664_Update)
        // Target expression
        // (as target) iNsTr_106
        // iNsTr_106
        // implicit reference
        // 		orx_xcond11x_xix_xi := (iNsTr_105 & iNsTr_106)
        //  file prog.aa, line 978
        // Source expression
        // (iNsTr_105 & iNsTr_106)
        $T[AND_u1_u1_2669_sample_start_] 
        $T[AND_u1_u1_2669_sample_completed_] 
        $T[AND_u1_u1_2669_update_start_] 
        $T[AND_u1_u1_2669_update_completed_] 
        // iNsTr_105
        $T[R_iNsTr_105_2667_sample_start_] 
        $T[R_iNsTr_105_2667_sample_completed_] 
        $T[R_iNsTr_105_2667_update_start_] 
        $T[R_iNsTr_105_2667_update_completed_] 
        // implicit reference
        R_iNsTr_105_2667_sample_start_ <-& (EQ_u32_u1_2656_update_completed_)
        R_iNsTr_105_2667_sample_completed_ <-& (R_iNsTr_105_2667_sample_start_)
        R_iNsTr_105_2667_update_start_ <-& (R_iNsTr_105_2667_sample_completed_)
        R_iNsTr_105_2667_update_completed_ <-& (R_iNsTr_105_2667_update_start_)
        // iNsTr_106
        $T[R_iNsTr_106_2668_sample_start_] 
        $T[R_iNsTr_106_2668_sample_completed_] 
        $T[R_iNsTr_106_2668_update_start_] 
        $T[R_iNsTr_106_2668_update_completed_] 
        // implicit reference
        R_iNsTr_106_2668_sample_start_ <-& (NEQ_i32_u1_2664_update_completed_)
        R_iNsTr_106_2668_sample_completed_ <-& (R_iNsTr_106_2668_sample_start_)
        R_iNsTr_106_2668_update_start_ <-& (R_iNsTr_106_2668_sample_completed_)
        R_iNsTr_106_2668_update_completed_ <-& (R_iNsTr_106_2668_update_start_)
        AND_u1_u1_2669_sample_start_ <-& (R_iNsTr_105_2667_update_completed_)
        AND_u1_u1_2669_sample_start_ <-& (R_iNsTr_106_2668_update_completed_)
        ;;[AND_u1_u1_2669_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_2669_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_2669_sample_start_ &-> (AND_u1_u1_2669_Sample)
        AND_u1_u1_2669_sample_completed_ <-& (AND_u1_u1_2669_Sample)
        AND_u1_u1_2669_sample_completed_ &-> ($null)
        AND_u1_u1_2669_update_start_ &-> (AND_u1_u1_2669_Update)
        AND_u1_u1_2669_update_completed_ <-& (AND_u1_u1_2669_Update)
        // Target expression
        // (as target) orx_xcond11x_xix_xi
        // orx_xcond11x_xix_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2651_to_assign_stmt_2670__entry__ |-> (assign_stmt_2651_to_assign_stmt_2670)
      assign_stmt_2651_to_assign_stmt_2670__exit__ <-| (assign_stmt_2651_to_assign_stmt_2670)
      // if-statement  
      //  file prog.aa, line 979
      ;;[if_stmt_2671_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2671__entry__ |-> (if_stmt_2671_dead_link)
      if_stmt_2671__exit__ <-| (if_stmt_2671_dead_link)
      ;;[if_stmt_2671_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2671__entry__ |-> (if_stmt_2671_eval_test)
      $P [R_orx_xcond11x_xix_xi_2672_place]
      R_orx_xcond11x_xix_xi_2672_place <-| (if_stmt_2671_eval_test)
      ;;[if_stmt_2671_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2671_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11x_xix_xi_2672_place |-> (if_stmt_2671_if_link if_stmt_2671_else_link)
      $P [udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader]
      udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader <-| (if_stmt_2671_if_link)
      $P [udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi]
      udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi <-| (if_stmt_2671_else_link)
      ::[assign_stmt_2699_to_assign_stmt_2730] 
      {
        // 		iNsTr_157 := (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 989
        // Source expression
        // (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_2698_sample_start_] 
        $T[SHL_u32_u32_2698_sample_completed_] 
        $T[SHL_u32_u32_2698_update_start_] 
        $T[SHL_u32_u32_2698_update_completed_] 
        // tempx_x012x_xix_xi
        $T[R_tempx_x012x_xix_xi_2695_sample_start_] 
        $T[R_tempx_x012x_xix_xi_2695_sample_completed_] 
        $T[R_tempx_x012x_xix_xi_2695_update_start_] 
        $T[R_tempx_x012x_xix_xi_2695_update_completed_] 
        // implicit reference
        R_tempx_x012x_xix_xi_2695_sample_start_ <-& ($entry)
        R_tempx_x012x_xix_xi_2695_sample_completed_ <-& (R_tempx_x012x_xix_xi_2695_sample_start_)
        R_tempx_x012x_xix_xi_2695_update_start_ <-& (R_tempx_x012x_xix_xi_2695_sample_completed_)
        R_tempx_x012x_xix_xi_2695_update_completed_ <-& (R_tempx_x012x_xix_xi_2695_update_start_)
        SHL_u32_u32_2698_sample_start_ <-& (R_tempx_x012x_xix_xi_2695_update_completed_)
        ;;[SHL_u32_u32_2698_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2698_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2698_sample_start_ &-> (SHL_u32_u32_2698_Sample)
        SHL_u32_u32_2698_sample_completed_ <-& (SHL_u32_u32_2698_Sample)
        SHL_u32_u32_2698_sample_completed_ &-> ($null)
        SHL_u32_u32_2698_update_start_ &-> (SHL_u32_u32_2698_Update)
        SHL_u32_u32_2698_update_completed_ <-& (SHL_u32_u32_2698_Update)
        // Target expression
        // (as target) iNsTr_157
        // iNsTr_157
        // implicit reference
        // 		iNsTr_158 := (iNsTr_157 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 990
        // Source expression
        // (iNsTr_157 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_2704_sample_start_] 
        $T[AND_u32_u32_2704_sample_completed_] 
        $T[AND_u32_u32_2704_update_start_] 
        $T[AND_u32_u32_2704_update_completed_] 
        // iNsTr_157
        $T[R_iNsTr_157_2701_sample_start_] 
        $T[R_iNsTr_157_2701_sample_completed_] 
        $T[R_iNsTr_157_2701_update_start_] 
        $T[R_iNsTr_157_2701_update_completed_] 
        // implicit reference
        R_iNsTr_157_2701_sample_start_ <-& (SHL_u32_u32_2698_update_completed_)
        R_iNsTr_157_2701_sample_completed_ <-& (R_iNsTr_157_2701_sample_start_)
        R_iNsTr_157_2701_update_start_ <-& (R_iNsTr_157_2701_sample_completed_)
        R_iNsTr_157_2701_update_completed_ <-& (R_iNsTr_157_2701_update_start_)
        AND_u32_u32_2704_sample_start_ <-& (R_iNsTr_157_2701_update_completed_)
        ;;[AND_u32_u32_2704_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2704_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2704_sample_start_ &-> (AND_u32_u32_2704_Sample)
        AND_u32_u32_2704_sample_completed_ <-& (AND_u32_u32_2704_Sample)
        AND_u32_u32_2704_sample_completed_ &-> ($null)
        AND_u32_u32_2704_update_start_ &-> (AND_u32_u32_2704_Update)
        AND_u32_u32_2704_update_completed_ <-& (AND_u32_u32_2704_Update)
        // Target expression
        // (as target) iNsTr_158
        // iNsTr_158
        // implicit reference
        // 		iNsTr_159 := (iNsTr_158 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 992
        // Source expression
        // (iNsTr_158 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_2710_sample_start_] 
        $T[EQ_u32_u1_2710_sample_completed_] 
        $T[EQ_u32_u1_2710_update_start_] 
        $T[EQ_u32_u1_2710_update_completed_] 
        // iNsTr_158
        $T[R_iNsTr_158_2707_sample_start_] 
        $T[R_iNsTr_158_2707_sample_completed_] 
        $T[R_iNsTr_158_2707_update_start_] 
        $T[R_iNsTr_158_2707_update_completed_] 
        // implicit reference
        R_iNsTr_158_2707_sample_start_ <-& (AND_u32_u32_2704_update_completed_)
        R_iNsTr_158_2707_sample_completed_ <-& (R_iNsTr_158_2707_sample_start_)
        R_iNsTr_158_2707_update_start_ <-& (R_iNsTr_158_2707_sample_completed_)
        R_iNsTr_158_2707_update_completed_ <-& (R_iNsTr_158_2707_update_start_)
        EQ_u32_u1_2710_sample_start_ <-& (R_iNsTr_158_2707_update_completed_)
        ;;[EQ_u32_u1_2710_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_2710_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_2710_sample_start_ &-> (EQ_u32_u1_2710_Sample)
        EQ_u32_u1_2710_sample_completed_ <-& (EQ_u32_u1_2710_Sample)
        EQ_u32_u1_2710_sample_completed_ &-> ($null)
        EQ_u32_u1_2710_update_start_ &-> (EQ_u32_u1_2710_Update)
        EQ_u32_u1_2710_update_completed_ <-& (EQ_u32_u1_2710_Update)
        // Target expression
        // (as target) iNsTr_159
        // iNsTr_159
        // implicit reference
        // 		iNsTr_160 := (($bitcast ($int<32>) iNsTr_157 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 994
        // Source expression
        // (($bitcast ($int<32>) iNsTr_157 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_2718_sample_start_] 
        $T[NEQ_i32_u1_2718_sample_completed_] 
        $T[NEQ_i32_u1_2718_update_start_] 
        $T[NEQ_i32_u1_2718_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_157 )
        $T[type_cast_2714_sample_start_] 
        $T[type_cast_2714_sample_completed_] 
        $T[type_cast_2714_update_start_] 
        $T[type_cast_2714_update_completed_] 
        // iNsTr_157
        $T[R_iNsTr_157_2713_sample_start_] 
        $T[R_iNsTr_157_2713_sample_completed_] 
        $T[R_iNsTr_157_2713_update_start_] 
        $T[R_iNsTr_157_2713_update_completed_] 
        // implicit reference
        R_iNsTr_157_2713_sample_start_ <-& (SHL_u32_u32_2698_update_completed_)
        R_iNsTr_157_2713_sample_completed_ <-& (R_iNsTr_157_2713_sample_start_)
        R_iNsTr_157_2713_update_start_ <-& (R_iNsTr_157_2713_sample_completed_)
        R_iNsTr_157_2713_update_completed_ <-& (R_iNsTr_157_2713_update_start_)
        type_cast_2714_sample_start_ <-& (R_iNsTr_157_2713_update_completed_)
        ;;[type_cast_2714_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2714_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2714_sample_start_ &-> (type_cast_2714_Sample)
        type_cast_2714_sample_completed_ <-& (type_cast_2714_Sample)
        type_cast_2714_sample_completed_ &-> ($null)
        type_cast_2714_update_start_ &-> (type_cast_2714_Update)
        type_cast_2714_update_completed_ <-& (type_cast_2714_Update)
        // flow-through
        type_cast_2714_update_start_ <-& (type_cast_2714_sample_completed_)
        NEQ_i32_u1_2718_sample_start_ <-& (type_cast_2714_update_completed_)
        ;;[NEQ_i32_u1_2718_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_2718_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_2718_sample_start_ &-> (NEQ_i32_u1_2718_Sample)
        NEQ_i32_u1_2718_sample_completed_ <-& (NEQ_i32_u1_2718_Sample)
        NEQ_i32_u1_2718_sample_completed_ &-> ($null)
        NEQ_i32_u1_2718_update_start_ &-> (NEQ_i32_u1_2718_Update)
        NEQ_i32_u1_2718_update_completed_ <-& (NEQ_i32_u1_2718_Update)
        // Target expression
        // (as target) iNsTr_160
        // iNsTr_160
        // implicit reference
        // 		orx_xcondx_xix_xi := (iNsTr_159 & iNsTr_160)
        //  file prog.aa, line 995
        // Source expression
        // (iNsTr_159 & iNsTr_160)
        $T[AND_u1_u1_2723_sample_start_] 
        $T[AND_u1_u1_2723_sample_completed_] 
        $T[AND_u1_u1_2723_update_start_] 
        $T[AND_u1_u1_2723_update_completed_] 
        // iNsTr_159
        $T[R_iNsTr_159_2721_sample_start_] 
        $T[R_iNsTr_159_2721_sample_completed_] 
        $T[R_iNsTr_159_2721_update_start_] 
        $T[R_iNsTr_159_2721_update_completed_] 
        // implicit reference
        R_iNsTr_159_2721_sample_start_ <-& (EQ_u32_u1_2710_update_completed_)
        R_iNsTr_159_2721_sample_completed_ <-& (R_iNsTr_159_2721_sample_start_)
        R_iNsTr_159_2721_update_start_ <-& (R_iNsTr_159_2721_sample_completed_)
        R_iNsTr_159_2721_update_completed_ <-& (R_iNsTr_159_2721_update_start_)
        // iNsTr_160
        $T[R_iNsTr_160_2722_sample_start_] 
        $T[R_iNsTr_160_2722_sample_completed_] 
        $T[R_iNsTr_160_2722_update_start_] 
        $T[R_iNsTr_160_2722_update_completed_] 
        // implicit reference
        R_iNsTr_160_2722_sample_start_ <-& (NEQ_i32_u1_2718_update_completed_)
        R_iNsTr_160_2722_sample_completed_ <-& (R_iNsTr_160_2722_sample_start_)
        R_iNsTr_160_2722_update_start_ <-& (R_iNsTr_160_2722_sample_completed_)
        R_iNsTr_160_2722_update_completed_ <-& (R_iNsTr_160_2722_update_start_)
        AND_u1_u1_2723_sample_start_ <-& (R_iNsTr_159_2721_update_completed_)
        AND_u1_u1_2723_sample_start_ <-& (R_iNsTr_160_2722_update_completed_)
        ;;[AND_u1_u1_2723_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_2723_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_2723_sample_start_ &-> (AND_u1_u1_2723_Sample)
        AND_u1_u1_2723_sample_completed_ <-& (AND_u1_u1_2723_Sample)
        AND_u1_u1_2723_sample_completed_ &-> ($null)
        AND_u1_u1_2723_update_start_ &-> (AND_u1_u1_2723_Update)
        AND_u1_u1_2723_update_completed_ <-& (AND_u1_u1_2723_Update)
        // Target expression
        // (as target) orx_xcondx_xix_xi
        // orx_xcondx_xix_xi
        // implicit reference
        // 		indvarx_xnextx_xix_xi := (iNsTr_156 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 996
        // Source expression
        // (iNsTr_156 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_2729_sample_start_] 
        $T[ADD_u32_u32_2729_sample_completed_] 
        $T[ADD_u32_u32_2729_update_start_] 
        $T[ADD_u32_u32_2729_update_completed_] 
        // iNsTr_156
        $T[R_iNsTr_156_2726_sample_start_] 
        $T[R_iNsTr_156_2726_sample_completed_] 
        $T[R_iNsTr_156_2726_update_start_] 
        $T[R_iNsTr_156_2726_update_completed_] 
        // implicit reference
        R_iNsTr_156_2726_sample_start_ <-& ($entry)
        R_iNsTr_156_2726_sample_completed_ <-& (R_iNsTr_156_2726_sample_start_)
        R_iNsTr_156_2726_update_start_ <-& (R_iNsTr_156_2726_sample_completed_)
        R_iNsTr_156_2726_update_completed_ <-& (R_iNsTr_156_2726_update_start_)
        ADD_u32_u32_2729_sample_start_ <-& (R_iNsTr_156_2726_update_completed_)
        ;;[ADD_u32_u32_2729_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2729_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2729_sample_start_ &-> (ADD_u32_u32_2729_Sample)
        ADD_u32_u32_2729_sample_completed_ <-& (ADD_u32_u32_2729_Sample)
        ADD_u32_u32_2729_sample_completed_ &-> ($null)
        ADD_u32_u32_2729_update_start_ &-> (ADD_u32_u32_2729_Update)
        ADD_u32_u32_2729_update_completed_ <-& (ADD_u32_u32_2729_Update)
        // Target expression
        // (as target) indvarx_xnextx_xix_xi
        // indvarx_xnextx_xix_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2699_to_assign_stmt_2730__entry__ |-> (assign_stmt_2699_to_assign_stmt_2730)
      assign_stmt_2699_to_assign_stmt_2730__exit__ <-| (assign_stmt_2699_to_assign_stmt_2730)
      // if-statement  
      //  file prog.aa, line 997
      ;;[if_stmt_2731_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2731__entry__ |-> (if_stmt_2731_dead_link)
      if_stmt_2731__exit__ <-| (if_stmt_2731_dead_link)
      ;;[if_stmt_2731_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2731__entry__ |-> (if_stmt_2731_eval_test)
      $P [R_orx_xcondx_xix_xi_2732_place]
      R_orx_xcondx_xix_xi_2732_place <-| (if_stmt_2731_eval_test)
      ;;[if_stmt_2731_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2731_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xix_xi_2732_place |-> (if_stmt_2731_if_link if_stmt_2731_else_link)
      $P [udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi]
      udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi <-| (if_stmt_2731_if_link)
      $P [udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi]
      udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi <-| (if_stmt_2731_else_link)
      ::[assign_stmt_2752_to_assign_stmt_2768] 
      {
        // 		xx_xnotx_xi := (iNsTr_78 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
        //  file prog.aa, line 1003
        // Source expression
        // (iNsTr_78 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
        $T[OR_u32_u32_2751_sample_start_] 
        $T[OR_u32_u32_2751_sample_completed_] 
        $T[OR_u32_u32_2751_update_start_] 
        $T[OR_u32_u32_2751_update_completed_] 
        // iNsTr_78
        $T[R_iNsTr_78_2748_sample_start_] 
        $T[R_iNsTr_78_2748_sample_completed_] 
        $T[R_iNsTr_78_2748_update_start_] 
        $T[R_iNsTr_78_2748_update_completed_] 
        // implicit reference
        R_iNsTr_78_2748_sample_start_ <-& ($entry)
        R_iNsTr_78_2748_sample_completed_ <-& (R_iNsTr_78_2748_sample_start_)
        R_iNsTr_78_2748_update_start_ <-& (R_iNsTr_78_2748_sample_completed_)
        R_iNsTr_78_2748_update_completed_ <-& (R_iNsTr_78_2748_update_start_)
        OR_u32_u32_2751_sample_start_ <-& (R_iNsTr_78_2748_update_completed_)
        ;;[OR_u32_u32_2751_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2751_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2751_sample_start_ &-> (OR_u32_u32_2751_Sample)
        OR_u32_u32_2751_sample_completed_ <-& (OR_u32_u32_2751_Sample)
        OR_u32_u32_2751_sample_completed_ &-> ($null)
        OR_u32_u32_2751_update_start_ &-> (OR_u32_u32_2751_Update)
        OR_u32_u32_2751_update_completed_ <-& (OR_u32_u32_2751_Update)
        // Target expression
        // (as target) xx_xnotx_xi
        // xx_xnotx_xi
        // implicit reference
        // 		tmp21x_xix_xi := (xx_xnotx_xi ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 1004
        // Source expression
        // (xx_xnotx_xi ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[XOR_u32_u32_2757_sample_start_] 
        $T[XOR_u32_u32_2757_sample_completed_] 
        $T[XOR_u32_u32_2757_update_start_] 
        $T[XOR_u32_u32_2757_update_completed_] 
        // xx_xnotx_xi
        $T[R_xx_xnotx_xi_2754_sample_start_] 
        $T[R_xx_xnotx_xi_2754_sample_completed_] 
        $T[R_xx_xnotx_xi_2754_update_start_] 
        $T[R_xx_xnotx_xi_2754_update_completed_] 
        // implicit reference
        R_xx_xnotx_xi_2754_sample_start_ <-& (OR_u32_u32_2751_update_completed_)
        R_xx_xnotx_xi_2754_sample_completed_ <-& (R_xx_xnotx_xi_2754_sample_start_)
        R_xx_xnotx_xi_2754_update_start_ <-& (R_xx_xnotx_xi_2754_sample_completed_)
        R_xx_xnotx_xi_2754_update_completed_ <-& (R_xx_xnotx_xi_2754_update_start_)
        XOR_u32_u32_2757_sample_start_ <-& (R_xx_xnotx_xi_2754_update_completed_)
        ;;[XOR_u32_u32_2757_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u32_u32_2757_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u32_u32_2757_sample_start_ &-> (XOR_u32_u32_2757_Sample)
        XOR_u32_u32_2757_sample_completed_ <-& (XOR_u32_u32_2757_Sample)
        XOR_u32_u32_2757_sample_completed_ &-> ($null)
        XOR_u32_u32_2757_update_start_ &-> (XOR_u32_u32_2757_Update)
        XOR_u32_u32_2757_update_completed_ <-& (XOR_u32_u32_2757_Update)
        // Target expression
        // (as target) tmp21x_xix_xi
        // tmp21x_xix_xi
        // implicit reference
        // 		tmp25x_xix_xi := (iNsTr_77 + tmp21x_xix_xi)
        //  file prog.aa, line 1005
        // Source expression
        // (iNsTr_77 + tmp21x_xix_xi)
        $T[ADD_u32_u32_2762_sample_start_] 
        $T[ADD_u32_u32_2762_sample_completed_] 
        $T[ADD_u32_u32_2762_update_start_] 
        $T[ADD_u32_u32_2762_update_completed_] 
        // iNsTr_77
        $T[R_iNsTr_77_2760_sample_start_] 
        $T[R_iNsTr_77_2760_sample_completed_] 
        $T[R_iNsTr_77_2760_update_start_] 
        $T[R_iNsTr_77_2760_update_completed_] 
        // implicit reference
        R_iNsTr_77_2760_sample_start_ <-& ($entry)
        R_iNsTr_77_2760_sample_completed_ <-& (R_iNsTr_77_2760_sample_start_)
        R_iNsTr_77_2760_update_start_ <-& (R_iNsTr_77_2760_sample_completed_)
        R_iNsTr_77_2760_update_completed_ <-& (R_iNsTr_77_2760_update_start_)
        // tmp21x_xix_xi
        $T[R_tmp21x_xix_xi_2761_sample_start_] 
        $T[R_tmp21x_xix_xi_2761_sample_completed_] 
        $T[R_tmp21x_xix_xi_2761_update_start_] 
        $T[R_tmp21x_xix_xi_2761_update_completed_] 
        // implicit reference
        R_tmp21x_xix_xi_2761_sample_start_ <-& (XOR_u32_u32_2757_update_completed_)
        R_tmp21x_xix_xi_2761_sample_completed_ <-& (R_tmp21x_xix_xi_2761_sample_start_)
        R_tmp21x_xix_xi_2761_update_start_ <-& (R_tmp21x_xix_xi_2761_sample_completed_)
        R_tmp21x_xix_xi_2761_update_completed_ <-& (R_tmp21x_xix_xi_2761_update_start_)
        ADD_u32_u32_2762_sample_start_ <-& (R_iNsTr_77_2760_update_completed_)
        ADD_u32_u32_2762_sample_start_ <-& (R_tmp21x_xix_xi_2761_update_completed_)
        ;;[ADD_u32_u32_2762_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2762_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2762_sample_start_ &-> (ADD_u32_u32_2762_Sample)
        ADD_u32_u32_2762_sample_completed_ <-& (ADD_u32_u32_2762_Sample)
        ADD_u32_u32_2762_sample_completed_ &-> ($null)
        ADD_u32_u32_2762_update_start_ &-> (ADD_u32_u32_2762_Update)
        ADD_u32_u32_2762_update_completed_ <-& (ADD_u32_u32_2762_Update)
        // Target expression
        // (as target) tmp25x_xix_xi
        // tmp25x_xix_xi
        // implicit reference
        // 		tmp26x_xix_xi := (tmp25x_xix_xi - xx_xlcssa5)
        //  file prog.aa, line 1006
        // Source expression
        // (tmp25x_xix_xi - xx_xlcssa5)
        $T[SUB_u32_u32_2767_sample_start_] 
        $T[SUB_u32_u32_2767_sample_completed_] 
        $T[SUB_u32_u32_2767_update_start_] 
        $T[SUB_u32_u32_2767_update_completed_] 
        // tmp25x_xix_xi
        $T[R_tmp25x_xix_xi_2765_sample_start_] 
        $T[R_tmp25x_xix_xi_2765_sample_completed_] 
        $T[R_tmp25x_xix_xi_2765_update_start_] 
        $T[R_tmp25x_xix_xi_2765_update_completed_] 
        // implicit reference
        R_tmp25x_xix_xi_2765_sample_start_ <-& (ADD_u32_u32_2762_update_completed_)
        R_tmp25x_xix_xi_2765_sample_completed_ <-& (R_tmp25x_xix_xi_2765_sample_start_)
        R_tmp25x_xix_xi_2765_update_start_ <-& (R_tmp25x_xix_xi_2765_sample_completed_)
        R_tmp25x_xix_xi_2765_update_completed_ <-& (R_tmp25x_xix_xi_2765_update_start_)
        // xx_xlcssa5
        $T[R_xx_xlcssa5_2766_sample_start_] 
        $T[R_xx_xlcssa5_2766_sample_completed_] 
        $T[R_xx_xlcssa5_2766_update_start_] 
        $T[R_xx_xlcssa5_2766_update_completed_] 
        // implicit reference
        R_xx_xlcssa5_2766_sample_start_ <-& ($entry)
        R_xx_xlcssa5_2766_sample_completed_ <-& (R_xx_xlcssa5_2766_sample_start_)
        R_xx_xlcssa5_2766_update_start_ <-& (R_xx_xlcssa5_2766_sample_completed_)
        R_xx_xlcssa5_2766_update_completed_ <-& (R_xx_xlcssa5_2766_update_start_)
        SUB_u32_u32_2767_sample_start_ <-& (R_tmp25x_xix_xi_2765_update_completed_)
        SUB_u32_u32_2767_sample_start_ <-& (R_xx_xlcssa5_2766_update_completed_)
        ;;[SUB_u32_u32_2767_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_2767_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_2767_sample_start_ &-> (SUB_u32_u32_2767_Sample)
        SUB_u32_u32_2767_sample_completed_ <-& (SUB_u32_u32_2767_Sample)
        SUB_u32_u32_2767_sample_completed_ &-> ($null)
        SUB_u32_u32_2767_update_start_ &-> (SUB_u32_u32_2767_Update)
        SUB_u32_u32_2767_update_completed_ <-& (SUB_u32_u32_2767_Update)
        // Target expression
        // (as target) tmp26x_xix_xi
        // tmp26x_xix_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2752_to_assign_stmt_2768__entry__ |-> (assign_stmt_2752_to_assign_stmt_2768)
      assign_stmt_2752_to_assign_stmt_2768__exit__ <-| (assign_stmt_2752_to_assign_stmt_2768)
      ::[assign_stmt_2789_to_assign_stmt_2815] 
      {
        // 		iNsTr_129 := (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 1013
        // Source expression
        // (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_2788_sample_start_] 
        $T[AND_u32_u32_2788_sample_completed_] 
        $T[AND_u32_u32_2788_update_start_] 
        $T[AND_u32_u32_2788_update_completed_] 
        // tempx_x0x_xlcssax_xix_xi
        $T[R_tempx_x0x_xlcssax_xix_xi_2785_sample_start_] 
        $T[R_tempx_x0x_xlcssax_xix_xi_2785_sample_completed_] 
        $T[R_tempx_x0x_xlcssax_xix_xi_2785_update_start_] 
        $T[R_tempx_x0x_xlcssax_xix_xi_2785_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssax_xix_xi_2785_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssax_xix_xi_2785_sample_completed_ <-& (R_tempx_x0x_xlcssax_xix_xi_2785_sample_start_)
        R_tempx_x0x_xlcssax_xix_xi_2785_update_start_ <-& (R_tempx_x0x_xlcssax_xix_xi_2785_sample_completed_)
        R_tempx_x0x_xlcssax_xix_xi_2785_update_completed_ <-& (R_tempx_x0x_xlcssax_xix_xi_2785_update_start_)
        AND_u32_u32_2788_sample_start_ <-& (R_tempx_x0x_xlcssax_xix_xi_2785_update_completed_)
        ;;[AND_u32_u32_2788_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2788_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2788_sample_start_ &-> (AND_u32_u32_2788_Sample)
        AND_u32_u32_2788_sample_completed_ <-& (AND_u32_u32_2788_Sample)
        AND_u32_u32_2788_sample_completed_ &-> ($null)
        AND_u32_u32_2788_update_start_ &-> (AND_u32_u32_2788_Update)
        AND_u32_u32_2788_update_completed_ <-& (AND_u32_u32_2788_Update)
        // Target expression
        // (as target) iNsTr_129
        // iNsTr_129
        // implicit reference
        // 		iNsTr_130 := (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 1014
        // Source expression
        // (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_2794_sample_start_] 
        $T[SHL_u32_u32_2794_sample_completed_] 
        $T[SHL_u32_u32_2794_update_start_] 
        $T[SHL_u32_u32_2794_update_completed_] 
        // expx_x0x_xlcssax_xix_xi
        $T[R_expx_x0x_xlcssax_xix_xi_2791_sample_start_] 
        $T[R_expx_x0x_xlcssax_xix_xi_2791_sample_completed_] 
        $T[R_expx_x0x_xlcssax_xix_xi_2791_update_start_] 
        $T[R_expx_x0x_xlcssax_xix_xi_2791_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssax_xix_xi_2791_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssax_xix_xi_2791_sample_completed_ <-& (R_expx_x0x_xlcssax_xix_xi_2791_sample_start_)
        R_expx_x0x_xlcssax_xix_xi_2791_update_start_ <-& (R_expx_x0x_xlcssax_xix_xi_2791_sample_completed_)
        R_expx_x0x_xlcssax_xix_xi_2791_update_completed_ <-& (R_expx_x0x_xlcssax_xix_xi_2791_update_start_)
        SHL_u32_u32_2794_sample_start_ <-& (R_expx_x0x_xlcssax_xix_xi_2791_update_completed_)
        ;;[SHL_u32_u32_2794_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2794_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2794_sample_start_ &-> (SHL_u32_u32_2794_Sample)
        SHL_u32_u32_2794_sample_completed_ <-& (SHL_u32_u32_2794_Sample)
        SHL_u32_u32_2794_sample_completed_ &-> ($null)
        SHL_u32_u32_2794_update_start_ &-> (SHL_u32_u32_2794_Update)
        SHL_u32_u32_2794_update_completed_ <-& (SHL_u32_u32_2794_Update)
        // Target expression
        // (as target) iNsTr_130
        // iNsTr_130
        // implicit reference
        // 		iNsTr_131 := (iNsTr_130 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 1015
        // Source expression
        // (iNsTr_130 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_2800_sample_start_] 
        $T[ADD_u32_u32_2800_sample_completed_] 
        $T[ADD_u32_u32_2800_update_start_] 
        $T[ADD_u32_u32_2800_update_completed_] 
        // iNsTr_130
        $T[R_iNsTr_130_2797_sample_start_] 
        $T[R_iNsTr_130_2797_sample_completed_] 
        $T[R_iNsTr_130_2797_update_start_] 
        $T[R_iNsTr_130_2797_update_completed_] 
        // implicit reference
        R_iNsTr_130_2797_sample_start_ <-& (SHL_u32_u32_2794_update_completed_)
        R_iNsTr_130_2797_sample_completed_ <-& (R_iNsTr_130_2797_sample_start_)
        R_iNsTr_130_2797_update_start_ <-& (R_iNsTr_130_2797_sample_completed_)
        R_iNsTr_130_2797_update_completed_ <-& (R_iNsTr_130_2797_update_start_)
        ADD_u32_u32_2800_sample_start_ <-& (R_iNsTr_130_2797_update_completed_)
        ;;[ADD_u32_u32_2800_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2800_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2800_sample_start_ &-> (ADD_u32_u32_2800_Sample)
        ADD_u32_u32_2800_sample_completed_ <-& (ADD_u32_u32_2800_Sample)
        ADD_u32_u32_2800_sample_completed_ &-> ($null)
        ADD_u32_u32_2800_update_start_ &-> (ADD_u32_u32_2800_Update)
        ADD_u32_u32_2800_update_completed_ <-& (ADD_u32_u32_2800_Update)
        // Target expression
        // (as target) iNsTr_131
        // iNsTr_131
        // implicit reference
        // 		iNsTr_132 := (iNsTr_129 | iNsTr_87)
        //  file prog.aa, line 1016
        // Source expression
        // (iNsTr_129 | iNsTr_87)
        $T[OR_u32_u32_2805_sample_start_] 
        $T[OR_u32_u32_2805_sample_completed_] 
        $T[OR_u32_u32_2805_update_start_] 
        $T[OR_u32_u32_2805_update_completed_] 
        // iNsTr_129
        $T[R_iNsTr_129_2803_sample_start_] 
        $T[R_iNsTr_129_2803_sample_completed_] 
        $T[R_iNsTr_129_2803_update_start_] 
        $T[R_iNsTr_129_2803_update_completed_] 
        // implicit reference
        R_iNsTr_129_2803_sample_start_ <-& (AND_u32_u32_2788_update_completed_)
        R_iNsTr_129_2803_sample_completed_ <-& (R_iNsTr_129_2803_sample_start_)
        R_iNsTr_129_2803_update_start_ <-& (R_iNsTr_129_2803_sample_completed_)
        R_iNsTr_129_2803_update_completed_ <-& (R_iNsTr_129_2803_update_start_)
        // iNsTr_87
        $T[R_iNsTr_87_2804_sample_start_] 
        $T[R_iNsTr_87_2804_sample_completed_] 
        $T[R_iNsTr_87_2804_update_start_] 
        $T[R_iNsTr_87_2804_update_completed_] 
        // implicit reference
        R_iNsTr_87_2804_sample_start_ <-& ($entry)
        R_iNsTr_87_2804_sample_completed_ <-& (R_iNsTr_87_2804_sample_start_)
        R_iNsTr_87_2804_update_start_ <-& (R_iNsTr_87_2804_sample_completed_)
        R_iNsTr_87_2804_update_completed_ <-& (R_iNsTr_87_2804_update_start_)
        OR_u32_u32_2805_sample_start_ <-& (R_iNsTr_129_2803_update_completed_)
        OR_u32_u32_2805_sample_start_ <-& (R_iNsTr_87_2804_update_completed_)
        ;;[OR_u32_u32_2805_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2805_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2805_sample_start_ &-> (OR_u32_u32_2805_Sample)
        OR_u32_u32_2805_sample_completed_ <-& (OR_u32_u32_2805_Sample)
        OR_u32_u32_2805_sample_completed_ &-> ($null)
        OR_u32_u32_2805_update_start_ &-> (OR_u32_u32_2805_Update)
        OR_u32_u32_2805_update_completed_ <-& (OR_u32_u32_2805_Update)
        // Target expression
        // (as target) iNsTr_132
        // iNsTr_132
        // implicit reference
        // 		iNsTr_133 := (iNsTr_132 | iNsTr_131)
        //  file prog.aa, line 1017
        // Source expression
        // (iNsTr_132 | iNsTr_131)
        $T[OR_u32_u32_2810_sample_start_] 
        $T[OR_u32_u32_2810_sample_completed_] 
        $T[OR_u32_u32_2810_update_start_] 
        $T[OR_u32_u32_2810_update_completed_] 
        // iNsTr_132
        $T[R_iNsTr_132_2808_sample_start_] 
        $T[R_iNsTr_132_2808_sample_completed_] 
        $T[R_iNsTr_132_2808_update_start_] 
        $T[R_iNsTr_132_2808_update_completed_] 
        // implicit reference
        R_iNsTr_132_2808_sample_start_ <-& (OR_u32_u32_2805_update_completed_)
        R_iNsTr_132_2808_sample_completed_ <-& (R_iNsTr_132_2808_sample_start_)
        R_iNsTr_132_2808_update_start_ <-& (R_iNsTr_132_2808_sample_completed_)
        R_iNsTr_132_2808_update_completed_ <-& (R_iNsTr_132_2808_update_start_)
        // iNsTr_131
        $T[R_iNsTr_131_2809_sample_start_] 
        $T[R_iNsTr_131_2809_sample_completed_] 
        $T[R_iNsTr_131_2809_update_start_] 
        $T[R_iNsTr_131_2809_update_completed_] 
        // implicit reference
        R_iNsTr_131_2809_sample_start_ <-& (ADD_u32_u32_2800_update_completed_)
        R_iNsTr_131_2809_sample_completed_ <-& (R_iNsTr_131_2809_sample_start_)
        R_iNsTr_131_2809_update_start_ <-& (R_iNsTr_131_2809_sample_completed_)
        R_iNsTr_131_2809_update_completed_ <-& (R_iNsTr_131_2809_update_start_)
        OR_u32_u32_2810_sample_start_ <-& (R_iNsTr_132_2808_update_completed_)
        OR_u32_u32_2810_sample_start_ <-& (R_iNsTr_131_2809_update_completed_)
        ;;[OR_u32_u32_2810_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2810_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2810_sample_start_ &-> (OR_u32_u32_2810_Sample)
        OR_u32_u32_2810_sample_completed_ <-& (OR_u32_u32_2810_Sample)
        OR_u32_u32_2810_sample_completed_ &-> ($null)
        OR_u32_u32_2810_update_start_ &-> (OR_u32_u32_2810_Update)
        OR_u32_u32_2810_update_completed_ <-& (OR_u32_u32_2810_Update)
        // Target expression
        // (as target) iNsTr_133
        // iNsTr_133
        // implicit reference
        // 		tmp3x_xix_xi := ($bitcast ($float<8,23>) iNsTr_133 )
        //  file prog.aa, line 1018
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_133 )
        $T[type_cast_2814_sample_start_] 
        $T[type_cast_2814_sample_completed_] 
        $T[type_cast_2814_update_start_] 
        $T[type_cast_2814_update_completed_] 
        // iNsTr_133
        $T[R_iNsTr_133_2813_sample_start_] 
        $T[R_iNsTr_133_2813_sample_completed_] 
        $T[R_iNsTr_133_2813_update_start_] 
        $T[R_iNsTr_133_2813_update_completed_] 
        // implicit reference
        R_iNsTr_133_2813_sample_start_ <-& (OR_u32_u32_2810_update_completed_)
        R_iNsTr_133_2813_sample_completed_ <-& (R_iNsTr_133_2813_sample_start_)
        R_iNsTr_133_2813_update_start_ <-& (R_iNsTr_133_2813_sample_completed_)
        R_iNsTr_133_2813_update_completed_ <-& (R_iNsTr_133_2813_update_start_)
        type_cast_2814_sample_start_ <-& (R_iNsTr_133_2813_update_completed_)
        ;;[type_cast_2814_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2814_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2814_sample_start_ &-> (type_cast_2814_Sample)
        type_cast_2814_sample_completed_ <-& (type_cast_2814_Sample)
        type_cast_2814_sample_completed_ &-> ($null)
        type_cast_2814_update_start_ &-> (type_cast_2814_Update)
        type_cast_2814_update_completed_ <-& (type_cast_2814_Update)
        // Target expression
        // (as target) tmp3x_xix_xi
        // tmp3x_xix_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2789_to_assign_stmt_2815__entry__ |-> (assign_stmt_2789_to_assign_stmt_2815)
      assign_stmt_2789_to_assign_stmt_2815__exit__ <-| (assign_stmt_2789_to_assign_stmt_2815)
      ::[assign_stmt_2831_to_assign_stmt_2865] 
      {
        // 		iNsTr_68 := (iNsTr_39 * ($bitcast ($float<8,23>) _f5.014000e-03 ))
        //  file prog.aa, line 1024
        // Source expression
        // (iNsTr_39 * ($bitcast ($float<8,23>) _f5.014000e-03 ))
        $T[MUL_f32_f32_2830_sample_start_] 
        $T[MUL_f32_f32_2830_sample_completed_] 
        $T[MUL_f32_f32_2830_update_start_] 
        $T[MUL_f32_f32_2830_update_completed_] 
        // iNsTr_39
        $T[R_iNsTr_39_2827_sample_start_] 
        $T[R_iNsTr_39_2827_sample_completed_] 
        $T[R_iNsTr_39_2827_update_start_] 
        $T[R_iNsTr_39_2827_update_completed_] 
        // implicit reference
        R_iNsTr_39_2827_sample_start_ <-& ($entry)
        R_iNsTr_39_2827_sample_completed_ <-& (R_iNsTr_39_2827_sample_start_)
        R_iNsTr_39_2827_update_start_ <-& (R_iNsTr_39_2827_sample_completed_)
        R_iNsTr_39_2827_update_completed_ <-& (R_iNsTr_39_2827_update_start_)
        MUL_f32_f32_2830_sample_start_ <-& (R_iNsTr_39_2827_update_completed_)
        ;;[MUL_f32_f32_2830_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2830_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2830_sample_start_ &-> (MUL_f32_f32_2830_Sample)
        MUL_f32_f32_2830_sample_completed_ <-& (MUL_f32_f32_2830_Sample)
        MUL_f32_f32_2830_sample_completed_ &-> ($null)
        MUL_f32_f32_2830_update_start_ &-> (MUL_f32_f32_2830_Update)
        MUL_f32_f32_2830_update_completed_ <-& (MUL_f32_f32_2830_Update)
        // Target expression
        // (as target) iNsTr_68
        // iNsTr_68
        // implicit reference
        // 		iNsTr_69 := (iNsTr_68 + flux_rotor_lpf_prevx_x0)
        //  file prog.aa, line 1025
        // Source expression
        // (iNsTr_68 + flux_rotor_lpf_prevx_x0)
        $T[ADD_f32_f32_2835_sample_start_] 
        $T[ADD_f32_f32_2835_sample_completed_] 
        $T[ADD_f32_f32_2835_update_start_] 
        $T[ADD_f32_f32_2835_update_completed_] 
        // iNsTr_68
        $T[R_iNsTr_68_2833_sample_start_] 
        $T[R_iNsTr_68_2833_sample_completed_] 
        $T[R_iNsTr_68_2833_update_start_] 
        $T[R_iNsTr_68_2833_update_completed_] 
        // implicit reference
        R_iNsTr_68_2833_sample_start_ <-& (MUL_f32_f32_2830_update_completed_)
        R_iNsTr_68_2833_sample_completed_ <-& (R_iNsTr_68_2833_sample_start_)
        R_iNsTr_68_2833_update_start_ <-& (R_iNsTr_68_2833_sample_completed_)
        R_iNsTr_68_2833_update_completed_ <-& (R_iNsTr_68_2833_update_start_)
        // flux_rotor_lpf_prevx_x0
        $T[R_flux_rotor_lpf_prevx_x0_2834_sample_start_] 
        $T[R_flux_rotor_lpf_prevx_x0_2834_sample_completed_] 
        $T[R_flux_rotor_lpf_prevx_x0_2834_update_start_] 
        $T[R_flux_rotor_lpf_prevx_x0_2834_update_completed_] 
        // implicit reference
        R_flux_rotor_lpf_prevx_x0_2834_sample_start_ <-& ($entry)
        R_flux_rotor_lpf_prevx_x0_2834_sample_completed_ <-& (R_flux_rotor_lpf_prevx_x0_2834_sample_start_)
        R_flux_rotor_lpf_prevx_x0_2834_update_start_ <-& (R_flux_rotor_lpf_prevx_x0_2834_sample_completed_)
        R_flux_rotor_lpf_prevx_x0_2834_update_completed_ <-& (R_flux_rotor_lpf_prevx_x0_2834_update_start_)
        ADD_f32_f32_2835_sample_start_ <-& (R_iNsTr_68_2833_update_completed_)
        ADD_f32_f32_2835_sample_start_ <-& (R_flux_rotor_lpf_prevx_x0_2834_update_completed_)
        ;;[ADD_f32_f32_2835_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_2835_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_2835_sample_start_ &-> (ADD_f32_f32_2835_Sample)
        ADD_f32_f32_2835_sample_completed_ <-& (ADD_f32_f32_2835_Sample)
        ADD_f32_f32_2835_sample_completed_ &-> ($null)
        ADD_f32_f32_2835_update_start_ &-> (ADD_f32_f32_2835_Update)
        ADD_f32_f32_2835_update_completed_ <-& (ADD_f32_f32_2835_Update)
        // Target expression
        // (as target) iNsTr_69
        // iNsTr_69
        // implicit reference
        // 		iNsTr_70 := (($bitcast ($float<8,23>) _f3.000000e-01 ) - iNsTr_69)
        //  file prog.aa, line 1026
        // Source expression
        // (($bitcast ($float<8,23>) _f3.000000e-01 ) - iNsTr_69)
        $T[SUB_f32_f32_2841_sample_start_] 
        $T[SUB_f32_f32_2841_sample_completed_] 
        $T[SUB_f32_f32_2841_update_start_] 
        $T[SUB_f32_f32_2841_update_completed_] 
        // iNsTr_69
        $T[R_iNsTr_69_2840_sample_start_] 
        $T[R_iNsTr_69_2840_sample_completed_] 
        $T[R_iNsTr_69_2840_update_start_] 
        $T[R_iNsTr_69_2840_update_completed_] 
        // implicit reference
        R_iNsTr_69_2840_sample_start_ <-& (ADD_f32_f32_2835_update_completed_)
        R_iNsTr_69_2840_sample_completed_ <-& (R_iNsTr_69_2840_sample_start_)
        R_iNsTr_69_2840_update_start_ <-& (R_iNsTr_69_2840_sample_completed_)
        R_iNsTr_69_2840_update_completed_ <-& (R_iNsTr_69_2840_update_start_)
        SUB_f32_f32_2841_sample_start_ <-& (R_iNsTr_69_2840_update_completed_)
        ;;[SUB_f32_f32_2841_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f32_f32_2841_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f32_f32_2841_sample_start_ &-> (SUB_f32_f32_2841_Sample)
        SUB_f32_f32_2841_sample_completed_ <-& (SUB_f32_f32_2841_Sample)
        SUB_f32_f32_2841_sample_completed_ &-> ($null)
        SUB_f32_f32_2841_update_start_ &-> (SUB_f32_f32_2841_Update)
        SUB_f32_f32_2841_update_completed_ <-& (SUB_f32_f32_2841_Update)
        // Target expression
        // (as target) iNsTr_70
        // iNsTr_70
        // implicit reference
        // 		iNsTr_71 := (iNsTr_70 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
        //  file prog.aa, line 1027
        // Source expression
        // (iNsTr_70 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
        $T[MUL_f32_f32_2847_sample_start_] 
        $T[MUL_f32_f32_2847_sample_completed_] 
        $T[MUL_f32_f32_2847_update_start_] 
        $T[MUL_f32_f32_2847_update_completed_] 
        // iNsTr_70
        $T[R_iNsTr_70_2844_sample_start_] 
        $T[R_iNsTr_70_2844_sample_completed_] 
        $T[R_iNsTr_70_2844_update_start_] 
        $T[R_iNsTr_70_2844_update_completed_] 
        // implicit reference
        R_iNsTr_70_2844_sample_start_ <-& (SUB_f32_f32_2841_update_completed_)
        R_iNsTr_70_2844_sample_completed_ <-& (R_iNsTr_70_2844_sample_start_)
        R_iNsTr_70_2844_update_start_ <-& (R_iNsTr_70_2844_sample_completed_)
        R_iNsTr_70_2844_update_completed_ <-& (R_iNsTr_70_2844_update_start_)
        MUL_f32_f32_2847_sample_start_ <-& (R_iNsTr_70_2844_update_completed_)
        ;;[MUL_f32_f32_2847_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2847_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2847_sample_start_ &-> (MUL_f32_f32_2847_Sample)
        MUL_f32_f32_2847_sample_completed_ <-& (MUL_f32_f32_2847_Sample)
        MUL_f32_f32_2847_sample_completed_ &-> ($null)
        MUL_f32_f32_2847_update_start_ &-> (MUL_f32_f32_2847_Update)
        MUL_f32_f32_2847_update_completed_ <-& (MUL_f32_f32_2847_Update)
        // Target expression
        // (as target) iNsTr_71
        // iNsTr_71
        // implicit reference
        // 		iNsTr_72 := (iNsTr_71 + int_flux_err_temp_2x_x0)
        //  file prog.aa, line 1028
        // Source expression
        // (iNsTr_71 + int_flux_err_temp_2x_x0)
        $T[ADD_f32_f32_2852_sample_start_] 
        $T[ADD_f32_f32_2852_sample_completed_] 
        $T[ADD_f32_f32_2852_update_start_] 
        $T[ADD_f32_f32_2852_update_completed_] 
        // iNsTr_71
        $T[R_iNsTr_71_2850_sample_start_] 
        $T[R_iNsTr_71_2850_sample_completed_] 
        $T[R_iNsTr_71_2850_update_start_] 
        $T[R_iNsTr_71_2850_update_completed_] 
        // implicit reference
        R_iNsTr_71_2850_sample_start_ <-& (MUL_f32_f32_2847_update_completed_)
        R_iNsTr_71_2850_sample_completed_ <-& (R_iNsTr_71_2850_sample_start_)
        R_iNsTr_71_2850_update_start_ <-& (R_iNsTr_71_2850_sample_completed_)
        R_iNsTr_71_2850_update_completed_ <-& (R_iNsTr_71_2850_update_start_)
        // int_flux_err_temp_2x_x0
        $T[R_int_flux_err_temp_2x_x0_2851_sample_start_] 
        $T[R_int_flux_err_temp_2x_x0_2851_sample_completed_] 
        $T[R_int_flux_err_temp_2x_x0_2851_update_start_] 
        $T[R_int_flux_err_temp_2x_x0_2851_update_completed_] 
        // implicit reference
        R_int_flux_err_temp_2x_x0_2851_sample_start_ <-& ($entry)
        R_int_flux_err_temp_2x_x0_2851_sample_completed_ <-& (R_int_flux_err_temp_2x_x0_2851_sample_start_)
        R_int_flux_err_temp_2x_x0_2851_update_start_ <-& (R_int_flux_err_temp_2x_x0_2851_sample_completed_)
        R_int_flux_err_temp_2x_x0_2851_update_completed_ <-& (R_int_flux_err_temp_2x_x0_2851_update_start_)
        ADD_f32_f32_2852_sample_start_ <-& (R_iNsTr_71_2850_update_completed_)
        ADD_f32_f32_2852_sample_start_ <-& (R_int_flux_err_temp_2x_x0_2851_update_completed_)
        ;;[ADD_f32_f32_2852_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_2852_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_2852_sample_start_ &-> (ADD_f32_f32_2852_Sample)
        ADD_f32_f32_2852_sample_completed_ <-& (ADD_f32_f32_2852_Sample)
        ADD_f32_f32_2852_sample_completed_ &-> ($null)
        ADD_f32_f32_2852_update_start_ &-> (ADD_f32_f32_2852_Update)
        ADD_f32_f32_2852_update_completed_ <-& (ADD_f32_f32_2852_Update)
        // Target expression
        // (as target) iNsTr_72
        // iNsTr_72
        // implicit reference
        // 		iNsTr_73 := (iNsTr_72 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
        //  file prog.aa, line 1029
        // Source expression
        // (iNsTr_72 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
        $T[MUL_f32_f32_2858_sample_start_] 
        $T[MUL_f32_f32_2858_sample_completed_] 
        $T[MUL_f32_f32_2858_update_start_] 
        $T[MUL_f32_f32_2858_update_completed_] 
        // iNsTr_72
        $T[R_iNsTr_72_2855_sample_start_] 
        $T[R_iNsTr_72_2855_sample_completed_] 
        $T[R_iNsTr_72_2855_update_start_] 
        $T[R_iNsTr_72_2855_update_completed_] 
        // implicit reference
        R_iNsTr_72_2855_sample_start_ <-& (ADD_f32_f32_2852_update_completed_)
        R_iNsTr_72_2855_sample_completed_ <-& (R_iNsTr_72_2855_sample_start_)
        R_iNsTr_72_2855_update_start_ <-& (R_iNsTr_72_2855_sample_completed_)
        R_iNsTr_72_2855_update_completed_ <-& (R_iNsTr_72_2855_update_start_)
        MUL_f32_f32_2858_sample_start_ <-& (R_iNsTr_72_2855_update_completed_)
        ;;[MUL_f32_f32_2858_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2858_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2858_sample_start_ &-> (MUL_f32_f32_2858_Sample)
        MUL_f32_f32_2858_sample_completed_ <-& (MUL_f32_f32_2858_Sample)
        MUL_f32_f32_2858_sample_completed_ &-> ($null)
        MUL_f32_f32_2858_update_start_ &-> (MUL_f32_f32_2858_Update)
        MUL_f32_f32_2858_update_completed_ <-& (MUL_f32_f32_2858_Update)
        // Target expression
        // (as target) iNsTr_73
        // iNsTr_73
        // implicit reference
        // 		iNsTr_74 := (iNsTr_73 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
        //  file prog.aa, line 1031
        // Source expression
        // (iNsTr_73 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
        $T[SLT_f32_u1_2864_sample_start_] 
        $T[SLT_f32_u1_2864_sample_completed_] 
        $T[SLT_f32_u1_2864_update_start_] 
        $T[SLT_f32_u1_2864_update_completed_] 
        // iNsTr_73
        $T[R_iNsTr_73_2861_sample_start_] 
        $T[R_iNsTr_73_2861_sample_completed_] 
        $T[R_iNsTr_73_2861_update_start_] 
        $T[R_iNsTr_73_2861_update_completed_] 
        // implicit reference
        R_iNsTr_73_2861_sample_start_ <-& (MUL_f32_f32_2858_update_completed_)
        R_iNsTr_73_2861_sample_completed_ <-& (R_iNsTr_73_2861_sample_start_)
        R_iNsTr_73_2861_update_start_ <-& (R_iNsTr_73_2861_sample_completed_)
        R_iNsTr_73_2861_update_completed_ <-& (R_iNsTr_73_2861_update_start_)
        SLT_f32_u1_2864_sample_start_ <-& (R_iNsTr_73_2861_update_completed_)
        ;;[SLT_f32_u1_2864_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_2864_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_2864_sample_start_ &-> (SLT_f32_u1_2864_Sample)
        SLT_f32_u1_2864_sample_completed_ <-& (SLT_f32_u1_2864_Sample)
        SLT_f32_u1_2864_sample_completed_ &-> ($null)
        SLT_f32_u1_2864_update_start_ &-> (SLT_f32_u1_2864_Update)
        SLT_f32_u1_2864_update_completed_ <-& (SLT_f32_u1_2864_Update)
        // Target expression
        // (as target) iNsTr_74
        // iNsTr_74
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2831_to_assign_stmt_2865__entry__ |-> (assign_stmt_2831_to_assign_stmt_2865)
      assign_stmt_2831_to_assign_stmt_2865__exit__ <-| (assign_stmt_2831_to_assign_stmt_2865)
      // if-statement  
      //  file prog.aa, line 1032
      ;;[if_stmt_2866_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2866__entry__ |-> (if_stmt_2866_dead_link)
      if_stmt_2866__exit__ <-| (if_stmt_2866_dead_link)
      ;;[if_stmt_2866_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2866__entry__ |-> (if_stmt_2866_eval_test)
      $P [R_iNsTr_74_2867_place]
      R_iNsTr_74_2867_place <-| (if_stmt_2866_eval_test)
      ;;[if_stmt_2866_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2866_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_74_2867_place |-> (if_stmt_2866_if_link if_stmt_2866_else_link)
      $P [iq_err_calcx_xexit_bb_44]
      iq_err_calcx_xexit_bb_44 <-| (if_stmt_2866_if_link)
      $P [iq_err_calcx_xexit_bb_42]
      iq_err_calcx_xexit_bb_42 <-| (if_stmt_2866_else_link)
      ::[assign_stmt_2878] 
      {
        // 		iNsTr_100 := (iNsTr_73 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
        //  file prog.aa, line 1037
        // Source expression
        // (iNsTr_73 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
        $T[SGT_f32_u1_2877_sample_start_] 
        $T[SGT_f32_u1_2877_sample_completed_] 
        $T[SGT_f32_u1_2877_update_start_] 
        $T[SGT_f32_u1_2877_update_completed_] 
        // iNsTr_73
        $T[R_iNsTr_73_2874_sample_start_] 
        $T[R_iNsTr_73_2874_sample_completed_] 
        $T[R_iNsTr_73_2874_update_start_] 
        $T[R_iNsTr_73_2874_update_completed_] 
        // implicit reference
        R_iNsTr_73_2874_sample_start_ <-& ($entry)
        R_iNsTr_73_2874_sample_completed_ <-& (R_iNsTr_73_2874_sample_start_)
        R_iNsTr_73_2874_update_start_ <-& (R_iNsTr_73_2874_sample_completed_)
        R_iNsTr_73_2874_update_completed_ <-& (R_iNsTr_73_2874_update_start_)
        SGT_f32_u1_2877_sample_start_ <-& (R_iNsTr_73_2874_update_completed_)
        ;;[SGT_f32_u1_2877_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f32_u1_2877_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f32_u1_2877_sample_start_ &-> (SGT_f32_u1_2877_Sample)
        SGT_f32_u1_2877_sample_completed_ <-& (SGT_f32_u1_2877_Sample)
        SGT_f32_u1_2877_sample_completed_ &-> ($null)
        SGT_f32_u1_2877_update_start_ &-> (SGT_f32_u1_2877_Update)
        SGT_f32_u1_2877_update_completed_ <-& (SGT_f32_u1_2877_Update)
        // Target expression
        // (as target) iNsTr_100
        // iNsTr_100
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2878__entry__ |-> (assign_stmt_2878)
      assign_stmt_2878__exit__ <-| (assign_stmt_2878)
      // if-statement  
      //  file prog.aa, line 1038
      ;;[if_stmt_2879_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2879__entry__ |-> (if_stmt_2879_dead_link)
      if_stmt_2879__exit__ <-| (if_stmt_2879_dead_link)
      ;;[if_stmt_2879_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2879__entry__ |-> (if_stmt_2879_eval_test)
      $P [R_iNsTr_100_2880_place]
      R_iNsTr_100_2880_place <-| (if_stmt_2879_eval_test)
      ;;[if_stmt_2879_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2879_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_100_2880_place |-> (if_stmt_2879_if_link if_stmt_2879_else_link)
      $P [bb_42_bb_44]
      bb_42_bb_44 <-| (if_stmt_2879_if_link)
      $P [bb_42_bb_43]
      bb_42_bb_43 <-| (if_stmt_2879_else_link)
      ::[assign_stmt_2904_to_assign_stmt_2915] 
      {
        // 		iNsTr_96 := (iNsTr_70 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
        //  file prog.aa, line 1047
        // Source expression
        // (iNsTr_70 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
        $T[MUL_f32_f32_2903_sample_start_] 
        $T[MUL_f32_f32_2903_sample_completed_] 
        $T[MUL_f32_f32_2903_update_start_] 
        $T[MUL_f32_f32_2903_update_completed_] 
        // iNsTr_70
        $T[R_iNsTr_70_2900_sample_start_] 
        $T[R_iNsTr_70_2900_sample_completed_] 
        $T[R_iNsTr_70_2900_update_start_] 
        $T[R_iNsTr_70_2900_update_completed_] 
        // implicit reference
        R_iNsTr_70_2900_sample_start_ <-& ($entry)
        R_iNsTr_70_2900_sample_completed_ <-& (R_iNsTr_70_2900_sample_start_)
        R_iNsTr_70_2900_update_start_ <-& (R_iNsTr_70_2900_sample_completed_)
        R_iNsTr_70_2900_update_completed_ <-& (R_iNsTr_70_2900_update_start_)
        MUL_f32_f32_2903_sample_start_ <-& (R_iNsTr_70_2900_update_completed_)
        ;;[MUL_f32_f32_2903_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_2903_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_2903_sample_start_ &-> (MUL_f32_f32_2903_Sample)
        MUL_f32_f32_2903_sample_completed_ <-& (MUL_f32_f32_2903_Sample)
        MUL_f32_f32_2903_sample_completed_ &-> ($null)
        MUL_f32_f32_2903_update_start_ &-> (MUL_f32_f32_2903_Update)
        MUL_f32_f32_2903_update_completed_ <-& (MUL_f32_f32_2903_Update)
        // Target expression
        // (as target) iNsTr_96
        // iNsTr_96
        // implicit reference
        // 		iNsTr_97 := (int_flux_errx_x0 + iNsTr_96)
        //  file prog.aa, line 1048
        // Source expression
        // (int_flux_errx_x0 + iNsTr_96)
        $T[ADD_f32_f32_2908_sample_start_] 
        $T[ADD_f32_f32_2908_sample_completed_] 
        $T[ADD_f32_f32_2908_update_start_] 
        $T[ADD_f32_f32_2908_update_completed_] 
        // int_flux_errx_x0
        $T[R_int_flux_errx_x0_2906_sample_start_] 
        $T[R_int_flux_errx_x0_2906_sample_completed_] 
        $T[R_int_flux_errx_x0_2906_update_start_] 
        $T[R_int_flux_errx_x0_2906_update_completed_] 
        // implicit reference
        R_int_flux_errx_x0_2906_sample_start_ <-& ($entry)
        R_int_flux_errx_x0_2906_sample_completed_ <-& (R_int_flux_errx_x0_2906_sample_start_)
        R_int_flux_errx_x0_2906_update_start_ <-& (R_int_flux_errx_x0_2906_sample_completed_)
        R_int_flux_errx_x0_2906_update_completed_ <-& (R_int_flux_errx_x0_2906_update_start_)
        // iNsTr_96
        $T[R_iNsTr_96_2907_sample_start_] 
        $T[R_iNsTr_96_2907_sample_completed_] 
        $T[R_iNsTr_96_2907_update_start_] 
        $T[R_iNsTr_96_2907_update_completed_] 
        // implicit reference
        R_iNsTr_96_2907_sample_start_ <-& (MUL_f32_f32_2903_update_completed_)
        R_iNsTr_96_2907_sample_completed_ <-& (R_iNsTr_96_2907_sample_start_)
        R_iNsTr_96_2907_update_start_ <-& (R_iNsTr_96_2907_sample_completed_)
        R_iNsTr_96_2907_update_completed_ <-& (R_iNsTr_96_2907_update_start_)
        ADD_f32_f32_2908_sample_start_ <-& (R_int_flux_errx_x0_2906_update_completed_)
        ADD_f32_f32_2908_sample_start_ <-& (R_iNsTr_96_2907_update_completed_)
        ;;[ADD_f32_f32_2908_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_2908_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_2908_sample_start_ &-> (ADD_f32_f32_2908_Sample)
        ADD_f32_f32_2908_sample_completed_ <-& (ADD_f32_f32_2908_Sample)
        ADD_f32_f32_2908_sample_completed_ &-> ($null)
        ADD_f32_f32_2908_update_start_ &-> (ADD_f32_f32_2908_Update)
        ADD_f32_f32_2908_update_completed_ <-& (ADD_f32_f32_2908_Update)
        // Target expression
        // (as target) iNsTr_97
        // iNsTr_97
        // implicit reference
        // 		iNsTr_98 := (iNsTr_97 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
        //  file prog.aa, line 1050
        // Source expression
        // (iNsTr_97 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
        $T[SLT_f32_u1_2914_sample_start_] 
        $T[SLT_f32_u1_2914_sample_completed_] 
        $T[SLT_f32_u1_2914_update_start_] 
        $T[SLT_f32_u1_2914_update_completed_] 
        // iNsTr_97
        $T[R_iNsTr_97_2911_sample_start_] 
        $T[R_iNsTr_97_2911_sample_completed_] 
        $T[R_iNsTr_97_2911_update_start_] 
        $T[R_iNsTr_97_2911_update_completed_] 
        // implicit reference
        R_iNsTr_97_2911_sample_start_ <-& (ADD_f32_f32_2908_update_completed_)
        R_iNsTr_97_2911_sample_completed_ <-& (R_iNsTr_97_2911_sample_start_)
        R_iNsTr_97_2911_update_start_ <-& (R_iNsTr_97_2911_sample_completed_)
        R_iNsTr_97_2911_update_completed_ <-& (R_iNsTr_97_2911_update_start_)
        SLT_f32_u1_2914_sample_start_ <-& (R_iNsTr_97_2911_update_completed_)
        ;;[SLT_f32_u1_2914_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_2914_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_2914_sample_start_ &-> (SLT_f32_u1_2914_Sample)
        SLT_f32_u1_2914_sample_completed_ <-& (SLT_f32_u1_2914_Sample)
        SLT_f32_u1_2914_sample_completed_ &-> ($null)
        SLT_f32_u1_2914_update_start_ &-> (SLT_f32_u1_2914_Update)
        SLT_f32_u1_2914_update_completed_ <-& (SLT_f32_u1_2914_Update)
        // Target expression
        // (as target) iNsTr_98
        // iNsTr_98
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2904_to_assign_stmt_2915__entry__ |-> (assign_stmt_2904_to_assign_stmt_2915)
      assign_stmt_2904_to_assign_stmt_2915__exit__ <-| (assign_stmt_2904_to_assign_stmt_2915)
      // if-statement  
      //  file prog.aa, line 1051
      ;;[if_stmt_2916_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2916__entry__ |-> (if_stmt_2916_dead_link)
      if_stmt_2916__exit__ <-| (if_stmt_2916_dead_link)
      ;;[if_stmt_2916_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2916__entry__ |-> (if_stmt_2916_eval_test)
      $P [R_iNsTr_98_2917_place]
      R_iNsTr_98_2917_place <-| (if_stmt_2916_eval_test)
      ;;[if_stmt_2916_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2916_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_98_2917_place |-> (if_stmt_2916_if_link if_stmt_2916_else_link)
      $P [bb_44_xx_xthread]
      bb_44_xx_xthread <-| (if_stmt_2916_if_link)
      $P [bb_44_bb_45]
      bb_44_bb_45 <-| (if_stmt_2916_else_link)
      ::[assign_stmt_2928] 
      {
        // 		iNsTr_122 := (iNsTr_97 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
        //  file prog.aa, line 1056
        // Source expression
        // (iNsTr_97 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
        $T[SGT_f32_u1_2927_sample_start_] 
        $T[SGT_f32_u1_2927_sample_completed_] 
        $T[SGT_f32_u1_2927_update_start_] 
        $T[SGT_f32_u1_2927_update_completed_] 
        // iNsTr_97
        $T[R_iNsTr_97_2924_sample_start_] 
        $T[R_iNsTr_97_2924_sample_completed_] 
        $T[R_iNsTr_97_2924_update_start_] 
        $T[R_iNsTr_97_2924_update_completed_] 
        // implicit reference
        R_iNsTr_97_2924_sample_start_ <-& ($entry)
        R_iNsTr_97_2924_sample_completed_ <-& (R_iNsTr_97_2924_sample_start_)
        R_iNsTr_97_2924_update_start_ <-& (R_iNsTr_97_2924_sample_completed_)
        R_iNsTr_97_2924_update_completed_ <-& (R_iNsTr_97_2924_update_start_)
        SGT_f32_u1_2927_sample_start_ <-& (R_iNsTr_97_2924_update_completed_)
        ;;[SGT_f32_u1_2927_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f32_u1_2927_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f32_u1_2927_sample_start_ &-> (SGT_f32_u1_2927_Sample)
        SGT_f32_u1_2927_sample_completed_ <-& (SGT_f32_u1_2927_Sample)
        SGT_f32_u1_2927_sample_completed_ &-> ($null)
        SGT_f32_u1_2927_update_start_ &-> (SGT_f32_u1_2927_Update)
        SGT_f32_u1_2927_update_completed_ <-& (SGT_f32_u1_2927_Update)
        // Target expression
        // (as target) iNsTr_122
        // iNsTr_122
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2928__entry__ |-> (assign_stmt_2928)
      assign_stmt_2928__exit__ <-| (assign_stmt_2928)
      // if-statement  
      //  file prog.aa, line 1057
      ;;[if_stmt_2929_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2929__entry__ |-> (if_stmt_2929_dead_link)
      if_stmt_2929__exit__ <-| (if_stmt_2929_dead_link)
      ;;[if_stmt_2929_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2929__entry__ |-> (if_stmt_2929_eval_test)
      $P [R_iNsTr_122_2930_place]
      R_iNsTr_122_2930_place <-| (if_stmt_2929_eval_test)
      ;;[if_stmt_2929_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2929_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_122_2930_place |-> (if_stmt_2929_if_link if_stmt_2929_else_link)
      $P [bb_45_xx_xthread]
      bb_45_xx_xthread <-| (if_stmt_2929_if_link)
      $P [bb_45_bb_46]
      bb_45_bb_46 <-| (if_stmt_2929_else_link)
      ::[assign_stmt_2941] 
      {
        // 		iNsTr_149 := (iNsTr_97 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        //  file prog.aa, line 1062
        // Source expression
        // (iNsTr_97 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
        $T[EQ_f32_u1_2940_sample_start_] 
        $T[EQ_f32_u1_2940_sample_completed_] 
        $T[EQ_f32_u1_2940_update_start_] 
        $T[EQ_f32_u1_2940_update_completed_] 
        // iNsTr_97
        $T[R_iNsTr_97_2937_sample_start_] 
        $T[R_iNsTr_97_2937_sample_completed_] 
        $T[R_iNsTr_97_2937_update_start_] 
        $T[R_iNsTr_97_2937_update_completed_] 
        // implicit reference
        R_iNsTr_97_2937_sample_start_ <-& ($entry)
        R_iNsTr_97_2937_sample_completed_ <-& (R_iNsTr_97_2937_sample_start_)
        R_iNsTr_97_2937_update_start_ <-& (R_iNsTr_97_2937_sample_completed_)
        R_iNsTr_97_2937_update_completed_ <-& (R_iNsTr_97_2937_update_start_)
        EQ_f32_u1_2940_sample_start_ <-& (R_iNsTr_97_2937_update_completed_)
        ;;[EQ_f32_u1_2940_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_f32_u1_2940_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_f32_u1_2940_sample_start_ &-> (EQ_f32_u1_2940_Sample)
        EQ_f32_u1_2940_sample_completed_ <-& (EQ_f32_u1_2940_Sample)
        EQ_f32_u1_2940_sample_completed_ &-> ($null)
        EQ_f32_u1_2940_update_start_ &-> (EQ_f32_u1_2940_Update)
        EQ_f32_u1_2940_update_completed_ <-& (EQ_f32_u1_2940_Update)
        // Target expression
        // (as target) iNsTr_149
        // iNsTr_149
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2941__entry__ |-> (assign_stmt_2941)
      assign_stmt_2941__exit__ <-| (assign_stmt_2941)
      // if-statement  
      //  file prog.aa, line 1063
      ;;[if_stmt_2942_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2942__entry__ |-> (if_stmt_2942_dead_link)
      if_stmt_2942__exit__ <-| (if_stmt_2942_dead_link)
      ;;[if_stmt_2942_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2942__entry__ |-> (if_stmt_2942_eval_test)
      $P [R_iNsTr_149_2943_place]
      R_iNsTr_149_2943_place <-| (if_stmt_2942_eval_test)
      ;;[if_stmt_2942_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2942_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_149_2943_place |-> (if_stmt_2942_if_link if_stmt_2942_else_link)
      $P [bb_46_fdiv32x_xexit]
      bb_46_fdiv32x_xexit <-| (if_stmt_2942_if_link)
      $P [bb_46_xx_xthread]
      bb_46_xx_xthread <-| (if_stmt_2942_else_link)
      ::[assign_stmt_2963_to_assign_stmt_2981] 
      {
        // 		tmp10x_xi35 := ($bitcast ($uint<32>) tmp10x_xi35x_xin )
        //  file prog.aa, line 1068
        // Source expression
        // ($bitcast ($uint<32>) tmp10x_xi35x_xin )
        $T[type_cast_2962_sample_start_] 
        $T[type_cast_2962_sample_completed_] 
        $T[type_cast_2962_update_start_] 
        $T[type_cast_2962_update_completed_] 
        // tmp10x_xi35x_xin
        $T[R_tmp10x_xi35x_xin_2961_sample_start_] 
        $T[R_tmp10x_xi35x_xin_2961_sample_completed_] 
        $T[R_tmp10x_xi35x_xin_2961_update_start_] 
        $T[R_tmp10x_xi35x_xin_2961_update_completed_] 
        // implicit reference
        R_tmp10x_xi35x_xin_2961_sample_start_ <-& ($entry)
        R_tmp10x_xi35x_xin_2961_sample_completed_ <-& (R_tmp10x_xi35x_xin_2961_sample_start_)
        R_tmp10x_xi35x_xin_2961_update_start_ <-& (R_tmp10x_xi35x_xin_2961_sample_completed_)
        R_tmp10x_xi35x_xin_2961_update_completed_ <-& (R_tmp10x_xi35x_xin_2961_update_start_)
        type_cast_2962_sample_start_ <-& (R_tmp10x_xi35x_xin_2961_update_completed_)
        ;;[type_cast_2962_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2962_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2962_sample_start_ &-> (type_cast_2962_Sample)
        type_cast_2962_sample_completed_ <-& (type_cast_2962_Sample)
        type_cast_2962_sample_completed_ &-> ($null)
        type_cast_2962_update_start_ &-> (type_cast_2962_Update)
        type_cast_2962_update_completed_ <-& (type_cast_2962_Update)
        // Target expression
        // (as target) tmp10x_xi35
        // tmp10x_xi35
        // implicit reference
        // 		iNsTr_118 := (tmp10x_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        //  file prog.aa, line 1069
        // Source expression
        // (tmp10x_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
        $T[SHL_u32_u32_2968_sample_start_] 
        $T[SHL_u32_u32_2968_sample_completed_] 
        $T[SHL_u32_u32_2968_update_start_] 
        $T[SHL_u32_u32_2968_update_completed_] 
        // tmp10x_xi35
        $T[R_tmp10x_xi35_2965_sample_start_] 
        $T[R_tmp10x_xi35_2965_sample_completed_] 
        $T[R_tmp10x_xi35_2965_update_start_] 
        $T[R_tmp10x_xi35_2965_update_completed_] 
        // implicit reference
        R_tmp10x_xi35_2965_sample_start_ <-& (type_cast_2962_update_completed_)
        R_tmp10x_xi35_2965_sample_completed_ <-& (R_tmp10x_xi35_2965_sample_start_)
        R_tmp10x_xi35_2965_update_start_ <-& (R_tmp10x_xi35_2965_sample_completed_)
        R_tmp10x_xi35_2965_update_completed_ <-& (R_tmp10x_xi35_2965_update_start_)
        SHL_u32_u32_2968_sample_start_ <-& (R_tmp10x_xi35_2965_update_completed_)
        ;;[SHL_u32_u32_2968_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_2968_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_2968_sample_start_ &-> (SHL_u32_u32_2968_Sample)
        SHL_u32_u32_2968_sample_completed_ <-& (SHL_u32_u32_2968_Sample)
        SHL_u32_u32_2968_sample_completed_ &-> ($null)
        SHL_u32_u32_2968_update_start_ &-> (SHL_u32_u32_2968_Update)
        SHL_u32_u32_2968_update_completed_ <-& (SHL_u32_u32_2968_Update)
        // Target expression
        // (as target) iNsTr_118
        // iNsTr_118
        // implicit reference
        // 		iNsTr_119 := (iNsTr_118 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        //  file prog.aa, line 1070
        // Source expression
        // (iNsTr_118 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
        $T[AND_u32_u32_2974_sample_start_] 
        $T[AND_u32_u32_2974_sample_completed_] 
        $T[AND_u32_u32_2974_update_start_] 
        $T[AND_u32_u32_2974_update_completed_] 
        // iNsTr_118
        $T[R_iNsTr_118_2971_sample_start_] 
        $T[R_iNsTr_118_2971_sample_completed_] 
        $T[R_iNsTr_118_2971_update_start_] 
        $T[R_iNsTr_118_2971_update_completed_] 
        // implicit reference
        R_iNsTr_118_2971_sample_start_ <-& (SHL_u32_u32_2968_update_completed_)
        R_iNsTr_118_2971_sample_completed_ <-& (R_iNsTr_118_2971_sample_start_)
        R_iNsTr_118_2971_update_start_ <-& (R_iNsTr_118_2971_sample_completed_)
        R_iNsTr_118_2971_update_completed_ <-& (R_iNsTr_118_2971_update_start_)
        AND_u32_u32_2974_sample_start_ <-& (R_iNsTr_118_2971_update_completed_)
        ;;[AND_u32_u32_2974_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_2974_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_2974_sample_start_ &-> (AND_u32_u32_2974_Sample)
        AND_u32_u32_2974_sample_completed_ <-& (AND_u32_u32_2974_Sample)
        AND_u32_u32_2974_sample_completed_ &-> ($null)
        AND_u32_u32_2974_update_start_ &-> (AND_u32_u32_2974_Update)
        AND_u32_u32_2974_update_completed_ <-& (AND_u32_u32_2974_Update)
        // Target expression
        // (as target) iNsTr_119
        // iNsTr_119
        // implicit reference
        // 		iNsTr_120 := (iNsTr_119 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        //  file prog.aa, line 1071
        // Source expression
        // (iNsTr_119 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
        $T[OR_u32_u32_2980_sample_start_] 
        $T[OR_u32_u32_2980_sample_completed_] 
        $T[OR_u32_u32_2980_update_start_] 
        $T[OR_u32_u32_2980_update_completed_] 
        // iNsTr_119
        $T[R_iNsTr_119_2977_sample_start_] 
        $T[R_iNsTr_119_2977_sample_completed_] 
        $T[R_iNsTr_119_2977_update_start_] 
        $T[R_iNsTr_119_2977_update_completed_] 
        // implicit reference
        R_iNsTr_119_2977_sample_start_ <-& (AND_u32_u32_2974_update_completed_)
        R_iNsTr_119_2977_sample_completed_ <-& (R_iNsTr_119_2977_sample_start_)
        R_iNsTr_119_2977_update_start_ <-& (R_iNsTr_119_2977_sample_completed_)
        R_iNsTr_119_2977_update_completed_ <-& (R_iNsTr_119_2977_update_start_)
        OR_u32_u32_2980_sample_start_ <-& (R_iNsTr_119_2977_update_completed_)
        ;;[OR_u32_u32_2980_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_2980_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_2980_sample_start_ &-> (OR_u32_u32_2980_Sample)
        OR_u32_u32_2980_sample_completed_ <-& (OR_u32_u32_2980_Sample)
        OR_u32_u32_2980_sample_completed_ &-> ($null)
        OR_u32_u32_2980_update_start_ &-> (OR_u32_u32_2980_Update)
        OR_u32_u32_2980_update_completed_ <-& (OR_u32_u32_2980_Update)
        // Target expression
        // (as target) iNsTr_120
        // iNsTr_120
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_2963_to_assign_stmt_2981__entry__ |-> (assign_stmt_2963_to_assign_stmt_2981)
      assign_stmt_2963_to_assign_stmt_2981__exit__ <-| (assign_stmt_2963_to_assign_stmt_2981)
      ::[assign_stmt_3003_to_assign_stmt_3009] 
      {
        // 		iNsTr_146 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1078
        // Source expression
        // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[LSHR_u32_u32_3002_sample_start_] 
        $T[LSHR_u32_u32_3002_sample_completed_] 
        $T[LSHR_u32_u32_3002_update_start_] 
        $T[LSHR_u32_u32_3002_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_2999_sample_start_] 
        $T[R_xx_x016x_xix_xi_2999_sample_completed_] 
        $T[R_xx_x016x_xix_xi_2999_update_start_] 
        $T[R_xx_x016x_xix_xi_2999_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_2999_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_2999_sample_completed_ <-& (R_xx_x016x_xix_xi_2999_sample_start_)
        R_xx_x016x_xix_xi_2999_update_start_ <-& (R_xx_x016x_xix_xi_2999_sample_completed_)
        R_xx_x016x_xix_xi_2999_update_completed_ <-& (R_xx_x016x_xix_xi_2999_update_start_)
        LSHR_u32_u32_3002_sample_start_ <-& (R_xx_x016x_xix_xi_2999_update_completed_)
        ;;[LSHR_u32_u32_3002_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_3002_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_3002_sample_start_ &-> (LSHR_u32_u32_3002_Sample)
        LSHR_u32_u32_3002_sample_completed_ <-& (LSHR_u32_u32_3002_Sample)
        LSHR_u32_u32_3002_sample_completed_ &-> ($null)
        LSHR_u32_u32_3002_update_start_ &-> (LSHR_u32_u32_3002_Update)
        LSHR_u32_u32_3002_update_completed_ <-& (LSHR_u32_u32_3002_Update)
        // Target expression
        // (as target) iNsTr_146
        // iNsTr_146
        // implicit reference
        // 		iNsTr_147 := (iNsTr_146 > ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
        //  file prog.aa, line 1080
        // Source expression
        // (iNsTr_146 > ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
        $T[UGT_u32_u1_3008_sample_start_] 
        $T[UGT_u32_u1_3008_sample_completed_] 
        $T[UGT_u32_u1_3008_update_start_] 
        $T[UGT_u32_u1_3008_update_completed_] 
        // iNsTr_146
        $T[R_iNsTr_146_3005_sample_start_] 
        $T[R_iNsTr_146_3005_sample_completed_] 
        $T[R_iNsTr_146_3005_update_start_] 
        $T[R_iNsTr_146_3005_update_completed_] 
        // implicit reference
        R_iNsTr_146_3005_sample_start_ <-& (LSHR_u32_u32_3002_update_completed_)
        R_iNsTr_146_3005_sample_completed_ <-& (R_iNsTr_146_3005_sample_start_)
        R_iNsTr_146_3005_update_start_ <-& (R_iNsTr_146_3005_sample_completed_)
        R_iNsTr_146_3005_update_completed_ <-& (R_iNsTr_146_3005_update_start_)
        UGT_u32_u1_3008_sample_start_ <-& (R_iNsTr_146_3005_update_completed_)
        ;;[UGT_u32_u1_3008_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_3008_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_3008_sample_start_ &-> (UGT_u32_u1_3008_Sample)
        UGT_u32_u1_3008_sample_completed_ <-& (UGT_u32_u1_3008_Sample)
        UGT_u32_u1_3008_sample_completed_ &-> ($null)
        UGT_u32_u1_3008_update_start_ &-> (UGT_u32_u1_3008_Update)
        UGT_u32_u1_3008_update_completed_ <-& (UGT_u32_u1_3008_Update)
        // Target expression
        // (as target) iNsTr_147
        // iNsTr_147
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3003_to_assign_stmt_3009__entry__ |-> (assign_stmt_3003_to_assign_stmt_3009)
      assign_stmt_3003_to_assign_stmt_3009__exit__ <-| (assign_stmt_3003_to_assign_stmt_3009)
      // if-statement  
      //  file prog.aa, line 1081
      ;;[if_stmt_3010_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3010__entry__ |-> (if_stmt_3010_dead_link)
      if_stmt_3010__exit__ <-| (if_stmt_3010_dead_link)
      ;;[if_stmt_3010_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3010__entry__ |-> (if_stmt_3010_eval_test)
      $P [R_iNsTr_147_3011_place]
      R_iNsTr_147_3011_place <-| (if_stmt_3010_eval_test)
      ;;[if_stmt_3010_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3010_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_147_3011_place |-> (if_stmt_3010_if_link if_stmt_3010_else_link)
      $P [bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader]
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader <-| (if_stmt_3010_if_link)
      $P [bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi]
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi <-| (if_stmt_3010_else_link)
      ::[assign_stmt_3039_to_assign_stmt_3050] 
      {
        // 		iNsTr_190 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1091
        // Source expression
        // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_3038_sample_start_] 
        $T[SHL_u32_u32_3038_sample_completed_] 
        $T[SHL_u32_u32_3038_update_start_] 
        $T[SHL_u32_u32_3038_update_completed_] 
        // shifted_divisorx_x03x_xix_xi
        $T[R_shifted_divisorx_x03x_xix_xi_3035_sample_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_3035_sample_completed_] 
        $T[R_shifted_divisorx_x03x_xix_xi_3035_update_start_] 
        $T[R_shifted_divisorx_x03x_xix_xi_3035_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x03x_xix_xi_3035_sample_start_ <-& ($entry)
        R_shifted_divisorx_x03x_xix_xi_3035_sample_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_3035_sample_start_)
        R_shifted_divisorx_x03x_xix_xi_3035_update_start_ <-& (R_shifted_divisorx_x03x_xix_xi_3035_sample_completed_)
        R_shifted_divisorx_x03x_xix_xi_3035_update_completed_ <-& (R_shifted_divisorx_x03x_xix_xi_3035_update_start_)
        SHL_u32_u32_3038_sample_start_ <-& (R_shifted_divisorx_x03x_xix_xi_3035_update_completed_)
        ;;[SHL_u32_u32_3038_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3038_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3038_sample_start_ &-> (SHL_u32_u32_3038_Sample)
        SHL_u32_u32_3038_sample_completed_ <-& (SHL_u32_u32_3038_Sample)
        SHL_u32_u32_3038_sample_completed_ &-> ($null)
        SHL_u32_u32_3038_update_start_ &-> (SHL_u32_u32_3038_Update)
        SHL_u32_u32_3038_update_completed_ <-& (SHL_u32_u32_3038_Update)
        // Target expression
        // (as target) iNsTr_190
        // iNsTr_190
        // implicit reference
        // 		iNsTr_191 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1092
        // Source expression
        // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_3044_sample_start_] 
        $T[SHL_u32_u32_3044_sample_completed_] 
        $T[SHL_u32_u32_3044_update_start_] 
        $T[SHL_u32_u32_3044_update_completed_] 
        // curr_quotientx_x02x_xix_xi
        $T[R_curr_quotientx_x02x_xix_xi_3041_sample_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_3041_sample_completed_] 
        $T[R_curr_quotientx_x02x_xix_xi_3041_update_start_] 
        $T[R_curr_quotientx_x02x_xix_xi_3041_update_completed_] 
        // implicit reference
        R_curr_quotientx_x02x_xix_xi_3041_sample_start_ <-& ($entry)
        R_curr_quotientx_x02x_xix_xi_3041_sample_completed_ <-& (R_curr_quotientx_x02x_xix_xi_3041_sample_start_)
        R_curr_quotientx_x02x_xix_xi_3041_update_start_ <-& (R_curr_quotientx_x02x_xix_xi_3041_sample_completed_)
        R_curr_quotientx_x02x_xix_xi_3041_update_completed_ <-& (R_curr_quotientx_x02x_xix_xi_3041_update_start_)
        SHL_u32_u32_3044_sample_start_ <-& (R_curr_quotientx_x02x_xix_xi_3041_update_completed_)
        ;;[SHL_u32_u32_3044_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3044_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3044_sample_start_ &-> (SHL_u32_u32_3044_Sample)
        SHL_u32_u32_3044_sample_completed_ <-& (SHL_u32_u32_3044_Sample)
        SHL_u32_u32_3044_sample_completed_ &-> ($null)
        SHL_u32_u32_3044_update_start_ &-> (SHL_u32_u32_3044_Update)
        SHL_u32_u32_3044_update_completed_ <-& (SHL_u32_u32_3044_Update)
        // Target expression
        // (as target) iNsTr_191
        // iNsTr_191
        // implicit reference
        // 		iNsTr_192 := (iNsTr_190 < iNsTr_146)
        //  file prog.aa, line 1094
        // Source expression
        // (iNsTr_190 < iNsTr_146)
        $T[ULT_u32_u1_3049_sample_start_] 
        $T[ULT_u32_u1_3049_sample_completed_] 
        $T[ULT_u32_u1_3049_update_start_] 
        $T[ULT_u32_u1_3049_update_completed_] 
        // iNsTr_190
        $T[R_iNsTr_190_3047_sample_start_] 
        $T[R_iNsTr_190_3047_sample_completed_] 
        $T[R_iNsTr_190_3047_update_start_] 
        $T[R_iNsTr_190_3047_update_completed_] 
        // implicit reference
        R_iNsTr_190_3047_sample_start_ <-& (SHL_u32_u32_3038_update_completed_)
        R_iNsTr_190_3047_sample_completed_ <-& (R_iNsTr_190_3047_sample_start_)
        R_iNsTr_190_3047_update_start_ <-& (R_iNsTr_190_3047_sample_completed_)
        R_iNsTr_190_3047_update_completed_ <-& (R_iNsTr_190_3047_update_start_)
        // iNsTr_146
        $T[R_iNsTr_146_3048_sample_start_] 
        $T[R_iNsTr_146_3048_sample_completed_] 
        $T[R_iNsTr_146_3048_update_start_] 
        $T[R_iNsTr_146_3048_update_completed_] 
        // implicit reference
        R_iNsTr_146_3048_sample_start_ <-& ($entry)
        R_iNsTr_146_3048_sample_completed_ <-& (R_iNsTr_146_3048_sample_start_)
        R_iNsTr_146_3048_update_start_ <-& (R_iNsTr_146_3048_sample_completed_)
        R_iNsTr_146_3048_update_completed_ <-& (R_iNsTr_146_3048_update_start_)
        ULT_u32_u1_3049_sample_start_ <-& (R_iNsTr_190_3047_update_completed_)
        ULT_u32_u1_3049_sample_start_ <-& (R_iNsTr_146_3048_update_completed_)
        ;;[ULT_u32_u1_3049_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_3049_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_3049_sample_start_ &-> (ULT_u32_u1_3049_Sample)
        ULT_u32_u1_3049_sample_completed_ <-& (ULT_u32_u1_3049_Sample)
        ULT_u32_u1_3049_sample_completed_ &-> ($null)
        ULT_u32_u1_3049_update_start_ &-> (ULT_u32_u1_3049_Update)
        ULT_u32_u1_3049_update_completed_ <-& (ULT_u32_u1_3049_Update)
        // Target expression
        // (as target) iNsTr_192
        // iNsTr_192
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3039_to_assign_stmt_3050__entry__ |-> (assign_stmt_3039_to_assign_stmt_3050)
      assign_stmt_3039_to_assign_stmt_3050__exit__ <-| (assign_stmt_3039_to_assign_stmt_3050)
      // if-statement  
      //  file prog.aa, line 1095
      ;;[if_stmt_3051_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3051__entry__ |-> (if_stmt_3051_dead_link)
      if_stmt_3051__exit__ <-| (if_stmt_3051_dead_link)
      ;;[if_stmt_3051_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3051__entry__ |-> (if_stmt_3051_eval_test)
      $P [R_iNsTr_192_3052_place]
      R_iNsTr_192_3052_place <-| (if_stmt_3051_eval_test)
      ;;[if_stmt_3051_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3051_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_192_3052_place |-> (if_stmt_3051_if_link if_stmt_3051_else_link)
      $P [bbx_xnphx_xix_xi_bbx_xnphx_xix_xi]
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi <-| (if_stmt_3051_if_link)
      $P [bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit]
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit <-| (if_stmt_3051_else_link)
      ::[assign_stmt_3088_to_assign_stmt_3099] 
      {
        // 		iNsTr_169 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        //  file prog.aa, line 1107
        // Source expression
        // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
        $T[ADD_u32_u32_3087_sample_start_] 
        $T[ADD_u32_u32_3087_sample_completed_] 
        $T[ADD_u32_u32_3087_update_start_] 
        $T[ADD_u32_u32_3087_update_completed_] 
        // curr_quotientx_x0x_xlcssax_xix_xi
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_3085_sample_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_3085_sample_completed_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_3085_update_start_] 
        $T[R_curr_quotientx_x0x_xlcssax_xix_xi_3085_update_completed_] 
        // implicit reference
        R_curr_quotientx_x0x_xlcssax_xix_xi_3085_sample_start_ <-& ($entry)
        R_curr_quotientx_x0x_xlcssax_xix_xi_3085_sample_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_3085_sample_start_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_3085_update_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_3085_sample_completed_)
        R_curr_quotientx_x0x_xlcssax_xix_xi_3085_update_completed_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_3085_update_start_)
        // quotientx_x05x_xix_xi
        $T[R_quotientx_x05x_xix_xi_3086_sample_start_] 
        $T[R_quotientx_x05x_xix_xi_3086_sample_completed_] 
        $T[R_quotientx_x05x_xix_xi_3086_update_start_] 
        $T[R_quotientx_x05x_xix_xi_3086_update_completed_] 
        // implicit reference
        R_quotientx_x05x_xix_xi_3086_sample_start_ <-& ($entry)
        R_quotientx_x05x_xix_xi_3086_sample_completed_ <-& (R_quotientx_x05x_xix_xi_3086_sample_start_)
        R_quotientx_x05x_xix_xi_3086_update_start_ <-& (R_quotientx_x05x_xix_xi_3086_sample_completed_)
        R_quotientx_x05x_xix_xi_3086_update_completed_ <-& (R_quotientx_x05x_xix_xi_3086_update_start_)
        ADD_u32_u32_3087_sample_start_ <-& (R_curr_quotientx_x0x_xlcssax_xix_xi_3085_update_completed_)
        ADD_u32_u32_3087_sample_start_ <-& (R_quotientx_x05x_xix_xi_3086_update_completed_)
        ;;[ADD_u32_u32_3087_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3087_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3087_sample_start_ &-> (ADD_u32_u32_3087_Sample)
        ADD_u32_u32_3087_sample_completed_ <-& (ADD_u32_u32_3087_Sample)
        ADD_u32_u32_3087_sample_completed_ &-> ($null)
        ADD_u32_u32_3087_update_start_ &-> (ADD_u32_u32_3087_Update)
        ADD_u32_u32_3087_update_completed_ <-& (ADD_u32_u32_3087_Update)
        // Target expression
        // (as target) iNsTr_169
        // iNsTr_169
        // implicit reference
        // 		iNsTr_170 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        //  file prog.aa, line 1108
        // Source expression
        // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
        $T[SUB_u32_u32_3092_sample_start_] 
        $T[SUB_u32_u32_3092_sample_completed_] 
        $T[SUB_u32_u32_3092_update_start_] 
        $T[SUB_u32_u32_3092_update_completed_] 
        // xx_x016x_xix_xi
        $T[R_xx_x016x_xix_xi_3090_sample_start_] 
        $T[R_xx_x016x_xix_xi_3090_sample_completed_] 
        $T[R_xx_x016x_xix_xi_3090_update_start_] 
        $T[R_xx_x016x_xix_xi_3090_update_completed_] 
        // implicit reference
        R_xx_x016x_xix_xi_3090_sample_start_ <-& ($entry)
        R_xx_x016x_xix_xi_3090_sample_completed_ <-& (R_xx_x016x_xix_xi_3090_sample_start_)
        R_xx_x016x_xix_xi_3090_update_start_ <-& (R_xx_x016x_xix_xi_3090_sample_completed_)
        R_xx_x016x_xix_xi_3090_update_completed_ <-& (R_xx_x016x_xix_xi_3090_update_start_)
        // shifted_divisorx_x0x_xlcssax_xix_xi
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_3091_sample_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_3091_sample_completed_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_3091_update_start_] 
        $T[R_shifted_divisorx_x0x_xlcssax_xix_xi_3091_update_completed_] 
        // implicit reference
        R_shifted_divisorx_x0x_xlcssax_xix_xi_3091_sample_start_ <-& ($entry)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_3091_sample_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_3091_sample_start_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_3091_update_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_3091_sample_completed_)
        R_shifted_divisorx_x0x_xlcssax_xix_xi_3091_update_completed_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_3091_update_start_)
        SUB_u32_u32_3092_sample_start_ <-& (R_xx_x016x_xix_xi_3090_update_completed_)
        SUB_u32_u32_3092_sample_start_ <-& (R_shifted_divisorx_x0x_xlcssax_xix_xi_3091_update_completed_)
        ;;[SUB_u32_u32_3092_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_3092_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_3092_sample_start_ &-> (SUB_u32_u32_3092_Sample)
        SUB_u32_u32_3092_sample_completed_ <-& (SUB_u32_u32_3092_Sample)
        SUB_u32_u32_3092_sample_completed_ &-> ($null)
        SUB_u32_u32_3092_update_start_ &-> (SUB_u32_u32_3092_Update)
        SUB_u32_u32_3092_update_completed_ <-& (SUB_u32_u32_3092_Update)
        // Target expression
        // (as target) iNsTr_170
        // iNsTr_170
        // implicit reference
        // 		iNsTr_171 := (iNsTr_170 < ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
        //  file prog.aa, line 1110
        // Source expression
        // (iNsTr_170 < ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
        $T[ULT_u32_u1_3098_sample_start_] 
        $T[ULT_u32_u1_3098_sample_completed_] 
        $T[ULT_u32_u1_3098_update_start_] 
        $T[ULT_u32_u1_3098_update_completed_] 
        // iNsTr_170
        $T[R_iNsTr_170_3095_sample_start_] 
        $T[R_iNsTr_170_3095_sample_completed_] 
        $T[R_iNsTr_170_3095_update_start_] 
        $T[R_iNsTr_170_3095_update_completed_] 
        // implicit reference
        R_iNsTr_170_3095_sample_start_ <-& (SUB_u32_u32_3092_update_completed_)
        R_iNsTr_170_3095_sample_completed_ <-& (R_iNsTr_170_3095_sample_start_)
        R_iNsTr_170_3095_update_start_ <-& (R_iNsTr_170_3095_sample_completed_)
        R_iNsTr_170_3095_update_completed_ <-& (R_iNsTr_170_3095_update_start_)
        ULT_u32_u1_3098_sample_start_ <-& (R_iNsTr_170_3095_update_completed_)
        ;;[ULT_u32_u1_3098_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u32_u1_3098_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u32_u1_3098_sample_start_ &-> (ULT_u32_u1_3098_Sample)
        ULT_u32_u1_3098_sample_completed_ <-& (ULT_u32_u1_3098_Sample)
        ULT_u32_u1_3098_sample_completed_ &-> ($null)
        ULT_u32_u1_3098_update_start_ &-> (ULT_u32_u1_3098_Update)
        ULT_u32_u1_3098_update_completed_ <-& (ULT_u32_u1_3098_Update)
        // Target expression
        // (as target) iNsTr_171
        // iNsTr_171
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3088_to_assign_stmt_3099__entry__ |-> (assign_stmt_3088_to_assign_stmt_3099)
      assign_stmt_3088_to_assign_stmt_3099__exit__ <-| (assign_stmt_3088_to_assign_stmt_3099)
      // if-statement  
      //  file prog.aa, line 1111
      ;;[if_stmt_3100_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3100__entry__ |-> (if_stmt_3100_dead_link)
      if_stmt_3100__exit__ <-| (if_stmt_3100_dead_link)
      ;;[if_stmt_3100_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3100__entry__ |-> (if_stmt_3100_eval_test)
      $P [R_iNsTr_171_3101_place]
      R_iNsTr_171_3101_place <-| (if_stmt_3100_eval_test)
      ;;[if_stmt_3100_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3100_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_171_3101_place |-> (if_stmt_3100_if_link if_stmt_3100_else_link)
      $P [xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi]
      xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi <-| (if_stmt_3100_if_link)
      $P [xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi]
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi <-| (if_stmt_3100_else_link)
      ::[assign_stmt_3117_to_assign_stmt_3160] 
      {
        // 		iNsTr_194 := (tmp10x_xi35 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 1116
        // Source expression
        // (tmp10x_xi35 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[LSHR_u32_u32_3116_sample_start_] 
        $T[LSHR_u32_u32_3116_sample_completed_] 
        $T[LSHR_u32_u32_3116_update_start_] 
        $T[LSHR_u32_u32_3116_update_completed_] 
        // tmp10x_xi35
        $T[R_tmp10x_xi35_3113_sample_start_] 
        $T[R_tmp10x_xi35_3113_sample_completed_] 
        $T[R_tmp10x_xi35_3113_update_start_] 
        $T[R_tmp10x_xi35_3113_update_completed_] 
        // implicit reference
        R_tmp10x_xi35_3113_sample_start_ <-& ($entry)
        R_tmp10x_xi35_3113_sample_completed_ <-& (R_tmp10x_xi35_3113_sample_start_)
        R_tmp10x_xi35_3113_update_start_ <-& (R_tmp10x_xi35_3113_sample_completed_)
        R_tmp10x_xi35_3113_update_completed_ <-& (R_tmp10x_xi35_3113_update_start_)
        LSHR_u32_u32_3116_sample_start_ <-& (R_tmp10x_xi35_3113_update_completed_)
        ;;[LSHR_u32_u32_3116_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[LSHR_u32_u32_3116_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        LSHR_u32_u32_3116_sample_start_ &-> (LSHR_u32_u32_3116_Sample)
        LSHR_u32_u32_3116_sample_completed_ <-& (LSHR_u32_u32_3116_Sample)
        LSHR_u32_u32_3116_sample_completed_ &-> ($null)
        LSHR_u32_u32_3116_update_start_ &-> (LSHR_u32_u32_3116_Update)
        LSHR_u32_u32_3116_update_completed_ <-& (LSHR_u32_u32_3116_Update)
        // Target expression
        // (as target) iNsTr_194
        // iNsTr_194
        // implicit reference
        // 		iNsTr_195 := (tmp10x_xi35 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        //  file prog.aa, line 1117
        // Source expression
        // (tmp10x_xi35 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
        $T[AND_u32_u32_3122_sample_start_] 
        $T[AND_u32_u32_3122_sample_completed_] 
        $T[AND_u32_u32_3122_update_start_] 
        $T[AND_u32_u32_3122_update_completed_] 
        // tmp10x_xi35
        $T[R_tmp10x_xi35_3119_sample_start_] 
        $T[R_tmp10x_xi35_3119_sample_completed_] 
        $T[R_tmp10x_xi35_3119_update_start_] 
        $T[R_tmp10x_xi35_3119_update_completed_] 
        // implicit reference
        R_tmp10x_xi35_3119_sample_start_ <-& ($entry)
        R_tmp10x_xi35_3119_sample_completed_ <-& (R_tmp10x_xi35_3119_sample_start_)
        R_tmp10x_xi35_3119_update_start_ <-& (R_tmp10x_xi35_3119_sample_completed_)
        R_tmp10x_xi35_3119_update_completed_ <-& (R_tmp10x_xi35_3119_update_start_)
        AND_u32_u32_3122_sample_start_ <-& (R_tmp10x_xi35_3119_update_completed_)
        ;;[AND_u32_u32_3122_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3122_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3122_sample_start_ &-> (AND_u32_u32_3122_Sample)
        AND_u32_u32_3122_sample_completed_ <-& (AND_u32_u32_3122_Sample)
        AND_u32_u32_3122_sample_completed_ &-> ($null)
        AND_u32_u32_3122_update_start_ &-> (AND_u32_u32_3122_Update)
        AND_u32_u32_3122_update_completed_ <-& (AND_u32_u32_3122_Update)
        // Target expression
        // (as target) iNsTr_195
        // iNsTr_195
        // implicit reference
        // 		iNsTr_196 := (iNsTr_194 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        //  file prog.aa, line 1118
        // Source expression
        // (iNsTr_194 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
        $T[AND_u32_u32_3128_sample_start_] 
        $T[AND_u32_u32_3128_sample_completed_] 
        $T[AND_u32_u32_3128_update_start_] 
        $T[AND_u32_u32_3128_update_completed_] 
        // iNsTr_194
        $T[R_iNsTr_194_3125_sample_start_] 
        $T[R_iNsTr_194_3125_sample_completed_] 
        $T[R_iNsTr_194_3125_update_start_] 
        $T[R_iNsTr_194_3125_update_completed_] 
        // implicit reference
        R_iNsTr_194_3125_sample_start_ <-& (LSHR_u32_u32_3116_update_completed_)
        R_iNsTr_194_3125_sample_completed_ <-& (R_iNsTr_194_3125_sample_start_)
        R_iNsTr_194_3125_update_start_ <-& (R_iNsTr_194_3125_sample_completed_)
        R_iNsTr_194_3125_update_completed_ <-& (R_iNsTr_194_3125_update_start_)
        AND_u32_u32_3128_sample_start_ <-& (R_iNsTr_194_3125_update_completed_)
        ;;[AND_u32_u32_3128_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3128_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3128_sample_start_ &-> (AND_u32_u32_3128_Sample)
        AND_u32_u32_3128_sample_completed_ <-& (AND_u32_u32_3128_Sample)
        AND_u32_u32_3128_sample_completed_ &-> ($null)
        AND_u32_u32_3128_update_start_ &-> (AND_u32_u32_3128_Update)
        AND_u32_u32_3128_update_completed_ <-& (AND_u32_u32_3128_Update)
        // Target expression
        // (as target) iNsTr_196
        // iNsTr_196
        // implicit reference
        // 		iNsTr_197 := (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000010  ))
        //  file prog.aa, line 1119
        // Source expression
        // (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000010  ))
        $T[ADD_u32_u32_3134_sample_start_] 
        $T[ADD_u32_u32_3134_sample_completed_] 
        $T[ADD_u32_u32_3134_update_start_] 
        $T[ADD_u32_u32_3134_update_completed_] 
        // iNsTr_196
        $T[R_iNsTr_196_3131_sample_start_] 
        $T[R_iNsTr_196_3131_sample_completed_] 
        $T[R_iNsTr_196_3131_update_start_] 
        $T[R_iNsTr_196_3131_update_completed_] 
        // implicit reference
        R_iNsTr_196_3131_sample_start_ <-& (AND_u32_u32_3128_update_completed_)
        R_iNsTr_196_3131_sample_completed_ <-& (R_iNsTr_196_3131_sample_start_)
        R_iNsTr_196_3131_update_start_ <-& (R_iNsTr_196_3131_sample_completed_)
        R_iNsTr_196_3131_update_completed_ <-& (R_iNsTr_196_3131_update_start_)
        ADD_u32_u32_3134_sample_start_ <-& (R_iNsTr_196_3131_update_completed_)
        ;;[ADD_u32_u32_3134_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3134_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3134_sample_start_ &-> (ADD_u32_u32_3134_Sample)
        ADD_u32_u32_3134_sample_completed_ <-& (ADD_u32_u32_3134_Sample)
        ADD_u32_u32_3134_sample_completed_ &-> ($null)
        ADD_u32_u32_3134_update_start_ &-> (ADD_u32_u32_3134_Update)
        ADD_u32_u32_3134_update_completed_ <-& (ADD_u32_u32_3134_Update)
        // Target expression
        // (as target) iNsTr_197
        // iNsTr_197
        // implicit reference
        // 		iNsTr_198 := (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 1120
        // Source expression
        // (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_3140_sample_start_] 
        $T[AND_u32_u32_3140_sample_completed_] 
        $T[AND_u32_u32_3140_update_start_] 
        $T[AND_u32_u32_3140_update_completed_] 
        // xx_xlcssa4
        $T[R_xx_xlcssa4_3137_sample_start_] 
        $T[R_xx_xlcssa4_3137_sample_completed_] 
        $T[R_xx_xlcssa4_3137_update_start_] 
        $T[R_xx_xlcssa4_3137_update_completed_] 
        // implicit reference
        R_xx_xlcssa4_3137_sample_start_ <-& ($entry)
        R_xx_xlcssa4_3137_sample_completed_ <-& (R_xx_xlcssa4_3137_sample_start_)
        R_xx_xlcssa4_3137_update_start_ <-& (R_xx_xlcssa4_3137_sample_completed_)
        R_xx_xlcssa4_3137_update_completed_ <-& (R_xx_xlcssa4_3137_update_start_)
        AND_u32_u32_3140_sample_start_ <-& (R_xx_xlcssa4_3137_update_completed_)
        ;;[AND_u32_u32_3140_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3140_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3140_sample_start_ &-> (AND_u32_u32_3140_Sample)
        AND_u32_u32_3140_sample_completed_ <-& (AND_u32_u32_3140_Sample)
        AND_u32_u32_3140_sample_completed_ &-> ($null)
        AND_u32_u32_3140_update_start_ &-> (AND_u32_u32_3140_Update)
        AND_u32_u32_3140_update_completed_ <-& (AND_u32_u32_3140_Update)
        // Target expression
        // (as target) iNsTr_198
        // iNsTr_198
        // implicit reference
        // 		iNsTr_199 := (iNsTr_198 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 1122
        // Source expression
        // (iNsTr_198 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_3146_sample_start_] 
        $T[EQ_u32_u1_3146_sample_completed_] 
        $T[EQ_u32_u1_3146_update_start_] 
        $T[EQ_u32_u1_3146_update_completed_] 
        // iNsTr_198
        $T[R_iNsTr_198_3143_sample_start_] 
        $T[R_iNsTr_198_3143_sample_completed_] 
        $T[R_iNsTr_198_3143_update_start_] 
        $T[R_iNsTr_198_3143_update_completed_] 
        // implicit reference
        R_iNsTr_198_3143_sample_start_ <-& (AND_u32_u32_3140_update_completed_)
        R_iNsTr_198_3143_sample_completed_ <-& (R_iNsTr_198_3143_sample_start_)
        R_iNsTr_198_3143_update_start_ <-& (R_iNsTr_198_3143_sample_completed_)
        R_iNsTr_198_3143_update_completed_ <-& (R_iNsTr_198_3143_update_start_)
        EQ_u32_u1_3146_sample_start_ <-& (R_iNsTr_198_3143_update_completed_)
        ;;[EQ_u32_u1_3146_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3146_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3146_sample_start_ &-> (EQ_u32_u1_3146_Sample)
        EQ_u32_u1_3146_sample_completed_ <-& (EQ_u32_u1_3146_Sample)
        EQ_u32_u1_3146_sample_completed_ &-> ($null)
        EQ_u32_u1_3146_update_start_ &-> (EQ_u32_u1_3146_Update)
        EQ_u32_u1_3146_update_completed_ <-& (EQ_u32_u1_3146_Update)
        // Target expression
        // (as target) iNsTr_199
        // iNsTr_199
        // implicit reference
        // 		iNsTr_200 := (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 1124
        // Source expression
        // (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_3154_sample_start_] 
        $T[NEQ_i32_u1_3154_sample_completed_] 
        $T[NEQ_i32_u1_3154_update_start_] 
        $T[NEQ_i32_u1_3154_update_completed_] 
        // ($bitcast ($int<32>) xx_xlcssa4 )
        $T[type_cast_3150_sample_start_] 
        $T[type_cast_3150_sample_completed_] 
        $T[type_cast_3150_update_start_] 
        $T[type_cast_3150_update_completed_] 
        // xx_xlcssa4
        $T[R_xx_xlcssa4_3149_sample_start_] 
        $T[R_xx_xlcssa4_3149_sample_completed_] 
        $T[R_xx_xlcssa4_3149_update_start_] 
        $T[R_xx_xlcssa4_3149_update_completed_] 
        // implicit reference
        R_xx_xlcssa4_3149_sample_start_ <-& ($entry)
        R_xx_xlcssa4_3149_sample_completed_ <-& (R_xx_xlcssa4_3149_sample_start_)
        R_xx_xlcssa4_3149_update_start_ <-& (R_xx_xlcssa4_3149_sample_completed_)
        R_xx_xlcssa4_3149_update_completed_ <-& (R_xx_xlcssa4_3149_update_start_)
        type_cast_3150_sample_start_ <-& (R_xx_xlcssa4_3149_update_completed_)
        ;;[type_cast_3150_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3150_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3150_sample_start_ &-> (type_cast_3150_Sample)
        type_cast_3150_sample_completed_ <-& (type_cast_3150_Sample)
        type_cast_3150_sample_completed_ &-> ($null)
        type_cast_3150_update_start_ &-> (type_cast_3150_Update)
        type_cast_3150_update_completed_ <-& (type_cast_3150_Update)
        // flow-through
        type_cast_3150_update_start_ <-& (type_cast_3150_sample_completed_)
        NEQ_i32_u1_3154_sample_start_ <-& (type_cast_3150_update_completed_)
        ;;[NEQ_i32_u1_3154_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_3154_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_3154_sample_start_ &-> (NEQ_i32_u1_3154_Sample)
        NEQ_i32_u1_3154_sample_completed_ <-& (NEQ_i32_u1_3154_Sample)
        NEQ_i32_u1_3154_sample_completed_ &-> ($null)
        NEQ_i32_u1_3154_update_start_ &-> (NEQ_i32_u1_3154_Update)
        NEQ_i32_u1_3154_update_completed_ <-& (NEQ_i32_u1_3154_Update)
        // Target expression
        // (as target) iNsTr_200
        // iNsTr_200
        // implicit reference
        // 		orx_xcond11x_xi := (iNsTr_199 & iNsTr_200)
        //  file prog.aa, line 1125
        // Source expression
        // (iNsTr_199 & iNsTr_200)
        $T[AND_u1_u1_3159_sample_start_] 
        $T[AND_u1_u1_3159_sample_completed_] 
        $T[AND_u1_u1_3159_update_start_] 
        $T[AND_u1_u1_3159_update_completed_] 
        // iNsTr_199
        $T[R_iNsTr_199_3157_sample_start_] 
        $T[R_iNsTr_199_3157_sample_completed_] 
        $T[R_iNsTr_199_3157_update_start_] 
        $T[R_iNsTr_199_3157_update_completed_] 
        // implicit reference
        R_iNsTr_199_3157_sample_start_ <-& (EQ_u32_u1_3146_update_completed_)
        R_iNsTr_199_3157_sample_completed_ <-& (R_iNsTr_199_3157_sample_start_)
        R_iNsTr_199_3157_update_start_ <-& (R_iNsTr_199_3157_sample_completed_)
        R_iNsTr_199_3157_update_completed_ <-& (R_iNsTr_199_3157_update_start_)
        // iNsTr_200
        $T[R_iNsTr_200_3158_sample_start_] 
        $T[R_iNsTr_200_3158_sample_completed_] 
        $T[R_iNsTr_200_3158_update_start_] 
        $T[R_iNsTr_200_3158_update_completed_] 
        // implicit reference
        R_iNsTr_200_3158_sample_start_ <-& (NEQ_i32_u1_3154_update_completed_)
        R_iNsTr_200_3158_sample_completed_ <-& (R_iNsTr_200_3158_sample_start_)
        R_iNsTr_200_3158_update_start_ <-& (R_iNsTr_200_3158_sample_completed_)
        R_iNsTr_200_3158_update_completed_ <-& (R_iNsTr_200_3158_update_start_)
        AND_u1_u1_3159_sample_start_ <-& (R_iNsTr_199_3157_update_completed_)
        AND_u1_u1_3159_sample_start_ <-& (R_iNsTr_200_3158_update_completed_)
        ;;[AND_u1_u1_3159_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3159_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3159_sample_start_ &-> (AND_u1_u1_3159_Sample)
        AND_u1_u1_3159_sample_completed_ <-& (AND_u1_u1_3159_Sample)
        AND_u1_u1_3159_sample_completed_ &-> ($null)
        AND_u1_u1_3159_update_start_ &-> (AND_u1_u1_3159_Update)
        AND_u1_u1_3159_update_completed_ <-& (AND_u1_u1_3159_Update)
        // Target expression
        // (as target) orx_xcond11x_xi
        // orx_xcond11x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3117_to_assign_stmt_3160__entry__ |-> (assign_stmt_3117_to_assign_stmt_3160)
      assign_stmt_3117_to_assign_stmt_3160__exit__ <-| (assign_stmt_3117_to_assign_stmt_3160)
      // if-statement  
      //  file prog.aa, line 1126
      ;;[if_stmt_3161_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3161__entry__ |-> (if_stmt_3161_dead_link)
      if_stmt_3161__exit__ <-| (if_stmt_3161_dead_link)
      ;;[if_stmt_3161_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3161__entry__ |-> (if_stmt_3161_eval_test)
      $P [R_orx_xcond11x_xi_3162_place]
      R_orx_xcond11x_xi_3162_place <-| (if_stmt_3161_eval_test)
      ;;[if_stmt_3161_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3161_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcond11x_xi_3162_place |-> (if_stmt_3161_if_link if_stmt_3161_else_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader]
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader <-| (if_stmt_3161_if_link)
      $P [udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi]
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi <-| (if_stmt_3161_else_link)
      ::[assign_stmt_3189_to_assign_stmt_3220] 
      {
        // 		iNsTr_212 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1136
        // Source expression
        // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[SHL_u32_u32_3188_sample_start_] 
        $T[SHL_u32_u32_3188_sample_completed_] 
        $T[SHL_u32_u32_3188_update_start_] 
        $T[SHL_u32_u32_3188_update_completed_] 
        // tempx_x012x_xi
        $T[R_tempx_x012x_xi_3185_sample_start_] 
        $T[R_tempx_x012x_xi_3185_sample_completed_] 
        $T[R_tempx_x012x_xi_3185_update_start_] 
        $T[R_tempx_x012x_xi_3185_update_completed_] 
        // implicit reference
        R_tempx_x012x_xi_3185_sample_start_ <-& ($entry)
        R_tempx_x012x_xi_3185_sample_completed_ <-& (R_tempx_x012x_xi_3185_sample_start_)
        R_tempx_x012x_xi_3185_update_start_ <-& (R_tempx_x012x_xi_3185_sample_completed_)
        R_tempx_x012x_xi_3185_update_completed_ <-& (R_tempx_x012x_xi_3185_update_start_)
        SHL_u32_u32_3188_sample_start_ <-& (R_tempx_x012x_xi_3185_update_completed_)
        ;;[SHL_u32_u32_3188_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3188_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3188_sample_start_ &-> (SHL_u32_u32_3188_Sample)
        SHL_u32_u32_3188_sample_completed_ <-& (SHL_u32_u32_3188_Sample)
        SHL_u32_u32_3188_sample_completed_ &-> ($null)
        SHL_u32_u32_3188_update_start_ &-> (SHL_u32_u32_3188_Update)
        SHL_u32_u32_3188_update_completed_ <-& (SHL_u32_u32_3188_Update)
        // Target expression
        // (as target) iNsTr_212
        // iNsTr_212
        // implicit reference
        // 		iNsTr_213 := (iNsTr_212 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        //  file prog.aa, line 1137
        // Source expression
        // (iNsTr_212 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
        $T[AND_u32_u32_3194_sample_start_] 
        $T[AND_u32_u32_3194_sample_completed_] 
        $T[AND_u32_u32_3194_update_start_] 
        $T[AND_u32_u32_3194_update_completed_] 
        // iNsTr_212
        $T[R_iNsTr_212_3191_sample_start_] 
        $T[R_iNsTr_212_3191_sample_completed_] 
        $T[R_iNsTr_212_3191_update_start_] 
        $T[R_iNsTr_212_3191_update_completed_] 
        // implicit reference
        R_iNsTr_212_3191_sample_start_ <-& (SHL_u32_u32_3188_update_completed_)
        R_iNsTr_212_3191_sample_completed_ <-& (R_iNsTr_212_3191_sample_start_)
        R_iNsTr_212_3191_update_start_ <-& (R_iNsTr_212_3191_sample_completed_)
        R_iNsTr_212_3191_update_completed_ <-& (R_iNsTr_212_3191_update_start_)
        AND_u32_u32_3194_sample_start_ <-& (R_iNsTr_212_3191_update_completed_)
        ;;[AND_u32_u32_3194_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3194_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3194_sample_start_ &-> (AND_u32_u32_3194_Sample)
        AND_u32_u32_3194_sample_completed_ <-& (AND_u32_u32_3194_Sample)
        AND_u32_u32_3194_sample_completed_ &-> ($null)
        AND_u32_u32_3194_update_start_ &-> (AND_u32_u32_3194_Update)
        AND_u32_u32_3194_update_completed_ <-& (AND_u32_u32_3194_Update)
        // Target expression
        // (as target) iNsTr_213
        // iNsTr_213
        // implicit reference
        // 		iNsTr_214 := (iNsTr_213 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        //  file prog.aa, line 1139
        // Source expression
        // (iNsTr_213 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
        $T[EQ_u32_u1_3200_sample_start_] 
        $T[EQ_u32_u1_3200_sample_completed_] 
        $T[EQ_u32_u1_3200_update_start_] 
        $T[EQ_u32_u1_3200_update_completed_] 
        // iNsTr_213
        $T[R_iNsTr_213_3197_sample_start_] 
        $T[R_iNsTr_213_3197_sample_completed_] 
        $T[R_iNsTr_213_3197_update_start_] 
        $T[R_iNsTr_213_3197_update_completed_] 
        // implicit reference
        R_iNsTr_213_3197_sample_start_ <-& (AND_u32_u32_3194_update_completed_)
        R_iNsTr_213_3197_sample_completed_ <-& (R_iNsTr_213_3197_sample_start_)
        R_iNsTr_213_3197_update_start_ <-& (R_iNsTr_213_3197_sample_completed_)
        R_iNsTr_213_3197_update_completed_ <-& (R_iNsTr_213_3197_update_start_)
        EQ_u32_u1_3200_sample_start_ <-& (R_iNsTr_213_3197_update_completed_)
        ;;[EQ_u32_u1_3200_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3200_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3200_sample_start_ &-> (EQ_u32_u1_3200_Sample)
        EQ_u32_u1_3200_sample_completed_ <-& (EQ_u32_u1_3200_Sample)
        EQ_u32_u1_3200_sample_completed_ &-> ($null)
        EQ_u32_u1_3200_update_start_ &-> (EQ_u32_u1_3200_Update)
        EQ_u32_u1_3200_update_completed_ <-& (EQ_u32_u1_3200_Update)
        // Target expression
        // (as target) iNsTr_214
        // iNsTr_214
        // implicit reference
        // 		iNsTr_215 := (($bitcast ($int<32>) iNsTr_212 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        //  file prog.aa, line 1141
        // Source expression
        // (($bitcast ($int<32>) iNsTr_212 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
        $T[NEQ_i32_u1_3208_sample_start_] 
        $T[NEQ_i32_u1_3208_sample_completed_] 
        $T[NEQ_i32_u1_3208_update_start_] 
        $T[NEQ_i32_u1_3208_update_completed_] 
        // ($bitcast ($int<32>) iNsTr_212 )
        $T[type_cast_3204_sample_start_] 
        $T[type_cast_3204_sample_completed_] 
        $T[type_cast_3204_update_start_] 
        $T[type_cast_3204_update_completed_] 
        // iNsTr_212
        $T[R_iNsTr_212_3203_sample_start_] 
        $T[R_iNsTr_212_3203_sample_completed_] 
        $T[R_iNsTr_212_3203_update_start_] 
        $T[R_iNsTr_212_3203_update_completed_] 
        // implicit reference
        R_iNsTr_212_3203_sample_start_ <-& (SHL_u32_u32_3188_update_completed_)
        R_iNsTr_212_3203_sample_completed_ <-& (R_iNsTr_212_3203_sample_start_)
        R_iNsTr_212_3203_update_start_ <-& (R_iNsTr_212_3203_sample_completed_)
        R_iNsTr_212_3203_update_completed_ <-& (R_iNsTr_212_3203_update_start_)
        type_cast_3204_sample_start_ <-& (R_iNsTr_212_3203_update_completed_)
        ;;[type_cast_3204_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3204_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3204_sample_start_ &-> (type_cast_3204_Sample)
        type_cast_3204_sample_completed_ <-& (type_cast_3204_Sample)
        type_cast_3204_sample_completed_ &-> ($null)
        type_cast_3204_update_start_ &-> (type_cast_3204_Update)
        type_cast_3204_update_completed_ <-& (type_cast_3204_Update)
        // flow-through
        type_cast_3204_update_start_ <-& (type_cast_3204_sample_completed_)
        NEQ_i32_u1_3208_sample_start_ <-& (type_cast_3204_update_completed_)
        ;;[NEQ_i32_u1_3208_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[NEQ_i32_u1_3208_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        NEQ_i32_u1_3208_sample_start_ &-> (NEQ_i32_u1_3208_Sample)
        NEQ_i32_u1_3208_sample_completed_ <-& (NEQ_i32_u1_3208_Sample)
        NEQ_i32_u1_3208_sample_completed_ &-> ($null)
        NEQ_i32_u1_3208_update_start_ &-> (NEQ_i32_u1_3208_Update)
        NEQ_i32_u1_3208_update_completed_ <-& (NEQ_i32_u1_3208_Update)
        // Target expression
        // (as target) iNsTr_215
        // iNsTr_215
        // implicit reference
        // 		orx_xcondx_xi := (iNsTr_214 & iNsTr_215)
        //  file prog.aa, line 1142
        // Source expression
        // (iNsTr_214 & iNsTr_215)
        $T[AND_u1_u1_3213_sample_start_] 
        $T[AND_u1_u1_3213_sample_completed_] 
        $T[AND_u1_u1_3213_update_start_] 
        $T[AND_u1_u1_3213_update_completed_] 
        // iNsTr_214
        $T[R_iNsTr_214_3211_sample_start_] 
        $T[R_iNsTr_214_3211_sample_completed_] 
        $T[R_iNsTr_214_3211_update_start_] 
        $T[R_iNsTr_214_3211_update_completed_] 
        // implicit reference
        R_iNsTr_214_3211_sample_start_ <-& (EQ_u32_u1_3200_update_completed_)
        R_iNsTr_214_3211_sample_completed_ <-& (R_iNsTr_214_3211_sample_start_)
        R_iNsTr_214_3211_update_start_ <-& (R_iNsTr_214_3211_sample_completed_)
        R_iNsTr_214_3211_update_completed_ <-& (R_iNsTr_214_3211_update_start_)
        // iNsTr_215
        $T[R_iNsTr_215_3212_sample_start_] 
        $T[R_iNsTr_215_3212_sample_completed_] 
        $T[R_iNsTr_215_3212_update_start_] 
        $T[R_iNsTr_215_3212_update_completed_] 
        // implicit reference
        R_iNsTr_215_3212_sample_start_ <-& (NEQ_i32_u1_3208_update_completed_)
        R_iNsTr_215_3212_sample_completed_ <-& (R_iNsTr_215_3212_sample_start_)
        R_iNsTr_215_3212_update_start_ <-& (R_iNsTr_215_3212_sample_completed_)
        R_iNsTr_215_3212_update_completed_ <-& (R_iNsTr_215_3212_update_start_)
        AND_u1_u1_3213_sample_start_ <-& (R_iNsTr_214_3211_update_completed_)
        AND_u1_u1_3213_sample_start_ <-& (R_iNsTr_215_3212_update_completed_)
        ;;[AND_u1_u1_3213_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u1_u1_3213_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u1_u1_3213_sample_start_ &-> (AND_u1_u1_3213_Sample)
        AND_u1_u1_3213_sample_completed_ <-& (AND_u1_u1_3213_Sample)
        AND_u1_u1_3213_sample_completed_ &-> ($null)
        AND_u1_u1_3213_update_start_ &-> (AND_u1_u1_3213_Update)
        AND_u1_u1_3213_update_completed_ <-& (AND_u1_u1_3213_Update)
        // Target expression
        // (as target) orx_xcondx_xi
        // orx_xcondx_xi
        // implicit reference
        // 		indvarx_xnextx_xi := (iNsTr_211 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.aa, line 1143
        // Source expression
        // (iNsTr_211 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[ADD_u32_u32_3219_sample_start_] 
        $T[ADD_u32_u32_3219_sample_completed_] 
        $T[ADD_u32_u32_3219_update_start_] 
        $T[ADD_u32_u32_3219_update_completed_] 
        // iNsTr_211
        $T[R_iNsTr_211_3216_sample_start_] 
        $T[R_iNsTr_211_3216_sample_completed_] 
        $T[R_iNsTr_211_3216_update_start_] 
        $T[R_iNsTr_211_3216_update_completed_] 
        // implicit reference
        R_iNsTr_211_3216_sample_start_ <-& ($entry)
        R_iNsTr_211_3216_sample_completed_ <-& (R_iNsTr_211_3216_sample_start_)
        R_iNsTr_211_3216_update_start_ <-& (R_iNsTr_211_3216_sample_completed_)
        R_iNsTr_211_3216_update_completed_ <-& (R_iNsTr_211_3216_update_start_)
        ADD_u32_u32_3219_sample_start_ <-& (R_iNsTr_211_3216_update_completed_)
        ;;[ADD_u32_u32_3219_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3219_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3219_sample_start_ &-> (ADD_u32_u32_3219_Sample)
        ADD_u32_u32_3219_sample_completed_ <-& (ADD_u32_u32_3219_Sample)
        ADD_u32_u32_3219_sample_completed_ &-> ($null)
        ADD_u32_u32_3219_update_start_ &-> (ADD_u32_u32_3219_Update)
        ADD_u32_u32_3219_update_completed_ <-& (ADD_u32_u32_3219_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi
        // indvarx_xnextx_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3189_to_assign_stmt_3220__entry__ |-> (assign_stmt_3189_to_assign_stmt_3220)
      assign_stmt_3189_to_assign_stmt_3220__exit__ <-| (assign_stmt_3189_to_assign_stmt_3220)
      // if-statement  
      //  file prog.aa, line 1144
      ;;[if_stmt_3221_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3221__entry__ |-> (if_stmt_3221_dead_link)
      if_stmt_3221__exit__ <-| (if_stmt_3221_dead_link)
      ;;[if_stmt_3221_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3221__entry__ |-> (if_stmt_3221_eval_test)
      $P [R_orx_xcondx_xi_3222_place]
      R_orx_xcondx_xi_3222_place <-| (if_stmt_3221_eval_test)
      ;;[if_stmt_3221_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3221_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_orx_xcondx_xi_3222_place |-> (if_stmt_3221_if_link if_stmt_3221_else_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xi <-| (if_stmt_3221_if_link)
      $P [udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi]
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi <-| (if_stmt_3221_else_link)
      ::[assign_stmt_3242_to_assign_stmt_3247] 
      {
        // 		tmp25x_xi := (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000001  ))
        //  file prog.aa, line 1150
        // Source expression
        // (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000001  ))
        $T[ADD_u32_u32_3241_sample_start_] 
        $T[ADD_u32_u32_3241_sample_completed_] 
        $T[ADD_u32_u32_3241_update_start_] 
        $T[ADD_u32_u32_3241_update_completed_] 
        // iNsTr_196
        $T[R_iNsTr_196_3238_sample_start_] 
        $T[R_iNsTr_196_3238_sample_completed_] 
        $T[R_iNsTr_196_3238_update_start_] 
        $T[R_iNsTr_196_3238_update_completed_] 
        // implicit reference
        R_iNsTr_196_3238_sample_start_ <-& ($entry)
        R_iNsTr_196_3238_sample_completed_ <-& (R_iNsTr_196_3238_sample_start_)
        R_iNsTr_196_3238_update_start_ <-& (R_iNsTr_196_3238_sample_completed_)
        R_iNsTr_196_3238_update_completed_ <-& (R_iNsTr_196_3238_update_start_)
        ADD_u32_u32_3241_sample_start_ <-& (R_iNsTr_196_3238_update_completed_)
        ;;[ADD_u32_u32_3241_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3241_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3241_sample_start_ &-> (ADD_u32_u32_3241_Sample)
        ADD_u32_u32_3241_sample_completed_ <-& (ADD_u32_u32_3241_Sample)
        ADD_u32_u32_3241_sample_completed_ &-> ($null)
        ADD_u32_u32_3241_update_start_ &-> (ADD_u32_u32_3241_Update)
        ADD_u32_u32_3241_update_completed_ <-& (ADD_u32_u32_3241_Update)
        // Target expression
        // (as target) tmp25x_xi
        // tmp25x_xi
        // implicit reference
        // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
        //  file prog.aa, line 1151
        // Source expression
        // (tmp25x_xi - xx_xlcssa)
        $T[SUB_u32_u32_3246_sample_start_] 
        $T[SUB_u32_u32_3246_sample_completed_] 
        $T[SUB_u32_u32_3246_update_start_] 
        $T[SUB_u32_u32_3246_update_completed_] 
        // tmp25x_xi
        $T[R_tmp25x_xi_3244_sample_start_] 
        $T[R_tmp25x_xi_3244_sample_completed_] 
        $T[R_tmp25x_xi_3244_update_start_] 
        $T[R_tmp25x_xi_3244_update_completed_] 
        // implicit reference
        R_tmp25x_xi_3244_sample_start_ <-& (ADD_u32_u32_3241_update_completed_)
        R_tmp25x_xi_3244_sample_completed_ <-& (R_tmp25x_xi_3244_sample_start_)
        R_tmp25x_xi_3244_update_start_ <-& (R_tmp25x_xi_3244_sample_completed_)
        R_tmp25x_xi_3244_update_completed_ <-& (R_tmp25x_xi_3244_update_start_)
        // xx_xlcssa
        $T[R_xx_xlcssa_3245_sample_start_] 
        $T[R_xx_xlcssa_3245_sample_completed_] 
        $T[R_xx_xlcssa_3245_update_start_] 
        $T[R_xx_xlcssa_3245_update_completed_] 
        // implicit reference
        R_xx_xlcssa_3245_sample_start_ <-& ($entry)
        R_xx_xlcssa_3245_sample_completed_ <-& (R_xx_xlcssa_3245_sample_start_)
        R_xx_xlcssa_3245_update_start_ <-& (R_xx_xlcssa_3245_sample_completed_)
        R_xx_xlcssa_3245_update_completed_ <-& (R_xx_xlcssa_3245_update_start_)
        SUB_u32_u32_3246_sample_start_ <-& (R_tmp25x_xi_3244_update_completed_)
        SUB_u32_u32_3246_sample_start_ <-& (R_xx_xlcssa_3245_update_completed_)
        ;;[SUB_u32_u32_3246_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u32_u32_3246_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u32_u32_3246_sample_start_ &-> (SUB_u32_u32_3246_Sample)
        SUB_u32_u32_3246_sample_completed_ <-& (SUB_u32_u32_3246_Sample)
        SUB_u32_u32_3246_sample_completed_ &-> ($null)
        SUB_u32_u32_3246_update_start_ &-> (SUB_u32_u32_3246_Update)
        SUB_u32_u32_3246_update_completed_ <-& (SUB_u32_u32_3246_Update)
        // Target expression
        // (as target) tmp26x_xi
        // tmp26x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3242_to_assign_stmt_3247__entry__ |-> (assign_stmt_3242_to_assign_stmt_3247)
      assign_stmt_3242_to_assign_stmt_3247__exit__ <-| (assign_stmt_3242_to_assign_stmt_3247)
      ::[assign_stmt_3268_to_assign_stmt_3294] 
      {
        // 		iNsTr_205 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        //  file prog.aa, line 1158
        // Source expression
        // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
        $T[AND_u32_u32_3267_sample_start_] 
        $T[AND_u32_u32_3267_sample_completed_] 
        $T[AND_u32_u32_3267_update_start_] 
        $T[AND_u32_u32_3267_update_completed_] 
        // tempx_x0x_xlcssax_xi
        $T[R_tempx_x0x_xlcssax_xi_3264_sample_start_] 
        $T[R_tempx_x0x_xlcssax_xi_3264_sample_completed_] 
        $T[R_tempx_x0x_xlcssax_xi_3264_update_start_] 
        $T[R_tempx_x0x_xlcssax_xi_3264_update_completed_] 
        // implicit reference
        R_tempx_x0x_xlcssax_xi_3264_sample_start_ <-& ($entry)
        R_tempx_x0x_xlcssax_xi_3264_sample_completed_ <-& (R_tempx_x0x_xlcssax_xi_3264_sample_start_)
        R_tempx_x0x_xlcssax_xi_3264_update_start_ <-& (R_tempx_x0x_xlcssax_xi_3264_sample_completed_)
        R_tempx_x0x_xlcssax_xi_3264_update_completed_ <-& (R_tempx_x0x_xlcssax_xi_3264_update_start_)
        AND_u32_u32_3267_sample_start_ <-& (R_tempx_x0x_xlcssax_xi_3264_update_completed_)
        ;;[AND_u32_u32_3267_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u32_u32_3267_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u32_u32_3267_sample_start_ &-> (AND_u32_u32_3267_Sample)
        AND_u32_u32_3267_sample_completed_ <-& (AND_u32_u32_3267_Sample)
        AND_u32_u32_3267_sample_completed_ &-> ($null)
        AND_u32_u32_3267_update_start_ &-> (AND_u32_u32_3267_Update)
        AND_u32_u32_3267_update_completed_ <-& (AND_u32_u32_3267_Update)
        // Target expression
        // (as target) iNsTr_205
        // iNsTr_205
        // implicit reference
        // 		iNsTr_206 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        //  file prog.aa, line 1159
        // Source expression
        // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
        $T[SHL_u32_u32_3273_sample_start_] 
        $T[SHL_u32_u32_3273_sample_completed_] 
        $T[SHL_u32_u32_3273_update_start_] 
        $T[SHL_u32_u32_3273_update_completed_] 
        // expx_x0x_xlcssax_xi
        $T[R_expx_x0x_xlcssax_xi_3270_sample_start_] 
        $T[R_expx_x0x_xlcssax_xi_3270_sample_completed_] 
        $T[R_expx_x0x_xlcssax_xi_3270_update_start_] 
        $T[R_expx_x0x_xlcssax_xi_3270_update_completed_] 
        // implicit reference
        R_expx_x0x_xlcssax_xi_3270_sample_start_ <-& ($entry)
        R_expx_x0x_xlcssax_xi_3270_sample_completed_ <-& (R_expx_x0x_xlcssax_xi_3270_sample_start_)
        R_expx_x0x_xlcssax_xi_3270_update_start_ <-& (R_expx_x0x_xlcssax_xi_3270_sample_completed_)
        R_expx_x0x_xlcssax_xi_3270_update_completed_ <-& (R_expx_x0x_xlcssax_xi_3270_update_start_)
        SHL_u32_u32_3273_sample_start_ <-& (R_expx_x0x_xlcssax_xi_3270_update_completed_)
        ;;[SHL_u32_u32_3273_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SHL_u32_u32_3273_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SHL_u32_u32_3273_sample_start_ &-> (SHL_u32_u32_3273_Sample)
        SHL_u32_u32_3273_sample_completed_ <-& (SHL_u32_u32_3273_Sample)
        SHL_u32_u32_3273_sample_completed_ &-> ($null)
        SHL_u32_u32_3273_update_start_ &-> (SHL_u32_u32_3273_Update)
        SHL_u32_u32_3273_update_completed_ <-& (SHL_u32_u32_3273_Update)
        // Target expression
        // (as target) iNsTr_206
        // iNsTr_206
        // implicit reference
        // 		iNsTr_207 := (iNsTr_206 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        //  file prog.aa, line 1160
        // Source expression
        // (iNsTr_206 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
        $T[ADD_u32_u32_3279_sample_start_] 
        $T[ADD_u32_u32_3279_sample_completed_] 
        $T[ADD_u32_u32_3279_update_start_] 
        $T[ADD_u32_u32_3279_update_completed_] 
        // iNsTr_206
        $T[R_iNsTr_206_3276_sample_start_] 
        $T[R_iNsTr_206_3276_sample_completed_] 
        $T[R_iNsTr_206_3276_update_start_] 
        $T[R_iNsTr_206_3276_update_completed_] 
        // implicit reference
        R_iNsTr_206_3276_sample_start_ <-& (SHL_u32_u32_3273_update_completed_)
        R_iNsTr_206_3276_sample_completed_ <-& (R_iNsTr_206_3276_sample_start_)
        R_iNsTr_206_3276_update_start_ <-& (R_iNsTr_206_3276_sample_completed_)
        R_iNsTr_206_3276_update_completed_ <-& (R_iNsTr_206_3276_update_start_)
        ADD_u32_u32_3279_sample_start_ <-& (R_iNsTr_206_3276_update_completed_)
        ;;[ADD_u32_u32_3279_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_3279_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_3279_sample_start_ &-> (ADD_u32_u32_3279_Sample)
        ADD_u32_u32_3279_sample_completed_ <-& (ADD_u32_u32_3279_Sample)
        ADD_u32_u32_3279_sample_completed_ &-> ($null)
        ADD_u32_u32_3279_update_start_ &-> (ADD_u32_u32_3279_Update)
        ADD_u32_u32_3279_update_completed_ <-& (ADD_u32_u32_3279_Update)
        // Target expression
        // (as target) iNsTr_207
        // iNsTr_207
        // implicit reference
        // 		iNsTr_208 := (iNsTr_207 | iNsTr_195)
        //  file prog.aa, line 1161
        // Source expression
        // (iNsTr_207 | iNsTr_195)
        $T[OR_u32_u32_3284_sample_start_] 
        $T[OR_u32_u32_3284_sample_completed_] 
        $T[OR_u32_u32_3284_update_start_] 
        $T[OR_u32_u32_3284_update_completed_] 
        // iNsTr_207
        $T[R_iNsTr_207_3282_sample_start_] 
        $T[R_iNsTr_207_3282_sample_completed_] 
        $T[R_iNsTr_207_3282_update_start_] 
        $T[R_iNsTr_207_3282_update_completed_] 
        // implicit reference
        R_iNsTr_207_3282_sample_start_ <-& (ADD_u32_u32_3279_update_completed_)
        R_iNsTr_207_3282_sample_completed_ <-& (R_iNsTr_207_3282_sample_start_)
        R_iNsTr_207_3282_update_start_ <-& (R_iNsTr_207_3282_sample_completed_)
        R_iNsTr_207_3282_update_completed_ <-& (R_iNsTr_207_3282_update_start_)
        // iNsTr_195
        $T[R_iNsTr_195_3283_sample_start_] 
        $T[R_iNsTr_195_3283_sample_completed_] 
        $T[R_iNsTr_195_3283_update_start_] 
        $T[R_iNsTr_195_3283_update_completed_] 
        // implicit reference
        R_iNsTr_195_3283_sample_start_ <-& ($entry)
        R_iNsTr_195_3283_sample_completed_ <-& (R_iNsTr_195_3283_sample_start_)
        R_iNsTr_195_3283_update_start_ <-& (R_iNsTr_195_3283_sample_completed_)
        R_iNsTr_195_3283_update_completed_ <-& (R_iNsTr_195_3283_update_start_)
        OR_u32_u32_3284_sample_start_ <-& (R_iNsTr_207_3282_update_completed_)
        OR_u32_u32_3284_sample_start_ <-& (R_iNsTr_195_3283_update_completed_)
        ;;[OR_u32_u32_3284_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_3284_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_3284_sample_start_ &-> (OR_u32_u32_3284_Sample)
        OR_u32_u32_3284_sample_completed_ <-& (OR_u32_u32_3284_Sample)
        OR_u32_u32_3284_sample_completed_ &-> ($null)
        OR_u32_u32_3284_update_start_ &-> (OR_u32_u32_3284_Update)
        OR_u32_u32_3284_update_completed_ <-& (OR_u32_u32_3284_Update)
        // Target expression
        // (as target) iNsTr_208
        // iNsTr_208
        // implicit reference
        // 		iNsTr_209 := (iNsTr_208 | iNsTr_205)
        //  file prog.aa, line 1162
        // Source expression
        // (iNsTr_208 | iNsTr_205)
        $T[OR_u32_u32_3289_sample_start_] 
        $T[OR_u32_u32_3289_sample_completed_] 
        $T[OR_u32_u32_3289_update_start_] 
        $T[OR_u32_u32_3289_update_completed_] 
        // iNsTr_208
        $T[R_iNsTr_208_3287_sample_start_] 
        $T[R_iNsTr_208_3287_sample_completed_] 
        $T[R_iNsTr_208_3287_update_start_] 
        $T[R_iNsTr_208_3287_update_completed_] 
        // implicit reference
        R_iNsTr_208_3287_sample_start_ <-& (OR_u32_u32_3284_update_completed_)
        R_iNsTr_208_3287_sample_completed_ <-& (R_iNsTr_208_3287_sample_start_)
        R_iNsTr_208_3287_update_start_ <-& (R_iNsTr_208_3287_sample_completed_)
        R_iNsTr_208_3287_update_completed_ <-& (R_iNsTr_208_3287_update_start_)
        // iNsTr_205
        $T[R_iNsTr_205_3288_sample_start_] 
        $T[R_iNsTr_205_3288_sample_completed_] 
        $T[R_iNsTr_205_3288_update_start_] 
        $T[R_iNsTr_205_3288_update_completed_] 
        // implicit reference
        R_iNsTr_205_3288_sample_start_ <-& (AND_u32_u32_3267_update_completed_)
        R_iNsTr_205_3288_sample_completed_ <-& (R_iNsTr_205_3288_sample_start_)
        R_iNsTr_205_3288_update_start_ <-& (R_iNsTr_205_3288_sample_completed_)
        R_iNsTr_205_3288_update_completed_ <-& (R_iNsTr_205_3288_update_start_)
        OR_u32_u32_3289_sample_start_ <-& (R_iNsTr_208_3287_update_completed_)
        OR_u32_u32_3289_sample_start_ <-& (R_iNsTr_205_3288_update_completed_)
        ;;[OR_u32_u32_3289_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[OR_u32_u32_3289_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        OR_u32_u32_3289_sample_start_ &-> (OR_u32_u32_3289_Sample)
        OR_u32_u32_3289_sample_completed_ <-& (OR_u32_u32_3289_Sample)
        OR_u32_u32_3289_sample_completed_ &-> ($null)
        OR_u32_u32_3289_update_start_ &-> (OR_u32_u32_3289_Update)
        OR_u32_u32_3289_update_completed_ <-& (OR_u32_u32_3289_Update)
        // Target expression
        // (as target) iNsTr_209
        // iNsTr_209
        // implicit reference
        // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_209 )
        //  file prog.aa, line 1163
        // Source expression
        // ($bitcast ($float<8,23>) iNsTr_209 )
        $T[type_cast_3293_sample_start_] 
        $T[type_cast_3293_sample_completed_] 
        $T[type_cast_3293_update_start_] 
        $T[type_cast_3293_update_completed_] 
        // iNsTr_209
        $T[R_iNsTr_209_3292_sample_start_] 
        $T[R_iNsTr_209_3292_sample_completed_] 
        $T[R_iNsTr_209_3292_update_start_] 
        $T[R_iNsTr_209_3292_update_completed_] 
        // implicit reference
        R_iNsTr_209_3292_sample_start_ <-& (OR_u32_u32_3289_update_completed_)
        R_iNsTr_209_3292_sample_completed_ <-& (R_iNsTr_209_3292_sample_start_)
        R_iNsTr_209_3292_update_start_ <-& (R_iNsTr_209_3292_sample_completed_)
        R_iNsTr_209_3292_update_completed_ <-& (R_iNsTr_209_3292_update_start_)
        type_cast_3293_sample_start_ <-& (R_iNsTr_209_3292_update_completed_)
        ;;[type_cast_3293_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3293_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3293_sample_start_ &-> (type_cast_3293_Sample)
        type_cast_3293_sample_completed_ <-& (type_cast_3293_Sample)
        type_cast_3293_sample_completed_ &-> ($null)
        type_cast_3293_update_start_ &-> (type_cast_3293_Update)
        type_cast_3293_update_completed_ <-& (type_cast_3293_Update)
        // Target expression
        // (as target) tmp3x_xi
        // tmp3x_xi
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3268_to_assign_stmt_3294__entry__ |-> (assign_stmt_3268_to_assign_stmt_3294)
      assign_stmt_3268_to_assign_stmt_3294__exit__ <-| (assign_stmt_3268_to_assign_stmt_3294)
      ::[assign_stmt_3307] 
      {
        // 		out_data := iNsTr_173
        //  file prog.aa, line 1169
        // Source expression
        // iNsTr_173
        $T[R_iNsTr_173_3306_sample_start_] 
        $T[R_iNsTr_173_3306_sample_completed_] 
        $T[R_iNsTr_173_3306_update_start_] 
        $T[R_iNsTr_173_3306_update_completed_] 
        // implicit reference
        R_iNsTr_173_3306_sample_start_ <-& ($entry)
        R_iNsTr_173_3306_sample_completed_ <-& (R_iNsTr_173_3306_sample_start_)
        R_iNsTr_173_3306_update_start_ <-& (R_iNsTr_173_3306_sample_completed_)
        R_iNsTr_173_3306_update_completed_ <-& (R_iNsTr_173_3306_update_start_)
        // Target expression
        // (as target) out_data
        $T[WPIPE_out_data_3305_sample_start_] 
        $T[WPIPE_out_data_3305_sample_completed_] 
        $T[WPIPE_out_data_3305_update_start_] 
        $T[WPIPE_out_data_3305_update_completed_] 
        ;;[WPIPE_out_data_3305_Sample] 
        {
          // pipe write sample-start out_data
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data_3305_Update] 
        {
          // pipe write update (complete) out_data
          $T [req] $T [ack] 
        }
        WPIPE_out_data_3305_sample_start_ &-> (WPIPE_out_data_3305_Sample)
        WPIPE_out_data_3305_sample_completed_ <-& (WPIPE_out_data_3305_Sample)
        WPIPE_out_data_3305_sample_completed_ &-> ($null)
        WPIPE_out_data_3305_update_start_ &-> (WPIPE_out_data_3305_Update)
        WPIPE_out_data_3305_update_completed_ <-& (WPIPE_out_data_3305_Update)
        WPIPE_out_data_3305_sample_start_ <-& (R_iNsTr_173_3306_update_completed_)
        // barrier: 		out_data := iNsTr_173
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data
      }
      assign_stmt_3307__entry__ |-> (assign_stmt_3307)
      assign_stmt_3307__exit__ <-| (assign_stmt_3307)
      ::[assign_stmt_3310] 
      {
        // 		out_data := iNsTr_67
        //  file prog.aa, line 1170
        // Source expression
        // iNsTr_67
        $T[R_iNsTr_67_3309_sample_start_] 
        $T[R_iNsTr_67_3309_sample_completed_] 
        $T[R_iNsTr_67_3309_update_start_] 
        $T[R_iNsTr_67_3309_update_completed_] 
        // implicit reference
        R_iNsTr_67_3309_sample_start_ <-& ($entry)
        R_iNsTr_67_3309_sample_completed_ <-& (R_iNsTr_67_3309_sample_start_)
        R_iNsTr_67_3309_update_start_ <-& (R_iNsTr_67_3309_sample_completed_)
        R_iNsTr_67_3309_update_completed_ <-& (R_iNsTr_67_3309_update_start_)
        // Target expression
        // (as target) out_data
        $T[WPIPE_out_data_3308_sample_start_] 
        $T[WPIPE_out_data_3308_sample_completed_] 
        $T[WPIPE_out_data_3308_update_start_] 
        $T[WPIPE_out_data_3308_update_completed_] 
        ;;[WPIPE_out_data_3308_Sample] 
        {
          // pipe write sample-start out_data
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data_3308_Update] 
        {
          // pipe write update (complete) out_data
          $T [req] $T [ack] 
        }
        WPIPE_out_data_3308_sample_start_ &-> (WPIPE_out_data_3308_Sample)
        WPIPE_out_data_3308_sample_completed_ <-& (WPIPE_out_data_3308_Sample)
        WPIPE_out_data_3308_sample_completed_ &-> ($null)
        WPIPE_out_data_3308_update_start_ &-> (WPIPE_out_data_3308_Update)
        WPIPE_out_data_3308_update_completed_ <-& (WPIPE_out_data_3308_Update)
        WPIPE_out_data_3308_sample_start_ <-& (R_iNsTr_67_3309_update_completed_)
        // barrier: 		out_data := iNsTr_67
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data
      }
      assign_stmt_3310__entry__ |-> (assign_stmt_3310)
      assign_stmt_3310__exit__ <-| (assign_stmt_3310)
      ::[assign_stmt_3313] 
      {
        // 		out_data := iNsTr_49
        //  file prog.aa, line 1171
        // Source expression
        // iNsTr_49
        $T[R_iNsTr_49_3312_sample_start_] 
        $T[R_iNsTr_49_3312_sample_completed_] 
        $T[R_iNsTr_49_3312_update_start_] 
        $T[R_iNsTr_49_3312_update_completed_] 
        // implicit reference
        R_iNsTr_49_3312_sample_start_ <-& ($entry)
        R_iNsTr_49_3312_sample_completed_ <-& (R_iNsTr_49_3312_sample_start_)
        R_iNsTr_49_3312_update_start_ <-& (R_iNsTr_49_3312_sample_completed_)
        R_iNsTr_49_3312_update_completed_ <-& (R_iNsTr_49_3312_update_start_)
        // Target expression
        // (as target) out_data
        $T[WPIPE_out_data_3311_sample_start_] 
        $T[WPIPE_out_data_3311_sample_completed_] 
        $T[WPIPE_out_data_3311_update_start_] 
        $T[WPIPE_out_data_3311_update_completed_] 
        ;;[WPIPE_out_data_3311_Sample] 
        {
          // pipe write sample-start out_data
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data_3311_Update] 
        {
          // pipe write update (complete) out_data
          $T [req] $T [ack] 
        }
        WPIPE_out_data_3311_sample_start_ &-> (WPIPE_out_data_3311_Sample)
        WPIPE_out_data_3311_sample_completed_ <-& (WPIPE_out_data_3311_Sample)
        WPIPE_out_data_3311_sample_completed_ &-> ($null)
        WPIPE_out_data_3311_update_start_ &-> (WPIPE_out_data_3311_Update)
        WPIPE_out_data_3311_update_completed_ <-& (WPIPE_out_data_3311_Update)
        WPIPE_out_data_3311_sample_start_ <-& (R_iNsTr_49_3312_update_completed_)
        // barrier: 		out_data := iNsTr_49
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data
      }
      assign_stmt_3313__entry__ |-> (assign_stmt_3313)
      assign_stmt_3313__exit__ <-| (assign_stmt_3313)
      ::[assign_stmt_3316] 
      {
        // 		out_data := iNsTr_39
        //  file prog.aa, line 1172
        // Source expression
        // iNsTr_39
        $T[R_iNsTr_39_3315_sample_start_] 
        $T[R_iNsTr_39_3315_sample_completed_] 
        $T[R_iNsTr_39_3315_update_start_] 
        $T[R_iNsTr_39_3315_update_completed_] 
        // implicit reference
        R_iNsTr_39_3315_sample_start_ <-& ($entry)
        R_iNsTr_39_3315_sample_completed_ <-& (R_iNsTr_39_3315_sample_start_)
        R_iNsTr_39_3315_update_start_ <-& (R_iNsTr_39_3315_sample_completed_)
        R_iNsTr_39_3315_update_completed_ <-& (R_iNsTr_39_3315_update_start_)
        // Target expression
        // (as target) out_data
        $T[WPIPE_out_data_3314_sample_start_] 
        $T[WPIPE_out_data_3314_sample_completed_] 
        $T[WPIPE_out_data_3314_update_start_] 
        $T[WPIPE_out_data_3314_update_completed_] 
        ;;[WPIPE_out_data_3314_Sample] 
        {
          // pipe write sample-start out_data
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data_3314_Update] 
        {
          // pipe write update (complete) out_data
          $T [req] $T [ack] 
        }
        WPIPE_out_data_3314_sample_start_ &-> (WPIPE_out_data_3314_Sample)
        WPIPE_out_data_3314_sample_completed_ <-& (WPIPE_out_data_3314_Sample)
        WPIPE_out_data_3314_sample_completed_ &-> ($null)
        WPIPE_out_data_3314_update_start_ &-> (WPIPE_out_data_3314_Update)
        WPIPE_out_data_3314_update_completed_ <-& (WPIPE_out_data_3314_Update)
        WPIPE_out_data_3314_sample_start_ <-& (R_iNsTr_39_3315_update_completed_)
        // barrier: 		out_data := iNsTr_39
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data
      }
      assign_stmt_3316__entry__ |-> (assign_stmt_3316)
      assign_stmt_3316__exit__ <-| (assign_stmt_3316)
      ::[assign_stmt_3322_to_assign_stmt_3334] 
      {
        // 		phitmp := (iNsTr_20 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
        //  file prog.aa, line 1173
        // Source expression
        // (iNsTr_20 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
        $T[MUL_f32_f32_3321_sample_start_] 
        $T[MUL_f32_f32_3321_sample_completed_] 
        $T[MUL_f32_f32_3321_update_start_] 
        $T[MUL_f32_f32_3321_update_completed_] 
        // iNsTr_20
        $T[R_iNsTr_20_3318_sample_start_] 
        $T[R_iNsTr_20_3318_sample_completed_] 
        $T[R_iNsTr_20_3318_update_start_] 
        $T[R_iNsTr_20_3318_update_completed_] 
        // implicit reference
        R_iNsTr_20_3318_sample_start_ <-& ($entry)
        R_iNsTr_20_3318_sample_completed_ <-& (R_iNsTr_20_3318_sample_start_)
        R_iNsTr_20_3318_update_start_ <-& (R_iNsTr_20_3318_sample_completed_)
        R_iNsTr_20_3318_update_completed_ <-& (R_iNsTr_20_3318_update_start_)
        MUL_f32_f32_3321_sample_start_ <-& (R_iNsTr_20_3318_update_completed_)
        ;;[MUL_f32_f32_3321_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_3321_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_3321_sample_start_ &-> (MUL_f32_f32_3321_Sample)
        MUL_f32_f32_3321_sample_completed_ <-& (MUL_f32_f32_3321_Sample)
        MUL_f32_f32_3321_sample_completed_ &-> ($null)
        MUL_f32_f32_3321_update_start_ &-> (MUL_f32_f32_3321_Update)
        MUL_f32_f32_3321_update_completed_ <-& (MUL_f32_f32_3321_Update)
        // Target expression
        // (as target) phitmp
        // phitmp
        // implicit reference
        // 		phitmp31 := (iNsTr_39 * ($bitcast ($float<8,23>) _f9.995200e-01 ))
        //  file prog.aa, line 1174
        // Source expression
        // (iNsTr_39 * ($bitcast ($float<8,23>) _f9.995200e-01 ))
        $T[MUL_f32_f32_3327_sample_start_] 
        $T[MUL_f32_f32_3327_sample_completed_] 
        $T[MUL_f32_f32_3327_update_start_] 
        $T[MUL_f32_f32_3327_update_completed_] 
        // iNsTr_39
        $T[R_iNsTr_39_3324_sample_start_] 
        $T[R_iNsTr_39_3324_sample_completed_] 
        $T[R_iNsTr_39_3324_update_start_] 
        $T[R_iNsTr_39_3324_update_completed_] 
        // implicit reference
        R_iNsTr_39_3324_sample_start_ <-& ($entry)
        R_iNsTr_39_3324_sample_completed_ <-& (R_iNsTr_39_3324_sample_start_)
        R_iNsTr_39_3324_update_start_ <-& (R_iNsTr_39_3324_sample_completed_)
        R_iNsTr_39_3324_update_completed_ <-& (R_iNsTr_39_3324_update_start_)
        MUL_f32_f32_3327_sample_start_ <-& (R_iNsTr_39_3324_update_completed_)
        ;;[MUL_f32_f32_3327_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_3327_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_3327_sample_start_ &-> (MUL_f32_f32_3327_Sample)
        MUL_f32_f32_3327_sample_completed_ <-& (MUL_f32_f32_3327_Sample)
        MUL_f32_f32_3327_sample_completed_ &-> ($null)
        MUL_f32_f32_3327_update_start_ &-> (MUL_f32_f32_3327_Update)
        MUL_f32_f32_3327_update_completed_ <-& (MUL_f32_f32_3327_Update)
        // Target expression
        // (as target) phitmp31
        // phitmp31
        // implicit reference
        // 		phitmp33 := (iNsTr_69 * ($bitcast ($float<8,23>) _f9.949860e-01 ))
        //  file prog.aa, line 1175
        // Source expression
        // (iNsTr_69 * ($bitcast ($float<8,23>) _f9.949860e-01 ))
        $T[MUL_f32_f32_3333_sample_start_] 
        $T[MUL_f32_f32_3333_sample_completed_] 
        $T[MUL_f32_f32_3333_update_start_] 
        $T[MUL_f32_f32_3333_update_completed_] 
        // iNsTr_69
        $T[R_iNsTr_69_3330_sample_start_] 
        $T[R_iNsTr_69_3330_sample_completed_] 
        $T[R_iNsTr_69_3330_update_start_] 
        $T[R_iNsTr_69_3330_update_completed_] 
        // implicit reference
        R_iNsTr_69_3330_sample_start_ <-& ($entry)
        R_iNsTr_69_3330_sample_completed_ <-& (R_iNsTr_69_3330_sample_start_)
        R_iNsTr_69_3330_update_start_ <-& (R_iNsTr_69_3330_sample_completed_)
        R_iNsTr_69_3330_update_completed_ <-& (R_iNsTr_69_3330_update_start_)
        MUL_f32_f32_3333_sample_start_ <-& (R_iNsTr_69_3330_update_completed_)
        ;;[MUL_f32_f32_3333_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_3333_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_3333_sample_start_ &-> (MUL_f32_f32_3333_Sample)
        MUL_f32_f32_3333_sample_completed_ <-& (MUL_f32_f32_3333_Sample)
        MUL_f32_f32_3333_sample_completed_ &-> ($null)
        MUL_f32_f32_3333_update_start_ &-> (MUL_f32_f32_3333_Update)
        MUL_f32_f32_3333_update_completed_ <-& (MUL_f32_f32_3333_Update)
        // Target expression
        // (as target) phitmp33
        // phitmp33
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_3322_to_assign_stmt_3334__entry__ |-> (assign_stmt_3322_to_assign_stmt_3334)
      assign_stmt_3322_to_assign_stmt_3334__exit__ <-| (assign_stmt_3322_to_assign_stmt_3334)
      // control-path for merge  
      //  file prog.aa, line 659
      //---------------------   merge statement  file prog.aa, line 659  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        ;;[phi_stmt_1697] 
        {
          ||[phi_stmt_1697_sources] 
          {
            // sources for 			$phi spd_lpf_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp )
            ;;[type_cast_1703] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1697_req] 
        }
        ;;[phi_stmt_1683] 
        {
          ||[phi_stmt_1683_sources] 
          {
            // sources for 			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_49 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_49 )
            ;;[type_cast_1689] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1683_req] 
        }
        ;;[phi_stmt_1704] 
        {
          ||[phi_stmt_1704_sources] 
          {
            // sources for 			$phi int_speed_err_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_24 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_24 )
            ;;[type_cast_1710] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1704_req] 
        }
        ;;[phi_stmt_1676] 
        {
          ||[phi_stmt_1676_sources] 
          {
            // sources for 			$phi speed_err_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_21 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_21 )
            ;;[type_cast_1682] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1676_req] 
        }
        ;;[phi_stmt_1711] 
        {
          ||[phi_stmt_1711_sources] 
          {
            // sources for 			$phi speed_refx_x1 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) speed_refx_x0 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) speed_refx_x0 )
            ;;[type_cast_1717] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1711_req] 
        }
        ;;[phi_stmt_1669] 
        {
          ||[phi_stmt_1669_sources] 
          {
            // sources for 			$phi int_flux_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_72 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_72 )
            ;;[type_cast_1675] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1669_req] 
        }
        ;;[phi_stmt_1690] 
        {
          ||[phi_stmt_1690_sources] 
          {
            // sources for 			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp31 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp31 )
            ;;[type_cast_1696] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1690_req] 
        }
        ;;[phi_stmt_1662] 
        {
          ||[phi_stmt_1662_sources] 
          {
            // sources for 			$phi flux_rotor_lpf_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp33 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp33 )
            ;;[type_cast_1668] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1662_req] 
        }
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      ||[fdiv32x_xexit_bb_1_PhiReq] 
      {
        ;;[phi_stmt_1697] 
        {
          ||[phi_stmt_1697_sources] 
          {
            // sources for 			$phi spd_lpf_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp )
            ;;[type_cast_1703] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1697_req] 
        }
        ;;[phi_stmt_1683] 
        {
          ||[phi_stmt_1683_sources] 
          {
            // sources for 			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_49 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_49 )
            ;;[type_cast_1689] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1683_req] 
        }
        ;;[phi_stmt_1704] 
        {
          ||[phi_stmt_1704_sources] 
          {
            // sources for 			$phi int_speed_err_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_24 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_24 )
            ;;[type_cast_1710] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1704_req] 
        }
        ;;[phi_stmt_1676] 
        {
          ||[phi_stmt_1676_sources] 
          {
            // sources for 			$phi speed_err_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_21 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_21 )
            ;;[type_cast_1682] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1676_req] 
        }
        ;;[phi_stmt_1711] 
        {
          ||[phi_stmt_1711_sources] 
          {
            // sources for 			$phi speed_refx_x1 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) speed_refx_x0 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) speed_refx_x0 )
            ;;[type_cast_1717] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1711_req] 
        }
        ;;[phi_stmt_1669] 
        {
          ||[phi_stmt_1669_sources] 
          {
            // sources for 			$phi int_flux_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_72 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_72 )
            ;;[type_cast_1675] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1669_req] 
        }
        ;;[phi_stmt_1690] 
        {
          ||[phi_stmt_1690_sources] 
          {
            // sources for 			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp31 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp31 )
            ;;[type_cast_1696] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1690_req] 
        }
        ;;[phi_stmt_1662] 
        {
          ||[phi_stmt_1662_sources] 
          {
            // sources for 			$phi flux_rotor_lpf_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp33 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp33 )
            ;;[type_cast_1668] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1662_req] 
        }
      }
      fdiv32x_xexit_bb_1 |-> (fdiv32x_xexit_bb_1_PhiReq)
      $P [merge_stmt_1661_PhiReqMerge] 
      merge_stmt_1661_PhiReqMerge <-| ( bb_0_bb_1_PhiReq  fdiv32x_xexit_bb_1_PhiReq )
      ||[merge_stmt_1661_PhiAck] 
      {
        $T [phi_stmt_1662_ack] 
        $T [phi_stmt_1669_ack] 
        $T [phi_stmt_1676_ack] 
        $T [phi_stmt_1683_ack] 
        $T [phi_stmt_1690_ack] 
        $T [phi_stmt_1697_ack] 
        $T [phi_stmt_1704_ack] 
        $T [phi_stmt_1711_ack] 
      }
      merge_stmt_1661_PhiReqMerge |-> (merge_stmt_1661_PhiAck)
      merge_stmt_1661__exit__  <-| (merge_stmt_1661_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 659  --------------------------
      // control-path for merge  
      //  file prog.aa, line 678
      ;;[merge_stmt_1745_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1745__entry__ |-> (merge_stmt_1745_dead_link)
      merge_stmt_1745__exit__ <-| (merge_stmt_1745_dead_link)
      //---------------------   merge statement  file prog.aa, line 678  --------------------------
      ||[bb_1_bb_2_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bb_2 |-> (bb_1_bb_2_PhiReq)
      $P [merge_stmt_1745_PhiReqMerge] 
      merge_stmt_1745_PhiReqMerge <-| ( bb_1_bb_2_PhiReq )
      ||[merge_stmt_1745_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1745_PhiReqMerge |-> (merge_stmt_1745_PhiAck)
      merge_stmt_1745__exit__  <-| (merge_stmt_1745_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 678  --------------------------
      // control-path for merge  
      //  file prog.aa, line 685
      //---------------------   merge statement  file prog.aa, line 685  --------------------------
      ||[bb_1_bb_3_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bb_3 |-> (bb_1_bb_3_PhiReq)
      $P [merge_stmt_1762_PhiReqMerge] 
      merge_stmt_1762_PhiReqMerge <-| ( bb_1_bb_3_PhiReq )
      ||[merge_stmt_1762_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1762_PhiReqMerge |-> (merge_stmt_1762_PhiAck)
      merge_stmt_1762__exit__  <-| (merge_stmt_1762_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 685  --------------------------
      // control-path for merge  
      //  file prog.aa, line 691
      ;;[merge_stmt_1774_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1774__entry__ |-> (merge_stmt_1774_dead_link)
      merge_stmt_1774__exit__ <-| (merge_stmt_1774_dead_link)
      //---------------------   merge statement  file prog.aa, line 691  --------------------------
      ||[bb_3_bb_4_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_3_bb_4 |-> (bb_3_bb_4_PhiReq)
      $P [merge_stmt_1774_PhiReqMerge] 
      merge_stmt_1774_PhiReqMerge <-| ( bb_3_bb_4_PhiReq )
      ||[merge_stmt_1774_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1774_PhiReqMerge |-> (merge_stmt_1774_PhiAck)
      merge_stmt_1774__exit__  <-| (merge_stmt_1774_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 691  --------------------------
      // control-path for merge  
      //  file prog.aa, line 698
      //---------------------   merge statement  file prog.aa, line 698  --------------------------
      ||[bb_2_bb_5_PhiReq] 
      {
        ;;[phi_stmt_1791] 
        {
          ||[phi_stmt_1791_sources] 
          {
            // sources for 			$phi speed_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_15 ) $on bb_2_bb_5			  ($cast ($float<8,23>) iNsTr_30 ) $on bb_4_bb_5			  ($cast ($float<8,23>) speed_refx_x1 ) $on bb_3_bb_5 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_15 )
            ;;[type_cast_1794] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_30 )
            ;;[type_cast_1796] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) speed_refx_x1 )
            ;;[type_cast_1798] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1791_req] 
        }
      }
      bb_2_bb_5 |-> (bb_2_bb_5_PhiReq)
      ||[bb_3_bb_5_PhiReq] 
      {
        ;;[phi_stmt_1791] 
        {
          ||[phi_stmt_1791_sources] 
          {
            // sources for 			$phi speed_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_15 ) $on bb_2_bb_5			  ($cast ($float<8,23>) iNsTr_30 ) $on bb_4_bb_5			  ($cast ($float<8,23>) speed_refx_x1 ) $on bb_3_bb_5 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_15 )
            ;;[type_cast_1794] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_30 )
            ;;[type_cast_1796] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) speed_refx_x1 )
            ;;[type_cast_1798] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1791_req] 
        }
      }
      bb_3_bb_5 |-> (bb_3_bb_5_PhiReq)
      ||[bb_4_bb_5_PhiReq] 
      {
        ;;[phi_stmt_1791] 
        {
          ||[phi_stmt_1791_sources] 
          {
            // sources for 			$phi speed_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_15 ) $on bb_2_bb_5			  ($cast ($float<8,23>) iNsTr_30 ) $on bb_4_bb_5			  ($cast ($float<8,23>) speed_refx_x1 ) $on bb_3_bb_5 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_15 )
            ;;[type_cast_1794] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) iNsTr_30 )
            ;;[type_cast_1796] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($float<8,23>) speed_refx_x1 )
            ;;[type_cast_1798] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1791_req] 
        }
      }
      bb_4_bb_5 |-> (bb_4_bb_5_PhiReq)
      $P [merge_stmt_1790_PhiReqMerge] 
      merge_stmt_1790_PhiReqMerge <-| ( bb_2_bb_5_PhiReq  bb_3_bb_5_PhiReq  bb_4_bb_5_PhiReq )
      ||[merge_stmt_1790_PhiAck] 
      {
        $T [phi_stmt_1791_ack] 
      }
      merge_stmt_1790_PhiReqMerge |-> (merge_stmt_1790_PhiAck)
      merge_stmt_1790__exit__  <-| (merge_stmt_1790_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 698  --------------------------
      // control-path for merge  
      //  file prog.aa, line 712
      ;;[merge_stmt_1848_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1848__entry__ |-> (merge_stmt_1848_dead_link)
      merge_stmt_1848__exit__ <-| (merge_stmt_1848_dead_link)
      //---------------------   merge statement  file prog.aa, line 712  --------------------------
      ||[bb_5_bb_6_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_5_bb_6 |-> (bb_5_bb_6_PhiReq)
      $P [merge_stmt_1848_PhiReqMerge] 
      merge_stmt_1848_PhiReqMerge <-| ( bb_5_bb_6_PhiReq )
      ||[merge_stmt_1848_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1848_PhiReqMerge |-> (merge_stmt_1848_PhiAck)
      merge_stmt_1848__exit__  <-| (merge_stmt_1848_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 712  --------------------------
      // control-path for merge  
      //  file prog.aa, line 718
      ;;[merge_stmt_1861_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1861__entry__ |-> (merge_stmt_1861_dead_link)
      merge_stmt_1861__exit__ <-| (merge_stmt_1861_dead_link)
      //---------------------   merge statement  file prog.aa, line 718  --------------------------
      ||[bb_6_bb_7_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_6_bb_7 |-> (bb_6_bb_7_PhiReq)
      $P [merge_stmt_1861_PhiReqMerge] 
      merge_stmt_1861_PhiReqMerge <-| ( bb_6_bb_7_PhiReq )
      ||[merge_stmt_1861_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1861_PhiReqMerge |-> (merge_stmt_1861_PhiAck)
      merge_stmt_1861__exit__  <-| (merge_stmt_1861_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 718  --------------------------
      // control-path for merge  
      //  file prog.aa, line 722
      //---------------------   merge statement  file prog.aa, line 722  --------------------------
      ||[bb_5_bb_8_PhiReq] 
      {
        ;;[phi_stmt_1864] 
        {
          ||[phi_stmt_1864_sources] 
          {
            // sources for 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_24 ) $on bb_7_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+01 ) ) $on bb_5_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+01 ) ) $on bb_6_bb_8 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_24 )
            ;;[type_cast_1867] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1864_req] 
        }
      }
      bb_5_bb_8 |-> (bb_5_bb_8_PhiReq)
      ||[bb_6_bb_8_PhiReq] 
      {
        ;;[phi_stmt_1864] 
        {
          ||[phi_stmt_1864_sources] 
          {
            // sources for 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_24 ) $on bb_7_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+01 ) ) $on bb_5_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+01 ) ) $on bb_6_bb_8 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_24 )
            ;;[type_cast_1867] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1864_req] 
        }
      }
      bb_6_bb_8 |-> (bb_6_bb_8_PhiReq)
      ||[bb_7_bb_8_PhiReq] 
      {
        ;;[phi_stmt_1864] 
        {
          ||[phi_stmt_1864_sources] 
          {
            // sources for 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_24 ) $on bb_7_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+01 ) ) $on bb_5_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+01 ) ) $on bb_6_bb_8 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_24 )
            ;;[type_cast_1867] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1864_req] 
        }
      }
      bb_7_bb_8 |-> (bb_7_bb_8_PhiReq)
      $P [merge_stmt_1863_PhiReqMerge] 
      merge_stmt_1863_PhiReqMerge <-| ( bb_5_bb_8_PhiReq  bb_6_bb_8_PhiReq  bb_7_bb_8_PhiReq )
      ||[merge_stmt_1863_PhiAck] 
      {
        $T [phi_stmt_1864_ack] 
      }
      merge_stmt_1863_PhiReqMerge |-> (merge_stmt_1863_PhiAck)
      merge_stmt_1863__exit__  <-| (merge_stmt_1863_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 722  --------------------------
      // control-path for merge  
      //  file prog.aa, line 731
      ;;[merge_stmt_1898_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1898__entry__ |-> (merge_stmt_1898_dead_link)
      merge_stmt_1898__exit__ <-| (merge_stmt_1898_dead_link)
      //---------------------   merge statement  file prog.aa, line 731  --------------------------
      ||[bb_8_bb_9_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_8_bb_9 |-> (bb_8_bb_9_PhiReq)
      $P [merge_stmt_1898_PhiReqMerge] 
      merge_stmt_1898_PhiReqMerge <-| ( bb_8_bb_9_PhiReq )
      ||[merge_stmt_1898_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1898_PhiReqMerge |-> (merge_stmt_1898_PhiAck)
      merge_stmt_1898__exit__  <-| (merge_stmt_1898_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 731  --------------------------
      // control-path for merge  
      //  file prog.aa, line 737
      ;;[merge_stmt_1911_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1911__entry__ |-> (merge_stmt_1911_dead_link)
      merge_stmt_1911__exit__ <-| (merge_stmt_1911_dead_link)
      //---------------------   merge statement  file prog.aa, line 737  --------------------------
      ||[bb_9_bb_10_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_9_bb_10 |-> (bb_9_bb_10_PhiReq)
      $P [merge_stmt_1911_PhiReqMerge] 
      merge_stmt_1911_PhiReqMerge <-| ( bb_9_bb_10_PhiReq )
      ||[merge_stmt_1911_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1911_PhiReqMerge |-> (merge_stmt_1911_PhiAck)
      merge_stmt_1911__exit__  <-| (merge_stmt_1911_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 737  --------------------------
      // control-path for merge  
      //  file prog.aa, line 742
      //---------------------   merge statement  file prog.aa, line 742  --------------------------
      ||[bb_10_bb_11_PhiReq] 
      {
        ;;[phi_stmt_1920] 
        {
          ||[phi_stmt_1920_sources] 
          {
            // sources for 			$phi torque_refx_x0 := 			  ($cast ($float<8,23>) phitmp32 ) $on bb_10_bb_11			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-6.931406e+00 ) ) $on bb_8_bb_11			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f6.931406e+00 ) ) $on bb_9_bb_11 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp32 )
            ;;[type_cast_1923] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1920_req] 
        }
      }
      bb_10_bb_11 |-> (bb_10_bb_11_PhiReq)
      ||[bb_8_bb_11_PhiReq] 
      {
        ;;[phi_stmt_1920] 
        {
          ||[phi_stmt_1920_sources] 
          {
            // sources for 			$phi torque_refx_x0 := 			  ($cast ($float<8,23>) phitmp32 ) $on bb_10_bb_11			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-6.931406e+00 ) ) $on bb_8_bb_11			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f6.931406e+00 ) ) $on bb_9_bb_11 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp32 )
            ;;[type_cast_1923] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1920_req] 
        }
      }
      bb_8_bb_11 |-> (bb_8_bb_11_PhiReq)
      ||[bb_9_bb_11_PhiReq] 
      {
        ;;[phi_stmt_1920] 
        {
          ||[phi_stmt_1920_sources] 
          {
            // sources for 			$phi torque_refx_x0 := 			  ($cast ($float<8,23>) phitmp32 ) $on bb_10_bb_11			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-6.931406e+00 ) ) $on bb_8_bb_11			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f6.931406e+00 ) ) $on bb_9_bb_11 // type of target is $float<8,23>
            // ($cast ($float<8,23>) phitmp32 )
            ;;[type_cast_1923] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1920_req] 
        }
      }
      bb_9_bb_11 |-> (bb_9_bb_11_PhiReq)
      $P [merge_stmt_1919_PhiReqMerge] 
      merge_stmt_1919_PhiReqMerge <-| ( bb_10_bb_11_PhiReq  bb_8_bb_11_PhiReq  bb_9_bb_11_PhiReq )
      ||[merge_stmt_1919_PhiAck] 
      {
        $T [phi_stmt_1920_ack] 
      }
      merge_stmt_1919_PhiReqMerge |-> (merge_stmt_1919_PhiAck)
      merge_stmt_1919__exit__  <-| (merge_stmt_1919_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 742  --------------------------
      // control-path for merge  
      //  file prog.aa, line 754
      ;;[merge_stmt_1968_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1968__entry__ |-> (merge_stmt_1968_dead_link)
      merge_stmt_1968__exit__ <-| (merge_stmt_1968_dead_link)
      //---------------------   merge statement  file prog.aa, line 754  --------------------------
      ||[bb_11_bb_12_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_11_bb_12 |-> (bb_11_bb_12_PhiReq)
      $P [merge_stmt_1968_PhiReqMerge] 
      merge_stmt_1968_PhiReqMerge <-| ( bb_11_bb_12_PhiReq )
      ||[merge_stmt_1968_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1968_PhiReqMerge |-> (merge_stmt_1968_PhiAck)
      merge_stmt_1968__exit__  <-| (merge_stmt_1968_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 754  --------------------------
      // control-path for merge  
      //  file prog.aa, line 778
      ;;[merge_stmt_2055_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2055__entry__ |-> (merge_stmt_2055_dead_link)
      merge_stmt_2055__exit__ <-| (merge_stmt_2055_dead_link)
      //---------------------   merge statement  file prog.aa, line 778  --------------------------
      ||[bb_12_bbx_xnph7x_xix_xix_xi5x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_12_bbx_xnph7x_xix_xix_xi5x_xpreheader |-> (bb_12_bbx_xnph7x_xix_xix_xi5x_xpreheader_PhiReq)
      $P [merge_stmt_2055_PhiReqMerge] 
      merge_stmt_2055_PhiReqMerge <-| ( bb_12_bbx_xnph7x_xix_xix_xi5x_xpreheader_PhiReq )
      ||[merge_stmt_2055_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2055_PhiReqMerge |-> (merge_stmt_2055_PhiAck)
      merge_stmt_2055__exit__  <-| (merge_stmt_2055_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 778  --------------------------
      // control-path for merge  
      //  file prog.aa, line 782
      //---------------------   merge statement  file prog.aa, line 782  --------------------------
      ||[bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq] 
      {
        ;;[phi_stmt_2064] 
        {
          ||[phi_stmt_2064_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xix_xi4 := 			  ($cast ($uint<32>) iNsTr_136 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_136 )
            ;;[type_cast_2067] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2064_req] 
        }
        ;;[phi_stmt_2058] 
        {
          ||[phi_stmt_2058_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xix_xi3 := 			  ($cast ($uint<32>) iNsTr_137 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) iNsTr_58 ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_137 )
            ;;[type_cast_2061] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_58 )
            ;;[type_cast_2063] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2058_req] 
        }
      }
      bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 |-> (bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq] 
      {
        ;;[phi_stmt_2064] 
        {
          ||[phi_stmt_2064_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xix_xi4 := 			  ($cast ($uint<32>) iNsTr_136 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_136 )
            ;;[type_cast_2067] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2064_req] 
        }
        ;;[phi_stmt_2058] 
        {
          ||[phi_stmt_2058_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xix_xi3 := 			  ($cast ($uint<32>) iNsTr_137 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) iNsTr_58 ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_137 )
            ;;[type_cast_2061] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_58 )
            ;;[type_cast_2063] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2058_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5 |-> (xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq)
      $P [merge_stmt_2057_PhiReqMerge] 
      merge_stmt_2057_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq  xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq )
      ||[merge_stmt_2057_PhiAck] 
      {
        $T [phi_stmt_2058_ack] 
        $T [phi_stmt_2064_ack] 
      }
      merge_stmt_2057_PhiReqMerge |-> (merge_stmt_2057_PhiAck)
      merge_stmt_2057__exit__  <-| (merge_stmt_2057_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 782  --------------------------
      // control-path for merge  
      //  file prog.aa, line 791
      ;;[merge_stmt_2089_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2089__entry__ |-> (merge_stmt_2089_dead_link)
      merge_stmt_2089__exit__ <-| (merge_stmt_2089_dead_link)
      //---------------------   merge statement  file prog.aa, line 791  --------------------------
      ||[bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader |-> (bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader_PhiReq)
      $P [merge_stmt_2089_PhiReqMerge] 
      merge_stmt_2089_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xi5_bbx_xnphx_xix_xix_xi8x_xpreheader_PhiReq )
      ||[merge_stmt_2089_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2089_PhiReqMerge |-> (merge_stmt_2089_PhiAck)
      merge_stmt_2089__exit__  <-| (merge_stmt_2089_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 791  --------------------------
      // control-path for merge  
      //  file prog.aa, line 795
      //---------------------   merge statement  file prog.aa, line 795  --------------------------
      ||[bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq] 
      {
        ;;[phi_stmt_2098] 
        {
          ||[phi_stmt_2098_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xix_xi7 := 			  ($cast ($uint<32>) iNsTr_163 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_163 )
            ;;[type_cast_2101] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2098_req] 
        }
        ;;[phi_stmt_2092] 
        {
          ||[phi_stmt_2092_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xix_xi6 := 			  ($cast ($uint<32>) iNsTr_162 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) iNsTr_61 ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_162 )
            ;;[type_cast_2095] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_61 )
            ;;[type_cast_2097] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2092_req] 
        }
      }
      bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8 |-> (bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq)
      ||[bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq] 
      {
        ;;[phi_stmt_2098] 
        {
          ||[phi_stmt_2098_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xix_xi7 := 			  ($cast ($uint<32>) iNsTr_163 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_163 )
            ;;[type_cast_2101] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2098_req] 
        }
        ;;[phi_stmt_2092] 
        {
          ||[phi_stmt_2092_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xix_xi6 := 			  ($cast ($uint<32>) iNsTr_162 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) iNsTr_61 ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_162 )
            ;;[type_cast_2095] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_61 )
            ;;[type_cast_2097] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2092_req] 
        }
      }
      bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 |-> (bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq)
      $P [merge_stmt_2091_PhiReqMerge] 
      merge_stmt_2091_PhiReqMerge <-| ( bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq  bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq )
      ||[merge_stmt_2091_PhiAck] 
      {
        $T [phi_stmt_2092_ack] 
        $T [phi_stmt_2098_ack] 
      }
      merge_stmt_2091_PhiReqMerge |-> (merge_stmt_2091_PhiAck)
      merge_stmt_2091__exit__  <-| (merge_stmt_2091_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 795  --------------------------
      // control-path for merge  
      //  file prog.aa, line 805
      ;;[merge_stmt_2129_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2129__entry__ |-> (merge_stmt_2129_dead_link)
      merge_stmt_2129__exit__ <-| (merge_stmt_2129_dead_link)
      //---------------------   merge statement  file prog.aa, line 805  --------------------------
      ||[bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2130] 
        {
          ||[phi_stmt_2130_sources] 
          {
            // sources for 			$phi xx_xlcssa13 := 			  ($cast ($uint<32>) iNsTr_163 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_163 )
            ;;[type_cast_2133] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2130_req] 
        }
        ;;[phi_stmt_2134] 
        {
          ||[phi_stmt_2134_sources] 
          {
            // sources for 			$phi xx_xlcssa12 := 			  ($cast ($uint<32>) iNsTr_162 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_162 )
            ;;[type_cast_2137] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2134_req] 
        }
      }
      bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit |-> (bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq)
      $P [merge_stmt_2129_PhiReqMerge] 
      merge_stmt_2129_PhiReqMerge <-| ( bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq )
      ||[merge_stmt_2129_PhiAck] 
      {
        $T [phi_stmt_2130_ack] 
        $T [phi_stmt_2134_ack] 
      }
      merge_stmt_2129_PhiReqMerge |-> (merge_stmt_2129_PhiAck)
      merge_stmt_2129__exit__  <-| (merge_stmt_2129_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 805  --------------------------
      // control-path for merge  
      //  file prog.aa, line 811
      //---------------------   merge statement  file prog.aa, line 811  --------------------------
      ||[bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq] 
      {
        ;;[phi_stmt_2141] 
        {
          ||[phi_stmt_2141_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi9 := 			  ($cast ($uint<32>) iNsTr_61 ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa12 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_61 )
            ;;[type_cast_2144] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa12 )
            ;;[type_cast_2146] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2141_req] 
        }
        ;;[phi_stmt_2147] 
        {
          ||[phi_stmt_2147_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi10 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa13 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa13 )
            ;;[type_cast_2153] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2147_req] 
        }
      }
      bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11 |-> (bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq] 
      {
        ;;[phi_stmt_2141] 
        {
          ||[phi_stmt_2141_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi9 := 			  ($cast ($uint<32>) iNsTr_61 ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa12 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_61 )
            ;;[type_cast_2144] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa12 )
            ;;[type_cast_2146] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2141_req] 
        }
        ;;[phi_stmt_2147] 
        {
          ||[phi_stmt_2147_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi10 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa13 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa13 )
            ;;[type_cast_2153] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2147_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 |-> (xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq)
      $P [merge_stmt_2140_PhiReqMerge] 
      merge_stmt_2140_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq  xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq )
      ||[merge_stmt_2140_PhiAck] 
      {
        $T [phi_stmt_2141_ack] 
        $T [phi_stmt_2147_ack] 
      }
      merge_stmt_2140_PhiReqMerge |-> (merge_stmt_2140_PhiAck)
      merge_stmt_2140__exit__  <-| (merge_stmt_2140_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 811  --------------------------
      // control-path for merge  
      //  file prog.aa, line 821
      ;;[merge_stmt_2176_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2176__entry__ |-> (merge_stmt_2176_dead_link)
      merge_stmt_2176__exit__ <-| (merge_stmt_2176_dead_link)
      //---------------------   merge statement  file prog.aa, line 821  --------------------------
      ||[xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2177] 
        {
          ||[phi_stmt_2177_sources] 
          {
            // sources for 			$phi xx_xlcssa14 := 			  ($cast ($uint<32>) iNsTr_136 ) $on xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_136 )
            ;;[type_cast_2180] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2177_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit |-> (xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq)
      $P [merge_stmt_2176_PhiReqMerge] 
      merge_stmt_2176_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq )
      ||[merge_stmt_2176_PhiAck] 
      {
        $T [phi_stmt_2177_ack] 
      }
      merge_stmt_2176_PhiReqMerge |-> (merge_stmt_2176_PhiAck)
      merge_stmt_2176__exit__  <-| (merge_stmt_2176_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 821  --------------------------
      // control-path for merge  
      //  file prog.aa, line 826
      //---------------------   merge statement  file prog.aa, line 826  --------------------------
      ||[bb_12_xx_xloopexitx_xix_xix_xi13_PhiReq] 
      {
        ;;[phi_stmt_2184] 
        {
          ||[phi_stmt_2184_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xix_xi12 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_12_xx_xloopexitx_xix_xix_xi13			  ($cast ($uint<32>) xx_xlcssa14 ) $on xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa14 )
            ;;[type_cast_2190] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2184_req] 
        }
      }
      bb_12_xx_xloopexitx_xix_xix_xi13 |-> (bb_12_xx_xloopexitx_xix_xix_xi13_PhiReq)
      ||[xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq] 
      {
        ;;[phi_stmt_2184] 
        {
          ||[phi_stmt_2184_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xix_xi12 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_12_xx_xloopexitx_xix_xix_xi13			  ($cast ($uint<32>) xx_xlcssa14 ) $on xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa14 )
            ;;[type_cast_2190] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2184_req] 
        }
      }
      xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 |-> (xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq)
      $P [merge_stmt_2183_PhiReqMerge] 
      merge_stmt_2183_PhiReqMerge <-| ( bb_12_xx_xloopexitx_xix_xix_xi13_PhiReq  xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq )
      ||[merge_stmt_2183_PhiAck] 
      {
        $T [phi_stmt_2184_ack] 
      }
      merge_stmt_2183_PhiReqMerge |-> (merge_stmt_2183_PhiAck)
      merge_stmt_2183__exit__  <-| (merge_stmt_2183_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 826  --------------------------
      // control-path for merge  
      //  file prog.aa, line 831
      //---------------------   merge statement  file prog.aa, line 831  --------------------------
      ||[bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq] 
      {
        ;;[phi_stmt_2194] 
        {
          ||[phi_stmt_2194_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xix_xi14 := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi12 ) $on xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16			  ($cast ($uint<32>) iNsTr_58 ) $on bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xix_xi12 )
            ;;[type_cast_2197] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_58 )
            ;;[type_cast_2199] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2194_req] 
        }
      }
      bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16 |-> (bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq)
      ||[xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq] 
      {
        ;;[phi_stmt_2194] 
        {
          ||[phi_stmt_2194_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xix_xi14 := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi12 ) $on xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16			  ($cast ($uint<32>) iNsTr_58 ) $on bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xix_xi12 )
            ;;[type_cast_2197] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_58 )
            ;;[type_cast_2199] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2194_req] 
        }
      }
      xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16 |-> (xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq)
      $P [merge_stmt_2193_PhiReqMerge] 
      merge_stmt_2193_PhiReqMerge <-| ( bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq  xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq )
      ||[merge_stmt_2193_PhiAck] 
      {
        $T [phi_stmt_2194_ack] 
      }
      merge_stmt_2193_PhiReqMerge |-> (merge_stmt_2193_PhiAck)
      merge_stmt_2193__exit__  <-| (merge_stmt_2193_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 831  --------------------------
      // control-path for merge  
      //  file prog.aa, line 842
      ;;[merge_stmt_2232_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2232__entry__ |-> (merge_stmt_2232_dead_link)
      merge_stmt_2232__exit__ <-| (merge_stmt_2232_dead_link)
      //---------------------   merge statement  file prog.aa, line 842  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader |-> (udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader_PhiReq)
      $P [merge_stmt_2232_PhiReqMerge] 
      merge_stmt_2232_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xix_xi16_udiv32x_xexitx_xix_xi20x_xpreheader_PhiReq )
      ||[merge_stmt_2232_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2232_PhiReqMerge |-> (merge_stmt_2232_PhiAck)
      merge_stmt_2232__exit__  <-| (merge_stmt_2232_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 842  --------------------------
      // control-path for merge  
      //  file prog.aa, line 846
      //---------------------   merge statement  file prog.aa, line 846  --------------------------
      ||[udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq] 
      {
        ;;[phi_stmt_2235] 
        {
          ||[phi_stmt_2235_sources] 
          {
            // sources for 			$phi iNsTr_140 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi19 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xix_xi19 )
            ;;[type_cast_2238] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2235_req] 
        }
        ;;[phi_stmt_2242] 
        {
          ||[phi_stmt_2242_sources] 
          {
            // sources for 			$phi tempx_x012x_xix_xi17 := 			  ($cast ($uint<32>) iNsTr_141 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_141 )
            ;;[type_cast_2245] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
            ;;[type_cast_2247] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2242_req] 
        }
      }
      udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20 |-> (udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq)
      ||[udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq] 
      {
        ;;[phi_stmt_2235] 
        {
          ||[phi_stmt_2235_sources] 
          {
            // sources for 			$phi iNsTr_140 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi19 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xix_xi19 )
            ;;[type_cast_2238] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2235_req] 
        }
        ;;[phi_stmt_2242] 
        {
          ||[phi_stmt_2242_sources] 
          {
            // sources for 			$phi tempx_x012x_xix_xi17 := 			  ($cast ($uint<32>) iNsTr_141 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_141 )
            ;;[type_cast_2245] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
            ;;[type_cast_2247] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2242_req] 
        }
      }
      udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 |-> (udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq)
      $P [merge_stmt_2234_PhiReqMerge] 
      merge_stmt_2234_PhiReqMerge <-| ( udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq  udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq )
      ||[merge_stmt_2234_PhiAck] 
      {
        $T [phi_stmt_2235_ack] 
        $T [phi_stmt_2242_ack] 
      }
      merge_stmt_2234_PhiReqMerge |-> (merge_stmt_2234_PhiAck)
      merge_stmt_2234__exit__  <-| (merge_stmt_2234_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 846  --------------------------
      // control-path for merge  
      //  file prog.aa, line 860
      ;;[merge_stmt_2292_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2292__entry__ |-> (merge_stmt_2292_dead_link)
      merge_stmt_2292__exit__ <-| (merge_stmt_2292_dead_link)
      //---------------------   merge statement  file prog.aa, line 860  --------------------------
      ||[udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq] 
      {
        ;;[phi_stmt_2293] 
        {
          ||[phi_stmt_2293_sources] 
          {
            // sources for 			$phi xx_xlcssa11 := 			  ($cast ($uint<32>) iNsTr_141 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_141 )
            ;;[type_cast_2296] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2293_req] 
        }
        ;;[phi_stmt_2297] 
        {
          ||[phi_stmt_2297_sources] 
          {
            // sources for 			$phi xx_xlcssa10 := 			  ($cast ($uint<32>) iNsTr_140 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_140 )
            ;;[type_cast_2300] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2297_req] 
        }
      }
      udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25 |-> (udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq)
      $P [merge_stmt_2292_PhiReqMerge] 
      merge_stmt_2292_PhiReqMerge <-| ( udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq )
      ||[merge_stmt_2292_PhiAck] 
      {
        $T [phi_stmt_2293_ack] 
        $T [phi_stmt_2297_ack] 
      }
      merge_stmt_2292_PhiReqMerge |-> (merge_stmt_2292_PhiAck)
      merge_stmt_2292__exit__  <-| (merge_stmt_2292_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 860  --------------------------
      // control-path for merge  
      //  file prog.aa, line 870
      //---------------------   merge statement  file prog.aa, line 870  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq] 
      {
        ;;[phi_stmt_2326] 
        {
          ||[phi_stmt_2326_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xix_xi26 := 			  ($cast ($uint<32>) tmp26x_xix_xi24 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29			  ($cast ($uint<32>) iNsTr_64 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xix_xi24 )
            ;;[type_cast_2329] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_64 )
            ;;[type_cast_2331] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2326_req] 
        }
        ;;[phi_stmt_2332] 
        {
          ||[phi_stmt_2332_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xix_xi27 := 			  ($cast ($uint<32>) xx_xlcssa11 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa11 )
            ;;[type_cast_2335] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
            ;;[type_cast_2337] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2332_req] 
        }
      }
      udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 |-> (udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq] 
      {
        ;;[phi_stmt_2326] 
        {
          ||[phi_stmt_2326_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xix_xi26 := 			  ($cast ($uint<32>) tmp26x_xix_xi24 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29			  ($cast ($uint<32>) iNsTr_64 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xix_xi24 )
            ;;[type_cast_2329] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_64 )
            ;;[type_cast_2331] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2326_req] 
        }
        ;;[phi_stmt_2332] 
        {
          ||[phi_stmt_2332_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xix_xi27 := 			  ($cast ($uint<32>) xx_xlcssa11 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa11 )
            ;;[type_cast_2335] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
            ;;[type_cast_2337] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2332_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29 |-> (udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq)
      $P [merge_stmt_2325_PhiReqMerge] 
      merge_stmt_2325_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq )
      ||[merge_stmt_2325_PhiAck] 
      {
        $T [phi_stmt_2326_ack] 
        $T [phi_stmt_2332_ack] 
      }
      merge_stmt_2325_PhiReqMerge |-> (merge_stmt_2325_PhiAck)
      merge_stmt_2325__exit__  <-| (merge_stmt_2325_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 870  --------------------------
      // control-path for merge  
      //  file prog.aa, line 882
      //---------------------   merge statement  file prog.aa, line 882  --------------------------
      ||[bb_11_omega_calcx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2373] 
        {
          ||[phi_stmt_2373_sources] 
          {
            // sources for 			$phi iNsTr_46 := 			  ($cast ($float<8,23>) tmp3x_xix_xi28 ) $on xx_xcritedgex_xix_xi29_omega_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_11_omega_calcx_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xix_xi28 )
            ;;[type_cast_2376] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2373_req] 
        }
      }
      bb_11_omega_calcx_xexit |-> (bb_11_omega_calcx_xexit_PhiReq)
      ||[xx_xcritedgex_xix_xi29_omega_calcx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2373] 
        {
          ||[phi_stmt_2373_sources] 
          {
            // sources for 			$phi iNsTr_46 := 			  ($cast ($float<8,23>) tmp3x_xix_xi28 ) $on xx_xcritedgex_xix_xi29_omega_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_11_omega_calcx_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xix_xi28 )
            ;;[type_cast_2376] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2373_req] 
        }
      }
      xx_xcritedgex_xix_xi29_omega_calcx_xexit |-> (xx_xcritedgex_xix_xi29_omega_calcx_xexit_PhiReq)
      $P [merge_stmt_2372_PhiReqMerge] 
      merge_stmt_2372_PhiReqMerge <-| ( bb_11_omega_calcx_xexit_PhiReq  xx_xcritedgex_xix_xi29_omega_calcx_xexit_PhiReq )
      ||[merge_stmt_2372_PhiAck] 
      {
        $T [phi_stmt_2373_ack] 
      }
      merge_stmt_2372_PhiReqMerge |-> (merge_stmt_2372_PhiAck)
      merge_stmt_2372__exit__  <-| (merge_stmt_2372_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 882  --------------------------
      // control-path for merge  
      //  file prog.aa, line 893
      ;;[merge_stmt_2413_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2413__entry__ |-> (merge_stmt_2413_dead_link)
      merge_stmt_2413__exit__ <-| (merge_stmt_2413_dead_link)
      //---------------------   merge statement  file prog.aa, line 893  --------------------------
      ||[omega_calcx_xexit_bb_27_PhiReq] 
      {
        // no phi statements in merge..
      }
      omega_calcx_xexit_bb_27 |-> (omega_calcx_xexit_bb_27_PhiReq)
      $P [merge_stmt_2413_PhiReqMerge] 
      merge_stmt_2413_PhiReqMerge <-| ( omega_calcx_xexit_bb_27_PhiReq )
      ||[merge_stmt_2413_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2413_PhiReqMerge |-> (merge_stmt_2413_PhiAck)
      merge_stmt_2413__exit__  <-| (merge_stmt_2413_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 893  --------------------------
      // control-path for merge  
      //  file prog.aa, line 917
      ;;[merge_stmt_2500_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2500__entry__ |-> (merge_stmt_2500_dead_link)
      merge_stmt_2500__exit__ <-| (merge_stmt_2500_dead_link)
      //---------------------   merge statement  file prog.aa, line 917  --------------------------
      ||[bb_27_bbx_xnph7x_xix_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_27_bbx_xnph7x_xix_xix_xix_xpreheader |-> (bb_27_bbx_xnph7x_xix_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_2500_PhiReqMerge] 
      merge_stmt_2500_PhiReqMerge <-| ( bb_27_bbx_xnph7x_xix_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_2500_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2500_PhiReqMerge |-> (merge_stmt_2500_PhiAck)
      merge_stmt_2500__exit__  <-| (merge_stmt_2500_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 917  --------------------------
      // control-path for merge  
      //  file prog.aa, line 921
      //---------------------   merge statement  file prog.aa, line 921  --------------------------
      ||[bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2503] 
        {
          ||[phi_stmt_2503_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_153 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) iNsTr_82 ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_153 )
            ;;[type_cast_2506] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_82 )
            ;;[type_cast_2508] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2503_req] 
        }
        ;;[phi_stmt_2509] 
        {
          ||[phi_stmt_2509_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_152 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_152 )
            ;;[type_cast_2512] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2509_req] 
        }
      }
      bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi |-> (bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2503] 
        {
          ||[phi_stmt_2503_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_153 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) iNsTr_82 ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_153 )
            ;;[type_cast_2506] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_82 )
            ;;[type_cast_2508] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2503_req] 
        }
        ;;[phi_stmt_2509] 
        {
          ||[phi_stmt_2509_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_152 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_152 )
            ;;[type_cast_2512] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2509_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi |-> (xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq)
      $P [merge_stmt_2502_PhiReqMerge] 
      merge_stmt_2502_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq )
      ||[merge_stmt_2502_PhiAck] 
      {
        $T [phi_stmt_2503_ack] 
        $T [phi_stmt_2509_ack] 
      }
      merge_stmt_2502_PhiReqMerge |-> (merge_stmt_2502_PhiAck)
      merge_stmt_2502__exit__  <-| (merge_stmt_2502_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 921  --------------------------
      // control-path for merge  
      //  file prog.aa, line 930
      ;;[merge_stmt_2534_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2534__entry__ |-> (merge_stmt_2534_dead_link)
      merge_stmt_2534__exit__ <-| (merge_stmt_2534_dead_link)
      //---------------------   merge statement  file prog.aa, line 930  --------------------------
      ||[bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader |-> (bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_2534_PhiReqMerge] 
      merge_stmt_2534_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xi_bbx_xnphx_xix_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_2534_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2534_PhiReqMerge |-> (merge_stmt_2534_PhiAck)
      merge_stmt_2534__exit__  <-| (merge_stmt_2534_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 930  --------------------------
      // control-path for merge  
      //  file prog.aa, line 934
      //---------------------   merge statement  file prog.aa, line 934  --------------------------
      ||[bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2537] 
        {
          ||[phi_stmt_2537_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_183 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) iNsTr_85 ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_183 )
            ;;[type_cast_2540] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_85 )
            ;;[type_cast_2542] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2537_req] 
        }
        ;;[phi_stmt_2543] 
        {
          ||[phi_stmt_2543_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_184 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_184 )
            ;;[type_cast_2546] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2543_req] 
        }
      }
      bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi |-> (bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq)
      ||[bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2537] 
        {
          ||[phi_stmt_2537_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_183 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) iNsTr_85 ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_183 )
            ;;[type_cast_2540] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_85 )
            ;;[type_cast_2542] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2537_req] 
        }
        ;;[phi_stmt_2543] 
        {
          ||[phi_stmt_2543_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_184 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_184 )
            ;;[type_cast_2546] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2543_req] 
        }
      }
      bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi |-> (bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq)
      $P [merge_stmt_2536_PhiReqMerge] 
      merge_stmt_2536_PhiReqMerge <-| ( bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq  bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq )
      ||[merge_stmt_2536_PhiAck] 
      {
        $T [phi_stmt_2537_ack] 
        $T [phi_stmt_2543_ack] 
      }
      merge_stmt_2536_PhiReqMerge |-> (merge_stmt_2536_PhiAck)
      merge_stmt_2536__exit__  <-| (merge_stmt_2536_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 934  --------------------------
      // control-path for merge  
      //  file prog.aa, line 944
      ;;[merge_stmt_2574_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2574__entry__ |-> (merge_stmt_2574_dead_link)
      merge_stmt_2574__exit__ <-| (merge_stmt_2574_dead_link)
      //---------------------   merge statement  file prog.aa, line 944  --------------------------
      ||[bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2575] 
        {
          ||[phi_stmt_2575_sources] 
          {
            // sources for 			$phi xx_xlcssa8 := 			  ($cast ($uint<32>) iNsTr_184 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_184 )
            ;;[type_cast_2578] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2575_req] 
        }
        ;;[phi_stmt_2579] 
        {
          ||[phi_stmt_2579_sources] 
          {
            // sources for 			$phi xx_xlcssa7 := 			  ($cast ($uint<32>) iNsTr_183 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_183 )
            ;;[type_cast_2582] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2579_req] 
        }
      }
      bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit |-> (bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_2574_PhiReqMerge] 
      merge_stmt_2574_PhiReqMerge <-| ( bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_2574_PhiAck] 
      {
        $T [phi_stmt_2575_ack] 
        $T [phi_stmt_2579_ack] 
      }
      merge_stmt_2574_PhiReqMerge |-> (merge_stmt_2574_PhiAck)
      merge_stmt_2574__exit__  <-| (merge_stmt_2574_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 944  --------------------------
      // control-path for merge  
      //  file prog.aa, line 950
      //---------------------   merge statement  file prog.aa, line 950  --------------------------
      ||[bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2586] 
        {
          ||[phi_stmt_2586_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_85 ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa7 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_85 )
            ;;[type_cast_2589] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa7 )
            ;;[type_cast_2591] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2586_req] 
        }
        ;;[phi_stmt_2592] 
        {
          ||[phi_stmt_2592_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa8 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa8 )
            ;;[type_cast_2598] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2592_req] 
        }
      }
      bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi |-> (bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2586] 
        {
          ||[phi_stmt_2586_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_85 ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa7 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_85 )
            ;;[type_cast_2589] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa7 )
            ;;[type_cast_2591] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2586_req] 
        }
        ;;[phi_stmt_2592] 
        {
          ||[phi_stmt_2592_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa8 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa8 )
            ;;[type_cast_2598] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2592_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi |-> (xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq)
      $P [merge_stmt_2585_PhiReqMerge] 
      merge_stmt_2585_PhiReqMerge <-| ( bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq )
      ||[merge_stmt_2585_PhiAck] 
      {
        $T [phi_stmt_2586_ack] 
        $T [phi_stmt_2592_ack] 
      }
      merge_stmt_2585_PhiReqMerge |-> (merge_stmt_2585_PhiAck)
      merge_stmt_2585__exit__  <-| (merge_stmt_2585_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 950  --------------------------
      // control-path for merge  
      //  file prog.aa, line 960
      ;;[merge_stmt_2621_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2621__entry__ |-> (merge_stmt_2621_dead_link)
      merge_stmt_2621__exit__ <-| (merge_stmt_2621_dead_link)
      //---------------------   merge statement  file prog.aa, line 960  --------------------------
      ||[xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_2622] 
        {
          ||[phi_stmt_2622_sources] 
          {
            // sources for 			$phi xx_xlcssa9 := 			  ($cast ($uint<32>) iNsTr_152 ) $on xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_152 )
            ;;[type_cast_2625] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2622_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit |-> (xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_2621_PhiReqMerge] 
      merge_stmt_2621_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_2621_PhiAck] 
      {
        $T [phi_stmt_2622_ack] 
      }
      merge_stmt_2621_PhiReqMerge |-> (merge_stmt_2621_PhiAck)
      merge_stmt_2621__exit__  <-| (merge_stmt_2621_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 960  --------------------------
      // control-path for merge  
      //  file prog.aa, line 965
      //---------------------   merge statement  file prog.aa, line 965  --------------------------
      ||[bb_27_xx_xloopexitx_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2629] 
        {
          ||[phi_stmt_2629_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_27_xx_xloopexitx_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa9 ) $on xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa9 )
            ;;[type_cast_2635] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2629_req] 
        }
      }
      bb_27_xx_xloopexitx_xix_xix_xi |-> (bb_27_xx_xloopexitx_xix_xix_xi_PhiReq)
      ||[xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2629] 
        {
          ||[phi_stmt_2629_sources] 
          {
            // sources for 			$phi xx_x0x_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_27_xx_xloopexitx_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa9 ) $on xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa9 )
            ;;[type_cast_2635] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2629_req] 
        }
      }
      xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi |-> (xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq)
      $P [merge_stmt_2628_PhiReqMerge] 
      merge_stmt_2628_PhiReqMerge <-| ( bb_27_xx_xloopexitx_xix_xix_xi_PhiReq  xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq )
      ||[merge_stmt_2628_PhiAck] 
      {
        $T [phi_stmt_2629_ack] 
      }
      merge_stmt_2628_PhiReqMerge |-> (merge_stmt_2628_PhiAck)
      merge_stmt_2628__exit__  <-| (merge_stmt_2628_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 965  --------------------------
      // control-path for merge  
      //  file prog.aa, line 970
      //---------------------   merge statement  file prog.aa, line 970  --------------------------
      ||[bb_27_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2639] 
        {
          ||[phi_stmt_2639_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xix_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi ) $on xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi			  ($cast ($uint<32>) iNsTr_82 ) $on bb_27_udiv32x_xexitx_xpreheaderx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xix_xi )
            ;;[type_cast_2642] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_82 )
            ;;[type_cast_2644] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2639_req] 
        }
      }
      bb_27_udiv32x_xexitx_xpreheaderx_xix_xi |-> (bb_27_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq)
      ||[xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2639] 
        {
          ||[phi_stmt_2639_sources] 
          {
            // sources for 			$phi tempx_x0x_xphx_xix_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi ) $on xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi			  ($cast ($uint<32>) iNsTr_82 ) $on bb_27_udiv32x_xexitx_xpreheaderx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_x0x_xix_xix_xi )
            ;;[type_cast_2642] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_82 )
            ;;[type_cast_2644] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2639_req] 
        }
      }
      xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi |-> (xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq)
      $P [merge_stmt_2638_PhiReqMerge] 
      merge_stmt_2638_PhiReqMerge <-| ( bb_27_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq  xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq )
      ||[merge_stmt_2638_PhiAck] 
      {
        $T [phi_stmt_2639_ack] 
      }
      merge_stmt_2638_PhiReqMerge |-> (merge_stmt_2638_PhiAck)
      merge_stmt_2638__exit__  <-| (merge_stmt_2638_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 970  --------------------------
      // control-path for merge  
      //  file prog.aa, line 981
      ;;[merge_stmt_2677_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2677__entry__ |-> (merge_stmt_2677_dead_link)
      merge_stmt_2677__exit__ <-| (merge_stmt_2677_dead_link)
      //---------------------   merge statement  file prog.aa, line 981  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader |-> (udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_2677_PhiReqMerge] 
      merge_stmt_2677_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xix_xi_udiv32x_xexitx_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_2677_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2677_PhiReqMerge |-> (merge_stmt_2677_PhiAck)
      merge_stmt_2677__exit__  <-| (merge_stmt_2677_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 981  --------------------------
      // control-path for merge  
      //  file prog.aa, line 985
      //---------------------   merge statement  file prog.aa, line 985  --------------------------
      ||[udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2680] 
        {
          ||[phi_stmt_2680_sources] 
          {
            // sources for 			$phi iNsTr_156 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xix_xi )
            ;;[type_cast_2683] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2680_req] 
        }
        ;;[phi_stmt_2687] 
        {
          ||[phi_stmt_2687_sources] 
          {
            // sources for 			$phi tempx_x012x_xix_xi := 			  ($cast ($uint<32>) iNsTr_157 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_157 )
            ;;[type_cast_2690] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
            ;;[type_cast_2692] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2687_req] 
        }
      }
      udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi |-> (udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq)
      ||[udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2680] 
        {
          ||[phi_stmt_2680_sources] 
          {
            // sources for 			$phi iNsTr_156 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xix_xi )
            ;;[type_cast_2683] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2680_req] 
        }
        ;;[phi_stmt_2687] 
        {
          ||[phi_stmt_2687_sources] 
          {
            // sources for 			$phi tempx_x012x_xix_xi := 			  ($cast ($uint<32>) iNsTr_157 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_157 )
            ;;[type_cast_2690] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
            ;;[type_cast_2692] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2687_req] 
        }
      }
      udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi |-> (udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq)
      $P [merge_stmt_2679_PhiReqMerge] 
      merge_stmt_2679_PhiReqMerge <-| ( udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq  udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq )
      ||[merge_stmt_2679_PhiAck] 
      {
        $T [phi_stmt_2680_ack] 
        $T [phi_stmt_2687_ack] 
      }
      merge_stmt_2679_PhiReqMerge |-> (merge_stmt_2679_PhiAck)
      merge_stmt_2679__exit__  <-| (merge_stmt_2679_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 985  --------------------------
      // control-path for merge  
      //  file prog.aa, line 999
      ;;[merge_stmt_2737_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2737__entry__ |-> (merge_stmt_2737_dead_link)
      merge_stmt_2737__exit__ <-| (merge_stmt_2737_dead_link)
      //---------------------   merge statement  file prog.aa, line 999  --------------------------
      ||[udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2738] 
        {
          ||[phi_stmt_2738_sources] 
          {
            // sources for 			$phi xx_xlcssa6 := 			  ($cast ($uint<32>) iNsTr_157 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_157 )
            ;;[type_cast_2741] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2738_req] 
        }
        ;;[phi_stmt_2742] 
        {
          ||[phi_stmt_2742_sources] 
          {
            // sources for 			$phi xx_xlcssa5 := 			  ($cast ($uint<32>) iNsTr_156 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_156 )
            ;;[type_cast_2745] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2742_req] 
        }
      }
      udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi |-> (udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq)
      $P [merge_stmt_2737_PhiReqMerge] 
      merge_stmt_2737_PhiReqMerge <-| ( udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq )
      ||[merge_stmt_2737_PhiAck] 
      {
        $T [phi_stmt_2738_ack] 
        $T [phi_stmt_2742_ack] 
      }
      merge_stmt_2737_PhiReqMerge |-> (merge_stmt_2737_PhiAck)
      merge_stmt_2737__exit__  <-| (merge_stmt_2737_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 999  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1009
      //---------------------   merge statement  file prog.aa, line 1009  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2771] 
        {
          ||[phi_stmt_2771_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) tmp26x_xix_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) iNsTr_88 ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xix_xi )
            ;;[type_cast_2774] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_88 )
            ;;[type_cast_2776] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2771_req] 
        }
        ;;[phi_stmt_2777] 
        {
          ||[phi_stmt_2777_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) xx_xlcssa6 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa6 )
            ;;[type_cast_2780] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
            ;;[type_cast_2782] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2777_req] 
        }
      }
      udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi |-> (udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2771] 
        {
          ||[phi_stmt_2771_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) tmp26x_xix_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) iNsTr_88 ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xix_xi )
            ;;[type_cast_2774] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_88 )
            ;;[type_cast_2776] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2771_req] 
        }
        ;;[phi_stmt_2777] 
        {
          ||[phi_stmt_2777_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) xx_xlcssa6 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa6 )
            ;;[type_cast_2780] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
            ;;[type_cast_2782] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2777_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi |-> (udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq)
      $P [merge_stmt_2770_PhiReqMerge] 
      merge_stmt_2770_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq )
      ||[merge_stmt_2770_PhiAck] 
      {
        $T [phi_stmt_2771_ack] 
        $T [phi_stmt_2777_ack] 
      }
      merge_stmt_2770_PhiReqMerge |-> (merge_stmt_2770_PhiAck)
      merge_stmt_2770__exit__  <-| (merge_stmt_2770_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1009  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1021
      //---------------------   merge statement  file prog.aa, line 1021  --------------------------
      ||[omega_calcx_xexit_iq_err_calcx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2818] 
        {
          ||[phi_stmt_2818_sources] 
          {
            // sources for 			$phi iNsTr_67 := 			  ($cast ($float<8,23>) tmp3x_xix_xi ) $on xx_xcritedgex_xix_xi_iq_err_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on omega_calcx_xexit_iq_err_calcx_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xix_xi )
            ;;[type_cast_2821] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2818_req] 
        }
      }
      omega_calcx_xexit_iq_err_calcx_xexit |-> (omega_calcx_xexit_iq_err_calcx_xexit_PhiReq)
      ||[xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2818] 
        {
          ||[phi_stmt_2818_sources] 
          {
            // sources for 			$phi iNsTr_67 := 			  ($cast ($float<8,23>) tmp3x_xix_xi ) $on xx_xcritedgex_xix_xi_iq_err_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on omega_calcx_xexit_iq_err_calcx_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xix_xi )
            ;;[type_cast_2821] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2818_req] 
        }
      }
      xx_xcritedgex_xix_xi_iq_err_calcx_xexit |-> (xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq)
      $P [merge_stmt_2817_PhiReqMerge] 
      merge_stmt_2817_PhiReqMerge <-| ( omega_calcx_xexit_iq_err_calcx_xexit_PhiReq  xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq )
      ||[merge_stmt_2817_PhiAck] 
      {
        $T [phi_stmt_2818_ack] 
      }
      merge_stmt_2817_PhiReqMerge |-> (merge_stmt_2817_PhiAck)
      merge_stmt_2817__exit__  <-| (merge_stmt_2817_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1021  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1034
      ;;[merge_stmt_2872_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2872__entry__ |-> (merge_stmt_2872_dead_link)
      merge_stmt_2872__exit__ <-| (merge_stmt_2872_dead_link)
      //---------------------   merge statement  file prog.aa, line 1034  --------------------------
      ||[iq_err_calcx_xexit_bb_42_PhiReq] 
      {
        // no phi statements in merge..
      }
      iq_err_calcx_xexit_bb_42 |-> (iq_err_calcx_xexit_bb_42_PhiReq)
      $P [merge_stmt_2872_PhiReqMerge] 
      merge_stmt_2872_PhiReqMerge <-| ( iq_err_calcx_xexit_bb_42_PhiReq )
      ||[merge_stmt_2872_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2872_PhiReqMerge |-> (merge_stmt_2872_PhiAck)
      merge_stmt_2872__exit__  <-| (merge_stmt_2872_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1034  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1040
      ;;[merge_stmt_2885_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2885__entry__ |-> (merge_stmt_2885_dead_link)
      merge_stmt_2885__exit__ <-| (merge_stmt_2885_dead_link)
      //---------------------   merge statement  file prog.aa, line 1040  --------------------------
      ||[bb_42_bb_43_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_42_bb_43 |-> (bb_42_bb_43_PhiReq)
      $P [merge_stmt_2885_PhiReqMerge] 
      merge_stmt_2885_PhiReqMerge <-| ( bb_42_bb_43_PhiReq )
      ||[merge_stmt_2885_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2885_PhiReqMerge |-> (merge_stmt_2885_PhiAck)
      merge_stmt_2885__exit__  <-| (merge_stmt_2885_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1040  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1044
      //---------------------   merge statement  file prog.aa, line 1044  --------------------------
      ||[bb_42_bb_44_PhiReq] 
      {
        ;;[phi_stmt_2888] 
        {
          ||[phi_stmt_2888_sources] 
          {
            // sources for 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_73 ) $on bb_43_bb_44			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_44			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) ) $on bb_42_bb_44 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_73 )
            ;;[type_cast_2891] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2888_req] 
        }
      }
      bb_42_bb_44 |-> (bb_42_bb_44_PhiReq)
      ||[bb_43_bb_44_PhiReq] 
      {
        ;;[phi_stmt_2888] 
        {
          ||[phi_stmt_2888_sources] 
          {
            // sources for 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_73 ) $on bb_43_bb_44			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_44			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) ) $on bb_42_bb_44 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_73 )
            ;;[type_cast_2891] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2888_req] 
        }
      }
      bb_43_bb_44 |-> (bb_43_bb_44_PhiReq)
      ||[iq_err_calcx_xexit_bb_44_PhiReq] 
      {
        ;;[phi_stmt_2888] 
        {
          ||[phi_stmt_2888_sources] 
          {
            // sources for 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_73 ) $on bb_43_bb_44			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_44			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) ) $on bb_42_bb_44 // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_73 )
            ;;[type_cast_2891] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2888_req] 
        }
      }
      iq_err_calcx_xexit_bb_44 |-> (iq_err_calcx_xexit_bb_44_PhiReq)
      $P [merge_stmt_2887_PhiReqMerge] 
      merge_stmt_2887_PhiReqMerge <-| ( bb_42_bb_44_PhiReq  bb_43_bb_44_PhiReq  iq_err_calcx_xexit_bb_44_PhiReq )
      ||[merge_stmt_2887_PhiAck] 
      {
        $T [phi_stmt_2888_ack] 
      }
      merge_stmt_2887_PhiReqMerge |-> (merge_stmt_2887_PhiAck)
      merge_stmt_2887__exit__  <-| (merge_stmt_2887_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1044  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1053
      ;;[merge_stmt_2922_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2922__entry__ |-> (merge_stmt_2922_dead_link)
      merge_stmt_2922__exit__ <-| (merge_stmt_2922_dead_link)
      //---------------------   merge statement  file prog.aa, line 1053  --------------------------
      ||[bb_44_bb_45_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_44_bb_45 |-> (bb_44_bb_45_PhiReq)
      $P [merge_stmt_2922_PhiReqMerge] 
      merge_stmt_2922_PhiReqMerge <-| ( bb_44_bb_45_PhiReq )
      ||[merge_stmt_2922_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2922_PhiReqMerge |-> (merge_stmt_2922_PhiAck)
      merge_stmt_2922__exit__  <-| (merge_stmt_2922_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1053  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1059
      ;;[merge_stmt_2935_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2935__entry__ |-> (merge_stmt_2935_dead_link)
      merge_stmt_2935__exit__ <-| (merge_stmt_2935_dead_link)
      //---------------------   merge statement  file prog.aa, line 1059  --------------------------
      ||[bb_45_bb_46_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_45_bb_46 |-> (bb_45_bb_46_PhiReq)
      $P [merge_stmt_2935_PhiReqMerge] 
      merge_stmt_2935_PhiReqMerge <-| ( bb_45_bb_46_PhiReq )
      ||[merge_stmt_2935_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2935_PhiReqMerge |-> (merge_stmt_2935_PhiAck)
      merge_stmt_2935__exit__  <-| (merge_stmt_2935_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1059  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1065
      ;;[merge_stmt_2948_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2948__entry__ |-> (merge_stmt_2948_dead_link)
      merge_stmt_2948__exit__ <-| (merge_stmt_2948_dead_link)
      //---------------------   merge statement  file prog.aa, line 1065  --------------------------
      ||[bb_44_xx_xthread_PhiReq] 
      {
        ;;[phi_stmt_2949] 
        {
          ||[phi_stmt_2949_sources] 
          {
            // sources for 			$phi tmp10x_xi35x_xin := 			  ($cast ($float<8,23>) iNsTr_97 ) $on bb_46_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+00 ) ) $on bb_44_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+00 ) ) $on bb_45_xx_xthread // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_97 )
            ;;[type_cast_2952] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2949_req] 
        }
      }
      bb_44_xx_xthread |-> (bb_44_xx_xthread_PhiReq)
      ||[bb_45_xx_xthread_PhiReq] 
      {
        ;;[phi_stmt_2949] 
        {
          ||[phi_stmt_2949_sources] 
          {
            // sources for 			$phi tmp10x_xi35x_xin := 			  ($cast ($float<8,23>) iNsTr_97 ) $on bb_46_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+00 ) ) $on bb_44_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+00 ) ) $on bb_45_xx_xthread // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_97 )
            ;;[type_cast_2952] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2949_req] 
        }
      }
      bb_45_xx_xthread |-> (bb_45_xx_xthread_PhiReq)
      ||[bb_46_xx_xthread_PhiReq] 
      {
        ;;[phi_stmt_2949] 
        {
          ||[phi_stmt_2949_sources] 
          {
            // sources for 			$phi tmp10x_xi35x_xin := 			  ($cast ($float<8,23>) iNsTr_97 ) $on bb_46_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+00 ) ) $on bb_44_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+00 ) ) $on bb_45_xx_xthread // type of target is $float<8,23>
            // ($cast ($float<8,23>) iNsTr_97 )
            ;;[type_cast_2952] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2949_req] 
        }
      }
      bb_46_xx_xthread |-> (bb_46_xx_xthread_PhiReq)
      $P [merge_stmt_2948_PhiReqMerge] 
      merge_stmt_2948_PhiReqMerge <-| ( bb_44_xx_xthread_PhiReq  bb_45_xx_xthread_PhiReq  bb_46_xx_xthread_PhiReq )
      ||[merge_stmt_2948_PhiAck] 
      {
        $T [phi_stmt_2949_ack] 
      }
      merge_stmt_2948_PhiReqMerge |-> (merge_stmt_2948_PhiAck)
      merge_stmt_2948__exit__  <-| (merge_stmt_2948_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1065  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1074
      //---------------------   merge statement  file prog.aa, line 1074  --------------------------
      ||[xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2984] 
        {
          ||[phi_stmt_2984_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_170 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_120 ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_170 )
            ;;[type_cast_2987] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_120 )
            ;;[type_cast_2989] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2984_req] 
        }
        ;;[phi_stmt_2990] 
        {
          ||[phi_stmt_2990_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_169 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_169 )
            ;;[type_cast_2993] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2990_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi |-> (xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq)
      ||[xx_xthread_bbx_xnph7x_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_2984] 
        {
          ||[phi_stmt_2984_sources] 
          {
            // sources for 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_170 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_120 ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_170 )
            ;;[type_cast_2987] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_120 )
            ;;[type_cast_2989] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2984_req] 
        }
        ;;[phi_stmt_2990] 
        {
          ||[phi_stmt_2990_sources] 
          {
            // sources for 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_169 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_169 )
            ;;[type_cast_2993] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2990_req] 
        }
      }
      xx_xthread_bbx_xnph7x_xix_xi |-> (xx_xthread_bbx_xnph7x_xix_xi_PhiReq)
      $P [merge_stmt_2983_PhiReqMerge] 
      merge_stmt_2983_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq  xx_xthread_bbx_xnph7x_xix_xi_PhiReq )
      ||[merge_stmt_2983_PhiAck] 
      {
        $T [phi_stmt_2984_ack] 
        $T [phi_stmt_2990_ack] 
      }
      merge_stmt_2983_PhiReqMerge |-> (merge_stmt_2983_PhiAck)
      merge_stmt_2983__exit__  <-| (merge_stmt_2983_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1074  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1083
      ;;[merge_stmt_3016_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3016__entry__ |-> (merge_stmt_3016_dead_link)
      merge_stmt_3016__exit__ <-| (merge_stmt_3016_dead_link)
      //---------------------   merge statement  file prog.aa, line 1083  --------------------------
      ||[bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader |-> (bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq)
      $P [merge_stmt_3016_PhiReqMerge] 
      merge_stmt_3016_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_bbx_xnphx_xix_xix_xpreheader_PhiReq )
      ||[merge_stmt_3016_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3016_PhiReqMerge |-> (merge_stmt_3016_PhiAck)
      merge_stmt_3016__exit__  <-| (merge_stmt_3016_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1083  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1087
      //---------------------   merge statement  file prog.aa, line 1087  --------------------------
      ||[bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3019] 
        {
          ||[phi_stmt_3019_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_190 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111010000011  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_190 )
            ;;[type_cast_3022] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3019_req] 
        }
        ;;[phi_stmt_3026] 
        {
          ||[phi_stmt_3026_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_191 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_191 )
            ;;[type_cast_3029] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3026_req] 
        }
      }
      bbx_xnphx_xix_xi_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq)
      ||[bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3019] 
        {
          ||[phi_stmt_3019_sources] 
          {
            // sources for 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_190 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111010000011  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_190 )
            ;;[type_cast_3022] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3019_req] 
        }
        ;;[phi_stmt_3026] 
        {
          ||[phi_stmt_3026_sources] 
          {
            // sources for 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_191 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_191 )
            ;;[type_cast_3029] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3026_req] 
        }
      }
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi |-> (bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq)
      $P [merge_stmt_3018_PhiReqMerge] 
      merge_stmt_3018_PhiReqMerge <-| ( bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq  bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq )
      ||[merge_stmt_3018_PhiAck] 
      {
        $T [phi_stmt_3019_ack] 
        $T [phi_stmt_3026_ack] 
      }
      merge_stmt_3018_PhiReqMerge |-> (merge_stmt_3018_PhiAck)
      merge_stmt_3018__exit__  <-| (merge_stmt_3018_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1087  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1097
      ;;[merge_stmt_3057_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3057__entry__ |-> (merge_stmt_3057_dead_link)
      merge_stmt_3057__exit__ <-| (merge_stmt_3057_dead_link)
      //---------------------   merge statement  file prog.aa, line 1097  --------------------------
      ||[bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq] 
      {
        ;;[phi_stmt_3058] 
        {
          ||[phi_stmt_3058_sources] 
          {
            // sources for 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_191 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_191 )
            ;;[type_cast_3061] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3058_req] 
        }
        ;;[phi_stmt_3062] 
        {
          ||[phi_stmt_3062_sources] 
          {
            // sources for 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_190 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_190 )
            ;;[type_cast_3065] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3062_req] 
        }
      }
      bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit |-> (bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq)
      $P [merge_stmt_3057_PhiReqMerge] 
      merge_stmt_3057_PhiReqMerge <-| ( bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq )
      ||[merge_stmt_3057_PhiAck] 
      {
        $T [phi_stmt_3058_ack] 
        $T [phi_stmt_3062_ack] 
      }
      merge_stmt_3057_PhiReqMerge |-> (merge_stmt_3057_PhiAck)
      merge_stmt_3057__exit__  <-| (merge_stmt_3057_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1097  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1103
      //---------------------   merge statement  file prog.aa, line 1103  --------------------------
      ||[bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3069] 
        {
          ||[phi_stmt_3069_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111010000011  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_3075] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3069_req] 
        }
        ;;[phi_stmt_3076] 
        {
          ||[phi_stmt_3076_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_3082] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3076_req] 
        }
      }
      bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi |-> (bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq] 
      {
        ;;[phi_stmt_3069] 
        {
          ||[phi_stmt_3069_sources] 
          {
            // sources for 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111010000011  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa2 )
            ;;[type_cast_3075] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3069_req] 
        }
        ;;[phi_stmt_3076] 
        {
          ||[phi_stmt_3076_sources] 
          {
            // sources for 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa3 )
            ;;[type_cast_3082] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3076_req] 
        }
      }
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi |-> (xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq)
      $P [merge_stmt_3068_PhiReqMerge] 
      merge_stmt_3068_PhiReqMerge <-| ( bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq  xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq )
      ||[merge_stmt_3068_PhiAck] 
      {
        $T [phi_stmt_3069_ack] 
        $T [phi_stmt_3076_ack] 
      }
      merge_stmt_3068_PhiReqMerge |-> (merge_stmt_3068_PhiAck)
      merge_stmt_3068__exit__  <-| (merge_stmt_3068_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1103  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1113
      ;;[merge_stmt_3106_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3106__entry__ |-> (merge_stmt_3106_dead_link)
      merge_stmt_3106__exit__ <-| (merge_stmt_3106_dead_link)
      //---------------------   merge statement  file prog.aa, line 1113  --------------------------
      ||[xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq] 
      {
        ;;[phi_stmt_3107] 
        {
          ||[phi_stmt_3107_sources] 
          {
            // sources for 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_169 ) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_169 )
            ;;[type_cast_3110] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3107_req] 
        }
      }
      xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi |-> (xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq)
      $P [merge_stmt_3106_PhiReqMerge] 
      merge_stmt_3106_PhiReqMerge <-| ( xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq )
      ||[merge_stmt_3106_PhiAck] 
      {
        $T [phi_stmt_3107_ack] 
      }
      merge_stmt_3106_PhiReqMerge |-> (merge_stmt_3106_PhiAck)
      merge_stmt_3106__exit__  <-| (merge_stmt_3106_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1113  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1128
      ;;[merge_stmt_3167_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3167__entry__ |-> (merge_stmt_3167_dead_link)
      merge_stmt_3167__exit__ <-| (merge_stmt_3167_dead_link)
      //---------------------   merge statement  file prog.aa, line 1128  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader |-> (udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq)
      $P [merge_stmt_3167_PhiReqMerge] 
      merge_stmt_3167_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_udiv32x_xexitx_xix_xpreheader_PhiReq )
      ||[merge_stmt_3167_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3167_PhiReqMerge |-> (merge_stmt_3167_PhiAck)
      merge_stmt_3167__exit__  <-| (merge_stmt_3167_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1128  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1132
      //---------------------   merge statement  file prog.aa, line 1132  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_3170] 
        {
          ||[phi_stmt_3170_sources] 
          {
            // sources for 			$phi iNsTr_211 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_3173] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3170_req] 
        }
        ;;[phi_stmt_3177] 
        {
          ||[phi_stmt_3177_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_212 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_212 )
            ;;[type_cast_3180] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_3182] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3177_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq)
      ||[udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq] 
      {
        ;;[phi_stmt_3170] 
        {
          ||[phi_stmt_3170_sources] 
          {
            // sources for 			$phi iNsTr_211 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) indvarx_xnextx_xi )
            ;;[type_cast_3173] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3170_req] 
        }
        ;;[phi_stmt_3177] 
        {
          ||[phi_stmt_3177_sources] 
          {
            // sources for 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_212 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_212 )
            ;;[type_cast_3180] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_3182] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3177_req] 
        }
      }
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi |-> (udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq)
      $P [merge_stmt_3169_PhiReqMerge] 
      merge_stmt_3169_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq  udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq )
      ||[merge_stmt_3169_PhiAck] 
      {
        $T [phi_stmt_3170_ack] 
        $T [phi_stmt_3177_ack] 
      }
      merge_stmt_3169_PhiReqMerge |-> (merge_stmt_3169_PhiAck)
      merge_stmt_3169__exit__  <-| (merge_stmt_3169_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1132  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1146
      ;;[merge_stmt_3227_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3227__entry__ |-> (merge_stmt_3227_dead_link)
      merge_stmt_3227__exit__ <-| (merge_stmt_3227_dead_link)
      //---------------------   merge statement  file prog.aa, line 1146  --------------------------
      ||[udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq] 
      {
        ;;[phi_stmt_3232] 
        {
          ||[phi_stmt_3232_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_211 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_211 )
            ;;[type_cast_3235] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3232_req] 
        }
        ;;[phi_stmt_3228] 
        {
          ||[phi_stmt_3228_sources] 
          {
            // sources for 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_212 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_212 )
            ;;[type_cast_3231] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3228_req] 
        }
      }
      udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi |-> (udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq)
      $P [merge_stmt_3227_PhiReqMerge] 
      merge_stmt_3227_PhiReqMerge <-| ( udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq )
      ||[merge_stmt_3227_PhiAck] 
      {
        $T [phi_stmt_3228_ack] 
        $T [phi_stmt_3232_ack] 
      }
      merge_stmt_3227_PhiReqMerge |-> (merge_stmt_3227_PhiAck)
      merge_stmt_3227__exit__  <-| (merge_stmt_3227_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1146  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1154
      //---------------------   merge statement  file prog.aa, line 1154  --------------------------
      ||[udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_3250] 
        {
          ||[phi_stmt_3250_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_197 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_3253] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_197 )
            ;;[type_cast_3255] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3250_req] 
        }
        ;;[phi_stmt_3256] 
        {
          ||[phi_stmt_3256_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_3259] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_3261] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3256_req] 
        }
      }
      udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq)
      ||[udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq] 
      {
        ;;[phi_stmt_3250] 
        {
          ||[phi_stmt_3250_sources] 
          {
            // sources for 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_197 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) tmp26x_xi )
            ;;[type_cast_3253] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) iNsTr_197 )
            ;;[type_cast_3255] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3250_req] 
        }
        ;;[phi_stmt_3256] 
        {
          ||[phi_stmt_3256_sources] 
          {
            // sources for 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
            // ($cast ($uint<32>) xx_xlcssa1 )
            ;;[type_cast_3259] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
            // ($cast ($uint<32>) xx_xlcssa4 )
            ;;[type_cast_3261] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3256_req] 
        }
      }
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi |-> (udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq)
      $P [merge_stmt_3249_PhiReqMerge] 
      merge_stmt_3249_PhiReqMerge <-| ( udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq  udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq )
      ||[merge_stmt_3249_PhiAck] 
      {
        $T [phi_stmt_3250_ack] 
        $T [phi_stmt_3256_ack] 
      }
      merge_stmt_3249_PhiReqMerge |-> (merge_stmt_3249_PhiAck)
      merge_stmt_3249__exit__  <-| (merge_stmt_3249_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1154  --------------------------
      // control-path for merge  
      //  file prog.aa, line 1166
      //---------------------   merge statement  file prog.aa, line 1166  --------------------------
      ||[bb_46_fdiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_3297] 
        {
          ||[phi_stmt_3297_sources] 
          {
            // sources for 			$phi iNsTr_173 := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_fdiv32x_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_46_fdiv32x_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_3300] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3297_req] 
        }
      }
      bb_46_fdiv32x_xexit |-> (bb_46_fdiv32x_xexit_PhiReq)
      ||[xx_xcritedgex_xi_fdiv32x_xexit_PhiReq] 
      {
        ;;[phi_stmt_3297] 
        {
          ||[phi_stmt_3297_sources] 
          {
            // sources for 			$phi iNsTr_173 := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_fdiv32x_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_46_fdiv32x_xexit // type of target is $float<8,23>
            // ($cast ($float<8,23>) tmp3x_xi )
            ;;[type_cast_3300] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3297_req] 
        }
      }
      xx_xcritedgex_xi_fdiv32x_xexit |-> (xx_xcritedgex_xi_fdiv32x_xexit_PhiReq)
      $P [merge_stmt_3296_PhiReqMerge] 
      merge_stmt_3296_PhiReqMerge <-| ( bb_46_fdiv32x_xexit_PhiReq  xx_xcritedgex_xi_fdiv32x_xexit_PhiReq )
      ||[merge_stmt_3296_PhiAck] 
      {
        $T [phi_stmt_3297_ack] 
      }
      merge_stmt_3296_PhiReqMerge |-> (merge_stmt_3296_PhiAck)
      merge_stmt_3296__exit__  <-| (merge_stmt_3296_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 1166  --------------------------
      bb_0_bb_1 <-| (branch_block_stmt_1659__entry__)
      assign_stmt_1721__entry__ <-| (merge_stmt_1661__exit__)
      assign_stmt_1724__entry__ <-| (assign_stmt_1721__exit__)
      assign_stmt_1727__entry__ <-| (assign_stmt_1724__exit__)
      assign_stmt_1730__entry__ <-| (assign_stmt_1727__exit__)
      assign_stmt_1733__entry__ <-| (assign_stmt_1730__exit__)
      assign_stmt_1738__entry__ <-| (assign_stmt_1733__exit__)
      if_stmt_1739__entry__ <-| (assign_stmt_1738__exit__)
      merge_stmt_1745__entry__ <-| (if_stmt_1739__exit__)
      assign_stmt_1750_to_assign_stmt_1760__entry__ <-| (merge_stmt_1745__exit__)
      bb_2_bb_5 <-| (assign_stmt_1750_to_assign_stmt_1760__exit__)
      assign_stmt_1767__entry__ <-| (merge_stmt_1762__exit__)
      if_stmt_1768__entry__ <-| (assign_stmt_1767__exit__)
      merge_stmt_1774__entry__ <-| (if_stmt_1768__exit__)
      assign_stmt_1778_to_assign_stmt_1788__entry__ <-| (merge_stmt_1774__exit__)
      bb_4_bb_5 <-| (assign_stmt_1778_to_assign_stmt_1788__exit__)
      assign_stmt_1805_to_assign_stmt_1841__entry__ <-| (merge_stmt_1790__exit__)
      if_stmt_1842__entry__ <-| (assign_stmt_1805_to_assign_stmt_1841__exit__)
      merge_stmt_1848__entry__ <-| (if_stmt_1842__exit__)
      assign_stmt_1854__entry__ <-| (merge_stmt_1848__exit__)
      if_stmt_1855__entry__ <-| (assign_stmt_1854__exit__)
      merge_stmt_1861__entry__ <-| (if_stmt_1855__exit__)
      bb_7_bb_8 <-| (merge_stmt_1861__exit__)
      assign_stmt_1880_to_assign_stmt_1891__entry__ <-| (merge_stmt_1863__exit__)
      if_stmt_1892__entry__ <-| (assign_stmt_1880_to_assign_stmt_1891__exit__)
      merge_stmt_1898__entry__ <-| (if_stmt_1892__exit__)
      assign_stmt_1904__entry__ <-| (merge_stmt_1898__exit__)
      if_stmt_1905__entry__ <-| (assign_stmt_1904__exit__)
      merge_stmt_1911__entry__ <-| (if_stmt_1905__exit__)
      assign_stmt_1917__entry__ <-| (merge_stmt_1911__exit__)
      bb_10_bb_11 <-| (assign_stmt_1917__exit__)
      assign_stmt_1936_to_assign_stmt_1961__entry__ <-| (merge_stmt_1919__exit__)
      if_stmt_1962__entry__ <-| (assign_stmt_1936_to_assign_stmt_1961__exit__)
      merge_stmt_1968__entry__ <-| (if_stmt_1962__exit__)
      assign_stmt_1974_to_assign_stmt_2044__entry__ <-| (merge_stmt_1968__exit__)
      switch_stmt_2045__entry__ <-| (assign_stmt_1974_to_assign_stmt_2044__exit__)
      merge_stmt_2055__entry__ <-| (switch_stmt_2045__exit__)
      bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 <-| (merge_stmt_2055__exit__)
      assign_stmt_2077_to_assign_stmt_2082__entry__ <-| (merge_stmt_2057__exit__)
      if_stmt_2083__entry__ <-| (assign_stmt_2077_to_assign_stmt_2082__exit__)
      merge_stmt_2089__entry__ <-| (if_stmt_2083__exit__)
      bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 <-| (merge_stmt_2089__exit__)
      assign_stmt_2111_to_assign_stmt_2122__entry__ <-| (merge_stmt_2091__exit__)
      if_stmt_2123__entry__ <-| (assign_stmt_2111_to_assign_stmt_2122__exit__)
      merge_stmt_2129__entry__ <-| (if_stmt_2123__exit__)
      xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 <-| (merge_stmt_2129__exit__)
      assign_stmt_2159_to_assign_stmt_2169__entry__ <-| (merge_stmt_2140__exit__)
      if_stmt_2170__entry__ <-| (assign_stmt_2159_to_assign_stmt_2169__exit__)
      merge_stmt_2176__entry__ <-| (if_stmt_2170__exit__)
      xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 <-| (merge_stmt_2176__exit__)
      xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16 <-| (merge_stmt_2183__exit__)
      assign_stmt_2206_to_assign_stmt_2225__entry__ <-| (merge_stmt_2193__exit__)
      if_stmt_2226__entry__ <-| (assign_stmt_2206_to_assign_stmt_2225__exit__)
      merge_stmt_2232__entry__ <-| (if_stmt_2226__exit__)
      udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 <-| (merge_stmt_2232__exit__)
      assign_stmt_2254_to_assign_stmt_2285__entry__ <-| (merge_stmt_2234__exit__)
      if_stmt_2286__entry__ <-| (assign_stmt_2254_to_assign_stmt_2285__exit__)
      merge_stmt_2292__entry__ <-| (if_stmt_2286__exit__)
      assign_stmt_2307_to_assign_stmt_2323__entry__ <-| (merge_stmt_2292__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29 <-| (assign_stmt_2307_to_assign_stmt_2323__exit__)
      assign_stmt_2344_to_assign_stmt_2370__entry__ <-| (merge_stmt_2325__exit__)
      xx_xcritedgex_xix_xi29_omega_calcx_xexit <-| (assign_stmt_2344_to_assign_stmt_2370__exit__)
      assign_stmt_2385_to_assign_stmt_2406__entry__ <-| (merge_stmt_2372__exit__)
      if_stmt_2407__entry__ <-| (assign_stmt_2385_to_assign_stmt_2406__exit__)
      merge_stmt_2413__entry__ <-| (if_stmt_2407__exit__)
      assign_stmt_2419_to_assign_stmt_2489__entry__ <-| (merge_stmt_2413__exit__)
      switch_stmt_2490__entry__ <-| (assign_stmt_2419_to_assign_stmt_2489__exit__)
      merge_stmt_2500__entry__ <-| (switch_stmt_2490__exit__)
      bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi <-| (merge_stmt_2500__exit__)
      assign_stmt_2522_to_assign_stmt_2527__entry__ <-| (merge_stmt_2502__exit__)
      if_stmt_2528__entry__ <-| (assign_stmt_2522_to_assign_stmt_2527__exit__)
      merge_stmt_2534__entry__ <-| (if_stmt_2528__exit__)
      bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi <-| (merge_stmt_2534__exit__)
      assign_stmt_2556_to_assign_stmt_2567__entry__ <-| (merge_stmt_2536__exit__)
      if_stmt_2568__entry__ <-| (assign_stmt_2556_to_assign_stmt_2567__exit__)
      merge_stmt_2574__entry__ <-| (if_stmt_2568__exit__)
      xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi <-| (merge_stmt_2574__exit__)
      assign_stmt_2604_to_assign_stmt_2614__entry__ <-| (merge_stmt_2585__exit__)
      if_stmt_2615__entry__ <-| (assign_stmt_2604_to_assign_stmt_2614__exit__)
      merge_stmt_2621__entry__ <-| (if_stmt_2615__exit__)
      xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi <-| (merge_stmt_2621__exit__)
      xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi <-| (merge_stmt_2628__exit__)
      assign_stmt_2651_to_assign_stmt_2670__entry__ <-| (merge_stmt_2638__exit__)
      if_stmt_2671__entry__ <-| (assign_stmt_2651_to_assign_stmt_2670__exit__)
      merge_stmt_2677__entry__ <-| (if_stmt_2671__exit__)
      udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi <-| (merge_stmt_2677__exit__)
      assign_stmt_2699_to_assign_stmt_2730__entry__ <-| (merge_stmt_2679__exit__)
      if_stmt_2731__entry__ <-| (assign_stmt_2699_to_assign_stmt_2730__exit__)
      merge_stmt_2737__entry__ <-| (if_stmt_2731__exit__)
      assign_stmt_2752_to_assign_stmt_2768__entry__ <-| (merge_stmt_2737__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi <-| (assign_stmt_2752_to_assign_stmt_2768__exit__)
      assign_stmt_2789_to_assign_stmt_2815__entry__ <-| (merge_stmt_2770__exit__)
      xx_xcritedgex_xix_xi_iq_err_calcx_xexit <-| (assign_stmt_2789_to_assign_stmt_2815__exit__)
      assign_stmt_2831_to_assign_stmt_2865__entry__ <-| (merge_stmt_2817__exit__)
      if_stmt_2866__entry__ <-| (assign_stmt_2831_to_assign_stmt_2865__exit__)
      merge_stmt_2872__entry__ <-| (if_stmt_2866__exit__)
      assign_stmt_2878__entry__ <-| (merge_stmt_2872__exit__)
      if_stmt_2879__entry__ <-| (assign_stmt_2878__exit__)
      merge_stmt_2885__entry__ <-| (if_stmt_2879__exit__)
      bb_43_bb_44 <-| (merge_stmt_2885__exit__)
      assign_stmt_2904_to_assign_stmt_2915__entry__ <-| (merge_stmt_2887__exit__)
      if_stmt_2916__entry__ <-| (assign_stmt_2904_to_assign_stmt_2915__exit__)
      merge_stmt_2922__entry__ <-| (if_stmt_2916__exit__)
      assign_stmt_2928__entry__ <-| (merge_stmt_2922__exit__)
      if_stmt_2929__entry__ <-| (assign_stmt_2928__exit__)
      merge_stmt_2935__entry__ <-| (if_stmt_2929__exit__)
      assign_stmt_2941__entry__ <-| (merge_stmt_2935__exit__)
      if_stmt_2942__entry__ <-| (assign_stmt_2941__exit__)
      merge_stmt_2948__entry__ <-| (if_stmt_2942__exit__)
      assign_stmt_2963_to_assign_stmt_2981__entry__ <-| (merge_stmt_2948__exit__)
      xx_xthread_bbx_xnph7x_xix_xi <-| (assign_stmt_2963_to_assign_stmt_2981__exit__)
      assign_stmt_3003_to_assign_stmt_3009__entry__ <-| (merge_stmt_2983__exit__)
      if_stmt_3010__entry__ <-| (assign_stmt_3003_to_assign_stmt_3009__exit__)
      merge_stmt_3016__entry__ <-| (if_stmt_3010__exit__)
      bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi <-| (merge_stmt_3016__exit__)
      assign_stmt_3039_to_assign_stmt_3050__entry__ <-| (merge_stmt_3018__exit__)
      if_stmt_3051__entry__ <-| (assign_stmt_3039_to_assign_stmt_3050__exit__)
      merge_stmt_3057__entry__ <-| (if_stmt_3051__exit__)
      xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi <-| (merge_stmt_3057__exit__)
      assign_stmt_3088_to_assign_stmt_3099__entry__ <-| (merge_stmt_3068__exit__)
      if_stmt_3100__entry__ <-| (assign_stmt_3088_to_assign_stmt_3099__exit__)
      merge_stmt_3106__entry__ <-| (if_stmt_3100__exit__)
      assign_stmt_3117_to_assign_stmt_3160__entry__ <-| (merge_stmt_3106__exit__)
      if_stmt_3161__entry__ <-| (assign_stmt_3117_to_assign_stmt_3160__exit__)
      merge_stmt_3167__entry__ <-| (if_stmt_3161__exit__)
      udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi <-| (merge_stmt_3167__exit__)
      assign_stmt_3189_to_assign_stmt_3220__entry__ <-| (merge_stmt_3169__exit__)
      if_stmt_3221__entry__ <-| (assign_stmt_3189_to_assign_stmt_3220__exit__)
      merge_stmt_3227__entry__ <-| (if_stmt_3221__exit__)
      assign_stmt_3242_to_assign_stmt_3247__entry__ <-| (merge_stmt_3227__exit__)
      udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi <-| (assign_stmt_3242_to_assign_stmt_3247__exit__)
      assign_stmt_3268_to_assign_stmt_3294__entry__ <-| (merge_stmt_3249__exit__)
      xx_xcritedgex_xi_fdiv32x_xexit <-| (assign_stmt_3268_to_assign_stmt_3294__exit__)
      assign_stmt_3307__entry__ <-| (merge_stmt_3296__exit__)
      assign_stmt_3310__entry__ <-| (assign_stmt_3307__exit__)
      assign_stmt_3313__entry__ <-| (assign_stmt_3310__exit__)
      assign_stmt_3316__entry__ <-| (assign_stmt_3313__exit__)
      assign_stmt_3322_to_assign_stmt_3334__entry__ <-| (assign_stmt_3316__exit__)
      fdiv32x_xexit_bb_1 <-| (assign_stmt_3322_to_assign_stmt_3334__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 659
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 678
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 685
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 691
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 698
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 712
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 718
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 722
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 731
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 737
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 742
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 754
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 778
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 782
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 791
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 795
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 805
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 811
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 821
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 826
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 831
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 842
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 846
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 860
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 870
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 882
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 893
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 917
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 921
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 930
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 934
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 944
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 950
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 960
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 965
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 970
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 981
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 985
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 999
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1009
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1021
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1034
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1040
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1044
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1053
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1059
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1065
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1074
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1083
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1087
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1097
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1103
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1113
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1128
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1132
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1146
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1154
    // constant-object-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1166
    // constant-object-declarations for block %vector_control_daemon%body
    //  file prog.aa, line 654
    // constant-object-declarations for block %vector_control_daemon
    //  file prog.aa, line 649
    // constant-declarations for block %vector_control_daemon%body
    //  file prog.aa, line 654
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 659
    // constant-declarations for phi:  			$phi flux_rotor_lpf_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp33 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 660
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1666_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi int_flux_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_72 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 661
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1673_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi speed_err_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_21 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 662
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1680_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_49 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 663
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1687_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp31 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 664
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1694_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi spd_lpf_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 665
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1701_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi int_speed_err_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_24 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 666
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1708_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi speed_refx_x1 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) speed_refx_x0 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 667
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_1715_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 676
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 678
    // ($bitcast ($float<11,52>) _f5.000000e-02 )
    $constant $W[type_cast_1754_wire_constant] : $float<11,52> := _b0011111110101001100110011001100110011001100110011001100110011010// 5.000000e-02
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 685
    // if-statement  
    //  file prog.aa, line 689
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 691
    // ($bitcast ($float<11,52>) _f-5.000000e-02 )
    $constant $W[type_cast_1782_wire_constant] : $float<11,52> := _b1011111110101001100110011001100110011001100110011001100110011010// -5.000000e-02
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 698
    // constant-declarations for phi:  			$phi speed_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_15 ) $on bb_2_bb_5			  ($cast ($float<8,23>) iNsTr_30 ) $on bb_4_bb_5			  ($cast ($float<8,23>) speed_refx_x1 ) $on bb_3_bb_5 // type of target is $float<8,23>
    //  file prog.aa, line 699
    // ($bitcast ($float<8,23>) _f7.000000e-01 )
    $constant $W[type_cast_1803_wire_constant] : $float<8,23> := _b00111111001100110011001100110011// 7.000000e-01
    // ($bitcast ($float<8,23>) _f2.500000e-04 )
    $constant $W[type_cast_1824_wire_constant] : $float<8,23> := _b00111001100000110001001001101111// 2.500000e-04
    // ($bitcast ($float<11,52>) _f-1.000000e+01 )
    $constant $W[type_cast_1839_wire_constant] : $float<11,52> := _b1100000000100100000000000000000000000000000000000000000000000000// -1.000000e+01
    // if-statement  
    //  file prog.aa, line 710
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 712
    // ($bitcast ($float<11,52>) _f1.000000e+01 )
    $constant $W[type_cast_1852_wire_constant] : $float<11,52> := _b0100000000100100000000000000000000000000000000000000000000000000// 1.000000e+01
    // if-statement  
    //  file prog.aa, line 716
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 718
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 722
    // constant-declarations for phi:  			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_24 ) $on bb_7_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+01 ) ) $on bb_5_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+01 ) ) $on bb_6_bb_8 // type of target is $float<8,23>
    //  file prog.aa, line 723
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+01 ) )
    $constant $W[type_cast_1870_wire_constant] : $float<8,23> := _b11000001001000000000000000000000// -1.000000e+01
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+01 ) )
    $constant $W[type_cast_1873_wire_constant] : $float<8,23> := _b01000001001000000000000000000000// 1.000000e+01
    // ($bitcast ($float<8,23>) _f5.000000e+00 )
    $constant $W[type_cast_1878_wire_constant] : $float<8,23> := _b01000000101000000000000000000000// 5.000000e+00
    // ($bitcast ($float<8,23>) _f-2.000000e+01 )
    $constant $W[type_cast_1889_wire_constant] : $float<8,23> := _b11000001101000000000000000000000// -2.000000e+01
    // if-statement  
    //  file prog.aa, line 729
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 731
    // ($bitcast ($float<8,23>) _f2.000000e+01 )
    $constant $W[type_cast_1902_wire_constant] : $float<8,23> := _b01000001101000000000000000000000// 2.000000e+01
    // if-statement  
    //  file prog.aa, line 735
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 737
    // ($bitcast ($float<8,23>) _f3.465703e-01 )
    $constant $W[type_cast_1915_wire_constant] : $float<8,23> := _b00111110101100010111000110101010// 3.465703e-01
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 742
    // constant-declarations for phi:  			$phi torque_refx_x0 := 			  ($cast ($float<8,23>) phitmp32 ) $on bb_10_bb_11			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-6.931406e+00 ) ) $on bb_8_bb_11			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f6.931406e+00 ) ) $on bb_9_bb_11 // type of target is $float<8,23>
    //  file prog.aa, line 743
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-6.931406e+00 ) )
    $constant $W[type_cast_1926_wire_constant] : $float<8,23> := _b11000000110111011100111000010100// -6.931406e+00
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f6.931406e+00 ) )
    $constant $W[type_cast_1929_wire_constant] : $float<8,23> := _b01000000110111011100111000010100// 6.931406e+00
    // ($bitcast ($float<8,23>) _f3.886080e-04 )
    $constant $W[type_cast_1934_wire_constant] : $float<8,23> := _b00111001110010111011111000010101// 3.886080e-04
    // ($bitcast ($float<8,23>) _f7.790627e+00 )
    $constant $W[type_cast_1945_wire_constant] : $float<8,23> := _b01000000111110010100110011010001// 7.790627e+00
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_1959_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 752
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 754
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_1972_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_1978_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_1984_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_1990_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_1996_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_2002_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_2008_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_2014_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00000000000000001111111111111111  )
    $constant $W[type_cast_2020_wire_constant] : $int<32> := _b00000000000000001111111111111111// 65535
    // ($bitcast ($uint<32>) _b00000000000000010000000000000000  )
    $constant $W[type_cast_2026_wire_constant] : $int<32> := _b00000000000000010000000000000000// 65536
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_2037_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // constant-declarations  for switch  
    //  file prog.aa, line 769
    // _b00000000000000000000000000000000 
    $constant $W[expr_2047_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b00000000000000000000000000000001 
    $constant $W[expr_2050_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 778
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 782
    // constant-declarations for phi:  			$phi xx_x016x_xix_xix_xi3 := 			  ($cast ($uint<32>) iNsTr_137 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) iNsTr_58 ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
    //  file prog.aa, line 783
    // constant-declarations for phi:  			$phi quotientx_x05x_xix_xix_xi4 := 			  ($cast ($uint<32>) iNsTr_136 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
    //  file prog.aa, line 784
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2070_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2075_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 789
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 791
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 795
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xix_xix_xi6 := 			  ($cast ($uint<32>) iNsTr_162 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) iNsTr_61 ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
    //  file prog.aa, line 796
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xix_xix_xi7 := 			  ($cast ($uint<32>) iNsTr_163 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
    //  file prog.aa, line 797
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_2104_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2109_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2115_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 803
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 805
    // constant-declarations for phi:  			$phi xx_xlcssa13 := 			  ($cast ($uint<32>) iNsTr_163 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 806
    // constant-declarations for phi:  			$phi xx_xlcssa12 := 			  ($cast ($uint<32>) iNsTr_162 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 807
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 811
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi9 := 			  ($cast ($uint<32>) iNsTr_61 ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa12 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
    //  file prog.aa, line 812
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi10 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa13 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
    //  file prog.aa, line 813
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_2151_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 819
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 821
    // constant-declarations for phi:  			$phi xx_xlcssa14 := 			  ($cast ($uint<32>) iNsTr_136 ) $on xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 822
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 826
    // constant-declarations for phi:  			$phi xx_x0x_xix_xix_xi12 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_12_xx_xloopexitx_xix_xix_xi13			  ($cast ($uint<32>) xx_xlcssa14 ) $on xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 // type of target is $uint<32>
    //  file prog.aa, line 827
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_2188_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 831
    // constant-declarations for phi:  			$phi tempx_x0x_xphx_xix_xi14 := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi12 ) $on xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16			  ($cast ($uint<32>) iNsTr_58 ) $on bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16 // type of target is $uint<32>
    //  file prog.aa, line 832
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_2204_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2210_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2218_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 840
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 842
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 846
    // constant-declarations for phi:  			$phi iNsTr_140 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi19 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
    //  file prog.aa, line 847
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2241_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012x_xix_xi17 := 			  ($cast ($uint<32>) iNsTr_141 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
    //  file prog.aa, line 848
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2252_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_2258_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2264_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2272_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2283_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 858
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 860
    // constant-declarations for phi:  			$phi xx_xlcssa11 := 			  ($cast ($uint<32>) iNsTr_141 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25 // type of target is $uint<32>
    //  file prog.aa, line 861
    // constant-declarations for phi:  			$phi xx_xlcssa10 := 			  ($cast ($uint<32>) iNsTr_140 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25 // type of target is $uint<32>
    //  file prog.aa, line 862
    // ($bitcast ($uint<32>) _b11111111111111111111111100000000  )
    $constant $W[type_cast_2305_wire_constant] : $int<32> := _b11111111111111111111111100000000// -256
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_2311_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 870
    // constant-declarations for phi:  			$phi expx_x0x_xlcssax_xix_xi26 := 			  ($cast ($uint<32>) tmp26x_xix_xi24 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29			  ($cast ($uint<32>) iNsTr_64 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 // type of target is $uint<32>
    //  file prog.aa, line 871
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssax_xix_xi27 := 			  ($cast ($uint<32>) xx_xlcssa11 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 // type of target is $uint<32>
    //  file prog.aa, line 872
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_2342_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_2348_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_2354_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 882
    // constant-declarations for phi:  			$phi iNsTr_46 := 			  ($cast ($float<8,23>) tmp3x_xix_xi28 ) $on xx_xcritedgex_xix_xi29_omega_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_11_omega_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 883
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_2379_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // ($bitcast ($float<8,23>) _f5.000000e-05 )
    $constant $W[type_cast_2389_wire_constant] : $float<8,23> := _b00111000010100011011011100010111// 5.000000e-05
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_2404_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 891
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 893
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_2417_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_2423_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_2429_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_2435_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_2441_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_2447_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_2453_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_2459_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00000000000000001111111111111111  )
    $constant $W[type_cast_2465_wire_constant] : $int<32> := _b00000000000000001111111111111111// 65535
    // ($bitcast ($uint<32>) _b00000000000000010000000000000000  )
    $constant $W[type_cast_2471_wire_constant] : $int<32> := _b00000000000000010000000000000000// 65536
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_2482_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // constant-declarations  for switch  
    //  file prog.aa, line 908
    // _b00000000000000000000000000000000 
    $constant $W[expr_2492_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b00000000000000000000000000000001 
    $constant $W[expr_2495_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 917
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 921
    // constant-declarations for phi:  			$phi xx_x016x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_153 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) iNsTr_82 ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 922
    // constant-declarations for phi:  			$phi quotientx_x05x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_152 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 923
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2515_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2520_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 928
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 930
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 934
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_183 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) iNsTr_85 ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 935
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_184 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 936
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_2549_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2554_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2560_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 942
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 944
    // constant-declarations for phi:  			$phi xx_xlcssa8 := 			  ($cast ($uint<32>) iNsTr_184 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 945
    // constant-declarations for phi:  			$phi xx_xlcssa7 := 			  ($cast ($uint<32>) iNsTr_183 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 946
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 950
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_85 ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa7 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 951
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa8 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 952
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_2596_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 958
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 960
    // constant-declarations for phi:  			$phi xx_xlcssa9 := 			  ($cast ($uint<32>) iNsTr_152 ) $on xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 961
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 965
    // constant-declarations for phi:  			$phi xx_x0x_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_27_xx_xloopexitx_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa9 ) $on xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 966
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) )
    $constant $W[type_cast_2633_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 970
    // constant-declarations for phi:  			$phi tempx_x0x_xphx_xix_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi ) $on xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi			  ($cast ($uint<32>) iNsTr_82 ) $on bb_27_udiv32x_xexitx_xpreheaderx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 971
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_2649_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2655_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2663_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 979
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 981
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 985
    // constant-declarations for phi:  			$phi iNsTr_156 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 986
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2686_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012x_xix_xi := 			  ($cast ($uint<32>) iNsTr_157 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 987
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2697_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_2703_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_2709_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2717_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_2728_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 997
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 999
    // constant-declarations for phi:  			$phi xx_xlcssa6 := 			  ($cast ($uint<32>) iNsTr_157 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1000
    // constant-declarations for phi:  			$phi xx_xlcssa5 := 			  ($cast ($uint<32>) iNsTr_156 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1001
    // ($bitcast ($uint<32>) _b11111111111111111111111100000000  )
    $constant $W[type_cast_2750_wire_constant] : $int<32> := _b11111111111111111111111100000000// -256
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_2756_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1009
    // constant-declarations for phi:  			$phi expx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) tmp26x_xix_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) iNsTr_88 ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1010
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) xx_xlcssa6 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1011
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_2787_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_2793_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_2799_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1021
    // constant-declarations for phi:  			$phi iNsTr_67 := 			  ($cast ($float<8,23>) tmp3x_xix_xi ) $on xx_xcritedgex_xix_xi_iq_err_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on omega_calcx_xexit_iq_err_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1022
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_2824_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // ($bitcast ($float<8,23>) _f5.014000e-03 )
    $constant $W[type_cast_2829_wire_constant] : $float<8,23> := _b00111011101001000100110001111011// 5.014000e-03
    // ($bitcast ($float<8,23>) _f3.000000e-01 )
    $constant $W[type_cast_2839_wire_constant] : $float<8,23> := _b00111110100110011001100110011010// 3.000000e-01
    // ($bitcast ($float<8,23>) _f5.000000e-05 )
    $constant $W[type_cast_2846_wire_constant] : $float<8,23> := _b00111000010100011011011100010111// 5.000000e-05
    // ($bitcast ($float<8,23>) _f5.000000e+01 )
    $constant $W[type_cast_2857_wire_constant] : $float<8,23> := _b01000010010010000000000000000000// 5.000000e+01
    // ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $constant $W[type_cast_2863_wire_constant] : $float<8,23> := _b10111111100000000000000000000000// -1.000000e+00
    // if-statement  
    //  file prog.aa, line 1032
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1034
    // ($bitcast ($float<8,23>) _f1.000000e+00 )
    $constant $W[type_cast_2876_wire_constant] : $float<8,23> := _b00111111100000000000000000000000// 1.000000e+00
    // if-statement  
    //  file prog.aa, line 1038
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1040
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1044
    // constant-declarations for phi:  			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_73 ) $on bb_43_bb_44			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_44			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) ) $on bb_42_bb_44 // type of target is $float<8,23>
    //  file prog.aa, line 1045
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) )
    $constant $W[type_cast_2894_wire_constant] : $float<8,23> := _b10111111100000000000000000000000// -1.000000e+00
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) )
    $constant $W[type_cast_2897_wire_constant] : $float<8,23> := _b00111111100000000000000000000000// 1.000000e+00
    // ($bitcast ($float<8,23>) _f4.000000e+01 )
    $constant $W[type_cast_2902_wire_constant] : $float<8,23> := _b01000010001000000000000000000000// 4.000000e+01
    // ($bitcast ($float<8,23>) _f-2.000000e+00 )
    $constant $W[type_cast_2913_wire_constant] : $float<8,23> := _b11000000000000000000000000000000// -2.000000e+00
    // if-statement  
    //  file prog.aa, line 1051
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1053
    // ($bitcast ($float<8,23>) _f2.000000e+00 )
    $constant $W[type_cast_2926_wire_constant] : $float<8,23> := _b01000000000000000000000000000000// 2.000000e+00
    // if-statement  
    //  file prog.aa, line 1057
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1059
    // ($bitcast ($float<8,23>) _f0.000000e+00 )
    $constant $W[type_cast_2939_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.aa, line 1063
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1065
    // constant-declarations for phi:  			$phi tmp10x_xi35x_xin := 			  ($cast ($float<8,23>) iNsTr_97 ) $on bb_46_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+00 ) ) $on bb_44_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+00 ) ) $on bb_45_xx_xthread // type of target is $float<8,23>
    //  file prog.aa, line 1066
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+00 ) )
    $constant $W[type_cast_2955_wire_constant] : $float<8,23> := _b11000000000000000000000000000000// -2.000000e+00
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+00 ) )
    $constant $W[type_cast_2958_wire_constant] : $float<8,23> := _b01000000000000000000000000000000// 2.000000e+00
    // ($bitcast ($uint<32>) _b00000000000000000000000000000111  )
    $constant $W[type_cast_2967_wire_constant] : $int<32> := _b00000000000000000000000000000111// 7
    // ($bitcast ($uint<32>) _b00111111111111111111111110000000  )
    $constant $W[type_cast_2973_wire_constant] : $int<32> := _b00111111111111111111111110000000// 1073741696
    // ($bitcast ($uint<32>) _b01000000000000000000000000000000  )
    $constant $W[type_cast_2979_wire_constant] : $int<32> := _b01000000000000000000000000000000// 1073741824
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1074
    // constant-declarations for phi:  			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_170 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_120 ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1075
    // constant-declarations for phi:  			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_169 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1076
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_2996_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3001_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000011001111010000011  )
    $constant $W[type_cast_3007_wire_constant] : $int<32> := _b00000000000000011001111010000011// 106115
    // if-statement  
    //  file prog.aa, line 1081
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1083
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1087
    // constant-declarations for phi:  			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_190 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111010000011  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1088
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111010000011  ) )
    $constant $W[type_cast_3025_wire_constant] : $int<32> := _b00000000000000011001111010000011// 106115
    // constant-declarations for phi:  			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_191 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1089
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_3032_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3037_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3043_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 1095
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1097
    // constant-declarations for phi:  			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_191 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1098
    // constant-declarations for phi:  			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_190 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1099
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1103
    // constant-declarations for phi:  			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111010000011  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1104
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111010000011  ) )
    $constant $W[type_cast_3073_wire_constant] : $int<32> := _b00000000000000011001111010000011// 106115
    // constant-declarations for phi:  			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1105
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) )
    $constant $W[type_cast_3080_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000011001111010000011  )
    $constant $W[type_cast_3097_wire_constant] : $int<32> := _b00000000000000011001111010000011// 106115
    // if-statement  
    //  file prog.aa, line 1111
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1113
    // constant-declarations for phi:  			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_169 ) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 1114
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_3115_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b10000000000000000000000000000000  )
    $constant $W[type_cast_3121_wire_constant] : $int<32> := _b10000000000000000000000000000000// -2147483648
    // ($bitcast ($uint<32>) _b00000000000000000000000011111111  )
    $constant $W[type_cast_3127_wire_constant] : $int<32> := _b00000000000000000000000011111111// 255
    // ($bitcast ($uint<32>) _b11111111111111111111111110000010  )
    $constant $W[type_cast_3133_wire_constant] : $int<32> := _b11111111111111111111111110000010// -126
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_3139_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3145_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3153_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file prog.aa, line 1126
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1128
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1132
    // constant-declarations for phi:  			$phi iNsTr_211 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 1133
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3176_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for phi:  			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_212 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 1134
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3187_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000100000000000000000000000  )
    $constant $W[type_cast_3193_wire_constant] : $int<32> := _b00000000100000000000000000000000// 8388608
    // ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $constant $W[type_cast_3199_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_3207_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_3218_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file prog.aa, line 1144
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1146
    // constant-declarations for phi:  			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_212 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1147
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_211 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1148
    // ($bitcast ($uint<32>) _b11111111111111111111111110000001  )
    $constant $W[type_cast_3240_wire_constant] : $int<32> := _b11111111111111111111111110000001// -127
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1154
    // constant-declarations for phi:  			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_197 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1155
    // constant-declarations for phi:  			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1156
    // ($bitcast ($uint<32>) _b00000000011111111111111111111111  )
    $constant $W[type_cast_3266_wire_constant] : $int<32> := _b00000000011111111111111111111111// 8388607
    // ($bitcast ($uint<32>) _b00000000000000000000000000010111  )
    $constant $W[type_cast_3272_wire_constant] : $int<32> := _b00000000000000000000000000010111// 23
    // ($bitcast ($uint<32>) _b01000100000000000000000000000000  )
    $constant $W[type_cast_3278_wire_constant] : $int<32> := _b01000100000000000000000000000000// 1140850688
    // constant-declarations for block %vector_control_daemon%body%
    //  file prog.aa, line 1166
    // constant-declarations for phi:  			$phi iNsTr_173 := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_fdiv32x_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_46_fdiv32x_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1167
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) )
    $constant $W[type_cast_3303_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // ($bitcast ($float<8,23>) _f3.000000e-01 )
    $constant $W[type_cast_3320_wire_constant] : $float<8,23> := _b00111110100110011001100110011010// 3.000000e-01
    // ($bitcast ($float<8,23>) _f9.995200e-01 )
    $constant $W[type_cast_3326_wire_constant] : $float<8,23> := _b00111111011111111110000010001011// 9.995200e-01
    // ($bitcast ($float<8,23>) _f9.949860e-01 )
    $constant $W[type_cast_3332_wire_constant] : $float<8,23> := _b00111111011111101011011101100111// 9.949860e-01
    // block %vector_control_daemon%body
    //  file prog.aa, line 654
    // merge-statement  
    //  file prog.aa, line 659
    // 			$phi flux_rotor_lpf_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp33 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 660
    // ($cast ($float<8,23>) phitmp33 )
    $intermediate $W[type_cast_1668_wire] : $float<8,23>
    // flux_rotor_lpf_prevx_x0
    $W[flux_rotor_lpf_prevx_x0_1662] : $float<8,23>
    // 			$phi int_flux_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_72 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 661
    // ($cast ($float<8,23>) iNsTr_72 )
    $intermediate $W[type_cast_1675_wire] : $float<8,23>
    // int_flux_err_temp_2x_x0
    $W[int_flux_err_temp_2x_x0_1669] : $float<8,23>
    // 			$phi speed_err_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_21 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 662
    // ($cast ($float<8,23>) iNsTr_21 )
    $intermediate $W[type_cast_1682_wire] : $float<8,23>
    // speed_err_prevx_x0
    $W[speed_err_prevx_x0_1676] : $float<8,23>
    // 			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_49 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 663
    // ($cast ($float<8,23>) iNsTr_49 )
    $intermediate $W[type_cast_1689_wire] : $float<8,23>
    // theta_prevx_x0
    $W[theta_prevx_x0_1683] : $float<8,23>
    // 			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp31 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 664
    // ($cast ($float<8,23>) phitmp31 )
    $intermediate $W[type_cast_1696_wire] : $float<8,23>
    // flux_rotor_prevx_x0
    $W[flux_rotor_prevx_x0_1690] : $float<8,23>
    // 			$phi spd_lpf_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 665
    // ($cast ($float<8,23>) phitmp )
    $intermediate $W[type_cast_1703_wire] : $float<8,23>
    // spd_lpf_prevx_x0
    $W[spd_lpf_prevx_x0_1697] : $float<8,23>
    // 			$phi int_speed_err_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_24 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 666
    // ($cast ($float<8,23>) iNsTr_24 )
    $intermediate $W[type_cast_1710_wire] : $float<8,23>
    // int_speed_err_prevx_x0
    $W[int_speed_err_prevx_x0_1704] : $float<8,23>
    // 			$phi speed_refx_x1 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) speed_refx_x0 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 667
    // ($cast ($float<8,23>) speed_refx_x0 )
    $intermediate $W[type_cast_1717_wire] : $float<8,23>
    // speed_refx_x1
    $W[speed_refx_x1_1711] : $float<8,23>
    // 		iNsTr_2 := in_data
    //  file prog.aa, line 669
    // iNsTr_2
    $W[iNsTr_2_1721] : $float<8,23>
    // 		iNsTr_4 := in_data
    //  file prog.aa, line 670
    // iNsTr_4
    $W[iNsTr_4_1724] : $float<8,23>
    // 		iNsTr_6 := in_data
    //  file prog.aa, line 671
    // iNsTr_6
    $W[iNsTr_6_1727] : $float<8,23>
    // 		iNsTr_8 := in_data
    //  file prog.aa, line 672
    // iNsTr_8
    $W[iNsTr_8_1730] : $float<8,23>
    // 		iNsTr_10 := in_data
    //  file prog.aa, line 673
    // iNsTr_10
    $W[iNsTr_10_1733] : $float<8,23>
    // 		iNsTr_11 := (speed_refx_x1 < iNsTr_8)
    //  file prog.aa, line 675
    // iNsTr_11
    $W[iNsTr_11_1738] : $int<1>
    // if statement  
    //  file prog.aa, line 676
    // 		iNsTr_13 := ($cast ($float<11,52>) speed_refx_x1 )
    //  file prog.aa, line 680
    // iNsTr_13
    $W[iNsTr_13_1750] : $float<11,52>
    // 		iNsTr_14 := (iNsTr_13 + ($bitcast ($float<11,52>) _f5.000000e-02 ))
    //  file prog.aa, line 681
    // iNsTr_14
    $W[iNsTr_14_1756] : $float<11,52>
    // 		iNsTr_15 := ($cast ($float<8,23>) iNsTr_14 )
    //  file prog.aa, line 682
    // iNsTr_15
    $W[iNsTr_15_1760] : $float<8,23>
    // 		iNsTr_17 := (speed_refx_x1 > iNsTr_8)
    //  file prog.aa, line 688
    // iNsTr_17
    $W[iNsTr_17_1767] : $int<1>
    // if statement  
    //  file prog.aa, line 689
    // 		iNsTr_28 := ($cast ($float<11,52>) speed_refx_x1 )
    //  file prog.aa, line 693
    // iNsTr_28
    $W[iNsTr_28_1778] : $float<11,52>
    // 		iNsTr_29 := (iNsTr_28 + ($bitcast ($float<11,52>) _f-5.000000e-02 ))
    //  file prog.aa, line 694
    // iNsTr_29
    $W[iNsTr_29_1784] : $float<11,52>
    // 		iNsTr_30 := ($cast ($float<8,23>) iNsTr_29 )
    //  file prog.aa, line 695
    // iNsTr_30
    $W[iNsTr_30_1788] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 698
    // 			$phi speed_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_15 ) $on bb_2_bb_5			  ($cast ($float<8,23>) iNsTr_30 ) $on bb_4_bb_5			  ($cast ($float<8,23>) speed_refx_x1 ) $on bb_3_bb_5 // type of target is $float<8,23>
    //  file prog.aa, line 699
    // ($cast ($float<8,23>) iNsTr_15 )
    $intermediate $W[type_cast_1794_wire] : $float<8,23>
    // ($cast ($float<8,23>) iNsTr_30 )
    $intermediate $W[type_cast_1796_wire] : $float<8,23>
    // ($cast ($float<8,23>) speed_refx_x1 )
    $intermediate $W[type_cast_1798_wire] : $float<8,23>
    // speed_refx_x0
    $W[speed_refx_x0_1791] : $float<8,23>
    // 		iNsTr_19 := (iNsTr_6 * ($bitcast ($float<8,23>) _f7.000000e-01 ))
    //  file prog.aa, line 701
    // iNsTr_19
    $W[iNsTr_19_1805] : $float<8,23>
    // 		iNsTr_20 := (iNsTr_19 + spd_lpf_prevx_x0)
    //  file prog.aa, line 702
    // iNsTr_20
    $W[iNsTr_20_1810] : $float<8,23>
    // 		iNsTr_21 := (speed_refx_x0 - iNsTr_20)
    //  file prog.aa, line 703
    // iNsTr_21
    $W[iNsTr_21_1815] : $float<8,23>
    // 		iNsTr_22 := (iNsTr_21 + speed_err_prevx_x0)
    //  file prog.aa, line 704
    // iNsTr_22
    $W[iNsTr_22_1820] : $float<8,23>
    // 		iNsTr_23 := (iNsTr_22 * ($bitcast ($float<8,23>) _f2.500000e-04 ))
    //  file prog.aa, line 705
    // iNsTr_23
    $W[iNsTr_23_1826] : $float<8,23>
    // 		iNsTr_24 := (iNsTr_23 + int_speed_err_prevx_x0)
    //  file prog.aa, line 706
    // iNsTr_24
    $W[iNsTr_24_1831] : $float<8,23>
    // 		iNsTr_25 := ($cast ($float<11,52>) iNsTr_24 )
    //  file prog.aa, line 707
    // iNsTr_25
    $W[iNsTr_25_1835] : $float<11,52>
    // 		iNsTr_26 := (iNsTr_25 < ($bitcast ($float<11,52>) _f-1.000000e+01 ))
    //  file prog.aa, line 709
    // iNsTr_26
    $W[iNsTr_26_1841] : $int<1>
    // if statement  
    //  file prog.aa, line 710
    // 		iNsTr_36 := (iNsTr_25 > ($bitcast ($float<11,52>) _f1.000000e+01 ))
    //  file prog.aa, line 715
    // iNsTr_36
    $W[iNsTr_36_1854] : $int<1>
    // if statement  
    //  file prog.aa, line 716
    // merge-statement  
    //  file prog.aa, line 722
    // 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_24 ) $on bb_7_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+01 ) ) $on bb_5_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+01 ) ) $on bb_6_bb_8 // type of target is $float<8,23>
    //  file prog.aa, line 723
    // ($cast ($float<8,23>) iNsTr_24 )
    $intermediate $W[type_cast_1867_wire] : $float<8,23>
    // int_speed_errx_x0
    $W[int_speed_errx_x0_1864] : $float<8,23>
    // 		iNsTr_32 := (iNsTr_21 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
    //  file prog.aa, line 725
    // iNsTr_32
    $W[iNsTr_32_1880] : $float<8,23>
    // 		iNsTr_33 := (int_speed_errx_x0 + iNsTr_32)
    //  file prog.aa, line 726
    // iNsTr_33
    $W[iNsTr_33_1885] : $float<8,23>
    // 		iNsTr_34 := (iNsTr_33 < ($bitcast ($float<8,23>) _f-2.000000e+01 ))
    //  file prog.aa, line 728
    // iNsTr_34
    $W[iNsTr_34_1891] : $int<1>
    // if statement  
    //  file prog.aa, line 729
    // 		iNsTr_43 := (iNsTr_33 > ($bitcast ($float<8,23>) _f2.000000e+01 ))
    //  file prog.aa, line 734
    // iNsTr_43
    $W[iNsTr_43_1904] : $int<1>
    // if statement  
    //  file prog.aa, line 735
    // 		phitmp32 := (iNsTr_33 * ($bitcast ($float<8,23>) _f3.465703e-01 ))
    //  file prog.aa, line 739
    // phitmp32
    $W[phitmp32_1917] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 742
    // 			$phi torque_refx_x0 := 			  ($cast ($float<8,23>) phitmp32 ) $on bb_10_bb_11			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-6.931406e+00 ) ) $on bb_8_bb_11			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f6.931406e+00 ) ) $on bb_9_bb_11 // type of target is $float<8,23>
    //  file prog.aa, line 743
    // ($cast ($float<8,23>) phitmp32 )
    $intermediate $W[type_cast_1923_wire] : $float<8,23>
    // torque_refx_x0
    $W[torque_refx_x0_1920] : $float<8,23>
    // 		iNsTr_38 := (iNsTr_2 * ($bitcast ($float<8,23>) _f3.886080e-04 ))
    //  file prog.aa, line 745
    // iNsTr_38
    $W[iNsTr_38_1936] : $float<8,23>
    // 		iNsTr_39 := (iNsTr_38 + flux_rotor_prevx_x0)
    //  file prog.aa, line 746
    // iNsTr_39
    $W[iNsTr_39_1941] : $float<8,23>
    // 		iNsTr_40 := (iNsTr_4 * ($bitcast ($float<8,23>) _f7.790627e+00 ))
    //  file prog.aa, line 747
    // iNsTr_40
    $W[iNsTr_40_1947] : $float<8,23>
    // 		tmp10x_xix_xi1 := ($bitcast ($uint<32>) iNsTr_40 )
    //  file prog.aa, line 748
    // tmp10x_xix_xi1
    $W[tmp10x_xix_xi1_1951] : $int<32>
    // 		tmp6x_xix_xi2 := ($bitcast ($uint<32>) iNsTr_39 )
    //  file prog.aa, line 749
    // tmp6x_xix_xi2
    $W[tmp6x_xix_xi2_1955] : $int<32>
    // 		iNsTr_41 := (iNsTr_40 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 751
    // iNsTr_41
    $W[iNsTr_41_1961] : $int<1>
    // if statement  
    //  file prog.aa, line 752
    // 		iNsTr_52 := (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 756
    // iNsTr_52
    $W[iNsTr_52_1974] : $int<32>
    // 		iNsTr_53 := (iNsTr_52 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 757
    // iNsTr_53
    $W[iNsTr_53_1980] : $int<32>
    // 		iNsTr_54 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 758
    // iNsTr_54
    $W[iNsTr_54_1986] : $int<32>
    // 		iNsTr_55 := (iNsTr_54 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 759
    // iNsTr_55
    $W[iNsTr_55_1992] : $int<32>
    // 		iNsTr_56 := (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 760
    // iNsTr_56
    $W[iNsTr_56_1998] : $int<32>
    // 		iNsTr_57 := (iNsTr_56 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 761
    // iNsTr_57
    $W[iNsTr_57_2004] : $int<32>
    // 		iNsTr_58 := (iNsTr_57 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 762
    // iNsTr_58
    $W[iNsTr_58_2010] : $int<32>
    // 		iNsTr_59 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 763
    // iNsTr_59
    $W[iNsTr_59_2016] : $int<32>
    // 		iNsTr_60 := (iNsTr_59 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 764
    // iNsTr_60
    $W[iNsTr_60_2022] : $int<32>
    // 		iNsTr_61 := (iNsTr_60 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 765
    // iNsTr_61
    $W[iNsTr_61_2028] : $int<32>
    // 		iNsTr_62 := (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
    //  file prog.aa, line 766
    // iNsTr_62
    $W[iNsTr_62_2033] : $int<32>
    // 		iNsTr_63 := (iNsTr_62 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 767
    // iNsTr_63
    $W[iNsTr_63_2039] : $int<32>
    // 		iNsTr_64 := (iNsTr_53 - iNsTr_55)
    //  file prog.aa, line 768
    // iNsTr_64
    $W[iNsTr_64_2044] : $int<32>
    // switch-statement  
    //  file prog.aa, line 769
    $W[expr_2047_wire_constant_cmp] : $int<1>
    $W[expr_2050_wire_constant_cmp] : $int<1>
    // merge-statement  
    //  file prog.aa, line 782
    // 			$phi xx_x016x_xix_xix_xi3 := 			  ($cast ($uint<32>) iNsTr_137 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) iNsTr_58 ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
    //  file prog.aa, line 783
    // ($cast ($uint<32>) iNsTr_137 )
    $intermediate $W[type_cast_2061_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_58 )
    $intermediate $W[type_cast_2063_wire] : $int<32>
    // xx_x016x_xix_xix_xi3
    $W[xx_x016x_xix_xix_xi3_2058] : $int<32>
    // 			$phi quotientx_x05x_xix_xix_xi4 := 			  ($cast ($uint<32>) iNsTr_136 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
    //  file prog.aa, line 784
    // ($cast ($uint<32>) iNsTr_136 )
    $intermediate $W[type_cast_2067_wire] : $int<32>
    // quotientx_x05x_xix_xix_xi4
    $W[quotientx_x05x_xix_xix_xi4_2064] : $int<32>
    // 		iNsTr_108 := (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 786
    // iNsTr_108
    $W[iNsTr_108_2077] : $int<32>
    // 		iNsTr_109 := (iNsTr_108 > iNsTr_61)
    //  file prog.aa, line 788
    // iNsTr_109
    $W[iNsTr_109_2082] : $int<1>
    // if statement  
    //  file prog.aa, line 789
    // merge-statement  
    //  file prog.aa, line 795
    // 			$phi shifted_divisorx_x03x_xix_xix_xi6 := 			  ($cast ($uint<32>) iNsTr_162 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) iNsTr_61 ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
    //  file prog.aa, line 796
    // ($cast ($uint<32>) iNsTr_162 )
    $intermediate $W[type_cast_2095_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_61 )
    $intermediate $W[type_cast_2097_wire] : $int<32>
    // shifted_divisorx_x03x_xix_xix_xi6
    $W[shifted_divisorx_x03x_xix_xix_xi6_2092] : $int<32>
    // 			$phi curr_quotientx_x02x_xix_xix_xi7 := 			  ($cast ($uint<32>) iNsTr_163 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
    //  file prog.aa, line 797
    // ($cast ($uint<32>) iNsTr_163 )
    $intermediate $W[type_cast_2101_wire] : $int<32>
    // curr_quotientx_x02x_xix_xix_xi7
    $W[curr_quotientx_x02x_xix_xix_xi7_2098] : $int<32>
    // 		iNsTr_162 := (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 799
    // iNsTr_162
    $W[iNsTr_162_2111] : $int<32>
    // 		iNsTr_163 := (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 800
    // iNsTr_163
    $W[iNsTr_163_2117] : $int<32>
    // 		iNsTr_164 := (iNsTr_162 < iNsTr_108)
    //  file prog.aa, line 802
    // iNsTr_164
    $W[iNsTr_164_2122] : $int<1>
    // if statement  
    //  file prog.aa, line 803
    // merge-statement  
    //  file prog.aa, line 805
    // 			$phi xx_xlcssa13 := 			  ($cast ($uint<32>) iNsTr_163 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 806
    // ($cast ($uint<32>) iNsTr_163 )
    $intermediate $W[type_cast_2133_wire] : $int<32>
    // xx_xlcssa13
    $W[xx_xlcssa13_2130] : $int<32>
    // 			$phi xx_xlcssa12 := 			  ($cast ($uint<32>) iNsTr_162 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 807
    // ($cast ($uint<32>) iNsTr_162 )
    $intermediate $W[type_cast_2137_wire] : $int<32>
    // xx_xlcssa12
    $W[xx_xlcssa12_2134] : $int<32>
    // merge-statement  
    //  file prog.aa, line 811
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi9 := 			  ($cast ($uint<32>) iNsTr_61 ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa12 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
    //  file prog.aa, line 812
    // ($cast ($uint<32>) iNsTr_61 )
    $intermediate $W[type_cast_2144_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa12 )
    $intermediate $W[type_cast_2146_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xix_xix_xi9
    $W[shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2141] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi10 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa13 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
    //  file prog.aa, line 813
    // ($cast ($uint<32>) xx_xlcssa13 )
    $intermediate $W[type_cast_2153_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xix_xix_xi10
    $W[curr_quotientx_x0x_xlcssax_xix_xix_xi10_2147] : $int<32>
    // 		iNsTr_136 := (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
    //  file prog.aa, line 815
    // iNsTr_136
    $W[iNsTr_136_2159] : $int<32>
    // 		iNsTr_137 := (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
    //  file prog.aa, line 816
    // iNsTr_137
    $W[iNsTr_137_2164] : $int<32>
    // 		iNsTr_138 := (iNsTr_137 < iNsTr_61)
    //  file prog.aa, line 818
    // iNsTr_138
    $W[iNsTr_138_2169] : $int<1>
    // if statement  
    //  file prog.aa, line 819
    // merge-statement  
    //  file prog.aa, line 821
    // 			$phi xx_xlcssa14 := 			  ($cast ($uint<32>) iNsTr_136 ) $on xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 822
    // ($cast ($uint<32>) iNsTr_136 )
    $intermediate $W[type_cast_2180_wire] : $int<32>
    // xx_xlcssa14
    $W[xx_xlcssa14_2177] : $int<32>
    // merge-statement  
    //  file prog.aa, line 826
    // 			$phi xx_x0x_xix_xix_xi12 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_12_xx_xloopexitx_xix_xix_xi13			  ($cast ($uint<32>) xx_xlcssa14 ) $on xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 // type of target is $uint<32>
    //  file prog.aa, line 827
    // ($cast ($uint<32>) xx_xlcssa14 )
    $intermediate $W[type_cast_2190_wire] : $int<32>
    // xx_x0x_xix_xix_xi12
    $W[xx_x0x_xix_xix_xi12_2184] : $int<32>
    // merge-statement  
    //  file prog.aa, line 831
    // 			$phi tempx_x0x_xphx_xix_xi14 := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi12 ) $on xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16			  ($cast ($uint<32>) iNsTr_58 ) $on bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16 // type of target is $uint<32>
    //  file prog.aa, line 832
    // ($cast ($uint<32>) xx_x0x_xix_xix_xi12 )
    $intermediate $W[type_cast_2197_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_58 )
    $intermediate $W[type_cast_2199_wire] : $int<32>
    // tempx_x0x_xphx_xix_xi14
    $W[tempx_x0x_xphx_xix_xi14_2194] : $int<32>
    // 		iNsTr_92 := (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 834
    // iNsTr_92
    $W[iNsTr_92_2206] : $int<32>
    // 		iNsTr_93 := (iNsTr_92 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 836
    // iNsTr_93
    $W[iNsTr_93_2212] : $int<1>
    // 		iNsTr_94 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 838
    // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 )
    $intermediate $W[type_cast_2215_wire] : $int<32>
    // iNsTr_94
    $W[iNsTr_94_2220] : $int<1>
    // 		orx_xcond11x_xix_xi15 := (iNsTr_93 & iNsTr_94)
    //  file prog.aa, line 839
    // orx_xcond11x_xix_xi15
    $W[orx_xcond11x_xix_xi15_2225] : $int<1>
    // if statement  
    //  file prog.aa, line 840
    // merge-statement  
    //  file prog.aa, line 846
    // 			$phi iNsTr_140 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi19 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
    //  file prog.aa, line 847
    // ($cast ($uint<32>) indvarx_xnextx_xix_xi19 )
    $intermediate $W[type_cast_2238_wire] : $int<32>
    // iNsTr_140
    $W[iNsTr_140_2235] : $int<32>
    // 			$phi tempx_x012x_xix_xi17 := 			  ($cast ($uint<32>) iNsTr_141 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
    //  file prog.aa, line 848
    // ($cast ($uint<32>) iNsTr_141 )
    $intermediate $W[type_cast_2245_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
    $intermediate $W[type_cast_2247_wire] : $int<32>
    // tempx_x012x_xix_xi17
    $W[tempx_x012x_xix_xi17_2242] : $int<32>
    // 		iNsTr_141 := (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 850
    // iNsTr_141
    $W[iNsTr_141_2254] : $int<32>
    // 		iNsTr_142 := (iNsTr_141 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 851
    // iNsTr_142
    $W[iNsTr_142_2260] : $int<32>
    // 		iNsTr_143 := (iNsTr_142 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 853
    // iNsTr_143
    $W[iNsTr_143_2266] : $int<1>
    // 		iNsTr_144 := (($bitcast ($int<32>) iNsTr_141 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 855
    // ($bitcast ($int<32>) iNsTr_141 )
    $intermediate $W[type_cast_2269_wire] : $int<32>
    // iNsTr_144
    $W[iNsTr_144_2274] : $int<1>
    // 		orx_xcondx_xix_xi18 := (iNsTr_143 & iNsTr_144)
    //  file prog.aa, line 856
    // orx_xcondx_xix_xi18
    $W[orx_xcondx_xix_xi18_2279] : $int<1>
    // 		indvarx_xnextx_xix_xi19 := (iNsTr_140 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 857
    // indvarx_xnextx_xix_xi19
    $W[indvarx_xnextx_xix_xi19_2285] : $int<32>
    // if statement  
    //  file prog.aa, line 858
    // merge-statement  
    //  file prog.aa, line 860
    // 			$phi xx_xlcssa11 := 			  ($cast ($uint<32>) iNsTr_141 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25 // type of target is $uint<32>
    //  file prog.aa, line 861
    // ($cast ($uint<32>) iNsTr_141 )
    $intermediate $W[type_cast_2296_wire] : $int<32>
    // xx_xlcssa11
    $W[xx_xlcssa11_2293] : $int<32>
    // 			$phi xx_xlcssa10 := 			  ($cast ($uint<32>) iNsTr_140 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25 // type of target is $uint<32>
    //  file prog.aa, line 862
    // ($cast ($uint<32>) iNsTr_140 )
    $intermediate $W[type_cast_2300_wire] : $int<32>
    // xx_xlcssa10
    $W[xx_xlcssa10_2297] : $int<32>
    // 		xx_xnotx_xi21 := (iNsTr_54 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
    //  file prog.aa, line 864
    // xx_xnotx_xi21
    $W[xx_xnotx_xi21_2307] : $int<32>
    // 		tmp21x_xix_xi22 := (xx_xnotx_xi21 ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 865
    // tmp21x_xix_xi22
    $W[tmp21x_xix_xi22_2313] : $int<32>
    // 		tmp25x_xix_xi23 := (tmp21x_xix_xi22 + iNsTr_53)
    //  file prog.aa, line 866
    // tmp25x_xix_xi23
    $W[tmp25x_xix_xi23_2318] : $int<32>
    // 		tmp26x_xix_xi24 := (tmp25x_xix_xi23 - xx_xlcssa10)
    //  file prog.aa, line 867
    // tmp26x_xix_xi24
    $W[tmp26x_xix_xi24_2323] : $int<32>
    // merge-statement  
    //  file prog.aa, line 870
    // 			$phi expx_x0x_xlcssax_xix_xi26 := 			  ($cast ($uint<32>) tmp26x_xix_xi24 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29			  ($cast ($uint<32>) iNsTr_64 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 // type of target is $uint<32>
    //  file prog.aa, line 871
    // ($cast ($uint<32>) tmp26x_xix_xi24 )
    $intermediate $W[type_cast_2329_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_64 )
    $intermediate $W[type_cast_2331_wire] : $int<32>
    // expx_x0x_xlcssax_xix_xi26
    $W[expx_x0x_xlcssax_xix_xi26_2326] : $int<32>
    // 			$phi tempx_x0x_xlcssax_xix_xi27 := 			  ($cast ($uint<32>) xx_xlcssa11 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 // type of target is $uint<32>
    //  file prog.aa, line 872
    // ($cast ($uint<32>) xx_xlcssa11 )
    $intermediate $W[type_cast_2335_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
    $intermediate $W[type_cast_2337_wire] : $int<32>
    // tempx_x0x_xlcssax_xix_xi27
    $W[tempx_x0x_xlcssax_xix_xi27_2332] : $int<32>
    // 		iNsTr_112 := (tempx_x0x_xlcssax_xix_xi27 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 874
    // iNsTr_112
    $W[iNsTr_112_2344] : $int<32>
    // 		iNsTr_113 := (expx_x0x_xlcssax_xix_xi26 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 875
    // iNsTr_113
    $W[iNsTr_113_2350] : $int<32>
    // 		iNsTr_114 := (iNsTr_113 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 876
    // iNsTr_114
    $W[iNsTr_114_2356] : $int<32>
    // 		iNsTr_115 := (iNsTr_112 | iNsTr_63)
    //  file prog.aa, line 877
    // iNsTr_115
    $W[iNsTr_115_2361] : $int<32>
    // 		iNsTr_116 := (iNsTr_115 | iNsTr_114)
    //  file prog.aa, line 878
    // iNsTr_116
    $W[iNsTr_116_2366] : $int<32>
    // 		tmp3x_xix_xi28 := ($bitcast ($float<8,23>) iNsTr_116 )
    //  file prog.aa, line 879
    // tmp3x_xix_xi28
    $W[tmp3x_xix_xi28_2370] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 882
    // 			$phi iNsTr_46 := 			  ($cast ($float<8,23>) tmp3x_xix_xi28 ) $on xx_xcritedgex_xix_xi29_omega_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_11_omega_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 883
    // ($cast ($float<8,23>) tmp3x_xix_xi28 )
    $intermediate $W[type_cast_2376_wire] : $float<8,23>
    // iNsTr_46
    $W[iNsTr_46_2373] : $float<8,23>
    // 		iNsTr_47 := (iNsTr_46 + iNsTr_10)
    //  file prog.aa, line 885
    // iNsTr_47
    $W[iNsTr_47_2385] : $float<8,23>
    // 		iNsTr_48 := (iNsTr_47 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    //  file prog.aa, line 886
    // iNsTr_48
    $W[iNsTr_48_2391] : $float<8,23>
    // 		iNsTr_49 := (iNsTr_48 + theta_prevx_x0)
    //  file prog.aa, line 887
    // iNsTr_49
    $W[iNsTr_49_2396] : $float<8,23>
    // 		tmp10x_xix_xi := ($bitcast ($uint<32>) torque_refx_x0 )
    //  file prog.aa, line 888
    // tmp10x_xix_xi
    $W[tmp10x_xix_xi_2400] : $int<32>
    // 		iNsTr_50 := (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 890
    // iNsTr_50
    $W[iNsTr_50_2406] : $int<1>
    // if statement  
    //  file prog.aa, line 891
    // 		iNsTr_76 := (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 895
    // iNsTr_76
    $W[iNsTr_76_2419] : $int<32>
    // 		iNsTr_77 := (iNsTr_76 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 896
    // iNsTr_77
    $W[iNsTr_77_2425] : $int<32>
    // 		iNsTr_78 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 897
    // iNsTr_78
    $W[iNsTr_78_2431] : $int<32>
    // 		iNsTr_79 := (iNsTr_78 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 898
    // iNsTr_79
    $W[iNsTr_79_2437] : $int<32>
    // 		iNsTr_80 := (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 899
    // iNsTr_80
    $W[iNsTr_80_2443] : $int<32>
    // 		iNsTr_81 := (iNsTr_80 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 900
    // iNsTr_81
    $W[iNsTr_81_2449] : $int<32>
    // 		iNsTr_82 := (iNsTr_81 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 901
    // iNsTr_82
    $W[iNsTr_82_2455] : $int<32>
    // 		iNsTr_83 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 902
    // iNsTr_83
    $W[iNsTr_83_2461] : $int<32>
    // 		iNsTr_84 := (iNsTr_83 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 903
    // iNsTr_84
    $W[iNsTr_84_2467] : $int<32>
    // 		iNsTr_85 := (iNsTr_84 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 904
    // iNsTr_85
    $W[iNsTr_85_2473] : $int<32>
    // 		iNsTr_86 := (tmp10x_xix_xi ^ tmp6x_xix_xi2)
    //  file prog.aa, line 905
    // iNsTr_86
    $W[iNsTr_86_2478] : $int<32>
    // 		iNsTr_87 := (iNsTr_86 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 906
    // iNsTr_87
    $W[iNsTr_87_2484] : $int<32>
    // 		iNsTr_88 := (iNsTr_77 - iNsTr_79)
    //  file prog.aa, line 907
    // iNsTr_88
    $W[iNsTr_88_2489] : $int<32>
    // switch-statement  
    //  file prog.aa, line 908
    $W[expr_2492_wire_constant_cmp] : $int<1>
    $W[expr_2495_wire_constant_cmp] : $int<1>
    // merge-statement  
    //  file prog.aa, line 921
    // 			$phi xx_x016x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_153 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) iNsTr_82 ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 922
    // ($cast ($uint<32>) iNsTr_153 )
    $intermediate $W[type_cast_2506_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_82 )
    $intermediate $W[type_cast_2508_wire] : $int<32>
    // xx_x016x_xix_xix_xi
    $W[xx_x016x_xix_xix_xi_2503] : $int<32>
    // 			$phi quotientx_x05x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_152 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 923
    // ($cast ($uint<32>) iNsTr_152 )
    $intermediate $W[type_cast_2512_wire] : $int<32>
    // quotientx_x05x_xix_xix_xi
    $W[quotientx_x05x_xix_xix_xi_2509] : $int<32>
    // 		iNsTr_125 := (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 925
    // iNsTr_125
    $W[iNsTr_125_2522] : $int<32>
    // 		iNsTr_126 := (iNsTr_125 > iNsTr_85)
    //  file prog.aa, line 927
    // iNsTr_126
    $W[iNsTr_126_2527] : $int<1>
    // if statement  
    //  file prog.aa, line 928
    // merge-statement  
    //  file prog.aa, line 934
    // 			$phi shifted_divisorx_x03x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_183 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) iNsTr_85 ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 935
    // ($cast ($uint<32>) iNsTr_183 )
    $intermediate $W[type_cast_2540_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_85 )
    $intermediate $W[type_cast_2542_wire] : $int<32>
    // shifted_divisorx_x03x_xix_xix_xi
    $W[shifted_divisorx_x03x_xix_xix_xi_2537] : $int<32>
    // 			$phi curr_quotientx_x02x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_184 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 936
    // ($cast ($uint<32>) iNsTr_184 )
    $intermediate $W[type_cast_2546_wire] : $int<32>
    // curr_quotientx_x02x_xix_xix_xi
    $W[curr_quotientx_x02x_xix_xix_xi_2543] : $int<32>
    // 		iNsTr_183 := (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 938
    // iNsTr_183
    $W[iNsTr_183_2556] : $int<32>
    // 		iNsTr_184 := (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 939
    // iNsTr_184
    $W[iNsTr_184_2562] : $int<32>
    // 		iNsTr_185 := (iNsTr_183 < iNsTr_125)
    //  file prog.aa, line 941
    // iNsTr_185
    $W[iNsTr_185_2567] : $int<1>
    // if statement  
    //  file prog.aa, line 942
    // merge-statement  
    //  file prog.aa, line 944
    // 			$phi xx_xlcssa8 := 			  ($cast ($uint<32>) iNsTr_184 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 945
    // ($cast ($uint<32>) iNsTr_184 )
    $intermediate $W[type_cast_2578_wire] : $int<32>
    // xx_xlcssa8
    $W[xx_xlcssa8_2575] : $int<32>
    // 			$phi xx_xlcssa7 := 			  ($cast ($uint<32>) iNsTr_183 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 946
    // ($cast ($uint<32>) iNsTr_183 )
    $intermediate $W[type_cast_2582_wire] : $int<32>
    // xx_xlcssa7
    $W[xx_xlcssa7_2579] : $int<32>
    // merge-statement  
    //  file prog.aa, line 950
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_85 ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa7 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 951
    // ($cast ($uint<32>) iNsTr_85 )
    $intermediate $W[type_cast_2589_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa7 )
    $intermediate $W[type_cast_2591_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xix_xix_xi
    $W[shifted_divisorx_x0x_xlcssax_xix_xix_xi_2586] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa8 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 952
    // ($cast ($uint<32>) xx_xlcssa8 )
    $intermediate $W[type_cast_2598_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xix_xix_xi
    $W[curr_quotientx_x0x_xlcssax_xix_xix_xi_2592] : $int<32>
    // 		iNsTr_152 := (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
    //  file prog.aa, line 954
    // iNsTr_152
    $W[iNsTr_152_2604] : $int<32>
    // 		iNsTr_153 := (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
    //  file prog.aa, line 955
    // iNsTr_153
    $W[iNsTr_153_2609] : $int<32>
    // 		iNsTr_154 := (iNsTr_153 < iNsTr_85)
    //  file prog.aa, line 957
    // iNsTr_154
    $W[iNsTr_154_2614] : $int<1>
    // if statement  
    //  file prog.aa, line 958
    // merge-statement  
    //  file prog.aa, line 960
    // 			$phi xx_xlcssa9 := 			  ($cast ($uint<32>) iNsTr_152 ) $on xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 961
    // ($cast ($uint<32>) iNsTr_152 )
    $intermediate $W[type_cast_2625_wire] : $int<32>
    // xx_xlcssa9
    $W[xx_xlcssa9_2622] : $int<32>
    // merge-statement  
    //  file prog.aa, line 965
    // 			$phi xx_x0x_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_27_xx_xloopexitx_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa9 ) $on xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 966
    // ($cast ($uint<32>) xx_xlcssa9 )
    $intermediate $W[type_cast_2635_wire] : $int<32>
    // xx_x0x_xix_xix_xi
    $W[xx_x0x_xix_xix_xi_2629] : $int<32>
    // merge-statement  
    //  file prog.aa, line 970
    // 			$phi tempx_x0x_xphx_xix_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi ) $on xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi			  ($cast ($uint<32>) iNsTr_82 ) $on bb_27_udiv32x_xexitx_xpreheaderx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 971
    // ($cast ($uint<32>) xx_x0x_xix_xix_xi )
    $intermediate $W[type_cast_2642_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_82 )
    $intermediate $W[type_cast_2644_wire] : $int<32>
    // tempx_x0x_xphx_xix_xi
    $W[tempx_x0x_xphx_xix_xi_2639] : $int<32>
    // 		iNsTr_104 := (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 973
    // iNsTr_104
    $W[iNsTr_104_2651] : $int<32>
    // 		iNsTr_105 := (iNsTr_104 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 975
    // iNsTr_105
    $W[iNsTr_105_2657] : $int<1>
    // 		iNsTr_106 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 977
    // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi )
    $intermediate $W[type_cast_2660_wire] : $int<32>
    // iNsTr_106
    $W[iNsTr_106_2665] : $int<1>
    // 		orx_xcond11x_xix_xi := (iNsTr_105 & iNsTr_106)
    //  file prog.aa, line 978
    // orx_xcond11x_xix_xi
    $W[orx_xcond11x_xix_xi_2670] : $int<1>
    // if statement  
    //  file prog.aa, line 979
    // merge-statement  
    //  file prog.aa, line 985
    // 			$phi iNsTr_156 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 986
    // ($cast ($uint<32>) indvarx_xnextx_xix_xi )
    $intermediate $W[type_cast_2683_wire] : $int<32>
    // iNsTr_156
    $W[iNsTr_156_2680] : $int<32>
    // 			$phi tempx_x012x_xix_xi := 			  ($cast ($uint<32>) iNsTr_157 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 987
    // ($cast ($uint<32>) iNsTr_157 )
    $intermediate $W[type_cast_2690_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
    $intermediate $W[type_cast_2692_wire] : $int<32>
    // tempx_x012x_xix_xi
    $W[tempx_x012x_xix_xi_2687] : $int<32>
    // 		iNsTr_157 := (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 989
    // iNsTr_157
    $W[iNsTr_157_2699] : $int<32>
    // 		iNsTr_158 := (iNsTr_157 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 990
    // iNsTr_158
    $W[iNsTr_158_2705] : $int<32>
    // 		iNsTr_159 := (iNsTr_158 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 992
    // iNsTr_159
    $W[iNsTr_159_2711] : $int<1>
    // 		iNsTr_160 := (($bitcast ($int<32>) iNsTr_157 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 994
    // ($bitcast ($int<32>) iNsTr_157 )
    $intermediate $W[type_cast_2714_wire] : $int<32>
    // iNsTr_160
    $W[iNsTr_160_2719] : $int<1>
    // 		orx_xcondx_xix_xi := (iNsTr_159 & iNsTr_160)
    //  file prog.aa, line 995
    // orx_xcondx_xix_xi
    $W[orx_xcondx_xix_xi_2724] : $int<1>
    // 		indvarx_xnextx_xix_xi := (iNsTr_156 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 996
    // indvarx_xnextx_xix_xi
    $W[indvarx_xnextx_xix_xi_2730] : $int<32>
    // if statement  
    //  file prog.aa, line 997
    // merge-statement  
    //  file prog.aa, line 999
    // 			$phi xx_xlcssa6 := 			  ($cast ($uint<32>) iNsTr_157 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1000
    // ($cast ($uint<32>) iNsTr_157 )
    $intermediate $W[type_cast_2741_wire] : $int<32>
    // xx_xlcssa6
    $W[xx_xlcssa6_2738] : $int<32>
    // 			$phi xx_xlcssa5 := 			  ($cast ($uint<32>) iNsTr_156 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1001
    // ($cast ($uint<32>) iNsTr_156 )
    $intermediate $W[type_cast_2745_wire] : $int<32>
    // xx_xlcssa5
    $W[xx_xlcssa5_2742] : $int<32>
    // 		xx_xnotx_xi := (iNsTr_78 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
    //  file prog.aa, line 1003
    // xx_xnotx_xi
    $W[xx_xnotx_xi_2752] : $int<32>
    // 		tmp21x_xix_xi := (xx_xnotx_xi ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 1004
    // tmp21x_xix_xi
    $W[tmp21x_xix_xi_2758] : $int<32>
    // 		tmp25x_xix_xi := (iNsTr_77 + tmp21x_xix_xi)
    //  file prog.aa, line 1005
    // tmp25x_xix_xi
    $W[tmp25x_xix_xi_2763] : $int<32>
    // 		tmp26x_xix_xi := (tmp25x_xix_xi - xx_xlcssa5)
    //  file prog.aa, line 1006
    // tmp26x_xix_xi
    $W[tmp26x_xix_xi_2768] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1009
    // 			$phi expx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) tmp26x_xix_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) iNsTr_88 ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1010
    // ($cast ($uint<32>) tmp26x_xix_xi )
    $intermediate $W[type_cast_2774_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_88 )
    $intermediate $W[type_cast_2776_wire] : $int<32>
    // expx_x0x_xlcssax_xix_xi
    $W[expx_x0x_xlcssax_xix_xi_2771] : $int<32>
    // 			$phi tempx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) xx_xlcssa6 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1011
    // ($cast ($uint<32>) xx_xlcssa6 )
    $intermediate $W[type_cast_2780_wire] : $int<32>
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
    $intermediate $W[type_cast_2782_wire] : $int<32>
    // tempx_x0x_xlcssax_xix_xi
    $W[tempx_x0x_xlcssax_xix_xi_2777] : $int<32>
    // 		iNsTr_129 := (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 1013
    // iNsTr_129
    $W[iNsTr_129_2789] : $int<32>
    // 		iNsTr_130 := (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1014
    // iNsTr_130
    $W[iNsTr_130_2795] : $int<32>
    // 		iNsTr_131 := (iNsTr_130 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 1015
    // iNsTr_131
    $W[iNsTr_131_2801] : $int<32>
    // 		iNsTr_132 := (iNsTr_129 | iNsTr_87)
    //  file prog.aa, line 1016
    // iNsTr_132
    $W[iNsTr_132_2806] : $int<32>
    // 		iNsTr_133 := (iNsTr_132 | iNsTr_131)
    //  file prog.aa, line 1017
    // iNsTr_133
    $W[iNsTr_133_2811] : $int<32>
    // 		tmp3x_xix_xi := ($bitcast ($float<8,23>) iNsTr_133 )
    //  file prog.aa, line 1018
    // tmp3x_xix_xi
    $W[tmp3x_xix_xi_2815] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 1021
    // 			$phi iNsTr_67 := 			  ($cast ($float<8,23>) tmp3x_xix_xi ) $on xx_xcritedgex_xix_xi_iq_err_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on omega_calcx_xexit_iq_err_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1022
    // ($cast ($float<8,23>) tmp3x_xix_xi )
    $intermediate $W[type_cast_2821_wire] : $float<8,23>
    // iNsTr_67
    $W[iNsTr_67_2818] : $float<8,23>
    // 		iNsTr_68 := (iNsTr_39 * ($bitcast ($float<8,23>) _f5.014000e-03 ))
    //  file prog.aa, line 1024
    // iNsTr_68
    $W[iNsTr_68_2831] : $float<8,23>
    // 		iNsTr_69 := (iNsTr_68 + flux_rotor_lpf_prevx_x0)
    //  file prog.aa, line 1025
    // iNsTr_69
    $W[iNsTr_69_2836] : $float<8,23>
    // 		iNsTr_70 := (($bitcast ($float<8,23>) _f3.000000e-01 ) - iNsTr_69)
    //  file prog.aa, line 1026
    // iNsTr_70
    $W[iNsTr_70_2842] : $float<8,23>
    // 		iNsTr_71 := (iNsTr_70 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    //  file prog.aa, line 1027
    // iNsTr_71
    $W[iNsTr_71_2848] : $float<8,23>
    // 		iNsTr_72 := (iNsTr_71 + int_flux_err_temp_2x_x0)
    //  file prog.aa, line 1028
    // iNsTr_72
    $W[iNsTr_72_2853] : $float<8,23>
    // 		iNsTr_73 := (iNsTr_72 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
    //  file prog.aa, line 1029
    // iNsTr_73
    $W[iNsTr_73_2859] : $float<8,23>
    // 		iNsTr_74 := (iNsTr_73 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
    //  file prog.aa, line 1031
    // iNsTr_74
    $W[iNsTr_74_2865] : $int<1>
    // if statement  
    //  file prog.aa, line 1032
    // 		iNsTr_100 := (iNsTr_73 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
    //  file prog.aa, line 1037
    // iNsTr_100
    $W[iNsTr_100_2878] : $int<1>
    // if statement  
    //  file prog.aa, line 1038
    // merge-statement  
    //  file prog.aa, line 1044
    // 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_73 ) $on bb_43_bb_44			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_44			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) ) $on bb_42_bb_44 // type of target is $float<8,23>
    //  file prog.aa, line 1045
    // ($cast ($float<8,23>) iNsTr_73 )
    $intermediate $W[type_cast_2891_wire] : $float<8,23>
    // int_flux_errx_x0
    $W[int_flux_errx_x0_2888] : $float<8,23>
    // 		iNsTr_96 := (iNsTr_70 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
    //  file prog.aa, line 1047
    // iNsTr_96
    $W[iNsTr_96_2904] : $float<8,23>
    // 		iNsTr_97 := (int_flux_errx_x0 + iNsTr_96)
    //  file prog.aa, line 1048
    // iNsTr_97
    $W[iNsTr_97_2909] : $float<8,23>
    // 		iNsTr_98 := (iNsTr_97 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
    //  file prog.aa, line 1050
    // iNsTr_98
    $W[iNsTr_98_2915] : $int<1>
    // if statement  
    //  file prog.aa, line 1051
    // 		iNsTr_122 := (iNsTr_97 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
    //  file prog.aa, line 1056
    // iNsTr_122
    $W[iNsTr_122_2928] : $int<1>
    // if statement  
    //  file prog.aa, line 1057
    // 		iNsTr_149 := (iNsTr_97 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 1062
    // iNsTr_149
    $W[iNsTr_149_2941] : $int<1>
    // if statement  
    //  file prog.aa, line 1063
    // merge-statement  
    //  file prog.aa, line 1065
    // 			$phi tmp10x_xi35x_xin := 			  ($cast ($float<8,23>) iNsTr_97 ) $on bb_46_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+00 ) ) $on bb_44_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+00 ) ) $on bb_45_xx_xthread // type of target is $float<8,23>
    //  file prog.aa, line 1066
    // ($cast ($float<8,23>) iNsTr_97 )
    $intermediate $W[type_cast_2952_wire] : $float<8,23>
    // tmp10x_xi35x_xin
    $W[tmp10x_xi35x_xin_2949] : $float<8,23>
    // 		tmp10x_xi35 := ($bitcast ($uint<32>) tmp10x_xi35x_xin )
    //  file prog.aa, line 1068
    // tmp10x_xi35
    $W[tmp10x_xi35_2963] : $int<32>
    // 		iNsTr_118 := (tmp10x_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 1069
    // iNsTr_118
    $W[iNsTr_118_2969] : $int<32>
    // 		iNsTr_119 := (iNsTr_118 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 1070
    // iNsTr_119
    $W[iNsTr_119_2975] : $int<32>
    // 		iNsTr_120 := (iNsTr_119 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 1071
    // iNsTr_120
    $W[iNsTr_120_2981] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1074
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_170 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_120 ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1075
    // ($cast ($uint<32>) iNsTr_170 )
    $intermediate $W[type_cast_2987_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_120 )
    $intermediate $W[type_cast_2989_wire] : $int<32>
    // xx_x016x_xix_xi
    $W[xx_x016x_xix_xi_2984] : $int<32>
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_169 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1076
    // ($cast ($uint<32>) iNsTr_169 )
    $intermediate $W[type_cast_2993_wire] : $int<32>
    // quotientx_x05x_xix_xi
    $W[quotientx_x05x_xix_xi_2990] : $int<32>
    // 		iNsTr_146 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1078
    // iNsTr_146
    $W[iNsTr_146_3003] : $int<32>
    // 		iNsTr_147 := (iNsTr_146 > ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
    //  file prog.aa, line 1080
    // iNsTr_147
    $W[iNsTr_147_3009] : $int<1>
    // if statement  
    //  file prog.aa, line 1081
    // merge-statement  
    //  file prog.aa, line 1087
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_190 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111010000011  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1088
    // ($cast ($uint<32>) iNsTr_190 )
    $intermediate $W[type_cast_3022_wire] : $int<32>
    // shifted_divisorx_x03x_xix_xi
    $W[shifted_divisorx_x03x_xix_xi_3019] : $int<32>
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_191 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1089
    // ($cast ($uint<32>) iNsTr_191 )
    $intermediate $W[type_cast_3029_wire] : $int<32>
    // curr_quotientx_x02x_xix_xi
    $W[curr_quotientx_x02x_xix_xi_3026] : $int<32>
    // 		iNsTr_190 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1091
    // iNsTr_190
    $W[iNsTr_190_3039] : $int<32>
    // 		iNsTr_191 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1092
    // iNsTr_191
    $W[iNsTr_191_3045] : $int<32>
    // 		iNsTr_192 := (iNsTr_190 < iNsTr_146)
    //  file prog.aa, line 1094
    // iNsTr_192
    $W[iNsTr_192_3050] : $int<1>
    // if statement  
    //  file prog.aa, line 1095
    // merge-statement  
    //  file prog.aa, line 1097
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_191 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1098
    // ($cast ($uint<32>) iNsTr_191 )
    $intermediate $W[type_cast_3061_wire] : $int<32>
    // xx_xlcssa3
    $W[xx_xlcssa3_3058] : $int<32>
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_190 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1099
    // ($cast ($uint<32>) iNsTr_190 )
    $intermediate $W[type_cast_3065_wire] : $int<32>
    // xx_xlcssa2
    $W[xx_xlcssa2_3062] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1103
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111010000011  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1104
    // ($cast ($uint<32>) xx_xlcssa2 )
    $intermediate $W[type_cast_3075_wire] : $int<32>
    // shifted_divisorx_x0x_xlcssax_xix_xi
    $W[shifted_divisorx_x0x_xlcssax_xix_xi_3069] : $int<32>
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1105
    // ($cast ($uint<32>) xx_xlcssa3 )
    $intermediate $W[type_cast_3082_wire] : $int<32>
    // curr_quotientx_x0x_xlcssax_xix_xi
    $W[curr_quotientx_x0x_xlcssax_xix_xi_3076] : $int<32>
    // 		iNsTr_169 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 1107
    // iNsTr_169
    $W[iNsTr_169_3088] : $int<32>
    // 		iNsTr_170 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 1108
    // iNsTr_170
    $W[iNsTr_170_3093] : $int<32>
    // 		iNsTr_171 := (iNsTr_170 < ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
    //  file prog.aa, line 1110
    // iNsTr_171
    $W[iNsTr_171_3099] : $int<1>
    // if statement  
    //  file prog.aa, line 1111
    // merge-statement  
    //  file prog.aa, line 1113
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_169 ) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 1114
    // ($cast ($uint<32>) iNsTr_169 )
    $intermediate $W[type_cast_3110_wire] : $int<32>
    // xx_xlcssa4
    $W[xx_xlcssa4_3107] : $int<32>
    // 		iNsTr_194 := (tmp10x_xi35 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1116
    // iNsTr_194
    $W[iNsTr_194_3117] : $int<32>
    // 		iNsTr_195 := (tmp10x_xi35 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 1117
    // iNsTr_195
    $W[iNsTr_195_3123] : $int<32>
    // 		iNsTr_196 := (iNsTr_194 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 1118
    // iNsTr_196
    $W[iNsTr_196_3129] : $int<32>
    // 		iNsTr_197 := (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000010  ))
    //  file prog.aa, line 1119
    // iNsTr_197
    $W[iNsTr_197_3135] : $int<32>
    // 		iNsTr_198 := (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1120
    // iNsTr_198
    $W[iNsTr_198_3141] : $int<32>
    // 		iNsTr_199 := (iNsTr_198 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1122
    // iNsTr_199
    $W[iNsTr_199_3147] : $int<1>
    // 		iNsTr_200 := (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1124
    // ($bitcast ($int<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_3150_wire] : $int<32>
    // iNsTr_200
    $W[iNsTr_200_3155] : $int<1>
    // 		orx_xcond11x_xi := (iNsTr_199 & iNsTr_200)
    //  file prog.aa, line 1125
    // orx_xcond11x_xi
    $W[orx_xcond11x_xi_3160] : $int<1>
    // if statement  
    //  file prog.aa, line 1126
    // merge-statement  
    //  file prog.aa, line 1132
    // 			$phi iNsTr_211 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 1133
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    $intermediate $W[type_cast_3173_wire] : $int<32>
    // iNsTr_211
    $W[iNsTr_211_3170] : $int<32>
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_212 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 1134
    // ($cast ($uint<32>) iNsTr_212 )
    $intermediate $W[type_cast_3180_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_3182_wire] : $int<32>
    // tempx_x012x_xi
    $W[tempx_x012x_xi_3177] : $int<32>
    // 		iNsTr_212 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1136
    // iNsTr_212
    $W[iNsTr_212_3189] : $int<32>
    // 		iNsTr_213 := (iNsTr_212 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1137
    // iNsTr_213
    $W[iNsTr_213_3195] : $int<32>
    // 		iNsTr_214 := (iNsTr_213 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1139
    // iNsTr_214
    $W[iNsTr_214_3201] : $int<1>
    // 		iNsTr_215 := (($bitcast ($int<32>) iNsTr_212 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1141
    // ($bitcast ($int<32>) iNsTr_212 )
    $intermediate $W[type_cast_3204_wire] : $int<32>
    // iNsTr_215
    $W[iNsTr_215_3209] : $int<1>
    // 		orx_xcondx_xi := (iNsTr_214 & iNsTr_215)
    //  file prog.aa, line 1142
    // orx_xcondx_xi
    $W[orx_xcondx_xi_3214] : $int<1>
    // 		indvarx_xnextx_xi := (iNsTr_211 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1143
    // indvarx_xnextx_xi
    $W[indvarx_xnextx_xi_3220] : $int<32>
    // if statement  
    //  file prog.aa, line 1144
    // merge-statement  
    //  file prog.aa, line 1146
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_212 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1147
    // ($cast ($uint<32>) iNsTr_212 )
    $intermediate $W[type_cast_3231_wire] : $int<32>
    // xx_xlcssa1
    $W[xx_xlcssa1_3228] : $int<32>
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_211 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1148
    // ($cast ($uint<32>) iNsTr_211 )
    $intermediate $W[type_cast_3235_wire] : $int<32>
    // xx_xlcssa
    $W[xx_xlcssa_3232] : $int<32>
    // 		tmp25x_xi := (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000001  ))
    //  file prog.aa, line 1150
    // tmp25x_xi
    $W[tmp25x_xi_3242] : $int<32>
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 1151
    // tmp26x_xi
    $W[tmp26x_xi_3247] : $int<32>
    // merge-statement  
    //  file prog.aa, line 1154
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_197 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1155
    // ($cast ($uint<32>) tmp26x_xi )
    $intermediate $W[type_cast_3253_wire] : $int<32>
    // ($cast ($uint<32>) iNsTr_197 )
    $intermediate $W[type_cast_3255_wire] : $int<32>
    // expx_x0x_xlcssax_xi
    $W[expx_x0x_xlcssax_xi_3250] : $int<32>
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1156
    // ($cast ($uint<32>) xx_xlcssa1 )
    $intermediate $W[type_cast_3259_wire] : $int<32>
    // ($cast ($uint<32>) xx_xlcssa4 )
    $intermediate $W[type_cast_3261_wire] : $int<32>
    // tempx_x0x_xlcssax_xi
    $W[tempx_x0x_xlcssax_xi_3256] : $int<32>
    // 		iNsTr_205 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 1158
    // iNsTr_205
    $W[iNsTr_205_3268] : $int<32>
    // 		iNsTr_206 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1159
    // iNsTr_206
    $W[iNsTr_206_3274] : $int<32>
    // 		iNsTr_207 := (iNsTr_206 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 1160
    // iNsTr_207
    $W[iNsTr_207_3280] : $int<32>
    // 		iNsTr_208 := (iNsTr_207 | iNsTr_195)
    //  file prog.aa, line 1161
    // iNsTr_208
    $W[iNsTr_208_3285] : $int<32>
    // 		iNsTr_209 := (iNsTr_208 | iNsTr_205)
    //  file prog.aa, line 1162
    // iNsTr_209
    $W[iNsTr_209_3290] : $int<32>
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_209 )
    //  file prog.aa, line 1163
    // tmp3x_xi
    $W[tmp3x_xi_3294] : $float<8,23>
    // merge-statement  
    //  file prog.aa, line 1166
    // 			$phi iNsTr_173 := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_fdiv32x_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_46_fdiv32x_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1167
    // ($cast ($float<8,23>) tmp3x_xi )
    $intermediate $W[type_cast_3300_wire] : $float<8,23>
    // iNsTr_173
    $W[iNsTr_173_3297] : $float<8,23>
    // 		out_data := iNsTr_173
    //  file prog.aa, line 1169
    // out_data
    // 		out_data := iNsTr_67
    //  file prog.aa, line 1170
    // out_data
    // 		out_data := iNsTr_49
    //  file prog.aa, line 1171
    // out_data
    // 		out_data := iNsTr_39
    //  file prog.aa, line 1172
    // out_data
    // 		phitmp := (iNsTr_20 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
    //  file prog.aa, line 1173
    // phitmp
    $W[phitmp_3322] : $float<8,23>
    // 		phitmp31 := (iNsTr_39 * ($bitcast ($float<8,23>) _f9.995200e-01 ))
    //  file prog.aa, line 1174
    // phitmp31
    $W[phitmp31_3328] : $float<8,23>
    // 		phitmp33 := (iNsTr_69 * ($bitcast ($float<8,23>) _f9.949860e-01 ))
    //  file prog.aa, line 1175
    // phitmp33
    $W[phitmp33_3334] : $float<8,23>
    // datapath-instances for block %vector_control_daemon%body
    //  file prog.aa, line 654
    // data-path instances for merge  
    //  file prog.aa, line 659
    // 			$phi flux_rotor_lpf_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp33 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 660
    // ($cast ($float<8,23>) phitmp33 )
    # := [type_cast_1668_inst] (phitmp33_3334) (type_cast_1668_wire) 
    $delay type_cast_1668_inst 1
    $phi [phi_stmt_1662] (type_cast_1666_wire_constant type_cast_1668_wire) ( flux_rotor_lpf_prevx_x0_1662 )
    // 			$phi int_flux_err_temp_2x_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_72 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 661
    // ($cast ($float<8,23>) iNsTr_72 )
    # := [type_cast_1675_inst] (iNsTr_72_2853) (type_cast_1675_wire) 
    $delay type_cast_1675_inst 1
    $phi [phi_stmt_1669] (type_cast_1673_wire_constant type_cast_1675_wire) ( int_flux_err_temp_2x_x0_1669 )
    // 			$phi speed_err_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_21 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 662
    // ($cast ($float<8,23>) iNsTr_21 )
    # := [type_cast_1682_inst] (iNsTr_21_1815) (type_cast_1682_wire) 
    $delay type_cast_1682_inst 1
    $phi [phi_stmt_1676] (type_cast_1680_wire_constant type_cast_1682_wire) ( speed_err_prevx_x0_1676 )
    // 			$phi theta_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_49 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 663
    // ($cast ($float<8,23>) iNsTr_49 )
    # := [type_cast_1689_inst] (iNsTr_49_2396) (type_cast_1689_wire) 
    $delay type_cast_1689_inst 1
    $phi [phi_stmt_1683] (type_cast_1687_wire_constant type_cast_1689_wire) ( theta_prevx_x0_1683 )
    // 			$phi flux_rotor_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp31 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 664
    // ($cast ($float<8,23>) phitmp31 )
    # := [type_cast_1696_inst] (phitmp31_3328) (type_cast_1696_wire) 
    $delay type_cast_1696_inst 1
    $phi [phi_stmt_1690] (type_cast_1694_wire_constant type_cast_1696_wire) ( flux_rotor_prevx_x0_1690 )
    // 			$phi spd_lpf_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) phitmp ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 665
    // ($cast ($float<8,23>) phitmp )
    # := [type_cast_1703_inst] (phitmp_3322) (type_cast_1703_wire) 
    $delay type_cast_1703_inst 1
    $phi [phi_stmt_1697] (type_cast_1701_wire_constant type_cast_1703_wire) ( spd_lpf_prevx_x0_1697 )
    // 			$phi int_speed_err_prevx_x0 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) iNsTr_24 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 666
    // ($cast ($float<8,23>) iNsTr_24 )
    # := [type_cast_1710_inst] (iNsTr_24_1831) (type_cast_1710_wire) 
    $delay type_cast_1710_inst 1
    $phi [phi_stmt_1704] (type_cast_1708_wire_constant type_cast_1710_wire) ( int_speed_err_prevx_x0_1704 )
    // 			$phi speed_refx_x1 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_0_bb_1			  ($cast ($float<8,23>) speed_refx_x0 ) $on fdiv32x_xexit_bb_1 // type of target is $float<8,23>
    //  file prog.aa, line 667
    // ($cast ($float<8,23>) speed_refx_x0 )
    # := [type_cast_1717_inst] (speed_refx_x0_1791) (type_cast_1717_wire) 
    $delay type_cast_1717_inst 1
    $phi [phi_stmt_1711] (type_cast_1715_wire_constant type_cast_1717_wire) ( speed_refx_x1_1711 )
    // 		iNsTr_2 := in_data
    //  file prog.aa, line 669
    // in_data
    $ioport $in [RPIPE_in_data_1720_inst] (in_data) (iNsTr_2_1721) 
    // 		iNsTr_4 := in_data
    //  file prog.aa, line 670
    // in_data
    $ioport $in [RPIPE_in_data_1723_inst] (in_data) (iNsTr_4_1724) 
    // 		iNsTr_6 := in_data
    //  file prog.aa, line 671
    // in_data
    $ioport $in [RPIPE_in_data_1726_inst] (in_data) (iNsTr_6_1727) 
    // 		iNsTr_8 := in_data
    //  file prog.aa, line 672
    // in_data
    $ioport $in [RPIPE_in_data_1729_inst] (in_data) (iNsTr_8_1730) 
    // 		iNsTr_10 := in_data
    //  file prog.aa, line 673
    // in_data
    $ioport $in [RPIPE_in_data_1732_inst] (in_data) (iNsTr_10_1733) 
    // 		iNsTr_11 := (speed_refx_x1 < iNsTr_8)
    //  file prog.aa, line 675
    // (speed_refx_x1 < iNsTr_8)
    $S<$S[SLT_f32_u1_1737_inst] (speed_refx_x1_1711 iNsTr_8_1730) (iNsTr_11_1738) 
    $delay SLT_f32_u1_1737_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 676
    ==0? [if_stmt_1739_branch] (iNsTr_11_1738)
    // 		iNsTr_13 := ($cast ($float<11,52>) speed_refx_x1 )
    //  file prog.aa, line 680
    // ($cast ($float<11,52>) speed_refx_x1 )
    $F:=$F [type_cast_1749_inst] (speed_refx_x1_1711) (iNsTr_13_1750)  
    $delay type_cast_1749_inst 1
    // 		iNsTr_14 := (iNsTr_13 + ($bitcast ($float<11,52>) _f5.000000e-02 ))
    //  file prog.aa, line 681
    // (iNsTr_13 + ($bitcast ($float<11,52>) _f5.000000e-02 ))
    +[ADD_f64_f64_1755_inst] (iNsTr_13_1750 type_cast_1754_wire_constant) (iNsTr_14_1756) 
    $delay ADD_f64_f64_1755_inst 24
    // 		iNsTr_15 := ($cast ($float<8,23>) iNsTr_14 )
    //  file prog.aa, line 682
    // ($cast ($float<8,23>) iNsTr_14 )
    $F:=$F [type_cast_1759_inst] (iNsTr_14_1756) (iNsTr_15_1760)  
    $delay type_cast_1759_inst 1
    // 		iNsTr_17 := (speed_refx_x1 > iNsTr_8)
    //  file prog.aa, line 688
    // (speed_refx_x1 > iNsTr_8)
    $S>$S[SGT_f32_u1_1766_inst] (speed_refx_x1_1711 iNsTr_8_1730) (iNsTr_17_1767) 
    $delay SGT_f32_u1_1766_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 689
    ==0? [if_stmt_1768_branch] (iNsTr_17_1767)
    // 		iNsTr_28 := ($cast ($float<11,52>) speed_refx_x1 )
    //  file prog.aa, line 693
    // ($cast ($float<11,52>) speed_refx_x1 )
    $F:=$F [type_cast_1777_inst] (speed_refx_x1_1711) (iNsTr_28_1778)  
    $delay type_cast_1777_inst 1
    // 		iNsTr_29 := (iNsTr_28 + ($bitcast ($float<11,52>) _f-5.000000e-02 ))
    //  file prog.aa, line 694
    // (iNsTr_28 + ($bitcast ($float<11,52>) _f-5.000000e-02 ))
    +[ADD_f64_f64_1783_inst] (iNsTr_28_1778 type_cast_1782_wire_constant) (iNsTr_29_1784) 
    $delay ADD_f64_f64_1783_inst 24
    // 		iNsTr_30 := ($cast ($float<8,23>) iNsTr_29 )
    //  file prog.aa, line 695
    // ($cast ($float<8,23>) iNsTr_29 )
    $F:=$F [type_cast_1787_inst] (iNsTr_29_1784) (iNsTr_30_1788)  
    $delay type_cast_1787_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 698
    // 			$phi speed_refx_x0 := 			  ($cast ($float<8,23>) iNsTr_15 ) $on bb_2_bb_5			  ($cast ($float<8,23>) iNsTr_30 ) $on bb_4_bb_5			  ($cast ($float<8,23>) speed_refx_x1 ) $on bb_3_bb_5 // type of target is $float<8,23>
    //  file prog.aa, line 699
    // ($cast ($float<8,23>) iNsTr_15 )
    # := [type_cast_1794_inst] (iNsTr_15_1760) (type_cast_1794_wire) 
    $delay type_cast_1794_inst 1
    // ($cast ($float<8,23>) iNsTr_30 )
    # := [type_cast_1796_inst] (iNsTr_30_1788) (type_cast_1796_wire) 
    $delay type_cast_1796_inst 1
    // ($cast ($float<8,23>) speed_refx_x1 )
    # := [type_cast_1798_inst] (speed_refx_x1_1711) (type_cast_1798_wire) 
    $delay type_cast_1798_inst 1
    $phi [phi_stmt_1791] (type_cast_1794_wire type_cast_1796_wire type_cast_1798_wire) ( speed_refx_x0_1791 )
    // 		iNsTr_19 := (iNsTr_6 * ($bitcast ($float<8,23>) _f7.000000e-01 ))
    //  file prog.aa, line 701
    // (iNsTr_6 * ($bitcast ($float<8,23>) _f7.000000e-01 ))
    *[MUL_f32_f32_1804_inst] (iNsTr_6_1727 type_cast_1803_wire_constant) (iNsTr_19_1805) 
    $delay MUL_f32_f32_1804_inst 24
    // 		iNsTr_20 := (iNsTr_19 + spd_lpf_prevx_x0)
    //  file prog.aa, line 702
    // (iNsTr_19 + spd_lpf_prevx_x0)
    +[ADD_f32_f32_1809_inst] (iNsTr_19_1805 spd_lpf_prevx_x0_1697) (iNsTr_20_1810) 
    $delay ADD_f32_f32_1809_inst 24
    // 		iNsTr_21 := (speed_refx_x0 - iNsTr_20)
    //  file prog.aa, line 703
    // (speed_refx_x0 - iNsTr_20)
    -[SUB_f32_f32_1814_inst] (speed_refx_x0_1791 iNsTr_20_1810) (iNsTr_21_1815) 
    $delay SUB_f32_f32_1814_inst 24
    // 		iNsTr_22 := (iNsTr_21 + speed_err_prevx_x0)
    //  file prog.aa, line 704
    // (iNsTr_21 + speed_err_prevx_x0)
    +[ADD_f32_f32_1819_inst] (iNsTr_21_1815 speed_err_prevx_x0_1676) (iNsTr_22_1820) 
    $delay ADD_f32_f32_1819_inst 24
    // 		iNsTr_23 := (iNsTr_22 * ($bitcast ($float<8,23>) _f2.500000e-04 ))
    //  file prog.aa, line 705
    // (iNsTr_22 * ($bitcast ($float<8,23>) _f2.500000e-04 ))
    *[MUL_f32_f32_1825_inst] (iNsTr_22_1820 type_cast_1824_wire_constant) (iNsTr_23_1826) 
    $delay MUL_f32_f32_1825_inst 24
    // 		iNsTr_24 := (iNsTr_23 + int_speed_err_prevx_x0)
    //  file prog.aa, line 706
    // (iNsTr_23 + int_speed_err_prevx_x0)
    +[ADD_f32_f32_1830_inst] (iNsTr_23_1826 int_speed_err_prevx_x0_1704) (iNsTr_24_1831) 
    $delay ADD_f32_f32_1830_inst 24
    // 		iNsTr_25 := ($cast ($float<11,52>) iNsTr_24 )
    //  file prog.aa, line 707
    // ($cast ($float<11,52>) iNsTr_24 )
    $F:=$F [type_cast_1834_inst] (iNsTr_24_1831) (iNsTr_25_1835)  
    $delay type_cast_1834_inst 1
    // 		iNsTr_26 := (iNsTr_25 < ($bitcast ($float<11,52>) _f-1.000000e+01 ))
    //  file prog.aa, line 709
    // (iNsTr_25 < ($bitcast ($float<11,52>) _f-1.000000e+01 ))
    $S<$S[SLT_f64_u1_1840_inst] (iNsTr_25_1835 type_cast_1839_wire_constant) (iNsTr_26_1841) 
    $delay SLT_f64_u1_1840_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 710
    ==0? [if_stmt_1842_branch] (iNsTr_26_1841)
    // 		iNsTr_36 := (iNsTr_25 > ($bitcast ($float<11,52>) _f1.000000e+01 ))
    //  file prog.aa, line 715
    // (iNsTr_25 > ($bitcast ($float<11,52>) _f1.000000e+01 ))
    $S>$S[SGT_f64_u1_1853_inst] (iNsTr_25_1835 type_cast_1852_wire_constant) (iNsTr_36_1854) 
    $delay SGT_f64_u1_1853_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 716
    ==0? [if_stmt_1855_branch] (iNsTr_36_1854)
    // data-path instances for merge  
    //  file prog.aa, line 722
    // 			$phi int_speed_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_24 ) $on bb_7_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+01 ) ) $on bb_5_bb_8			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+01 ) ) $on bb_6_bb_8 // type of target is $float<8,23>
    //  file prog.aa, line 723
    // ($cast ($float<8,23>) iNsTr_24 )
    # := [type_cast_1867_inst] (iNsTr_24_1831) (type_cast_1867_wire) 
    $delay type_cast_1867_inst 1
    $phi [phi_stmt_1864] (type_cast_1867_wire type_cast_1870_wire_constant type_cast_1873_wire_constant) ( int_speed_errx_x0_1864 )
    // 		iNsTr_32 := (iNsTr_21 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
    //  file prog.aa, line 725
    // (iNsTr_21 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
    *[MUL_f32_f32_1879_inst] (iNsTr_21_1815 type_cast_1878_wire_constant) (iNsTr_32_1880) 
    $delay MUL_f32_f32_1879_inst 24
    // 		iNsTr_33 := (int_speed_errx_x0 + iNsTr_32)
    //  file prog.aa, line 726
    // (int_speed_errx_x0 + iNsTr_32)
    +[ADD_f32_f32_1884_inst] (int_speed_errx_x0_1864 iNsTr_32_1880) (iNsTr_33_1885) 
    $delay ADD_f32_f32_1884_inst 24
    // 		iNsTr_34 := (iNsTr_33 < ($bitcast ($float<8,23>) _f-2.000000e+01 ))
    //  file prog.aa, line 728
    // (iNsTr_33 < ($bitcast ($float<8,23>) _f-2.000000e+01 ))
    $S<$S[SLT_f32_u1_1890_inst] (iNsTr_33_1885 type_cast_1889_wire_constant) (iNsTr_34_1891) 
    $delay SLT_f32_u1_1890_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 729
    ==0? [if_stmt_1892_branch] (iNsTr_34_1891)
    // 		iNsTr_43 := (iNsTr_33 > ($bitcast ($float<8,23>) _f2.000000e+01 ))
    //  file prog.aa, line 734
    // (iNsTr_33 > ($bitcast ($float<8,23>) _f2.000000e+01 ))
    $S>$S[SGT_f32_u1_1903_inst] (iNsTr_33_1885 type_cast_1902_wire_constant) (iNsTr_43_1904) 
    $delay SGT_f32_u1_1903_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 735
    ==0? [if_stmt_1905_branch] (iNsTr_43_1904)
    // 		phitmp32 := (iNsTr_33 * ($bitcast ($float<8,23>) _f3.465703e-01 ))
    //  file prog.aa, line 739
    // (iNsTr_33 * ($bitcast ($float<8,23>) _f3.465703e-01 ))
    *[MUL_f32_f32_1916_inst] (iNsTr_33_1885 type_cast_1915_wire_constant) (phitmp32_1917) 
    $delay MUL_f32_f32_1916_inst 24
    // data-path instances for merge  
    //  file prog.aa, line 742
    // 			$phi torque_refx_x0 := 			  ($cast ($float<8,23>) phitmp32 ) $on bb_10_bb_11			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-6.931406e+00 ) ) $on bb_8_bb_11			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f6.931406e+00 ) ) $on bb_9_bb_11 // type of target is $float<8,23>
    //  file prog.aa, line 743
    // ($cast ($float<8,23>) phitmp32 )
    # := [type_cast_1923_inst] (phitmp32_1917) (type_cast_1923_wire) 
    $delay type_cast_1923_inst 1
    $phi [phi_stmt_1920] (type_cast_1923_wire type_cast_1926_wire_constant type_cast_1929_wire_constant) ( torque_refx_x0_1920 )
    // 		iNsTr_38 := (iNsTr_2 * ($bitcast ($float<8,23>) _f3.886080e-04 ))
    //  file prog.aa, line 745
    // (iNsTr_2 * ($bitcast ($float<8,23>) _f3.886080e-04 ))
    *[MUL_f32_f32_1935_inst] (iNsTr_2_1721 type_cast_1934_wire_constant) (iNsTr_38_1936) 
    $delay MUL_f32_f32_1935_inst 24
    // 		iNsTr_39 := (iNsTr_38 + flux_rotor_prevx_x0)
    //  file prog.aa, line 746
    // (iNsTr_38 + flux_rotor_prevx_x0)
    +[ADD_f32_f32_1940_inst] (iNsTr_38_1936 flux_rotor_prevx_x0_1690) (iNsTr_39_1941) 
    $delay ADD_f32_f32_1940_inst 24
    // 		iNsTr_40 := (iNsTr_4 * ($bitcast ($float<8,23>) _f7.790627e+00 ))
    //  file prog.aa, line 747
    // (iNsTr_4 * ($bitcast ($float<8,23>) _f7.790627e+00 ))
    *[MUL_f32_f32_1946_inst] (iNsTr_4_1724 type_cast_1945_wire_constant) (iNsTr_40_1947) 
    $delay MUL_f32_f32_1946_inst 24
    // 		tmp10x_xix_xi1 := ($bitcast ($uint<32>) iNsTr_40 )
    //  file prog.aa, line 748
    // ($bitcast ($uint<32>) iNsTr_40 )
    # := [type_cast_1950_inst] (iNsTr_40_1947) (tmp10x_xix_xi1_1951) 
    $delay type_cast_1950_inst 1
    // 		tmp6x_xix_xi2 := ($bitcast ($uint<32>) iNsTr_39 )
    //  file prog.aa, line 749
    // ($bitcast ($uint<32>) iNsTr_39 )
    # := [type_cast_1954_inst] (iNsTr_39_1941) (tmp6x_xix_xi2_1955) 
    $delay type_cast_1954_inst 1
    // 		iNsTr_41 := (iNsTr_40 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 751
    // (iNsTr_40 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_1960_inst] (iNsTr_40_1947 type_cast_1959_wire_constant) (iNsTr_41_1961) 
    $delay EQ_f32_u1_1960_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 752
    ==0? [if_stmt_1962_branch] (iNsTr_41_1961)
    // 		iNsTr_52 := (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 756
    // (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_1973_inst] (tmp10x_xix_xi1_1951 type_cast_1972_wire_constant) (iNsTr_52_1974) 
    $delay LSHR_u32_u32_1973_inst 1
    // 		iNsTr_53 := (iNsTr_52 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 757
    // (iNsTr_52 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_1979_inst] (iNsTr_52_1974 type_cast_1978_wire_constant) (iNsTr_53_1980) 
    $delay AND_u32_u32_1979_inst 1
    // 		iNsTr_54 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 758
    // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_1985_inst] (tmp6x_xix_xi2_1955 type_cast_1984_wire_constant) (iNsTr_54_1986) 
    $delay LSHR_u32_u32_1985_inst 1
    // 		iNsTr_55 := (iNsTr_54 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 759
    // (iNsTr_54 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_1991_inst] (iNsTr_54_1986 type_cast_1990_wire_constant) (iNsTr_55_1992) 
    $delay AND_u32_u32_1991_inst 1
    // 		iNsTr_56 := (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 760
    // (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_1997_inst] (tmp10x_xix_xi1_1951 type_cast_1996_wire_constant) (iNsTr_56_1998) 
    $delay SHL_u32_u32_1997_inst 1
    // 		iNsTr_57 := (iNsTr_56 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 761
    // (iNsTr_56 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_2003_inst] (iNsTr_56_1998 type_cast_2002_wire_constant) (iNsTr_57_2004) 
    $delay AND_u32_u32_2003_inst 1
    // 		iNsTr_58 := (iNsTr_57 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 762
    // (iNsTr_57 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_2009_inst] (iNsTr_57_2004 type_cast_2008_wire_constant) (iNsTr_58_2010) 
    $delay OR_u32_u32_2009_inst 1
    // 		iNsTr_59 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 763
    // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >>[LSHR_u32_u32_2015_inst] (tmp6x_xix_xi2_1955 type_cast_2014_wire_constant) (iNsTr_59_2016) 
    $delay LSHR_u32_u32_2015_inst 1
    // 		iNsTr_60 := (iNsTr_59 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 764
    // (iNsTr_59 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    &[AND_u32_u32_2021_inst] (iNsTr_59_2016 type_cast_2020_wire_constant) (iNsTr_60_2022) 
    $delay AND_u32_u32_2021_inst 1
    // 		iNsTr_61 := (iNsTr_60 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 765
    // (iNsTr_60 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    |[OR_u32_u32_2027_inst] (iNsTr_60_2022 type_cast_2026_wire_constant) (iNsTr_61_2028) 
    $delay OR_u32_u32_2027_inst 1
    // 		iNsTr_62 := (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
    //  file prog.aa, line 766
    // (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
    ^[XOR_u32_u32_2032_inst] (tmp6x_xix_xi2_1955 tmp10x_xix_xi1_1951) (iNsTr_62_2033) 
    $delay XOR_u32_u32_2032_inst 1
    // 		iNsTr_63 := (iNsTr_62 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 767
    // (iNsTr_62 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_2038_inst] (iNsTr_62_2033 type_cast_2037_wire_constant) (iNsTr_63_2039) 
    $delay AND_u32_u32_2038_inst 1
    // 		iNsTr_64 := (iNsTr_53 - iNsTr_55)
    //  file prog.aa, line 768
    // (iNsTr_53 - iNsTr_55)
    -[SUB_u32_u32_2043_inst] (iNsTr_53_1980 iNsTr_55_1992) (iNsTr_64_2044) 
    $delay SUB_u32_u32_2043_inst 1
    // datapath-instances  for switch  
    //  file prog.aa, line 769
    ==[switch_stmt_2045_select_expr_0] (iNsTr_61_2028 expr_2047_wire_constant) (expr_2047_wire_constant_cmp) 
    ==0? [switch_stmt_2045_branch_0] (expr_2047_wire_constant_cmp)
    ==[switch_stmt_2045_select_expr_1] (iNsTr_61_2028 expr_2050_wire_constant) (expr_2050_wire_constant_cmp) 
    ==0? [switch_stmt_2045_branch_1] (expr_2050_wire_constant_cmp)
    ==0? [switch_stmt_2045_branch_default] (expr_2047_wire_constant_cmp expr_2050_wire_constant_cmp)
    // data-path instances for merge  
    //  file prog.aa, line 782
    // 			$phi xx_x016x_xix_xix_xi3 := 			  ($cast ($uint<32>) iNsTr_137 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) iNsTr_58 ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
    //  file prog.aa, line 783
    // ($cast ($uint<32>) iNsTr_137 )
    # := [type_cast_2061_inst] (iNsTr_137_2164) (type_cast_2061_wire) 
    $delay type_cast_2061_inst 1
    // ($cast ($uint<32>) iNsTr_58 )
    # := [type_cast_2063_inst] (iNsTr_58_2010) (type_cast_2063_wire) 
    $delay type_cast_2063_inst 1
    $phi [phi_stmt_2058] (type_cast_2061_wire type_cast_2063_wire) ( xx_x016x_xix_xix_xi3_2058 )
    // 			$phi quotientx_x05x_xix_xix_xi4 := 			  ($cast ($uint<32>) iNsTr_136 ) $on xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5 // type of target is $uint<32>
    //  file prog.aa, line 784
    // ($cast ($uint<32>) iNsTr_136 )
    # := [type_cast_2067_inst] (iNsTr_136_2159) (type_cast_2067_wire) 
    $delay type_cast_2067_inst 1
    $phi [phi_stmt_2064] (type_cast_2067_wire type_cast_2070_wire_constant) ( quotientx_x05x_xix_xix_xi4_2064 )
    // 		iNsTr_108 := (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 786
    // (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_2076_inst] (xx_x016x_xix_xix_xi3_2058 type_cast_2075_wire_constant) (iNsTr_108_2077) 
    $delay LSHR_u32_u32_2076_inst 1
    // 		iNsTr_109 := (iNsTr_108 > iNsTr_61)
    //  file prog.aa, line 788
    // (iNsTr_108 > iNsTr_61)
    >[UGT_u32_u1_2081_inst] (iNsTr_108_2077 iNsTr_61_2028) (iNsTr_109_2082) 
    $delay UGT_u32_u1_2081_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 789
    ==0? [if_stmt_2083_branch] (iNsTr_109_2082)
    // data-path instances for merge  
    //  file prog.aa, line 795
    // 			$phi shifted_divisorx_x03x_xix_xix_xi6 := 			  ($cast ($uint<32>) iNsTr_162 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) iNsTr_61 ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
    //  file prog.aa, line 796
    // ($cast ($uint<32>) iNsTr_162 )
    # := [type_cast_2095_inst] (iNsTr_162_2111) (type_cast_2095_wire) 
    $delay type_cast_2095_inst 1
    // ($cast ($uint<32>) iNsTr_61 )
    # := [type_cast_2097_inst] (iNsTr_61_2028) (type_cast_2097_wire) 
    $delay type_cast_2097_inst 1
    $phi [phi_stmt_2092] (type_cast_2095_wire type_cast_2097_wire) ( shifted_divisorx_x03x_xix_xix_xi6_2092 )
    // 			$phi curr_quotientx_x02x_xix_xix_xi7 := 			  ($cast ($uint<32>) iNsTr_163 ) $on bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8 // type of target is $uint<32>
    //  file prog.aa, line 797
    // ($cast ($uint<32>) iNsTr_163 )
    # := [type_cast_2101_inst] (iNsTr_163_2117) (type_cast_2101_wire) 
    $delay type_cast_2101_inst 1
    $phi [phi_stmt_2098] (type_cast_2101_wire type_cast_2104_wire_constant) ( curr_quotientx_x02x_xix_xix_xi7_2098 )
    // 		iNsTr_162 := (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 799
    // (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_2110_inst] (shifted_divisorx_x03x_xix_xix_xi6_2092 type_cast_2109_wire_constant) (iNsTr_162_2111) 
    $delay SHL_u32_u32_2110_inst 1
    // 		iNsTr_163 := (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 800
    // (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_2116_inst] (curr_quotientx_x02x_xix_xix_xi7_2098 type_cast_2115_wire_constant) (iNsTr_163_2117) 
    $delay SHL_u32_u32_2116_inst 1
    // 		iNsTr_164 := (iNsTr_162 < iNsTr_108)
    //  file prog.aa, line 802
    // (iNsTr_162 < iNsTr_108)
    <[ULT_u32_u1_2121_inst] (iNsTr_162_2111 iNsTr_108_2077) (iNsTr_164_2122) 
    $delay ULT_u32_u1_2121_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 803
    ==0? [if_stmt_2123_branch] (iNsTr_164_2122)
    // data-path instances for merge  
    //  file prog.aa, line 805
    // 			$phi xx_xlcssa13 := 			  ($cast ($uint<32>) iNsTr_163 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 806
    // ($cast ($uint<32>) iNsTr_163 )
    # := [type_cast_2133_inst] (iNsTr_163_2117) (type_cast_2133_wire) 
    $delay type_cast_2133_inst 1
    $phi [phi_stmt_2130] (type_cast_2133_wire) ( xx_xlcssa13_2130 )
    // 			$phi xx_xlcssa12 := 			  ($cast ($uint<32>) iNsTr_162 ) $on bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 807
    // ($cast ($uint<32>) iNsTr_162 )
    # := [type_cast_2137_inst] (iNsTr_162_2111) (type_cast_2137_wire) 
    $delay type_cast_2137_inst 1
    $phi [phi_stmt_2134] (type_cast_2137_wire) ( xx_xlcssa12_2134 )
    // data-path instances for merge  
    //  file prog.aa, line 811
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi9 := 			  ($cast ($uint<32>) iNsTr_61 ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa12 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
    //  file prog.aa, line 812
    // ($cast ($uint<32>) iNsTr_61 )
    # := [type_cast_2144_inst] (iNsTr_61_2028) (type_cast_2144_wire) 
    $delay type_cast_2144_inst 1
    // ($cast ($uint<32>) xx_xlcssa12 )
    # := [type_cast_2146_inst] (xx_xlcssa12_2134) (type_cast_2146_wire) 
    $delay type_cast_2146_inst 1
    $phi [phi_stmt_2141] (type_cast_2144_wire type_cast_2146_wire) ( shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2141 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi10 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11			  ($cast ($uint<32>) xx_xlcssa13 ) $on xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11 // type of target is $uint<32>
    //  file prog.aa, line 813
    // ($cast ($uint<32>) xx_xlcssa13 )
    # := [type_cast_2153_inst] (xx_xlcssa13_2130) (type_cast_2153_wire) 
    $delay type_cast_2153_inst 1
    $phi [phi_stmt_2147] (type_cast_2151_wire_constant type_cast_2153_wire) ( curr_quotientx_x0x_xlcssax_xix_xix_xi10_2147 )
    // 		iNsTr_136 := (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
    //  file prog.aa, line 815
    // (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
    +[ADD_u32_u32_2158_inst] (curr_quotientx_x0x_xlcssax_xix_xix_xi10_2147 quotientx_x05x_xix_xix_xi4_2064) (iNsTr_136_2159) 
    $delay ADD_u32_u32_2158_inst 1
    // 		iNsTr_137 := (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
    //  file prog.aa, line 816
    // (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
    -[SUB_u32_u32_2163_inst] (xx_x016x_xix_xix_xi3_2058 shifted_divisorx_x0x_xlcssax_xix_xix_xi9_2141) (iNsTr_137_2164) 
    $delay SUB_u32_u32_2163_inst 1
    // 		iNsTr_138 := (iNsTr_137 < iNsTr_61)
    //  file prog.aa, line 818
    // (iNsTr_137 < iNsTr_61)
    <[ULT_u32_u1_2168_inst] (iNsTr_137_2164 iNsTr_61_2028) (iNsTr_138_2169) 
    $delay ULT_u32_u1_2168_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 819
    ==0? [if_stmt_2170_branch] (iNsTr_138_2169)
    // data-path instances for merge  
    //  file prog.aa, line 821
    // 			$phi xx_xlcssa14 := 			  ($cast ($uint<32>) iNsTr_136 ) $on xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 822
    // ($cast ($uint<32>) iNsTr_136 )
    # := [type_cast_2180_inst] (iNsTr_136_2159) (type_cast_2180_wire) 
    $delay type_cast_2180_inst 1
    $phi [phi_stmt_2177] (type_cast_2180_wire) ( xx_xlcssa14_2177 )
    // data-path instances for merge  
    //  file prog.aa, line 826
    // 			$phi xx_x0x_xix_xix_xi12 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_12_xx_xloopexitx_xix_xix_xi13			  ($cast ($uint<32>) xx_xlcssa14 ) $on xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13 // type of target is $uint<32>
    //  file prog.aa, line 827
    // ($cast ($uint<32>) xx_xlcssa14 )
    # := [type_cast_2190_inst] (xx_xlcssa14_2177) (type_cast_2190_wire) 
    $delay type_cast_2190_inst 1
    $phi [phi_stmt_2184] (type_cast_2188_wire_constant type_cast_2190_wire) ( xx_x0x_xix_xix_xi12_2184 )
    // data-path instances for merge  
    //  file prog.aa, line 831
    // 			$phi tempx_x0x_xphx_xix_xi14 := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi12 ) $on xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16			  ($cast ($uint<32>) iNsTr_58 ) $on bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16 // type of target is $uint<32>
    //  file prog.aa, line 832
    // ($cast ($uint<32>) xx_x0x_xix_xix_xi12 )
    # := [type_cast_2197_inst] (xx_x0x_xix_xix_xi12_2184) (type_cast_2197_wire) 
    $delay type_cast_2197_inst 1
    // ($cast ($uint<32>) iNsTr_58 )
    # := [type_cast_2199_inst] (iNsTr_58_2010) (type_cast_2199_wire) 
    $delay type_cast_2199_inst 1
    $phi [phi_stmt_2194] (type_cast_2197_wire type_cast_2199_wire) ( tempx_x0x_xphx_xix_xi14_2194 )
    // 		iNsTr_92 := (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 834
    // (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_2205_inst] (tempx_x0x_xphx_xix_xi14_2194 type_cast_2204_wire_constant) (iNsTr_92_2206) 
    $delay AND_u32_u32_2205_inst 1
    // 		iNsTr_93 := (iNsTr_92 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 836
    // (iNsTr_92 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_2211_inst] (iNsTr_92_2206 type_cast_2210_wire_constant) (iNsTr_93_2212) 
    $delay EQ_u32_u1_2211_inst 1
    // 		iNsTr_94 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 838
    // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 )
    $S:=$U [type_cast_2215_inst] (tempx_x0x_xphx_xix_xi14_2194) (type_cast_2215_wire)   $flowthrough
    $delay type_cast_2215_inst 0
    // (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_2219_inst] (type_cast_2215_wire type_cast_2218_wire_constant) (iNsTr_94_2220) 
    $delay NEQ_i32_u1_2219_inst 1
    // 		orx_xcond11x_xix_xi15 := (iNsTr_93 & iNsTr_94)
    //  file prog.aa, line 839
    // (iNsTr_93 & iNsTr_94)
    &[AND_u1_u1_2224_inst] (iNsTr_93_2212 iNsTr_94_2220) (orx_xcond11x_xix_xi15_2225) 
    $delay AND_u1_u1_2224_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 840
    ==0? [if_stmt_2226_branch] (orx_xcond11x_xix_xi15_2225)
    // data-path instances for merge  
    //  file prog.aa, line 846
    // 			$phi iNsTr_140 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi19 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
    //  file prog.aa, line 847
    // ($cast ($uint<32>) indvarx_xnextx_xix_xi19 )
    # := [type_cast_2238_inst] (indvarx_xnextx_xix_xi19_2285) (type_cast_2238_wire) 
    $delay type_cast_2238_inst 1
    $phi [phi_stmt_2235] (type_cast_2238_wire type_cast_2241_wire_constant) ( iNsTr_140_2235 )
    // 			$phi tempx_x012x_xix_xi17 := 			  ($cast ($uint<32>) iNsTr_141 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20 // type of target is $uint<32>
    //  file prog.aa, line 848
    // ($cast ($uint<32>) iNsTr_141 )
    # := [type_cast_2245_inst] (iNsTr_141_2254) (type_cast_2245_wire) 
    $delay type_cast_2245_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
    # := [type_cast_2247_inst] (tempx_x0x_xphx_xix_xi14_2194) (type_cast_2247_wire) 
    $delay type_cast_2247_inst 1
    $phi [phi_stmt_2242] (type_cast_2245_wire type_cast_2247_wire) ( tempx_x012x_xix_xi17_2242 )
    // 		iNsTr_141 := (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 850
    // (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_2253_inst] (tempx_x012x_xix_xi17_2242 type_cast_2252_wire_constant) (iNsTr_141_2254) 
    $delay SHL_u32_u32_2253_inst 1
    // 		iNsTr_142 := (iNsTr_141 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 851
    // (iNsTr_141 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_2259_inst] (iNsTr_141_2254 type_cast_2258_wire_constant) (iNsTr_142_2260) 
    $delay AND_u32_u32_2259_inst 1
    // 		iNsTr_143 := (iNsTr_142 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 853
    // (iNsTr_142 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_2265_inst] (iNsTr_142_2260 type_cast_2264_wire_constant) (iNsTr_143_2266) 
    $delay EQ_u32_u1_2265_inst 1
    // 		iNsTr_144 := (($bitcast ($int<32>) iNsTr_141 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 855
    // ($bitcast ($int<32>) iNsTr_141 )
    $S:=$U [type_cast_2269_inst] (iNsTr_141_2254) (type_cast_2269_wire)   $flowthrough
    $delay type_cast_2269_inst 0
    // (($bitcast ($int<32>) iNsTr_141 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_2273_inst] (type_cast_2269_wire type_cast_2272_wire_constant) (iNsTr_144_2274) 
    $delay NEQ_i32_u1_2273_inst 1
    // 		orx_xcondx_xix_xi18 := (iNsTr_143 & iNsTr_144)
    //  file prog.aa, line 856
    // (iNsTr_143 & iNsTr_144)
    &[AND_u1_u1_2278_inst] (iNsTr_143_2266 iNsTr_144_2274) (orx_xcondx_xix_xi18_2279) 
    $delay AND_u1_u1_2278_inst 1
    // 		indvarx_xnextx_xix_xi19 := (iNsTr_140 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 857
    // (iNsTr_140 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_2284_inst] (iNsTr_140_2235 type_cast_2283_wire_constant) (indvarx_xnextx_xix_xi19_2285) 
    $delay ADD_u32_u32_2284_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 858
    ==0? [if_stmt_2286_branch] (orx_xcondx_xix_xi18_2279)
    // data-path instances for merge  
    //  file prog.aa, line 860
    // 			$phi xx_xlcssa11 := 			  ($cast ($uint<32>) iNsTr_141 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25 // type of target is $uint<32>
    //  file prog.aa, line 861
    // ($cast ($uint<32>) iNsTr_141 )
    # := [type_cast_2296_inst] (iNsTr_141_2254) (type_cast_2296_wire) 
    $delay type_cast_2296_inst 1
    $phi [phi_stmt_2293] (type_cast_2296_wire) ( xx_xlcssa11_2293 )
    // 			$phi xx_xlcssa10 := 			  ($cast ($uint<32>) iNsTr_140 ) $on udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25 // type of target is $uint<32>
    //  file prog.aa, line 862
    // ($cast ($uint<32>) iNsTr_140 )
    # := [type_cast_2300_inst] (iNsTr_140_2235) (type_cast_2300_wire) 
    $delay type_cast_2300_inst 1
    $phi [phi_stmt_2297] (type_cast_2300_wire) ( xx_xlcssa10_2297 )
    // 		xx_xnotx_xi21 := (iNsTr_54 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
    //  file prog.aa, line 864
    // (iNsTr_54 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
    |[OR_u32_u32_2306_inst] (iNsTr_54_1986 type_cast_2305_wire_constant) (xx_xnotx_xi21_2307) 
    $delay OR_u32_u32_2306_inst 1
    // 		tmp21x_xix_xi22 := (xx_xnotx_xi21 ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 865
    // (xx_xnotx_xi21 ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    ^[XOR_u32_u32_2312_inst] (xx_xnotx_xi21_2307 type_cast_2311_wire_constant) (tmp21x_xix_xi22_2313) 
    $delay XOR_u32_u32_2312_inst 1
    // 		tmp25x_xix_xi23 := (tmp21x_xix_xi22 + iNsTr_53)
    //  file prog.aa, line 866
    // (tmp21x_xix_xi22 + iNsTr_53)
    +[ADD_u32_u32_2317_inst] (tmp21x_xix_xi22_2313 iNsTr_53_1980) (tmp25x_xix_xi23_2318) 
    $delay ADD_u32_u32_2317_inst 1
    // 		tmp26x_xix_xi24 := (tmp25x_xix_xi23 - xx_xlcssa10)
    //  file prog.aa, line 867
    // (tmp25x_xix_xi23 - xx_xlcssa10)
    -[SUB_u32_u32_2322_inst] (tmp25x_xix_xi23_2318 xx_xlcssa10_2297) (tmp26x_xix_xi24_2323) 
    $delay SUB_u32_u32_2322_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 870
    // 			$phi expx_x0x_xlcssax_xix_xi26 := 			  ($cast ($uint<32>) tmp26x_xix_xi24 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29			  ($cast ($uint<32>) iNsTr_64 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 // type of target is $uint<32>
    //  file prog.aa, line 871
    // ($cast ($uint<32>) tmp26x_xix_xi24 )
    # := [type_cast_2329_inst] (tmp26x_xix_xi24_2323) (type_cast_2329_wire) 
    $delay type_cast_2329_inst 1
    // ($cast ($uint<32>) iNsTr_64 )
    # := [type_cast_2331_inst] (iNsTr_64_2044) (type_cast_2331_wire) 
    $delay type_cast_2331_inst 1
    $phi [phi_stmt_2326] (type_cast_2329_wire type_cast_2331_wire) ( expx_x0x_xlcssax_xix_xi26_2326 )
    // 			$phi tempx_x0x_xlcssax_xix_xi27 := 			  ($cast ($uint<32>) xx_xlcssa11 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 ) $on udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29 // type of target is $uint<32>
    //  file prog.aa, line 872
    // ($cast ($uint<32>) xx_xlcssa11 )
    # := [type_cast_2335_inst] (xx_xlcssa11_2293) (type_cast_2335_wire) 
    $delay type_cast_2335_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
    # := [type_cast_2337_inst] (tempx_x0x_xphx_xix_xi14_2194) (type_cast_2337_wire) 
    $delay type_cast_2337_inst 1
    $phi [phi_stmt_2332] (type_cast_2335_wire type_cast_2337_wire) ( tempx_x0x_xlcssax_xix_xi27_2332 )
    // 		iNsTr_112 := (tempx_x0x_xlcssax_xix_xi27 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 874
    // (tempx_x0x_xlcssax_xix_xi27 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_2343_inst] (tempx_x0x_xlcssax_xix_xi27_2332 type_cast_2342_wire_constant) (iNsTr_112_2344) 
    $delay AND_u32_u32_2343_inst 1
    // 		iNsTr_113 := (expx_x0x_xlcssax_xix_xi26 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 875
    // (expx_x0x_xlcssax_xix_xi26 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_2349_inst] (expx_x0x_xlcssax_xix_xi26_2326 type_cast_2348_wire_constant) (iNsTr_113_2350) 
    $delay SHL_u32_u32_2349_inst 1
    // 		iNsTr_114 := (iNsTr_113 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 876
    // (iNsTr_113 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_2355_inst] (iNsTr_113_2350 type_cast_2354_wire_constant) (iNsTr_114_2356) 
    $delay ADD_u32_u32_2355_inst 1
    // 		iNsTr_115 := (iNsTr_112 | iNsTr_63)
    //  file prog.aa, line 877
    // (iNsTr_112 | iNsTr_63)
    |[OR_u32_u32_2360_inst] (iNsTr_112_2344 iNsTr_63_2039) (iNsTr_115_2361) 
    $delay OR_u32_u32_2360_inst 1
    // 		iNsTr_116 := (iNsTr_115 | iNsTr_114)
    //  file prog.aa, line 878
    // (iNsTr_115 | iNsTr_114)
    |[OR_u32_u32_2365_inst] (iNsTr_115_2361 iNsTr_114_2356) (iNsTr_116_2366) 
    $delay OR_u32_u32_2365_inst 1
    // 		tmp3x_xix_xi28 := ($bitcast ($float<8,23>) iNsTr_116 )
    //  file prog.aa, line 879
    // ($bitcast ($float<8,23>) iNsTr_116 )
    # := [type_cast_2369_inst] (iNsTr_116_2366) (tmp3x_xix_xi28_2370) 
    $delay type_cast_2369_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 882
    // 			$phi iNsTr_46 := 			  ($cast ($float<8,23>) tmp3x_xix_xi28 ) $on xx_xcritedgex_xix_xi29_omega_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_11_omega_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 883
    // ($cast ($float<8,23>) tmp3x_xix_xi28 )
    # := [type_cast_2376_inst] (tmp3x_xix_xi28_2370) (type_cast_2376_wire) 
    $delay type_cast_2376_inst 1
    $phi [phi_stmt_2373] (type_cast_2376_wire type_cast_2379_wire_constant) ( iNsTr_46_2373 )
    // 		iNsTr_47 := (iNsTr_46 + iNsTr_10)
    //  file prog.aa, line 885
    // (iNsTr_46 + iNsTr_10)
    +[ADD_f32_f32_2384_inst] (iNsTr_46_2373 iNsTr_10_1733) (iNsTr_47_2385) 
    $delay ADD_f32_f32_2384_inst 24
    // 		iNsTr_48 := (iNsTr_47 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    //  file prog.aa, line 886
    // (iNsTr_47 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    *[MUL_f32_f32_2390_inst] (iNsTr_47_2385 type_cast_2389_wire_constant) (iNsTr_48_2391) 
    $delay MUL_f32_f32_2390_inst 24
    // 		iNsTr_49 := (iNsTr_48 + theta_prevx_x0)
    //  file prog.aa, line 887
    // (iNsTr_48 + theta_prevx_x0)
    +[ADD_f32_f32_2395_inst] (iNsTr_48_2391 theta_prevx_x0_1683) (iNsTr_49_2396) 
    $delay ADD_f32_f32_2395_inst 24
    // 		tmp10x_xix_xi := ($bitcast ($uint<32>) torque_refx_x0 )
    //  file prog.aa, line 888
    // ($bitcast ($uint<32>) torque_refx_x0 )
    # := [type_cast_2399_inst] (torque_refx_x0_1920) (tmp10x_xix_xi_2400) 
    $delay type_cast_2399_inst 1
    // 		iNsTr_50 := (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 890
    // (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_2405_inst] (torque_refx_x0_1920 type_cast_2404_wire_constant) (iNsTr_50_2406) 
    $delay EQ_f32_u1_2405_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 891
    ==0? [if_stmt_2407_branch] (iNsTr_50_2406)
    // 		iNsTr_76 := (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 895
    // (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_2418_inst] (tmp10x_xix_xi_2400 type_cast_2417_wire_constant) (iNsTr_76_2419) 
    $delay LSHR_u32_u32_2418_inst 1
    // 		iNsTr_77 := (iNsTr_76 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 896
    // (iNsTr_76 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_2424_inst] (iNsTr_76_2419 type_cast_2423_wire_constant) (iNsTr_77_2425) 
    $delay AND_u32_u32_2424_inst 1
    // 		iNsTr_78 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 897
    // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_2430_inst] (tmp6x_xix_xi2_1955 type_cast_2429_wire_constant) (iNsTr_78_2431) 
    $delay LSHR_u32_u32_2430_inst 1
    // 		iNsTr_79 := (iNsTr_78 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 898
    // (iNsTr_78 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_2436_inst] (iNsTr_78_2431 type_cast_2435_wire_constant) (iNsTr_79_2437) 
    $delay AND_u32_u32_2436_inst 1
    // 		iNsTr_80 := (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 899
    // (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_2442_inst] (tmp10x_xix_xi_2400 type_cast_2441_wire_constant) (iNsTr_80_2443) 
    $delay SHL_u32_u32_2442_inst 1
    // 		iNsTr_81 := (iNsTr_80 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 900
    // (iNsTr_80 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_2448_inst] (iNsTr_80_2443 type_cast_2447_wire_constant) (iNsTr_81_2449) 
    $delay AND_u32_u32_2448_inst 1
    // 		iNsTr_82 := (iNsTr_81 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 901
    // (iNsTr_81 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_2454_inst] (iNsTr_81_2449 type_cast_2453_wire_constant) (iNsTr_82_2455) 
    $delay OR_u32_u32_2454_inst 1
    // 		iNsTr_83 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 902
    // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    >>[LSHR_u32_u32_2460_inst] (tmp6x_xix_xi2_1955 type_cast_2459_wire_constant) (iNsTr_83_2461) 
    $delay LSHR_u32_u32_2460_inst 1
    // 		iNsTr_84 := (iNsTr_83 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    //  file prog.aa, line 903
    // (iNsTr_83 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
    &[AND_u32_u32_2466_inst] (iNsTr_83_2461 type_cast_2465_wire_constant) (iNsTr_84_2467) 
    $delay AND_u32_u32_2466_inst 1
    // 		iNsTr_85 := (iNsTr_84 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    //  file prog.aa, line 904
    // (iNsTr_84 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
    |[OR_u32_u32_2472_inst] (iNsTr_84_2467 type_cast_2471_wire_constant) (iNsTr_85_2473) 
    $delay OR_u32_u32_2472_inst 1
    // 		iNsTr_86 := (tmp10x_xix_xi ^ tmp6x_xix_xi2)
    //  file prog.aa, line 905
    // (tmp10x_xix_xi ^ tmp6x_xix_xi2)
    ^[XOR_u32_u32_2477_inst] (tmp10x_xix_xi_2400 tmp6x_xix_xi2_1955) (iNsTr_86_2478) 
    $delay XOR_u32_u32_2477_inst 1
    // 		iNsTr_87 := (iNsTr_86 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 906
    // (iNsTr_86 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_2483_inst] (iNsTr_86_2478 type_cast_2482_wire_constant) (iNsTr_87_2484) 
    $delay AND_u32_u32_2483_inst 1
    // 		iNsTr_88 := (iNsTr_77 - iNsTr_79)
    //  file prog.aa, line 907
    // (iNsTr_77 - iNsTr_79)
    -[SUB_u32_u32_2488_inst] (iNsTr_77_2425 iNsTr_79_2437) (iNsTr_88_2489) 
    $delay SUB_u32_u32_2488_inst 1
    // datapath-instances  for switch  
    //  file prog.aa, line 908
    ==[switch_stmt_2490_select_expr_0] (iNsTr_85_2473 expr_2492_wire_constant) (expr_2492_wire_constant_cmp) 
    ==0? [switch_stmt_2490_branch_0] (expr_2492_wire_constant_cmp)
    ==[switch_stmt_2490_select_expr_1] (iNsTr_85_2473 expr_2495_wire_constant) (expr_2495_wire_constant_cmp) 
    ==0? [switch_stmt_2490_branch_1] (expr_2495_wire_constant_cmp)
    ==0? [switch_stmt_2490_branch_default] (expr_2492_wire_constant_cmp expr_2495_wire_constant_cmp)
    // data-path instances for merge  
    //  file prog.aa, line 921
    // 			$phi xx_x016x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_153 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) iNsTr_82 ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 922
    // ($cast ($uint<32>) iNsTr_153 )
    # := [type_cast_2506_inst] (iNsTr_153_2609) (type_cast_2506_wire) 
    $delay type_cast_2506_inst 1
    // ($cast ($uint<32>) iNsTr_82 )
    # := [type_cast_2508_inst] (iNsTr_82_2455) (type_cast_2508_wire) 
    $delay type_cast_2508_inst 1
    $phi [phi_stmt_2503] (type_cast_2506_wire type_cast_2508_wire) ( xx_x016x_xix_xix_xi_2503 )
    // 			$phi quotientx_x05x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_152 ) $on xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 923
    // ($cast ($uint<32>) iNsTr_152 )
    # := [type_cast_2512_inst] (iNsTr_152_2604) (type_cast_2512_wire) 
    $delay type_cast_2512_inst 1
    $phi [phi_stmt_2509] (type_cast_2512_wire type_cast_2515_wire_constant) ( quotientx_x05x_xix_xix_xi_2509 )
    // 		iNsTr_125 := (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 925
    // (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_2521_inst] (xx_x016x_xix_xix_xi_2503 type_cast_2520_wire_constant) (iNsTr_125_2522) 
    $delay LSHR_u32_u32_2521_inst 1
    // 		iNsTr_126 := (iNsTr_125 > iNsTr_85)
    //  file prog.aa, line 927
    // (iNsTr_125 > iNsTr_85)
    >[UGT_u32_u1_2526_inst] (iNsTr_125_2522 iNsTr_85_2473) (iNsTr_126_2527) 
    $delay UGT_u32_u1_2526_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 928
    ==0? [if_stmt_2528_branch] (iNsTr_126_2527)
    // data-path instances for merge  
    //  file prog.aa, line 934
    // 			$phi shifted_divisorx_x03x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_183 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) iNsTr_85 ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 935
    // ($cast ($uint<32>) iNsTr_183 )
    # := [type_cast_2540_inst] (iNsTr_183_2556) (type_cast_2540_wire) 
    $delay type_cast_2540_inst 1
    // ($cast ($uint<32>) iNsTr_85 )
    # := [type_cast_2542_inst] (iNsTr_85_2473) (type_cast_2542_wire) 
    $delay type_cast_2542_inst 1
    $phi [phi_stmt_2537] (type_cast_2540_wire type_cast_2542_wire) ( shifted_divisorx_x03x_xix_xix_xi_2537 )
    // 			$phi curr_quotientx_x02x_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_184 ) $on bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 936
    // ($cast ($uint<32>) iNsTr_184 )
    # := [type_cast_2546_inst] (iNsTr_184_2562) (type_cast_2546_wire) 
    $delay type_cast_2546_inst 1
    $phi [phi_stmt_2543] (type_cast_2546_wire type_cast_2549_wire_constant) ( curr_quotientx_x02x_xix_xix_xi_2543 )
    // 		iNsTr_183 := (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 938
    // (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_2555_inst] (shifted_divisorx_x03x_xix_xix_xi_2537 type_cast_2554_wire_constant) (iNsTr_183_2556) 
    $delay SHL_u32_u32_2555_inst 1
    // 		iNsTr_184 := (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 939
    // (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_2561_inst] (curr_quotientx_x02x_xix_xix_xi_2543 type_cast_2560_wire_constant) (iNsTr_184_2562) 
    $delay SHL_u32_u32_2561_inst 1
    // 		iNsTr_185 := (iNsTr_183 < iNsTr_125)
    //  file prog.aa, line 941
    // (iNsTr_183 < iNsTr_125)
    <[ULT_u32_u1_2566_inst] (iNsTr_183_2556 iNsTr_125_2522) (iNsTr_185_2567) 
    $delay ULT_u32_u1_2566_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 942
    ==0? [if_stmt_2568_branch] (iNsTr_185_2567)
    // data-path instances for merge  
    //  file prog.aa, line 944
    // 			$phi xx_xlcssa8 := 			  ($cast ($uint<32>) iNsTr_184 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 945
    // ($cast ($uint<32>) iNsTr_184 )
    # := [type_cast_2578_inst] (iNsTr_184_2562) (type_cast_2578_wire) 
    $delay type_cast_2578_inst 1
    $phi [phi_stmt_2575] (type_cast_2578_wire) ( xx_xlcssa8_2575 )
    // 			$phi xx_xlcssa7 := 			  ($cast ($uint<32>) iNsTr_183 ) $on bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 946
    // ($cast ($uint<32>) iNsTr_183 )
    # := [type_cast_2582_inst] (iNsTr_183_2556) (type_cast_2582_wire) 
    $delay type_cast_2582_inst 1
    $phi [phi_stmt_2579] (type_cast_2582_wire) ( xx_xlcssa7_2579 )
    // data-path instances for merge  
    //  file prog.aa, line 950
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) iNsTr_85 ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa7 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 951
    // ($cast ($uint<32>) iNsTr_85 )
    # := [type_cast_2589_inst] (iNsTr_85_2473) (type_cast_2589_wire) 
    $delay type_cast_2589_inst 1
    // ($cast ($uint<32>) xx_xlcssa7 )
    # := [type_cast_2591_inst] (xx_xlcssa7_2579) (type_cast_2591_wire) 
    $delay type_cast_2591_inst 1
    $phi [phi_stmt_2586] (type_cast_2589_wire type_cast_2591_wire) ( shifted_divisorx_x0x_xlcssax_xix_xix_xi_2586 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa8 ) $on xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 952
    // ($cast ($uint<32>) xx_xlcssa8 )
    # := [type_cast_2598_inst] (xx_xlcssa8_2575) (type_cast_2598_wire) 
    $delay type_cast_2598_inst 1
    $phi [phi_stmt_2592] (type_cast_2596_wire_constant type_cast_2598_wire) ( curr_quotientx_x0x_xlcssax_xix_xix_xi_2592 )
    // 		iNsTr_152 := (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
    //  file prog.aa, line 954
    // (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
    +[ADD_u32_u32_2603_inst] (curr_quotientx_x0x_xlcssax_xix_xix_xi_2592 quotientx_x05x_xix_xix_xi_2509) (iNsTr_152_2604) 
    $delay ADD_u32_u32_2603_inst 1
    // 		iNsTr_153 := (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
    //  file prog.aa, line 955
    // (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
    -[SUB_u32_u32_2608_inst] (xx_x016x_xix_xix_xi_2503 shifted_divisorx_x0x_xlcssax_xix_xix_xi_2586) (iNsTr_153_2609) 
    $delay SUB_u32_u32_2608_inst 1
    // 		iNsTr_154 := (iNsTr_153 < iNsTr_85)
    //  file prog.aa, line 957
    // (iNsTr_153 < iNsTr_85)
    <[ULT_u32_u1_2613_inst] (iNsTr_153_2609 iNsTr_85_2473) (iNsTr_154_2614) 
    $delay ULT_u32_u1_2613_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 958
    ==0? [if_stmt_2615_branch] (iNsTr_154_2614)
    // data-path instances for merge  
    //  file prog.aa, line 960
    // 			$phi xx_xlcssa9 := 			  ($cast ($uint<32>) iNsTr_152 ) $on xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 961
    // ($cast ($uint<32>) iNsTr_152 )
    # := [type_cast_2625_inst] (iNsTr_152_2604) (type_cast_2625_wire) 
    $delay type_cast_2625_inst 1
    $phi [phi_stmt_2622] (type_cast_2625_wire) ( xx_xlcssa9_2622 )
    // data-path instances for merge  
    //  file prog.aa, line 965
    // 			$phi xx_x0x_xix_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b11111111111111111111111111111111  ) ) $on bb_27_xx_xloopexitx_xix_xix_xi			  ($cast ($uint<32>) xx_xlcssa9 ) $on xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 966
    // ($cast ($uint<32>) xx_xlcssa9 )
    # := [type_cast_2635_inst] (xx_xlcssa9_2622) (type_cast_2635_wire) 
    $delay type_cast_2635_inst 1
    $phi [phi_stmt_2629] (type_cast_2633_wire_constant type_cast_2635_wire) ( xx_x0x_xix_xix_xi_2629 )
    // data-path instances for merge  
    //  file prog.aa, line 970
    // 			$phi tempx_x0x_xphx_xix_xi := 			  ($cast ($uint<32>) xx_x0x_xix_xix_xi ) $on xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi			  ($cast ($uint<32>) iNsTr_82 ) $on bb_27_udiv32x_xexitx_xpreheaderx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 971
    // ($cast ($uint<32>) xx_x0x_xix_xix_xi )
    # := [type_cast_2642_inst] (xx_x0x_xix_xix_xi_2629) (type_cast_2642_wire) 
    $delay type_cast_2642_inst 1
    // ($cast ($uint<32>) iNsTr_82 )
    # := [type_cast_2644_inst] (iNsTr_82_2455) (type_cast_2644_wire) 
    $delay type_cast_2644_inst 1
    $phi [phi_stmt_2639] (type_cast_2642_wire type_cast_2644_wire) ( tempx_x0x_xphx_xix_xi_2639 )
    // 		iNsTr_104 := (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 973
    // (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_2650_inst] (tempx_x0x_xphx_xix_xi_2639 type_cast_2649_wire_constant) (iNsTr_104_2651) 
    $delay AND_u32_u32_2650_inst 1
    // 		iNsTr_105 := (iNsTr_104 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 975
    // (iNsTr_104 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_2656_inst] (iNsTr_104_2651 type_cast_2655_wire_constant) (iNsTr_105_2657) 
    $delay EQ_u32_u1_2656_inst 1
    // 		iNsTr_106 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 977
    // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi )
    $S:=$U [type_cast_2660_inst] (tempx_x0x_xphx_xix_xi_2639) (type_cast_2660_wire)   $flowthrough
    $delay type_cast_2660_inst 0
    // (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_2664_inst] (type_cast_2660_wire type_cast_2663_wire_constant) (iNsTr_106_2665) 
    $delay NEQ_i32_u1_2664_inst 1
    // 		orx_xcond11x_xix_xi := (iNsTr_105 & iNsTr_106)
    //  file prog.aa, line 978
    // (iNsTr_105 & iNsTr_106)
    &[AND_u1_u1_2669_inst] (iNsTr_105_2657 iNsTr_106_2665) (orx_xcond11x_xix_xi_2670) 
    $delay AND_u1_u1_2669_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 979
    ==0? [if_stmt_2671_branch] (orx_xcond11x_xix_xi_2670)
    // data-path instances for merge  
    //  file prog.aa, line 985
    // 			$phi iNsTr_156 := 			  ($cast ($uint<32>) indvarx_xnextx_xix_xi ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 986
    // ($cast ($uint<32>) indvarx_xnextx_xix_xi )
    # := [type_cast_2683_inst] (indvarx_xnextx_xix_xi_2730) (type_cast_2683_wire) 
    $delay type_cast_2683_inst 1
    $phi [phi_stmt_2680] (type_cast_2683_wire type_cast_2686_wire_constant) ( iNsTr_156_2680 )
    // 			$phi tempx_x012x_xix_xi := 			  ($cast ($uint<32>) iNsTr_157 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 987
    // ($cast ($uint<32>) iNsTr_157 )
    # := [type_cast_2690_inst] (iNsTr_157_2699) (type_cast_2690_wire) 
    $delay type_cast_2690_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
    # := [type_cast_2692_inst] (tempx_x0x_xphx_xix_xi_2639) (type_cast_2692_wire) 
    $delay type_cast_2692_inst 1
    $phi [phi_stmt_2687] (type_cast_2690_wire type_cast_2692_wire) ( tempx_x012x_xix_xi_2687 )
    // 		iNsTr_157 := (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 989
    // (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_2698_inst] (tempx_x012x_xix_xi_2687 type_cast_2697_wire_constant) (iNsTr_157_2699) 
    $delay SHL_u32_u32_2698_inst 1
    // 		iNsTr_158 := (iNsTr_157 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 990
    // (iNsTr_157 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_2704_inst] (iNsTr_157_2699 type_cast_2703_wire_constant) (iNsTr_158_2705) 
    $delay AND_u32_u32_2704_inst 1
    // 		iNsTr_159 := (iNsTr_158 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 992
    // (iNsTr_158 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_2710_inst] (iNsTr_158_2705 type_cast_2709_wire_constant) (iNsTr_159_2711) 
    $delay EQ_u32_u1_2710_inst 1
    // 		iNsTr_160 := (($bitcast ($int<32>) iNsTr_157 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 994
    // ($bitcast ($int<32>) iNsTr_157 )
    $S:=$U [type_cast_2714_inst] (iNsTr_157_2699) (type_cast_2714_wire)   $flowthrough
    $delay type_cast_2714_inst 0
    // (($bitcast ($int<32>) iNsTr_157 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_2718_inst] (type_cast_2714_wire type_cast_2717_wire_constant) (iNsTr_160_2719) 
    $delay NEQ_i32_u1_2718_inst 1
    // 		orx_xcondx_xix_xi := (iNsTr_159 & iNsTr_160)
    //  file prog.aa, line 995
    // (iNsTr_159 & iNsTr_160)
    &[AND_u1_u1_2723_inst] (iNsTr_159_2711 iNsTr_160_2719) (orx_xcondx_xix_xi_2724) 
    $delay AND_u1_u1_2723_inst 1
    // 		indvarx_xnextx_xix_xi := (iNsTr_156 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 996
    // (iNsTr_156 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_2729_inst] (iNsTr_156_2680 type_cast_2728_wire_constant) (indvarx_xnextx_xix_xi_2730) 
    $delay ADD_u32_u32_2729_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 997
    ==0? [if_stmt_2731_branch] (orx_xcondx_xix_xi_2724)
    // data-path instances for merge  
    //  file prog.aa, line 999
    // 			$phi xx_xlcssa6 := 			  ($cast ($uint<32>) iNsTr_157 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1000
    // ($cast ($uint<32>) iNsTr_157 )
    # := [type_cast_2741_inst] (iNsTr_157_2699) (type_cast_2741_wire) 
    $delay type_cast_2741_inst 1
    $phi [phi_stmt_2738] (type_cast_2741_wire) ( xx_xlcssa6_2738 )
    // 			$phi xx_xlcssa5 := 			  ($cast ($uint<32>) iNsTr_156 ) $on udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1001
    // ($cast ($uint<32>) iNsTr_156 )
    # := [type_cast_2745_inst] (iNsTr_156_2680) (type_cast_2745_wire) 
    $delay type_cast_2745_inst 1
    $phi [phi_stmt_2742] (type_cast_2745_wire) ( xx_xlcssa5_2742 )
    // 		xx_xnotx_xi := (iNsTr_78 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
    //  file prog.aa, line 1003
    // (iNsTr_78 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
    |[OR_u32_u32_2751_inst] (iNsTr_78_2431 type_cast_2750_wire_constant) (xx_xnotx_xi_2752) 
    $delay OR_u32_u32_2751_inst 1
    // 		tmp21x_xix_xi := (xx_xnotx_xi ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 1004
    // (xx_xnotx_xi ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    ^[XOR_u32_u32_2757_inst] (xx_xnotx_xi_2752 type_cast_2756_wire_constant) (tmp21x_xix_xi_2758) 
    $delay XOR_u32_u32_2757_inst 1
    // 		tmp25x_xix_xi := (iNsTr_77 + tmp21x_xix_xi)
    //  file prog.aa, line 1005
    // (iNsTr_77 + tmp21x_xix_xi)
    +[ADD_u32_u32_2762_inst] (iNsTr_77_2425 tmp21x_xix_xi_2758) (tmp25x_xix_xi_2763) 
    $delay ADD_u32_u32_2762_inst 1
    // 		tmp26x_xix_xi := (tmp25x_xix_xi - xx_xlcssa5)
    //  file prog.aa, line 1006
    // (tmp25x_xix_xi - xx_xlcssa5)
    -[SUB_u32_u32_2767_inst] (tmp25x_xix_xi_2763 xx_xlcssa5_2742) (tmp26x_xix_xi_2768) 
    $delay SUB_u32_u32_2767_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 1009
    // 			$phi expx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) tmp26x_xix_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) iNsTr_88 ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1010
    // ($cast ($uint<32>) tmp26x_xix_xi )
    # := [type_cast_2774_inst] (tmp26x_xix_xi_2768) (type_cast_2774_wire) 
    $delay type_cast_2774_inst 1
    // ($cast ($uint<32>) iNsTr_88 )
    # := [type_cast_2776_inst] (iNsTr_88_2489) (type_cast_2776_wire) 
    $delay type_cast_2776_inst 1
    $phi [phi_stmt_2771] (type_cast_2774_wire type_cast_2776_wire) ( expx_x0x_xlcssax_xix_xi_2771 )
    // 			$phi tempx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) xx_xlcssa6 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi			  ($cast ($uint<32>) tempx_x0x_xphx_xix_xi ) $on udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1011
    // ($cast ($uint<32>) xx_xlcssa6 )
    # := [type_cast_2780_inst] (xx_xlcssa6_2738) (type_cast_2780_wire) 
    $delay type_cast_2780_inst 1
    // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
    # := [type_cast_2782_inst] (tempx_x0x_xphx_xix_xi_2639) (type_cast_2782_wire) 
    $delay type_cast_2782_inst 1
    $phi [phi_stmt_2777] (type_cast_2780_wire type_cast_2782_wire) ( tempx_x0x_xlcssax_xix_xi_2777 )
    // 		iNsTr_129 := (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 1013
    // (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_2788_inst] (tempx_x0x_xlcssax_xix_xi_2777 type_cast_2787_wire_constant) (iNsTr_129_2789) 
    $delay AND_u32_u32_2788_inst 1
    // 		iNsTr_130 := (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1014
    // (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_2794_inst] (expx_x0x_xlcssax_xix_xi_2771 type_cast_2793_wire_constant) (iNsTr_130_2795) 
    $delay SHL_u32_u32_2794_inst 1
    // 		iNsTr_131 := (iNsTr_130 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 1015
    // (iNsTr_130 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_2800_inst] (iNsTr_130_2795 type_cast_2799_wire_constant) (iNsTr_131_2801) 
    $delay ADD_u32_u32_2800_inst 1
    // 		iNsTr_132 := (iNsTr_129 | iNsTr_87)
    //  file prog.aa, line 1016
    // (iNsTr_129 | iNsTr_87)
    |[OR_u32_u32_2805_inst] (iNsTr_129_2789 iNsTr_87_2484) (iNsTr_132_2806) 
    $delay OR_u32_u32_2805_inst 1
    // 		iNsTr_133 := (iNsTr_132 | iNsTr_131)
    //  file prog.aa, line 1017
    // (iNsTr_132 | iNsTr_131)
    |[OR_u32_u32_2810_inst] (iNsTr_132_2806 iNsTr_131_2801) (iNsTr_133_2811) 
    $delay OR_u32_u32_2810_inst 1
    // 		tmp3x_xix_xi := ($bitcast ($float<8,23>) iNsTr_133 )
    //  file prog.aa, line 1018
    // ($bitcast ($float<8,23>) iNsTr_133 )
    # := [type_cast_2814_inst] (iNsTr_133_2811) (tmp3x_xix_xi_2815) 
    $delay type_cast_2814_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 1021
    // 			$phi iNsTr_67 := 			  ($cast ($float<8,23>) tmp3x_xix_xi ) $on xx_xcritedgex_xix_xi_iq_err_calcx_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on omega_calcx_xexit_iq_err_calcx_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1022
    // ($cast ($float<8,23>) tmp3x_xix_xi )
    # := [type_cast_2821_inst] (tmp3x_xix_xi_2815) (type_cast_2821_wire) 
    $delay type_cast_2821_inst 1
    $phi [phi_stmt_2818] (type_cast_2821_wire type_cast_2824_wire_constant) ( iNsTr_67_2818 )
    // 		iNsTr_68 := (iNsTr_39 * ($bitcast ($float<8,23>) _f5.014000e-03 ))
    //  file prog.aa, line 1024
    // (iNsTr_39 * ($bitcast ($float<8,23>) _f5.014000e-03 ))
    *[MUL_f32_f32_2830_inst] (iNsTr_39_1941 type_cast_2829_wire_constant) (iNsTr_68_2831) 
    $delay MUL_f32_f32_2830_inst 24
    // 		iNsTr_69 := (iNsTr_68 + flux_rotor_lpf_prevx_x0)
    //  file prog.aa, line 1025
    // (iNsTr_68 + flux_rotor_lpf_prevx_x0)
    +[ADD_f32_f32_2835_inst] (iNsTr_68_2831 flux_rotor_lpf_prevx_x0_1662) (iNsTr_69_2836) 
    $delay ADD_f32_f32_2835_inst 24
    // 		iNsTr_70 := (($bitcast ($float<8,23>) _f3.000000e-01 ) - iNsTr_69)
    //  file prog.aa, line 1026
    // (($bitcast ($float<8,23>) _f3.000000e-01 ) - iNsTr_69)
    -[SUB_f32_f32_2841_inst] (type_cast_2839_wire_constant iNsTr_69_2836) (iNsTr_70_2842) 
    $delay SUB_f32_f32_2841_inst 24
    // 		iNsTr_71 := (iNsTr_70 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    //  file prog.aa, line 1027
    // (iNsTr_70 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
    *[MUL_f32_f32_2847_inst] (iNsTr_70_2842 type_cast_2846_wire_constant) (iNsTr_71_2848) 
    $delay MUL_f32_f32_2847_inst 24
    // 		iNsTr_72 := (iNsTr_71 + int_flux_err_temp_2x_x0)
    //  file prog.aa, line 1028
    // (iNsTr_71 + int_flux_err_temp_2x_x0)
    +[ADD_f32_f32_2852_inst] (iNsTr_71_2848 int_flux_err_temp_2x_x0_1669) (iNsTr_72_2853) 
    $delay ADD_f32_f32_2852_inst 24
    // 		iNsTr_73 := (iNsTr_72 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
    //  file prog.aa, line 1029
    // (iNsTr_72 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
    *[MUL_f32_f32_2858_inst] (iNsTr_72_2853 type_cast_2857_wire_constant) (iNsTr_73_2859) 
    $delay MUL_f32_f32_2858_inst 24
    // 		iNsTr_74 := (iNsTr_73 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
    //  file prog.aa, line 1031
    // (iNsTr_73 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
    $S<$S[SLT_f32_u1_2864_inst] (iNsTr_73_2859 type_cast_2863_wire_constant) (iNsTr_74_2865) 
    $delay SLT_f32_u1_2864_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 1032
    ==0? [if_stmt_2866_branch] (iNsTr_74_2865)
    // 		iNsTr_100 := (iNsTr_73 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
    //  file prog.aa, line 1037
    // (iNsTr_73 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
    $S>$S[SGT_f32_u1_2877_inst] (iNsTr_73_2859 type_cast_2876_wire_constant) (iNsTr_100_2878) 
    $delay SGT_f32_u1_2877_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 1038
    ==0? [if_stmt_2879_branch] (iNsTr_100_2878)
    // data-path instances for merge  
    //  file prog.aa, line 1044
    // 			$phi int_flux_errx_x0 := 			  ($cast ($float<8,23>) iNsTr_73 ) $on bb_43_bb_44			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) $on iq_err_calcx_xexit_bb_44			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f1.000000e+00 ) ) $on bb_42_bb_44 // type of target is $float<8,23>
    //  file prog.aa, line 1045
    // ($cast ($float<8,23>) iNsTr_73 )
    # := [type_cast_2891_inst] (iNsTr_73_2859) (type_cast_2891_wire) 
    $delay type_cast_2891_inst 1
    $phi [phi_stmt_2888] (type_cast_2891_wire type_cast_2894_wire_constant type_cast_2897_wire_constant) ( int_flux_errx_x0_2888 )
    // 		iNsTr_96 := (iNsTr_70 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
    //  file prog.aa, line 1047
    // (iNsTr_70 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
    *[MUL_f32_f32_2903_inst] (iNsTr_70_2842 type_cast_2902_wire_constant) (iNsTr_96_2904) 
    $delay MUL_f32_f32_2903_inst 24
    // 		iNsTr_97 := (int_flux_errx_x0 + iNsTr_96)
    //  file prog.aa, line 1048
    // (int_flux_errx_x0 + iNsTr_96)
    +[ADD_f32_f32_2908_inst] (int_flux_errx_x0_2888 iNsTr_96_2904) (iNsTr_97_2909) 
    $delay ADD_f32_f32_2908_inst 24
    // 		iNsTr_98 := (iNsTr_97 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
    //  file prog.aa, line 1050
    // (iNsTr_97 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
    $S<$S[SLT_f32_u1_2914_inst] (iNsTr_97_2909 type_cast_2913_wire_constant) (iNsTr_98_2915) 
    $delay SLT_f32_u1_2914_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 1051
    ==0? [if_stmt_2916_branch] (iNsTr_98_2915)
    // 		iNsTr_122 := (iNsTr_97 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
    //  file prog.aa, line 1056
    // (iNsTr_97 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
    $S>$S[SGT_f32_u1_2927_inst] (iNsTr_97_2909 type_cast_2926_wire_constant) (iNsTr_122_2928) 
    $delay SGT_f32_u1_2927_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 1057
    ==0? [if_stmt_2929_branch] (iNsTr_122_2928)
    // 		iNsTr_149 := (iNsTr_97 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    //  file prog.aa, line 1062
    // (iNsTr_97 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
    ==[EQ_f32_u1_2940_inst] (iNsTr_97_2909 type_cast_2939_wire_constant) (iNsTr_149_2941) 
    $delay EQ_f32_u1_2940_inst 2
    // datapath-instances for if  
    //  file prog.aa, line 1063
    ==0? [if_stmt_2942_branch] (iNsTr_149_2941)
    // data-path instances for merge  
    //  file prog.aa, line 1065
    // 			$phi tmp10x_xi35x_xin := 			  ($cast ($float<8,23>) iNsTr_97 ) $on bb_46_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f-2.000000e+00 ) ) $on bb_44_xx_xthread			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f2.000000e+00 ) ) $on bb_45_xx_xthread // type of target is $float<8,23>
    //  file prog.aa, line 1066
    // ($cast ($float<8,23>) iNsTr_97 )
    # := [type_cast_2952_inst] (iNsTr_97_2909) (type_cast_2952_wire) 
    $delay type_cast_2952_inst 1
    $phi [phi_stmt_2949] (type_cast_2952_wire type_cast_2955_wire_constant type_cast_2958_wire_constant) ( tmp10x_xi35x_xin_2949 )
    // 		tmp10x_xi35 := ($bitcast ($uint<32>) tmp10x_xi35x_xin )
    //  file prog.aa, line 1068
    // ($bitcast ($uint<32>) tmp10x_xi35x_xin )
    # := [type_cast_2962_inst] (tmp10x_xi35x_xin_2949) (tmp10x_xi35_2963) 
    $delay type_cast_2962_inst 1
    // 		iNsTr_118 := (tmp10x_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    //  file prog.aa, line 1069
    // (tmp10x_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
    <<[SHL_u32_u32_2968_inst] (tmp10x_xi35_2963 type_cast_2967_wire_constant) (iNsTr_118_2969) 
    $delay SHL_u32_u32_2968_inst 1
    // 		iNsTr_119 := (iNsTr_118 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    //  file prog.aa, line 1070
    // (iNsTr_118 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
    &[AND_u32_u32_2974_inst] (iNsTr_118_2969 type_cast_2973_wire_constant) (iNsTr_119_2975) 
    $delay AND_u32_u32_2974_inst 1
    // 		iNsTr_120 := (iNsTr_119 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    //  file prog.aa, line 1071
    // (iNsTr_119 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
    |[OR_u32_u32_2980_inst] (iNsTr_119_2975 type_cast_2979_wire_constant) (iNsTr_120_2981) 
    $delay OR_u32_u32_2980_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 1074
    // 			$phi xx_x016x_xix_xi := 			  ($cast ($uint<32>) iNsTr_170 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) iNsTr_120 ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1075
    // ($cast ($uint<32>) iNsTr_170 )
    # := [type_cast_2987_inst] (iNsTr_170_3093) (type_cast_2987_wire) 
    $delay type_cast_2987_inst 1
    // ($cast ($uint<32>) iNsTr_120 )
    # := [type_cast_2989_inst] (iNsTr_120_2981) (type_cast_2989_wire) 
    $delay type_cast_2989_inst 1
    $phi [phi_stmt_2984] (type_cast_2987_wire type_cast_2989_wire) ( xx_x016x_xix_xi_2984 )
    // 			$phi quotientx_x05x_xix_xi := 			  ($cast ($uint<32>) iNsTr_169 ) $on xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on xx_xthread_bbx_xnph7x_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1076
    // ($cast ($uint<32>) iNsTr_169 )
    # := [type_cast_2993_inst] (iNsTr_169_3088) (type_cast_2993_wire) 
    $delay type_cast_2993_inst 1
    $phi [phi_stmt_2990] (type_cast_2993_wire type_cast_2996_wire_constant) ( quotientx_x05x_xix_xi_2990 )
    // 		iNsTr_146 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1078
    // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    >>[LSHR_u32_u32_3002_inst] (xx_x016x_xix_xi_2984 type_cast_3001_wire_constant) (iNsTr_146_3003) 
    $delay LSHR_u32_u32_3002_inst 1
    // 		iNsTr_147 := (iNsTr_146 > ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
    //  file prog.aa, line 1080
    // (iNsTr_146 > ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
    >[UGT_u32_u1_3008_inst] (iNsTr_146_3003 type_cast_3007_wire_constant) (iNsTr_147_3009) 
    $delay UGT_u32_u1_3008_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1081
    ==0? [if_stmt_3010_branch] (iNsTr_147_3009)
    // data-path instances for merge  
    //  file prog.aa, line 1087
    // 			$phi shifted_divisorx_x03x_xix_xi := 			  ($cast ($uint<32>) iNsTr_190 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111010000011  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1088
    // ($cast ($uint<32>) iNsTr_190 )
    # := [type_cast_3022_inst] (iNsTr_190_3039) (type_cast_3022_wire) 
    $delay type_cast_3022_inst 1
    $phi [phi_stmt_3019] (type_cast_3022_wire type_cast_3025_wire_constant) ( shifted_divisorx_x03x_xix_xi_3019 )
    // 			$phi curr_quotientx_x02x_xix_xi := 			  ($cast ($uint<32>) iNsTr_191 ) $on bbx_xnphx_xix_xi_bbx_xnphx_xix_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1089
    // ($cast ($uint<32>) iNsTr_191 )
    # := [type_cast_3029_inst] (iNsTr_191_3045) (type_cast_3029_wire) 
    $delay type_cast_3029_inst 1
    $phi [phi_stmt_3026] (type_cast_3029_wire type_cast_3032_wire_constant) ( curr_quotientx_x02x_xix_xi_3026 )
    // 		iNsTr_190 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1091
    // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_3038_inst] (shifted_divisorx_x03x_xix_xi_3019 type_cast_3037_wire_constant) (iNsTr_190_3039) 
    $delay SHL_u32_u32_3038_inst 1
    // 		iNsTr_191 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1092
    // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_3044_inst] (curr_quotientx_x02x_xix_xi_3026 type_cast_3043_wire_constant) (iNsTr_191_3045) 
    $delay SHL_u32_u32_3044_inst 1
    // 		iNsTr_192 := (iNsTr_190 < iNsTr_146)
    //  file prog.aa, line 1094
    // (iNsTr_190 < iNsTr_146)
    <[ULT_u32_u1_3049_inst] (iNsTr_190_3039 iNsTr_146_3003) (iNsTr_192_3050) 
    $delay ULT_u32_u1_3049_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1095
    ==0? [if_stmt_3051_branch] (iNsTr_192_3050)
    // data-path instances for merge  
    //  file prog.aa, line 1097
    // 			$phi xx_xlcssa3 := 			  ($cast ($uint<32>) iNsTr_191 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1098
    // ($cast ($uint<32>) iNsTr_191 )
    # := [type_cast_3061_inst] (iNsTr_191_3045) (type_cast_3061_wire) 
    $delay type_cast_3061_inst 1
    $phi [phi_stmt_3058] (type_cast_3061_wire) ( xx_xlcssa3_3058 )
    // 			$phi xx_xlcssa2 := 			  ($cast ($uint<32>) iNsTr_190 ) $on bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit // type of target is $uint<32>
    //  file prog.aa, line 1099
    // ($cast ($uint<32>) iNsTr_190 )
    # := [type_cast_3065_inst] (iNsTr_190_3039) (type_cast_3065_wire) 
    $delay type_cast_3065_inst 1
    $phi [phi_stmt_3062] (type_cast_3065_wire) ( xx_xlcssa2_3062 )
    // data-path instances for merge  
    //  file prog.aa, line 1103
    // 			$phi shifted_divisorx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000011001111010000011  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa2 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1104
    // ($cast ($uint<32>) xx_xlcssa2 )
    # := [type_cast_3075_inst] (xx_xlcssa2_3062) (type_cast_3075_wire) 
    $delay type_cast_3075_inst 1
    $phi [phi_stmt_3069] (type_cast_3073_wire_constant type_cast_3075_wire) ( shifted_divisorx_x0x_xlcssax_xix_xi_3069 )
    // 			$phi curr_quotientx_x0x_xlcssax_xix_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ) $on bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi			  ($cast ($uint<32>) xx_xlcssa3 ) $on xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi // type of target is $uint<32>
    //  file prog.aa, line 1105
    // ($cast ($uint<32>) xx_xlcssa3 )
    # := [type_cast_3082_inst] (xx_xlcssa3_3058) (type_cast_3082_wire) 
    $delay type_cast_3082_inst 1
    $phi [phi_stmt_3076] (type_cast_3080_wire_constant type_cast_3082_wire) ( curr_quotientx_x0x_xlcssax_xix_xi_3076 )
    // 		iNsTr_169 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    //  file prog.aa, line 1107
    // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
    +[ADD_u32_u32_3087_inst] (curr_quotientx_x0x_xlcssax_xix_xi_3076 quotientx_x05x_xix_xi_2990) (iNsTr_169_3088) 
    $delay ADD_u32_u32_3087_inst 1
    // 		iNsTr_170 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    //  file prog.aa, line 1108
    // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
    -[SUB_u32_u32_3092_inst] (xx_x016x_xix_xi_2984 shifted_divisorx_x0x_xlcssax_xix_xi_3069) (iNsTr_170_3093) 
    $delay SUB_u32_u32_3092_inst 1
    // 		iNsTr_171 := (iNsTr_170 < ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
    //  file prog.aa, line 1110
    // (iNsTr_170 < ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
    <[ULT_u32_u1_3098_inst] (iNsTr_170_3093 type_cast_3097_wire_constant) (iNsTr_171_3099) 
    $delay ULT_u32_u1_3098_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1111
    ==0? [if_stmt_3100_branch] (iNsTr_171_3099)
    // data-path instances for merge  
    //  file prog.aa, line 1113
    // 			$phi xx_xlcssa4 := 			  ($cast ($uint<32>) iNsTr_169 ) $on xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi // type of target is $uint<32>
    //  file prog.aa, line 1114
    // ($cast ($uint<32>) iNsTr_169 )
    # := [type_cast_3110_inst] (iNsTr_169_3088) (type_cast_3110_wire) 
    $delay type_cast_3110_inst 1
    $phi [phi_stmt_3107] (type_cast_3110_wire) ( xx_xlcssa4_3107 )
    // 		iNsTr_194 := (tmp10x_xi35 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1116
    // (tmp10x_xi35 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    >>[LSHR_u32_u32_3116_inst] (tmp10x_xi35_2963 type_cast_3115_wire_constant) (iNsTr_194_3117) 
    $delay LSHR_u32_u32_3116_inst 1
    // 		iNsTr_195 := (tmp10x_xi35 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    //  file prog.aa, line 1117
    // (tmp10x_xi35 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
    &[AND_u32_u32_3122_inst] (tmp10x_xi35_2963 type_cast_3121_wire_constant) (iNsTr_195_3123) 
    $delay AND_u32_u32_3122_inst 1
    // 		iNsTr_196 := (iNsTr_194 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    //  file prog.aa, line 1118
    // (iNsTr_194 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
    &[AND_u32_u32_3128_inst] (iNsTr_194_3117 type_cast_3127_wire_constant) (iNsTr_196_3129) 
    $delay AND_u32_u32_3128_inst 1
    // 		iNsTr_197 := (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000010  ))
    //  file prog.aa, line 1119
    // (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000010  ))
    +[ADD_u32_u32_3134_inst] (iNsTr_196_3129 type_cast_3133_wire_constant) (iNsTr_197_3135) 
    $delay ADD_u32_u32_3134_inst 1
    // 		iNsTr_198 := (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1120
    // (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_3140_inst] (xx_xlcssa4_3107 type_cast_3139_wire_constant) (iNsTr_198_3141) 
    $delay AND_u32_u32_3140_inst 1
    // 		iNsTr_199 := (iNsTr_198 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1122
    // (iNsTr_198 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_3146_inst] (iNsTr_198_3141 type_cast_3145_wire_constant) (iNsTr_199_3147) 
    $delay EQ_u32_u1_3146_inst 1
    // 		iNsTr_200 := (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1124
    // ($bitcast ($int<32>) xx_xlcssa4 )
    $S:=$U [type_cast_3150_inst] (xx_xlcssa4_3107) (type_cast_3150_wire)   $flowthrough
    $delay type_cast_3150_inst 0
    // (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_3154_inst] (type_cast_3150_wire type_cast_3153_wire_constant) (iNsTr_200_3155) 
    $delay NEQ_i32_u1_3154_inst 1
    // 		orx_xcond11x_xi := (iNsTr_199 & iNsTr_200)
    //  file prog.aa, line 1125
    // (iNsTr_199 & iNsTr_200)
    &[AND_u1_u1_3159_inst] (iNsTr_199_3147 iNsTr_200_3155) (orx_xcond11x_xi_3160) 
    $delay AND_u1_u1_3159_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1126
    ==0? [if_stmt_3161_branch] (orx_xcond11x_xi_3160)
    // data-path instances for merge  
    //  file prog.aa, line 1132
    // 			$phi iNsTr_211 := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 1133
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    # := [type_cast_3173_inst] (indvarx_xnextx_xi_3220) (type_cast_3173_wire) 
    $delay type_cast_3173_inst 1
    $phi [phi_stmt_3170] (type_cast_3173_wire type_cast_3176_wire_constant) ( iNsTr_211_3170 )
    // 			$phi tempx_x012x_xi := 			  ($cast ($uint<32>) iNsTr_212 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi // type of target is $uint<32>
    //  file prog.aa, line 1134
    // ($cast ($uint<32>) iNsTr_212 )
    # := [type_cast_3180_inst] (iNsTr_212_3189) (type_cast_3180_wire) 
    $delay type_cast_3180_inst 1
    // ($cast ($uint<32>) xx_xlcssa4 )
    # := [type_cast_3182_inst] (xx_xlcssa4_3107) (type_cast_3182_wire) 
    $delay type_cast_3182_inst 1
    $phi [phi_stmt_3177] (type_cast_3180_wire type_cast_3182_wire) ( tempx_x012x_xi_3177 )
    // 		iNsTr_212 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1136
    // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    <<[SHL_u32_u32_3188_inst] (tempx_x012x_xi_3177 type_cast_3187_wire_constant) (iNsTr_212_3189) 
    $delay SHL_u32_u32_3188_inst 1
    // 		iNsTr_213 := (iNsTr_212 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    //  file prog.aa, line 1137
    // (iNsTr_212 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
    &[AND_u32_u32_3194_inst] (iNsTr_212_3189 type_cast_3193_wire_constant) (iNsTr_213_3195) 
    $delay AND_u32_u32_3194_inst 1
    // 		iNsTr_214 := (iNsTr_213 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    //  file prog.aa, line 1139
    // (iNsTr_213 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    ==[EQ_u32_u1_3200_inst] (iNsTr_213_3195 type_cast_3199_wire_constant) (iNsTr_214_3201) 
    $delay EQ_u32_u1_3200_inst 1
    // 		iNsTr_215 := (($bitcast ($int<32>) iNsTr_212 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    //  file prog.aa, line 1141
    // ($bitcast ($int<32>) iNsTr_212 )
    $S:=$U [type_cast_3204_inst] (iNsTr_212_3189) (type_cast_3204_wire)   $flowthrough
    $delay type_cast_3204_inst 0
    // (($bitcast ($int<32>) iNsTr_212 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    !=[NEQ_i32_u1_3208_inst] (type_cast_3204_wire type_cast_3207_wire_constant) (iNsTr_215_3209) 
    $delay NEQ_i32_u1_3208_inst 1
    // 		orx_xcondx_xi := (iNsTr_214 & iNsTr_215)
    //  file prog.aa, line 1142
    // (iNsTr_214 & iNsTr_215)
    &[AND_u1_u1_3213_inst] (iNsTr_214_3201 iNsTr_215_3209) (orx_xcondx_xi_3214) 
    $delay AND_u1_u1_3213_inst 1
    // 		indvarx_xnextx_xi := (iNsTr_211 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.aa, line 1143
    // (iNsTr_211 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[ADD_u32_u32_3219_inst] (iNsTr_211_3170 type_cast_3218_wire_constant) (indvarx_xnextx_xi_3220) 
    $delay ADD_u32_u32_3219_inst 1
    // datapath-instances for if  
    //  file prog.aa, line 1144
    ==0? [if_stmt_3221_branch] (orx_xcondx_xi_3214)
    // data-path instances for merge  
    //  file prog.aa, line 1146
    // 			$phi xx_xlcssa1 := 			  ($cast ($uint<32>) iNsTr_212 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1147
    // ($cast ($uint<32>) iNsTr_212 )
    # := [type_cast_3231_inst] (iNsTr_212_3189) (type_cast_3231_wire) 
    $delay type_cast_3231_inst 1
    $phi [phi_stmt_3228] (type_cast_3231_wire) ( xx_xlcssa1_3228 )
    // 			$phi xx_xlcssa := 			  ($cast ($uint<32>) iNsTr_211 ) $on udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1148
    // ($cast ($uint<32>) iNsTr_211 )
    # := [type_cast_3235_inst] (iNsTr_211_3170) (type_cast_3235_wire) 
    $delay type_cast_3235_inst 1
    $phi [phi_stmt_3232] (type_cast_3235_wire) ( xx_xlcssa_3232 )
    // 		tmp25x_xi := (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000001  ))
    //  file prog.aa, line 1150
    // (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000001  ))
    +[ADD_u32_u32_3241_inst] (iNsTr_196_3129 type_cast_3240_wire_constant) (tmp25x_xi_3242) 
    $delay ADD_u32_u32_3241_inst 1
    // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
    //  file prog.aa, line 1151
    // (tmp25x_xi - xx_xlcssa)
    -[SUB_u32_u32_3246_inst] (tmp25x_xi_3242 xx_xlcssa_3232) (tmp26x_xi_3247) 
    $delay SUB_u32_u32_3246_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 1154
    // 			$phi expx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) tmp26x_xi ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) iNsTr_197 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1155
    // ($cast ($uint<32>) tmp26x_xi )
    # := [type_cast_3253_inst] (tmp26x_xi_3247) (type_cast_3253_wire) 
    $delay type_cast_3253_inst 1
    // ($cast ($uint<32>) iNsTr_197 )
    # := [type_cast_3255_inst] (iNsTr_197_3135) (type_cast_3255_wire) 
    $delay type_cast_3255_inst 1
    $phi [phi_stmt_3250] (type_cast_3253_wire type_cast_3255_wire) ( expx_x0x_xlcssax_xi_3250 )
    // 			$phi tempx_x0x_xlcssax_xi := 			  ($cast ($uint<32>) xx_xlcssa1 ) $on udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi			  ($cast ($uint<32>) xx_xlcssa4 ) $on udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi // type of target is $uint<32>
    //  file prog.aa, line 1156
    // ($cast ($uint<32>) xx_xlcssa1 )
    # := [type_cast_3259_inst] (xx_xlcssa1_3228) (type_cast_3259_wire) 
    $delay type_cast_3259_inst 1
    // ($cast ($uint<32>) xx_xlcssa4 )
    # := [type_cast_3261_inst] (xx_xlcssa4_3107) (type_cast_3261_wire) 
    $delay type_cast_3261_inst 1
    $phi [phi_stmt_3256] (type_cast_3259_wire type_cast_3261_wire) ( tempx_x0x_xlcssax_xi_3256 )
    // 		iNsTr_205 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    //  file prog.aa, line 1158
    // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
    &[AND_u32_u32_3267_inst] (tempx_x0x_xlcssax_xi_3256 type_cast_3266_wire_constant) (iNsTr_205_3268) 
    $delay AND_u32_u32_3267_inst 1
    // 		iNsTr_206 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    //  file prog.aa, line 1159
    // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
    <<[SHL_u32_u32_3273_inst] (expx_x0x_xlcssax_xi_3250 type_cast_3272_wire_constant) (iNsTr_206_3274) 
    $delay SHL_u32_u32_3273_inst 1
    // 		iNsTr_207 := (iNsTr_206 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    //  file prog.aa, line 1160
    // (iNsTr_206 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
    +[ADD_u32_u32_3279_inst] (iNsTr_206_3274 type_cast_3278_wire_constant) (iNsTr_207_3280) 
    $delay ADD_u32_u32_3279_inst 1
    // 		iNsTr_208 := (iNsTr_207 | iNsTr_195)
    //  file prog.aa, line 1161
    // (iNsTr_207 | iNsTr_195)
    |[OR_u32_u32_3284_inst] (iNsTr_207_3280 iNsTr_195_3123) (iNsTr_208_3285) 
    $delay OR_u32_u32_3284_inst 1
    // 		iNsTr_209 := (iNsTr_208 | iNsTr_205)
    //  file prog.aa, line 1162
    // (iNsTr_208 | iNsTr_205)
    |[OR_u32_u32_3289_inst] (iNsTr_208_3285 iNsTr_205_3268) (iNsTr_209_3290) 
    $delay OR_u32_u32_3289_inst 1
    // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_209 )
    //  file prog.aa, line 1163
    // ($bitcast ($float<8,23>) iNsTr_209 )
    # := [type_cast_3293_inst] (iNsTr_209_3290) (tmp3x_xi_3294) 
    $delay type_cast_3293_inst 1
    // data-path instances for merge  
    //  file prog.aa, line 1166
    // 			$phi iNsTr_173 := 			  ($cast ($float<8,23>) tmp3x_xi ) $on xx_xcritedgex_xi_fdiv32x_xexit			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _f0.000000e+00 ) ) $on bb_46_fdiv32x_xexit // type of target is $float<8,23>
    //  file prog.aa, line 1167
    // ($cast ($float<8,23>) tmp3x_xi )
    # := [type_cast_3300_inst] (tmp3x_xi_3294) (type_cast_3300_wire) 
    $delay type_cast_3300_inst 1
    $phi [phi_stmt_3297] (type_cast_3300_wire type_cast_3303_wire_constant) ( iNsTr_173_3297 )
    // 		out_data := iNsTr_173
    //  file prog.aa, line 1169
    // out_data
    $ioport $out [WPIPE_out_data_3305_inst]  (iNsTr_173_3297) (out_data) 
    $buffering $in WPIPE_out_data_3305_inst iNsTr_173_3297 1
    // 		out_data := iNsTr_67
    //  file prog.aa, line 1170
    // out_data
    $ioport $out [WPIPE_out_data_3308_inst]  (iNsTr_67_2818) (out_data) 
    $buffering $in WPIPE_out_data_3308_inst iNsTr_67_2818 1
    // 		out_data := iNsTr_49
    //  file prog.aa, line 1171
    // out_data
    $ioport $out [WPIPE_out_data_3311_inst]  (iNsTr_49_2396) (out_data) 
    $buffering $in WPIPE_out_data_3311_inst iNsTr_49_2396 1
    // 		out_data := iNsTr_39
    //  file prog.aa, line 1172
    // out_data
    $ioport $out [WPIPE_out_data_3314_inst]  (iNsTr_39_1941) (out_data) 
    $buffering $in WPIPE_out_data_3314_inst iNsTr_39_1941 1
    // 		phitmp := (iNsTr_20 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
    //  file prog.aa, line 1173
    // (iNsTr_20 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
    *[MUL_f32_f32_3321_inst] (iNsTr_20_1810 type_cast_3320_wire_constant) (phitmp_3322) 
    $delay MUL_f32_f32_3321_inst 24
    // 		phitmp31 := (iNsTr_39 * ($bitcast ($float<8,23>) _f9.995200e-01 ))
    //  file prog.aa, line 1174
    // (iNsTr_39 * ($bitcast ($float<8,23>) _f9.995200e-01 ))
    *[MUL_f32_f32_3327_inst] (iNsTr_39_1941 type_cast_3326_wire_constant) (phitmp31_3328) 
    $delay MUL_f32_f32_3327_inst 24
    // 		phitmp33 := (iNsTr_69 * ($bitcast ($float<8,23>) _f9.949860e-01 ))
    //  file prog.aa, line 1175
    // (iNsTr_69 * ($bitcast ($float<8,23>) _f9.949860e-01 ))
    *[MUL_f32_f32_3333_inst] (iNsTr_69_2836 type_cast_3332_wire_constant) (phitmp33_3334) 
    $delay MUL_f32_f32_3333_inst 24
  }
  // end data-path
  // CP-DP links for merge  
  //  file prog.aa, line 659
  // ($cast ($float<8,23>) phitmp33 )
  type_cast_1668_inst <=> (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1662/phi_stmt_1662_sources/type_cast_1668/SplitProtocol/Sample/rr branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1662/phi_stmt_1662_sources/type_cast_1668/SplitProtocol/Update/cr) (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1662/phi_stmt_1662_sources/type_cast_1668/SplitProtocol/Sample/ra branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1662/phi_stmt_1662_sources/type_cast_1668/SplitProtocol/Update/ca)
  phi_stmt_1662 <=> (branch_block_stmt_1659/bb_0_bb_1_PhiReq/phi_stmt_1662/phi_stmt_1662_req branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1662/phi_stmt_1662_req) (branch_block_stmt_1659/merge_stmt_1661_PhiAck/phi_stmt_1662_ack)
  // ($cast ($float<8,23>) iNsTr_72 )
  type_cast_1675_inst <=> (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1669/phi_stmt_1669_sources/type_cast_1675/SplitProtocol/Sample/rr branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1669/phi_stmt_1669_sources/type_cast_1675/SplitProtocol/Update/cr) (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1669/phi_stmt_1669_sources/type_cast_1675/SplitProtocol/Sample/ra branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1669/phi_stmt_1669_sources/type_cast_1675/SplitProtocol/Update/ca)
  phi_stmt_1669 <=> (branch_block_stmt_1659/bb_0_bb_1_PhiReq/phi_stmt_1669/phi_stmt_1669_req branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1669/phi_stmt_1669_req) (branch_block_stmt_1659/merge_stmt_1661_PhiAck/phi_stmt_1669_ack)
  // ($cast ($float<8,23>) iNsTr_21 )
  type_cast_1682_inst <=> (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1676/phi_stmt_1676_sources/type_cast_1682/SplitProtocol/Sample/rr branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1676/phi_stmt_1676_sources/type_cast_1682/SplitProtocol/Update/cr) (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1676/phi_stmt_1676_sources/type_cast_1682/SplitProtocol/Sample/ra branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1676/phi_stmt_1676_sources/type_cast_1682/SplitProtocol/Update/ca)
  phi_stmt_1676 <=> (branch_block_stmt_1659/bb_0_bb_1_PhiReq/phi_stmt_1676/phi_stmt_1676_req branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1676/phi_stmt_1676_req) (branch_block_stmt_1659/merge_stmt_1661_PhiAck/phi_stmt_1676_ack)
  // ($cast ($float<8,23>) iNsTr_49 )
  type_cast_1689_inst <=> (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1683/phi_stmt_1683_sources/type_cast_1689/SplitProtocol/Sample/rr branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1683/phi_stmt_1683_sources/type_cast_1689/SplitProtocol/Update/cr) (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1683/phi_stmt_1683_sources/type_cast_1689/SplitProtocol/Sample/ra branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1683/phi_stmt_1683_sources/type_cast_1689/SplitProtocol/Update/ca)
  phi_stmt_1683 <=> (branch_block_stmt_1659/bb_0_bb_1_PhiReq/phi_stmt_1683/phi_stmt_1683_req branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1683/phi_stmt_1683_req) (branch_block_stmt_1659/merge_stmt_1661_PhiAck/phi_stmt_1683_ack)
  // ($cast ($float<8,23>) phitmp31 )
  type_cast_1696_inst <=> (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1690/phi_stmt_1690_sources/type_cast_1696/SplitProtocol/Sample/rr branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1690/phi_stmt_1690_sources/type_cast_1696/SplitProtocol/Update/cr) (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1690/phi_stmt_1690_sources/type_cast_1696/SplitProtocol/Sample/ra branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1690/phi_stmt_1690_sources/type_cast_1696/SplitProtocol/Update/ca)
  phi_stmt_1690 <=> (branch_block_stmt_1659/bb_0_bb_1_PhiReq/phi_stmt_1690/phi_stmt_1690_req branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1690/phi_stmt_1690_req) (branch_block_stmt_1659/merge_stmt_1661_PhiAck/phi_stmt_1690_ack)
  // ($cast ($float<8,23>) phitmp )
  type_cast_1703_inst <=> (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1697/phi_stmt_1697_sources/type_cast_1703/SplitProtocol/Sample/rr branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1697/phi_stmt_1697_sources/type_cast_1703/SplitProtocol/Update/cr) (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1697/phi_stmt_1697_sources/type_cast_1703/SplitProtocol/Sample/ra branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1697/phi_stmt_1697_sources/type_cast_1703/SplitProtocol/Update/ca)
  phi_stmt_1697 <=> (branch_block_stmt_1659/bb_0_bb_1_PhiReq/phi_stmt_1697/phi_stmt_1697_req branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1697/phi_stmt_1697_req) (branch_block_stmt_1659/merge_stmt_1661_PhiAck/phi_stmt_1697_ack)
  // ($cast ($float<8,23>) iNsTr_24 )
  type_cast_1710_inst <=> (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1704/phi_stmt_1704_sources/type_cast_1710/SplitProtocol/Sample/rr branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1704/phi_stmt_1704_sources/type_cast_1710/SplitProtocol/Update/cr) (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1704/phi_stmt_1704_sources/type_cast_1710/SplitProtocol/Sample/ra branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1704/phi_stmt_1704_sources/type_cast_1710/SplitProtocol/Update/ca)
  phi_stmt_1704 <=> (branch_block_stmt_1659/bb_0_bb_1_PhiReq/phi_stmt_1704/phi_stmt_1704_req branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1704/phi_stmt_1704_req) (branch_block_stmt_1659/merge_stmt_1661_PhiAck/phi_stmt_1704_ack)
  // ($cast ($float<8,23>) speed_refx_x0 )
  type_cast_1717_inst <=> (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1711/phi_stmt_1711_sources/type_cast_1717/SplitProtocol/Sample/rr branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1711/phi_stmt_1711_sources/type_cast_1717/SplitProtocol/Update/cr) (branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1711/phi_stmt_1711_sources/type_cast_1717/SplitProtocol/Sample/ra branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1711/phi_stmt_1711_sources/type_cast_1717/SplitProtocol/Update/ca)
  phi_stmt_1711 <=> (branch_block_stmt_1659/bb_0_bb_1_PhiReq/phi_stmt_1711/phi_stmt_1711_req branch_block_stmt_1659/fdiv32x_xexit_bb_1_PhiReq/phi_stmt_1711/phi_stmt_1711_req) (branch_block_stmt_1659/merge_stmt_1661_PhiAck/phi_stmt_1711_ack)
  // 		iNsTr_2 := in_data
  //  file prog.aa, line 669
  // in_data
  RPIPE_in_data_1720_inst <=> (branch_block_stmt_1659/assign_stmt_1721/RPIPE_in_data_1720_Sample/rr branch_block_stmt_1659/assign_stmt_1721/RPIPE_in_data_1720_Update/cr) (branch_block_stmt_1659/assign_stmt_1721/RPIPE_in_data_1720_Sample/ra branch_block_stmt_1659/assign_stmt_1721/RPIPE_in_data_1720_Update/ca)
  // 		iNsTr_4 := in_data
  //  file prog.aa, line 670
  // in_data
  RPIPE_in_data_1723_inst <=> (branch_block_stmt_1659/assign_stmt_1724/RPIPE_in_data_1723_Sample/rr branch_block_stmt_1659/assign_stmt_1724/RPIPE_in_data_1723_Update/cr) (branch_block_stmt_1659/assign_stmt_1724/RPIPE_in_data_1723_Sample/ra branch_block_stmt_1659/assign_stmt_1724/RPIPE_in_data_1723_Update/ca)
  // 		iNsTr_6 := in_data
  //  file prog.aa, line 671
  // in_data
  RPIPE_in_data_1726_inst <=> (branch_block_stmt_1659/assign_stmt_1727/RPIPE_in_data_1726_Sample/rr branch_block_stmt_1659/assign_stmt_1727/RPIPE_in_data_1726_Update/cr) (branch_block_stmt_1659/assign_stmt_1727/RPIPE_in_data_1726_Sample/ra branch_block_stmt_1659/assign_stmt_1727/RPIPE_in_data_1726_Update/ca)
  // 		iNsTr_8 := in_data
  //  file prog.aa, line 672
  // in_data
  RPIPE_in_data_1729_inst <=> (branch_block_stmt_1659/assign_stmt_1730/RPIPE_in_data_1729_Sample/rr branch_block_stmt_1659/assign_stmt_1730/RPIPE_in_data_1729_Update/cr) (branch_block_stmt_1659/assign_stmt_1730/RPIPE_in_data_1729_Sample/ra branch_block_stmt_1659/assign_stmt_1730/RPIPE_in_data_1729_Update/ca)
  // 		iNsTr_10 := in_data
  //  file prog.aa, line 673
  // in_data
  RPIPE_in_data_1732_inst <=> (branch_block_stmt_1659/assign_stmt_1733/RPIPE_in_data_1732_Sample/rr branch_block_stmt_1659/assign_stmt_1733/RPIPE_in_data_1732_Update/cr) (branch_block_stmt_1659/assign_stmt_1733/RPIPE_in_data_1732_Sample/ra branch_block_stmt_1659/assign_stmt_1733/RPIPE_in_data_1732_Update/ca)
  // 		iNsTr_11 := (speed_refx_x1 < iNsTr_8)
  //  file prog.aa, line 675
  // (speed_refx_x1 < iNsTr_8)
  SLT_f32_u1_1737_inst <=> (branch_block_stmt_1659/assign_stmt_1738/SLT_f32_u1_1737_Sample/rr branch_block_stmt_1659/assign_stmt_1738/SLT_f32_u1_1737_Update/cr) (branch_block_stmt_1659/assign_stmt_1738/SLT_f32_u1_1737_Sample/ra branch_block_stmt_1659/assign_stmt_1738/SLT_f32_u1_1737_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 676
  if_stmt_1739_branch <=> (branch_block_stmt_1659/if_stmt_1739_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_1739_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_1739_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 678
  // 		iNsTr_13 := ($cast ($float<11,52>) speed_refx_x1 )
  //  file prog.aa, line 680
  // ($cast ($float<11,52>) speed_refx_x1 )
  type_cast_1749_inst <=> (branch_block_stmt_1659/assign_stmt_1750_to_assign_stmt_1760/type_cast_1749_Sample/rr branch_block_stmt_1659/assign_stmt_1750_to_assign_stmt_1760/type_cast_1749_Update/cr) (branch_block_stmt_1659/assign_stmt_1750_to_assign_stmt_1760/type_cast_1749_Sample/ra branch_block_stmt_1659/assign_stmt_1750_to_assign_stmt_1760/type_cast_1749_Update/ca)
  // 		iNsTr_14 := (iNsTr_13 + ($bitcast ($float<11,52>) _f5.000000e-02 ))
  //  file prog.aa, line 681
  // (iNsTr_13 + ($bitcast ($float<11,52>) _f5.000000e-02 ))
  ADD_f64_f64_1755_inst <=> (branch_block_stmt_1659/assign_stmt_1750_to_assign_stmt_1760/ADD_f64_f64_1755_Sample/rr branch_block_stmt_1659/assign_stmt_1750_to_assign_stmt_1760/ADD_f64_f64_1755_Update/cr) (branch_block_stmt_1659/assign_stmt_1750_to_assign_stmt_1760/ADD_f64_f64_1755_Sample/ra branch_block_stmt_1659/assign_stmt_1750_to_assign_stmt_1760/ADD_f64_f64_1755_Update/ca)
  // 		iNsTr_15 := ($cast ($float<8,23>) iNsTr_14 )
  //  file prog.aa, line 682
  // ($cast ($float<8,23>) iNsTr_14 )
  type_cast_1759_inst <=> (branch_block_stmt_1659/assign_stmt_1750_to_assign_stmt_1760/type_cast_1759_Sample/rr branch_block_stmt_1659/assign_stmt_1750_to_assign_stmt_1760/type_cast_1759_Update/cr) (branch_block_stmt_1659/assign_stmt_1750_to_assign_stmt_1760/type_cast_1759_Sample/ra branch_block_stmt_1659/assign_stmt_1750_to_assign_stmt_1760/type_cast_1759_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 685
  // 		iNsTr_17 := (speed_refx_x1 > iNsTr_8)
  //  file prog.aa, line 688
  // (speed_refx_x1 > iNsTr_8)
  SGT_f32_u1_1766_inst <=> (branch_block_stmt_1659/assign_stmt_1767/SGT_f32_u1_1766_Sample/rr branch_block_stmt_1659/assign_stmt_1767/SGT_f32_u1_1766_Update/cr) (branch_block_stmt_1659/assign_stmt_1767/SGT_f32_u1_1766_Sample/ra branch_block_stmt_1659/assign_stmt_1767/SGT_f32_u1_1766_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 689
  if_stmt_1768_branch <=> (branch_block_stmt_1659/if_stmt_1768_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_1768_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_1768_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 691
  // 		iNsTr_28 := ($cast ($float<11,52>) speed_refx_x1 )
  //  file prog.aa, line 693
  // ($cast ($float<11,52>) speed_refx_x1 )
  type_cast_1777_inst <=> (branch_block_stmt_1659/assign_stmt_1778_to_assign_stmt_1788/type_cast_1777_Sample/rr branch_block_stmt_1659/assign_stmt_1778_to_assign_stmt_1788/type_cast_1777_Update/cr) (branch_block_stmt_1659/assign_stmt_1778_to_assign_stmt_1788/type_cast_1777_Sample/ra branch_block_stmt_1659/assign_stmt_1778_to_assign_stmt_1788/type_cast_1777_Update/ca)
  // 		iNsTr_29 := (iNsTr_28 + ($bitcast ($float<11,52>) _f-5.000000e-02 ))
  //  file prog.aa, line 694
  // (iNsTr_28 + ($bitcast ($float<11,52>) _f-5.000000e-02 ))
  ADD_f64_f64_1783_inst <=> (branch_block_stmt_1659/assign_stmt_1778_to_assign_stmt_1788/ADD_f64_f64_1783_Sample/rr branch_block_stmt_1659/assign_stmt_1778_to_assign_stmt_1788/ADD_f64_f64_1783_Update/cr) (branch_block_stmt_1659/assign_stmt_1778_to_assign_stmt_1788/ADD_f64_f64_1783_Sample/ra branch_block_stmt_1659/assign_stmt_1778_to_assign_stmt_1788/ADD_f64_f64_1783_Update/ca)
  // 		iNsTr_30 := ($cast ($float<8,23>) iNsTr_29 )
  //  file prog.aa, line 695
  // ($cast ($float<8,23>) iNsTr_29 )
  type_cast_1787_inst <=> (branch_block_stmt_1659/assign_stmt_1778_to_assign_stmt_1788/type_cast_1787_Sample/rr branch_block_stmt_1659/assign_stmt_1778_to_assign_stmt_1788/type_cast_1787_Update/cr) (branch_block_stmt_1659/assign_stmt_1778_to_assign_stmt_1788/type_cast_1787_Sample/ra branch_block_stmt_1659/assign_stmt_1778_to_assign_stmt_1788/type_cast_1787_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 698
  // ($cast ($float<8,23>) iNsTr_15 )
  type_cast_1794_inst <=> (branch_block_stmt_1659/bb_2_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_sources/type_cast_1794/SplitProtocol/Sample/rr branch_block_stmt_1659/bb_2_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_sources/type_cast_1794/SplitProtocol/Update/cr) (branch_block_stmt_1659/bb_2_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_sources/type_cast_1794/SplitProtocol/Sample/ra branch_block_stmt_1659/bb_2_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_sources/type_cast_1794/SplitProtocol/Update/ca)
  // ($cast ($float<8,23>) iNsTr_30 )
  type_cast_1796_inst <=> (branch_block_stmt_1659/bb_4_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_sources/type_cast_1796/SplitProtocol/Sample/rr branch_block_stmt_1659/bb_4_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_sources/type_cast_1796/SplitProtocol/Update/cr) (branch_block_stmt_1659/bb_4_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_sources/type_cast_1796/SplitProtocol/Sample/ra branch_block_stmt_1659/bb_4_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_sources/type_cast_1796/SplitProtocol/Update/ca)
  // ($cast ($float<8,23>) speed_refx_x1 )
  type_cast_1798_inst <=> (branch_block_stmt_1659/bb_3_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_sources/type_cast_1798/SplitProtocol/Sample/rr branch_block_stmt_1659/bb_3_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_sources/type_cast_1798/SplitProtocol/Update/cr) (branch_block_stmt_1659/bb_3_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_sources/type_cast_1798/SplitProtocol/Sample/ra branch_block_stmt_1659/bb_3_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_sources/type_cast_1798/SplitProtocol/Update/ca)
  phi_stmt_1791 <=> (branch_block_stmt_1659/bb_2_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_req branch_block_stmt_1659/bb_4_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_req branch_block_stmt_1659/bb_3_bb_5_PhiReq/phi_stmt_1791/phi_stmt_1791_req) (branch_block_stmt_1659/merge_stmt_1790_PhiAck/phi_stmt_1791_ack)
  // 		iNsTr_19 := (iNsTr_6 * ($bitcast ($float<8,23>) _f7.000000e-01 ))
  //  file prog.aa, line 701
  // (iNsTr_6 * ($bitcast ($float<8,23>) _f7.000000e-01 ))
  MUL_f32_f32_1804_inst <=> (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/MUL_f32_f32_1804_Sample/rr branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/MUL_f32_f32_1804_Update/cr) (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/MUL_f32_f32_1804_Sample/ra branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/MUL_f32_f32_1804_Update/ca)
  // 		iNsTr_20 := (iNsTr_19 + spd_lpf_prevx_x0)
  //  file prog.aa, line 702
  // (iNsTr_19 + spd_lpf_prevx_x0)
  ADD_f32_f32_1809_inst <=> (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/ADD_f32_f32_1809_Sample/rr branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/ADD_f32_f32_1809_Update/cr) (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/ADD_f32_f32_1809_Sample/ra branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/ADD_f32_f32_1809_Update/ca)
  // 		iNsTr_21 := (speed_refx_x0 - iNsTr_20)
  //  file prog.aa, line 703
  // (speed_refx_x0 - iNsTr_20)
  SUB_f32_f32_1814_inst <=> (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/SUB_f32_f32_1814_Sample/rr branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/SUB_f32_f32_1814_Update/cr) (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/SUB_f32_f32_1814_Sample/ra branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/SUB_f32_f32_1814_Update/ca)
  // 		iNsTr_22 := (iNsTr_21 + speed_err_prevx_x0)
  //  file prog.aa, line 704
  // (iNsTr_21 + speed_err_prevx_x0)
  ADD_f32_f32_1819_inst <=> (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/ADD_f32_f32_1819_Sample/rr branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/ADD_f32_f32_1819_Update/cr) (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/ADD_f32_f32_1819_Sample/ra branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/ADD_f32_f32_1819_Update/ca)
  // 		iNsTr_23 := (iNsTr_22 * ($bitcast ($float<8,23>) _f2.500000e-04 ))
  //  file prog.aa, line 705
  // (iNsTr_22 * ($bitcast ($float<8,23>) _f2.500000e-04 ))
  MUL_f32_f32_1825_inst <=> (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/MUL_f32_f32_1825_Sample/rr branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/MUL_f32_f32_1825_Update/cr) (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/MUL_f32_f32_1825_Sample/ra branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/MUL_f32_f32_1825_Update/ca)
  // 		iNsTr_24 := (iNsTr_23 + int_speed_err_prevx_x0)
  //  file prog.aa, line 706
  // (iNsTr_23 + int_speed_err_prevx_x0)
  ADD_f32_f32_1830_inst <=> (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/ADD_f32_f32_1830_Sample/rr branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/ADD_f32_f32_1830_Update/cr) (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/ADD_f32_f32_1830_Sample/ra branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/ADD_f32_f32_1830_Update/ca)
  // 		iNsTr_25 := ($cast ($float<11,52>) iNsTr_24 )
  //  file prog.aa, line 707
  // ($cast ($float<11,52>) iNsTr_24 )
  type_cast_1834_inst <=> (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/type_cast_1834_Sample/rr branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/type_cast_1834_Update/cr) (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/type_cast_1834_Sample/ra branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/type_cast_1834_Update/ca)
  // 		iNsTr_26 := (iNsTr_25 < ($bitcast ($float<11,52>) _f-1.000000e+01 ))
  //  file prog.aa, line 709
  // (iNsTr_25 < ($bitcast ($float<11,52>) _f-1.000000e+01 ))
  SLT_f64_u1_1840_inst <=> (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/SLT_f64_u1_1840_Sample/rr branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/SLT_f64_u1_1840_Update/cr) (branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/SLT_f64_u1_1840_Sample/ra branch_block_stmt_1659/assign_stmt_1805_to_assign_stmt_1841/SLT_f64_u1_1840_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 710
  if_stmt_1842_branch <=> (branch_block_stmt_1659/if_stmt_1842_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_1842_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_1842_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 712
  // 		iNsTr_36 := (iNsTr_25 > ($bitcast ($float<11,52>) _f1.000000e+01 ))
  //  file prog.aa, line 715
  // (iNsTr_25 > ($bitcast ($float<11,52>) _f1.000000e+01 ))
  SGT_f64_u1_1853_inst <=> (branch_block_stmt_1659/assign_stmt_1854/SGT_f64_u1_1853_Sample/rr branch_block_stmt_1659/assign_stmt_1854/SGT_f64_u1_1853_Update/cr) (branch_block_stmt_1659/assign_stmt_1854/SGT_f64_u1_1853_Sample/ra branch_block_stmt_1659/assign_stmt_1854/SGT_f64_u1_1853_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 716
  if_stmt_1855_branch <=> (branch_block_stmt_1659/if_stmt_1855_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_1855_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_1855_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 718
  // CP-DP links for merge  
  //  file prog.aa, line 722
  // ($cast ($float<8,23>) iNsTr_24 )
  type_cast_1867_inst <=> (branch_block_stmt_1659/bb_7_bb_8_PhiReq/phi_stmt_1864/phi_stmt_1864_sources/type_cast_1867/SplitProtocol/Sample/rr branch_block_stmt_1659/bb_7_bb_8_PhiReq/phi_stmt_1864/phi_stmt_1864_sources/type_cast_1867/SplitProtocol/Update/cr) (branch_block_stmt_1659/bb_7_bb_8_PhiReq/phi_stmt_1864/phi_stmt_1864_sources/type_cast_1867/SplitProtocol/Sample/ra branch_block_stmt_1659/bb_7_bb_8_PhiReq/phi_stmt_1864/phi_stmt_1864_sources/type_cast_1867/SplitProtocol/Update/ca)
  phi_stmt_1864 <=> (branch_block_stmt_1659/bb_7_bb_8_PhiReq/phi_stmt_1864/phi_stmt_1864_req branch_block_stmt_1659/bb_5_bb_8_PhiReq/phi_stmt_1864/phi_stmt_1864_req branch_block_stmt_1659/bb_6_bb_8_PhiReq/phi_stmt_1864/phi_stmt_1864_req) (branch_block_stmt_1659/merge_stmt_1863_PhiAck/phi_stmt_1864_ack)
  // 		iNsTr_32 := (iNsTr_21 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
  //  file prog.aa, line 725
  // (iNsTr_21 * ($bitcast ($float<8,23>) _f5.000000e+00 ))
  MUL_f32_f32_1879_inst <=> (branch_block_stmt_1659/assign_stmt_1880_to_assign_stmt_1891/MUL_f32_f32_1879_Sample/rr branch_block_stmt_1659/assign_stmt_1880_to_assign_stmt_1891/MUL_f32_f32_1879_Update/cr) (branch_block_stmt_1659/assign_stmt_1880_to_assign_stmt_1891/MUL_f32_f32_1879_Sample/ra branch_block_stmt_1659/assign_stmt_1880_to_assign_stmt_1891/MUL_f32_f32_1879_Update/ca)
  // 		iNsTr_33 := (int_speed_errx_x0 + iNsTr_32)
  //  file prog.aa, line 726
  // (int_speed_errx_x0 + iNsTr_32)
  ADD_f32_f32_1884_inst <=> (branch_block_stmt_1659/assign_stmt_1880_to_assign_stmt_1891/ADD_f32_f32_1884_Sample/rr branch_block_stmt_1659/assign_stmt_1880_to_assign_stmt_1891/ADD_f32_f32_1884_Update/cr) (branch_block_stmt_1659/assign_stmt_1880_to_assign_stmt_1891/ADD_f32_f32_1884_Sample/ra branch_block_stmt_1659/assign_stmt_1880_to_assign_stmt_1891/ADD_f32_f32_1884_Update/ca)
  // 		iNsTr_34 := (iNsTr_33 < ($bitcast ($float<8,23>) _f-2.000000e+01 ))
  //  file prog.aa, line 728
  // (iNsTr_33 < ($bitcast ($float<8,23>) _f-2.000000e+01 ))
  SLT_f32_u1_1890_inst <=> (branch_block_stmt_1659/assign_stmt_1880_to_assign_stmt_1891/SLT_f32_u1_1890_Sample/rr branch_block_stmt_1659/assign_stmt_1880_to_assign_stmt_1891/SLT_f32_u1_1890_Update/cr) (branch_block_stmt_1659/assign_stmt_1880_to_assign_stmt_1891/SLT_f32_u1_1890_Sample/ra branch_block_stmt_1659/assign_stmt_1880_to_assign_stmt_1891/SLT_f32_u1_1890_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 729
  if_stmt_1892_branch <=> (branch_block_stmt_1659/if_stmt_1892_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_1892_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_1892_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 731
  // 		iNsTr_43 := (iNsTr_33 > ($bitcast ($float<8,23>) _f2.000000e+01 ))
  //  file prog.aa, line 734
  // (iNsTr_33 > ($bitcast ($float<8,23>) _f2.000000e+01 ))
  SGT_f32_u1_1903_inst <=> (branch_block_stmt_1659/assign_stmt_1904/SGT_f32_u1_1903_Sample/rr branch_block_stmt_1659/assign_stmt_1904/SGT_f32_u1_1903_Update/cr) (branch_block_stmt_1659/assign_stmt_1904/SGT_f32_u1_1903_Sample/ra branch_block_stmt_1659/assign_stmt_1904/SGT_f32_u1_1903_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 735
  if_stmt_1905_branch <=> (branch_block_stmt_1659/if_stmt_1905_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_1905_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_1905_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 737
  // 		phitmp32 := (iNsTr_33 * ($bitcast ($float<8,23>) _f3.465703e-01 ))
  //  file prog.aa, line 739
  // (iNsTr_33 * ($bitcast ($float<8,23>) _f3.465703e-01 ))
  MUL_f32_f32_1916_inst <=> (branch_block_stmt_1659/assign_stmt_1917/MUL_f32_f32_1916_Sample/rr branch_block_stmt_1659/assign_stmt_1917/MUL_f32_f32_1916_Update/cr) (branch_block_stmt_1659/assign_stmt_1917/MUL_f32_f32_1916_Sample/ra branch_block_stmt_1659/assign_stmt_1917/MUL_f32_f32_1916_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 742
  // ($cast ($float<8,23>) phitmp32 )
  type_cast_1923_inst <=> (branch_block_stmt_1659/bb_10_bb_11_PhiReq/phi_stmt_1920/phi_stmt_1920_sources/type_cast_1923/SplitProtocol/Sample/rr branch_block_stmt_1659/bb_10_bb_11_PhiReq/phi_stmt_1920/phi_stmt_1920_sources/type_cast_1923/SplitProtocol/Update/cr) (branch_block_stmt_1659/bb_10_bb_11_PhiReq/phi_stmt_1920/phi_stmt_1920_sources/type_cast_1923/SplitProtocol/Sample/ra branch_block_stmt_1659/bb_10_bb_11_PhiReq/phi_stmt_1920/phi_stmt_1920_sources/type_cast_1923/SplitProtocol/Update/ca)
  phi_stmt_1920 <=> (branch_block_stmt_1659/bb_10_bb_11_PhiReq/phi_stmt_1920/phi_stmt_1920_req branch_block_stmt_1659/bb_8_bb_11_PhiReq/phi_stmt_1920/phi_stmt_1920_req branch_block_stmt_1659/bb_9_bb_11_PhiReq/phi_stmt_1920/phi_stmt_1920_req) (branch_block_stmt_1659/merge_stmt_1919_PhiAck/phi_stmt_1920_ack)
  // 		iNsTr_38 := (iNsTr_2 * ($bitcast ($float<8,23>) _f3.886080e-04 ))
  //  file prog.aa, line 745
  // (iNsTr_2 * ($bitcast ($float<8,23>) _f3.886080e-04 ))
  MUL_f32_f32_1935_inst <=> (branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/MUL_f32_f32_1935_Sample/rr branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/MUL_f32_f32_1935_Update/cr) (branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/MUL_f32_f32_1935_Sample/ra branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/MUL_f32_f32_1935_Update/ca)
  // 		iNsTr_39 := (iNsTr_38 + flux_rotor_prevx_x0)
  //  file prog.aa, line 746
  // (iNsTr_38 + flux_rotor_prevx_x0)
  ADD_f32_f32_1940_inst <=> (branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/ADD_f32_f32_1940_Sample/rr branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/ADD_f32_f32_1940_Update/cr) (branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/ADD_f32_f32_1940_Sample/ra branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/ADD_f32_f32_1940_Update/ca)
  // 		iNsTr_40 := (iNsTr_4 * ($bitcast ($float<8,23>) _f7.790627e+00 ))
  //  file prog.aa, line 747
  // (iNsTr_4 * ($bitcast ($float<8,23>) _f7.790627e+00 ))
  MUL_f32_f32_1946_inst <=> (branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/MUL_f32_f32_1946_Sample/rr branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/MUL_f32_f32_1946_Update/cr) (branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/MUL_f32_f32_1946_Sample/ra branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/MUL_f32_f32_1946_Update/ca)
  // 		tmp10x_xix_xi1 := ($bitcast ($uint<32>) iNsTr_40 )
  //  file prog.aa, line 748
  // ($bitcast ($uint<32>) iNsTr_40 )
  type_cast_1950_inst <=> (branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/type_cast_1950_Sample/rr branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/type_cast_1950_Update/cr) (branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/type_cast_1950_Sample/ra branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/type_cast_1950_Update/ca)
  // 		tmp6x_xix_xi2 := ($bitcast ($uint<32>) iNsTr_39 )
  //  file prog.aa, line 749
  // ($bitcast ($uint<32>) iNsTr_39 )
  type_cast_1954_inst <=> (branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/type_cast_1954_Sample/rr branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/type_cast_1954_Update/cr) (branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/type_cast_1954_Sample/ra branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/type_cast_1954_Update/ca)
  // 		iNsTr_41 := (iNsTr_40 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 751
  // (iNsTr_40 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_1960_inst <=> (branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/EQ_f32_u1_1960_Sample/rr branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/EQ_f32_u1_1960_Update/cr) (branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/EQ_f32_u1_1960_Sample/ra branch_block_stmt_1659/assign_stmt_1936_to_assign_stmt_1961/EQ_f32_u1_1960_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 752
  if_stmt_1962_branch <=> (branch_block_stmt_1659/if_stmt_1962_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_1962_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_1962_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 754
  // 		iNsTr_52 := (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 756
  // (tmp10x_xix_xi1 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_1973_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/LSHR_u32_u32_1973_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/LSHR_u32_u32_1973_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/LSHR_u32_u32_1973_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/LSHR_u32_u32_1973_Update/ca)
  // 		iNsTr_53 := (iNsTr_52 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 757
  // (iNsTr_52 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_1979_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_1979_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_1979_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_1979_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_1979_Update/ca)
  // 		iNsTr_54 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 758
  // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_1985_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/LSHR_u32_u32_1985_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/LSHR_u32_u32_1985_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/LSHR_u32_u32_1985_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/LSHR_u32_u32_1985_Update/ca)
  // 		iNsTr_55 := (iNsTr_54 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 759
  // (iNsTr_54 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_1991_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_1991_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_1991_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_1991_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_1991_Update/ca)
  // 		iNsTr_56 := (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 760
  // (tmp10x_xix_xi1 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_1997_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/SHL_u32_u32_1997_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/SHL_u32_u32_1997_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/SHL_u32_u32_1997_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/SHL_u32_u32_1997_Update/ca)
  // 		iNsTr_57 := (iNsTr_56 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 761
  // (iNsTr_56 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_2003_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_2003_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_2003_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_2003_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_2003_Update/ca)
  // 		iNsTr_58 := (iNsTr_57 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 762
  // (iNsTr_57 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_2009_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/OR_u32_u32_2009_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/OR_u32_u32_2009_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/OR_u32_u32_2009_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/OR_u32_u32_2009_Update/ca)
  // 		iNsTr_59 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 763
  // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  LSHR_u32_u32_2015_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/LSHR_u32_u32_2015_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/LSHR_u32_u32_2015_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/LSHR_u32_u32_2015_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/LSHR_u32_u32_2015_Update/ca)
  // 		iNsTr_60 := (iNsTr_59 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  //  file prog.aa, line 764
  // (iNsTr_59 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  AND_u32_u32_2021_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_2021_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_2021_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_2021_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_2021_Update/ca)
  // 		iNsTr_61 := (iNsTr_60 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  //  file prog.aa, line 765
  // (iNsTr_60 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  OR_u32_u32_2027_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/OR_u32_u32_2027_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/OR_u32_u32_2027_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/OR_u32_u32_2027_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/OR_u32_u32_2027_Update/ca)
  // 		iNsTr_62 := (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
  //  file prog.aa, line 766
  // (tmp6x_xix_xi2 ^ tmp10x_xix_xi1)
  XOR_u32_u32_2032_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/XOR_u32_u32_2032_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/XOR_u32_u32_2032_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/XOR_u32_u32_2032_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/XOR_u32_u32_2032_Update/ca)
  // 		iNsTr_63 := (iNsTr_62 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 767
  // (iNsTr_62 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_2038_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_2038_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_2038_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_2038_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/AND_u32_u32_2038_Update/ca)
  // 		iNsTr_64 := (iNsTr_53 - iNsTr_55)
  //  file prog.aa, line 768
  // (iNsTr_53 - iNsTr_55)
  SUB_u32_u32_2043_inst <=> (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/SUB_u32_u32_2043_Sample/rr branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/SUB_u32_u32_2043_Update/cr) (branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/SUB_u32_u32_2043_Sample/ra branch_block_stmt_1659/assign_stmt_1974_to_assign_stmt_2044/SUB_u32_u32_2043_Update/ca)
  // CP-DP links for switch  
  //  file prog.aa, line 769
  switch_stmt_2045_select_expr_0 <=> (branch_block_stmt_1659/switch_stmt_2045__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_1659/switch_stmt_2045__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_1659/switch_stmt_2045__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_1659/switch_stmt_2045__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_2045_branch_0 <=> (branch_block_stmt_1659/switch_stmt_2045__condition_check__/condition_0/cmp) ($open branch_block_stmt_1659/switch_stmt_2045_choice_0/ack1)
  switch_stmt_2045_select_expr_1 <=> (branch_block_stmt_1659/switch_stmt_2045__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_1659/switch_stmt_2045__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_1659/switch_stmt_2045__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_1659/switch_stmt_2045__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_2045_branch_1 <=> (branch_block_stmt_1659/switch_stmt_2045__condition_check__/condition_1/cmp) ($open branch_block_stmt_1659/switch_stmt_2045_choice_1/ack1)
  switch_stmt_2045_branch_default <=> (branch_block_stmt_1659/switch_stmt_2045__condition_check__/$exit) (branch_block_stmt_1659/switch_stmt_2045_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.aa, line 778
  // CP-DP links for merge  
  //  file prog.aa, line 782
  // ($cast ($uint<32>) iNsTr_137 )
  type_cast_2061_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2058/phi_stmt_2058_sources/type_cast_2061/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2058/phi_stmt_2058_sources/type_cast_2061/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2058/phi_stmt_2058_sources/type_cast_2061/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2058/phi_stmt_2058_sources/type_cast_2061/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_58 )
  type_cast_2063_inst <=> (branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2058/phi_stmt_2058_sources/type_cast_2063/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2058/phi_stmt_2058_sources/type_cast_2063/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2058/phi_stmt_2058_sources/type_cast_2063/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2058/phi_stmt_2058_sources/type_cast_2063/SplitProtocol/Update/ca)
  phi_stmt_2058 <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2058/phi_stmt_2058_req branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2058/phi_stmt_2058_req) (branch_block_stmt_1659/merge_stmt_2057_PhiAck/phi_stmt_2058_ack)
  // ($cast ($uint<32>) iNsTr_136 )
  type_cast_2067_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2064/phi_stmt_2064_sources/type_cast_2067/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2064/phi_stmt_2064_sources/type_cast_2067/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2064/phi_stmt_2064_sources/type_cast_2067/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2064/phi_stmt_2064_sources/type_cast_2067/SplitProtocol/Update/ca)
  phi_stmt_2064 <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2064/phi_stmt_2064_req branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi5x_xpreheader_bbx_xnph7x_xix_xix_xi5_PhiReq/phi_stmt_2064/phi_stmt_2064_req) (branch_block_stmt_1659/merge_stmt_2057_PhiAck/phi_stmt_2064_ack)
  // 		iNsTr_108 := (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 786
  // (xx_x016x_xix_xix_xi3 >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_2076_inst <=> (branch_block_stmt_1659/assign_stmt_2077_to_assign_stmt_2082/LSHR_u32_u32_2076_Sample/rr branch_block_stmt_1659/assign_stmt_2077_to_assign_stmt_2082/LSHR_u32_u32_2076_Update/cr) (branch_block_stmt_1659/assign_stmt_2077_to_assign_stmt_2082/LSHR_u32_u32_2076_Sample/ra branch_block_stmt_1659/assign_stmt_2077_to_assign_stmt_2082/LSHR_u32_u32_2076_Update/ca)
  // 		iNsTr_109 := (iNsTr_108 > iNsTr_61)
  //  file prog.aa, line 788
  // (iNsTr_108 > iNsTr_61)
  UGT_u32_u1_2081_inst <=> (branch_block_stmt_1659/assign_stmt_2077_to_assign_stmt_2082/UGT_u32_u1_2081_Sample/rr branch_block_stmt_1659/assign_stmt_2077_to_assign_stmt_2082/UGT_u32_u1_2081_Update/cr) (branch_block_stmt_1659/assign_stmt_2077_to_assign_stmt_2082/UGT_u32_u1_2081_Sample/ra branch_block_stmt_1659/assign_stmt_2077_to_assign_stmt_2082/UGT_u32_u1_2081_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 789
  if_stmt_2083_branch <=> (branch_block_stmt_1659/if_stmt_2083_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2083_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2083_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 791
  // CP-DP links for merge  
  //  file prog.aa, line 795
  // ($cast ($uint<32>) iNsTr_162 )
  type_cast_2095_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2092/phi_stmt_2092_sources/type_cast_2095/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2092/phi_stmt_2092_sources/type_cast_2095/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2092/phi_stmt_2092_sources/type_cast_2095/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2092/phi_stmt_2092_sources/type_cast_2095/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_61 )
  type_cast_2097_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2092/phi_stmt_2092_sources/type_cast_2097/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2092/phi_stmt_2092_sources/type_cast_2097/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2092/phi_stmt_2092_sources/type_cast_2097/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2092/phi_stmt_2092_sources/type_cast_2097/SplitProtocol/Update/ca)
  phi_stmt_2092 <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2092/phi_stmt_2092_req branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2092/phi_stmt_2092_req) (branch_block_stmt_1659/merge_stmt_2091_PhiAck/phi_stmt_2092_ack)
  // ($cast ($uint<32>) iNsTr_163 )
  type_cast_2101_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2098/phi_stmt_2098_sources/type_cast_2101/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2098/phi_stmt_2098_sources/type_cast_2101/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2098/phi_stmt_2098_sources/type_cast_2101/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2098/phi_stmt_2098_sources/type_cast_2101/SplitProtocol/Update/ca)
  phi_stmt_2098 <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2098/phi_stmt_2098_req branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8x_xpreheader_bbx_xnphx_xix_xix_xi8_PhiReq/phi_stmt_2098/phi_stmt_2098_req) (branch_block_stmt_1659/merge_stmt_2091_PhiAck/phi_stmt_2098_ack)
  // 		iNsTr_162 := (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 799
  // (shifted_divisorx_x03x_xix_xix_xi6 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_2110_inst <=> (branch_block_stmt_1659/assign_stmt_2111_to_assign_stmt_2122/SHL_u32_u32_2110_Sample/rr branch_block_stmt_1659/assign_stmt_2111_to_assign_stmt_2122/SHL_u32_u32_2110_Update/cr) (branch_block_stmt_1659/assign_stmt_2111_to_assign_stmt_2122/SHL_u32_u32_2110_Sample/ra branch_block_stmt_1659/assign_stmt_2111_to_assign_stmt_2122/SHL_u32_u32_2110_Update/ca)
  // 		iNsTr_163 := (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 800
  // (curr_quotientx_x02x_xix_xix_xi7 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_2116_inst <=> (branch_block_stmt_1659/assign_stmt_2111_to_assign_stmt_2122/SHL_u32_u32_2116_Sample/rr branch_block_stmt_1659/assign_stmt_2111_to_assign_stmt_2122/SHL_u32_u32_2116_Update/cr) (branch_block_stmt_1659/assign_stmt_2111_to_assign_stmt_2122/SHL_u32_u32_2116_Sample/ra branch_block_stmt_1659/assign_stmt_2111_to_assign_stmt_2122/SHL_u32_u32_2116_Update/ca)
  // 		iNsTr_164 := (iNsTr_162 < iNsTr_108)
  //  file prog.aa, line 802
  // (iNsTr_162 < iNsTr_108)
  ULT_u32_u1_2121_inst <=> (branch_block_stmt_1659/assign_stmt_2111_to_assign_stmt_2122/ULT_u32_u1_2121_Sample/rr branch_block_stmt_1659/assign_stmt_2111_to_assign_stmt_2122/ULT_u32_u1_2121_Update/cr) (branch_block_stmt_1659/assign_stmt_2111_to_assign_stmt_2122/ULT_u32_u1_2121_Sample/ra branch_block_stmt_1659/assign_stmt_2111_to_assign_stmt_2122/ULT_u32_u1_2121_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 803
  if_stmt_2123_branch <=> (branch_block_stmt_1659/if_stmt_2123_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2123_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2123_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 805
  // ($cast ($uint<32>) iNsTr_163 )
  type_cast_2133_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2130/phi_stmt_2130_sources/type_cast_2133/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2130/phi_stmt_2130_sources/type_cast_2133/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2130/phi_stmt_2130_sources/type_cast_2133/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2130/phi_stmt_2130_sources/type_cast_2133/SplitProtocol/Update/ca)
  phi_stmt_2130 <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2130/phi_stmt_2130_req) (branch_block_stmt_1659/merge_stmt_2129_PhiAck/phi_stmt_2130_ack)
  // ($cast ($uint<32>) iNsTr_162 )
  type_cast_2137_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2134/phi_stmt_2134_sources/type_cast_2137/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2134/phi_stmt_2134_sources/type_cast_2137/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2134/phi_stmt_2134_sources/type_cast_2137/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2134/phi_stmt_2134_sources/type_cast_2137/SplitProtocol/Update/ca)
  phi_stmt_2134 <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi8_xx_x_crit_edgex_xix_xix_xi11x_xloopexit_PhiReq/phi_stmt_2134/phi_stmt_2134_req) (branch_block_stmt_1659/merge_stmt_2129_PhiAck/phi_stmt_2134_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 811
  // ($cast ($uint<32>) iNsTr_61 )
  type_cast_2144_inst <=> (branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2141/phi_stmt_2141_sources/type_cast_2144/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2141/phi_stmt_2141_sources/type_cast_2144/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2141/phi_stmt_2141_sources/type_cast_2144/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2141/phi_stmt_2141_sources/type_cast_2144/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa12 )
  type_cast_2146_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2141/phi_stmt_2141_sources/type_cast_2146/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2141/phi_stmt_2141_sources/type_cast_2146/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2141/phi_stmt_2141_sources/type_cast_2146/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2141/phi_stmt_2141_sources/type_cast_2146/SplitProtocol/Update/ca)
  phi_stmt_2141 <=> (branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2141/phi_stmt_2141_req branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2141/phi_stmt_2141_req) (branch_block_stmt_1659/merge_stmt_2140_PhiAck/phi_stmt_2141_ack)
  // ($cast ($uint<32>) xx_xlcssa13 )
  type_cast_2153_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2147/phi_stmt_2147_sources/type_cast_2153/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2147/phi_stmt_2147_sources/type_cast_2153/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2147/phi_stmt_2147_sources/type_cast_2153/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2147/phi_stmt_2147_sources/type_cast_2153/SplitProtocol/Update/ca)
  phi_stmt_2147 <=> (branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi5_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2147/phi_stmt_2147_req branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11x_xloopexit_xx_x_crit_edgex_xix_xix_xi11_PhiReq/phi_stmt_2147/phi_stmt_2147_req) (branch_block_stmt_1659/merge_stmt_2140_PhiAck/phi_stmt_2147_ack)
  // 		iNsTr_136 := (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
  //  file prog.aa, line 815
  // (curr_quotientx_x0x_xlcssax_xix_xix_xi10 + quotientx_x05x_xix_xix_xi4)
  ADD_u32_u32_2158_inst <=> (branch_block_stmt_1659/assign_stmt_2159_to_assign_stmt_2169/ADD_u32_u32_2158_Sample/rr branch_block_stmt_1659/assign_stmt_2159_to_assign_stmt_2169/ADD_u32_u32_2158_Update/cr) (branch_block_stmt_1659/assign_stmt_2159_to_assign_stmt_2169/ADD_u32_u32_2158_Sample/ra branch_block_stmt_1659/assign_stmt_2159_to_assign_stmt_2169/ADD_u32_u32_2158_Update/ca)
  // 		iNsTr_137 := (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
  //  file prog.aa, line 816
  // (xx_x016x_xix_xix_xi3 - shifted_divisorx_x0x_xlcssax_xix_xix_xi9)
  SUB_u32_u32_2163_inst <=> (branch_block_stmt_1659/assign_stmt_2159_to_assign_stmt_2169/SUB_u32_u32_2163_Sample/rr branch_block_stmt_1659/assign_stmt_2159_to_assign_stmt_2169/SUB_u32_u32_2163_Update/cr) (branch_block_stmt_1659/assign_stmt_2159_to_assign_stmt_2169/SUB_u32_u32_2163_Sample/ra branch_block_stmt_1659/assign_stmt_2159_to_assign_stmt_2169/SUB_u32_u32_2163_Update/ca)
  // 		iNsTr_138 := (iNsTr_137 < iNsTr_61)
  //  file prog.aa, line 818
  // (iNsTr_137 < iNsTr_61)
  ULT_u32_u1_2168_inst <=> (branch_block_stmt_1659/assign_stmt_2159_to_assign_stmt_2169/ULT_u32_u1_2168_Sample/rr branch_block_stmt_1659/assign_stmt_2159_to_assign_stmt_2169/ULT_u32_u1_2168_Update/cr) (branch_block_stmt_1659/assign_stmt_2159_to_assign_stmt_2169/ULT_u32_u1_2168_Sample/ra branch_block_stmt_1659/assign_stmt_2159_to_assign_stmt_2169/ULT_u32_u1_2168_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 819
  if_stmt_2170_branch <=> (branch_block_stmt_1659/if_stmt_2170_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2170_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2170_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 821
  // ($cast ($uint<32>) iNsTr_136 )
  type_cast_2180_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq/phi_stmt_2177/phi_stmt_2177_sources/type_cast_2180/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq/phi_stmt_2177/phi_stmt_2177_sources/type_cast_2180/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq/phi_stmt_2177/phi_stmt_2177_sources/type_cast_2180/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq/phi_stmt_2177/phi_stmt_2177_sources/type_cast_2180/SplitProtocol/Update/ca)
  phi_stmt_2177 <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi11_xx_xloopexitx_xix_xix_xi13x_xloopexit_PhiReq/phi_stmt_2177/phi_stmt_2177_req) (branch_block_stmt_1659/merge_stmt_2176_PhiAck/phi_stmt_2177_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 826
  // ($cast ($uint<32>) xx_xlcssa14 )
  type_cast_2190_inst <=> (branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq/phi_stmt_2184/phi_stmt_2184_sources/type_cast_2190/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq/phi_stmt_2184/phi_stmt_2184_sources/type_cast_2190/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq/phi_stmt_2184/phi_stmt_2184_sources/type_cast_2190/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq/phi_stmt_2184/phi_stmt_2184_sources/type_cast_2190/SplitProtocol/Update/ca)
  phi_stmt_2184 <=> (branch_block_stmt_1659/bb_12_xx_xloopexitx_xix_xix_xi13_PhiReq/phi_stmt_2184/phi_stmt_2184_req branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi13x_xloopexit_xx_xloopexitx_xix_xix_xi13_PhiReq/phi_stmt_2184/phi_stmt_2184_req) (branch_block_stmt_1659/merge_stmt_2183_PhiAck/phi_stmt_2184_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 831
  // ($cast ($uint<32>) xx_x0x_xix_xix_xi12 )
  type_cast_2197_inst <=> (branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2194/phi_stmt_2194_sources/type_cast_2197/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2194/phi_stmt_2194_sources/type_cast_2197/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2194/phi_stmt_2194_sources/type_cast_2197/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2194/phi_stmt_2194_sources/type_cast_2197/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_58 )
  type_cast_2199_inst <=> (branch_block_stmt_1659/bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2194/phi_stmt_2194_sources/type_cast_2199/SplitProtocol/Sample/rr branch_block_stmt_1659/bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2194/phi_stmt_2194_sources/type_cast_2199/SplitProtocol/Update/cr) (branch_block_stmt_1659/bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2194/phi_stmt_2194_sources/type_cast_2199/SplitProtocol/Sample/ra branch_block_stmt_1659/bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2194/phi_stmt_2194_sources/type_cast_2199/SplitProtocol/Update/ca)
  phi_stmt_2194 <=> (branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi13_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2194/phi_stmt_2194_req branch_block_stmt_1659/bb_12_udiv32x_xexitx_xpreheaderx_xix_xi16_PhiReq/phi_stmt_2194/phi_stmt_2194_req) (branch_block_stmt_1659/merge_stmt_2193_PhiAck/phi_stmt_2194_ack)
  // 		iNsTr_92 := (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 834
  // (tempx_x0x_xphx_xix_xi14 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_2205_inst <=> (branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/AND_u32_u32_2205_Sample/rr branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/AND_u32_u32_2205_Update/cr) (branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/AND_u32_u32_2205_Sample/ra branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/AND_u32_u32_2205_Update/ca)
  // 		iNsTr_93 := (iNsTr_92 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 836
  // (iNsTr_92 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_2211_inst <=> (branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/EQ_u32_u1_2211_Sample/rr branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/EQ_u32_u1_2211_Update/cr) (branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/EQ_u32_u1_2211_Sample/ra branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/EQ_u32_u1_2211_Update/ca)
  // 		iNsTr_94 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 838
  // (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi14 )
  type_cast_2215_inst <=> (branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/type_cast_2215_Sample/rr branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/type_cast_2215_Update/cr) (branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/type_cast_2215_Sample/ra branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/type_cast_2215_Update/ca)
  NEQ_i32_u1_2219_inst <=> (branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/NEQ_i32_u1_2219_Sample/rr branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/NEQ_i32_u1_2219_Update/cr) (branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/NEQ_i32_u1_2219_Sample/ra branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/NEQ_i32_u1_2219_Update/ca)
  // 		orx_xcond11x_xix_xi15 := (iNsTr_93 & iNsTr_94)
  //  file prog.aa, line 839
  // (iNsTr_93 & iNsTr_94)
  AND_u1_u1_2224_inst <=> (branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/AND_u1_u1_2224_Sample/rr branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/AND_u1_u1_2224_Update/cr) (branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/AND_u1_u1_2224_Sample/ra branch_block_stmt_1659/assign_stmt_2206_to_assign_stmt_2225/AND_u1_u1_2224_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 840
  if_stmt_2226_branch <=> (branch_block_stmt_1659/if_stmt_2226_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2226_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2226_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 842
  // CP-DP links for merge  
  //  file prog.aa, line 846
  // ($cast ($uint<32>) indvarx_xnextx_xix_xi19 )
  type_cast_2238_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2235/phi_stmt_2235_sources/type_cast_2238/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2235/phi_stmt_2235_sources/type_cast_2238/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2235/phi_stmt_2235_sources/type_cast_2238/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2235/phi_stmt_2235_sources/type_cast_2238/SplitProtocol/Update/ca)
  phi_stmt_2235 <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2235/phi_stmt_2235_req branch_block_stmt_1659/udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2235/phi_stmt_2235_req) (branch_block_stmt_1659/merge_stmt_2234_PhiAck/phi_stmt_2235_ack)
  // ($cast ($uint<32>) iNsTr_141 )
  type_cast_2245_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2242/phi_stmt_2242_sources/type_cast_2245/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2242/phi_stmt_2242_sources/type_cast_2245/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2242/phi_stmt_2242_sources/type_cast_2245/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2242/phi_stmt_2242_sources/type_cast_2245/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
  type_cast_2247_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2242/phi_stmt_2242_sources/type_cast_2247/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2242/phi_stmt_2242_sources/type_cast_2247/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2242/phi_stmt_2242_sources/type_cast_2247/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2242/phi_stmt_2242_sources/type_cast_2247/SplitProtocol/Update/ca)
  phi_stmt_2242 <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2242/phi_stmt_2242_req branch_block_stmt_1659/udiv32x_xexitx_xix_xi20x_xpreheader_udiv32x_xexitx_xix_xi20_PhiReq/phi_stmt_2242/phi_stmt_2242_req) (branch_block_stmt_1659/merge_stmt_2234_PhiAck/phi_stmt_2242_ack)
  // 		iNsTr_141 := (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 850
  // (tempx_x012x_xix_xi17 << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_2253_inst <=> (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/SHL_u32_u32_2253_Sample/rr branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/SHL_u32_u32_2253_Update/cr) (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/SHL_u32_u32_2253_Sample/ra branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/SHL_u32_u32_2253_Update/ca)
  // 		iNsTr_142 := (iNsTr_141 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 851
  // (iNsTr_141 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_2259_inst <=> (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/AND_u32_u32_2259_Sample/rr branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/AND_u32_u32_2259_Update/cr) (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/AND_u32_u32_2259_Sample/ra branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/AND_u32_u32_2259_Update/ca)
  // 		iNsTr_143 := (iNsTr_142 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 853
  // (iNsTr_142 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_2265_inst <=> (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/EQ_u32_u1_2265_Sample/rr branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/EQ_u32_u1_2265_Update/cr) (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/EQ_u32_u1_2265_Sample/ra branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/EQ_u32_u1_2265_Update/ca)
  // 		iNsTr_144 := (($bitcast ($int<32>) iNsTr_141 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 855
  // (($bitcast ($int<32>) iNsTr_141 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_141 )
  type_cast_2269_inst <=> (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/type_cast_2269_Sample/rr branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/type_cast_2269_Update/cr) (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/type_cast_2269_Sample/ra branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/type_cast_2269_Update/ca)
  NEQ_i32_u1_2273_inst <=> (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/NEQ_i32_u1_2273_Sample/rr branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/NEQ_i32_u1_2273_Update/cr) (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/NEQ_i32_u1_2273_Sample/ra branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/NEQ_i32_u1_2273_Update/ca)
  // 		orx_xcondx_xix_xi18 := (iNsTr_143 & iNsTr_144)
  //  file prog.aa, line 856
  // (iNsTr_143 & iNsTr_144)
  AND_u1_u1_2278_inst <=> (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/AND_u1_u1_2278_Sample/rr branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/AND_u1_u1_2278_Update/cr) (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/AND_u1_u1_2278_Sample/ra branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/AND_u1_u1_2278_Update/ca)
  // 		indvarx_xnextx_xix_xi19 := (iNsTr_140 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 857
  // (iNsTr_140 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_2284_inst <=> (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/ADD_u32_u32_2284_Sample/rr branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/ADD_u32_u32_2284_Update/cr) (branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/ADD_u32_u32_2284_Sample/ra branch_block_stmt_1659/assign_stmt_2254_to_assign_stmt_2285/ADD_u32_u32_2284_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 858
  if_stmt_2286_branch <=> (branch_block_stmt_1659/if_stmt_2286_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2286_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2286_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 860
  // ($cast ($uint<32>) iNsTr_141 )
  type_cast_2296_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq/phi_stmt_2293/phi_stmt_2293_sources/type_cast_2296/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq/phi_stmt_2293/phi_stmt_2293_sources/type_cast_2296/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq/phi_stmt_2293/phi_stmt_2293_sources/type_cast_2296/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq/phi_stmt_2293/phi_stmt_2293_sources/type_cast_2296/SplitProtocol/Update/ca)
  phi_stmt_2293 <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq/phi_stmt_2293/phi_stmt_2293_req) (branch_block_stmt_1659/merge_stmt_2292_PhiAck/phi_stmt_2293_ack)
  // ($cast ($uint<32>) iNsTr_140 )
  type_cast_2300_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq/phi_stmt_2297/phi_stmt_2297_sources/type_cast_2300/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq/phi_stmt_2297/phi_stmt_2297_sources/type_cast_2300/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq/phi_stmt_2297/phi_stmt_2297_sources/type_cast_2300/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq/phi_stmt_2297/phi_stmt_2297_sources/type_cast_2300/SplitProtocol/Update/ca)
  phi_stmt_2297 <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi20_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_PhiReq/phi_stmt_2297/phi_stmt_2297_req) (branch_block_stmt_1659/merge_stmt_2292_PhiAck/phi_stmt_2297_ack)
  // 		xx_xnotx_xi21 := (iNsTr_54 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
  //  file prog.aa, line 864
  // (iNsTr_54 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
  OR_u32_u32_2306_inst <=> (branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/OR_u32_u32_2306_Sample/rr branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/OR_u32_u32_2306_Update/cr) (branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/OR_u32_u32_2306_Sample/ra branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/OR_u32_u32_2306_Update/ca)
  // 		tmp21x_xix_xi22 := (xx_xnotx_xi21 ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 865
  // (xx_xnotx_xi21 ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  XOR_u32_u32_2312_inst <=> (branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/XOR_u32_u32_2312_Sample/rr branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/XOR_u32_u32_2312_Update/cr) (branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/XOR_u32_u32_2312_Sample/ra branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/XOR_u32_u32_2312_Update/ca)
  // 		tmp25x_xix_xi23 := (tmp21x_xix_xi22 + iNsTr_53)
  //  file prog.aa, line 866
  // (tmp21x_xix_xi22 + iNsTr_53)
  ADD_u32_u32_2317_inst <=> (branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/ADD_u32_u32_2317_Sample/rr branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/ADD_u32_u32_2317_Update/cr) (branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/ADD_u32_u32_2317_Sample/ra branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/ADD_u32_u32_2317_Update/ca)
  // 		tmp26x_xix_xi24 := (tmp25x_xix_xi23 - xx_xlcssa10)
  //  file prog.aa, line 867
  // (tmp25x_xix_xi23 - xx_xlcssa10)
  SUB_u32_u32_2322_inst <=> (branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/SUB_u32_u32_2322_Sample/rr branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/SUB_u32_u32_2322_Update/cr) (branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/SUB_u32_u32_2322_Sample/ra branch_block_stmt_1659/assign_stmt_2307_to_assign_stmt_2323/SUB_u32_u32_2322_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 870
  // ($cast ($uint<32>) tmp26x_xix_xi24 )
  type_cast_2329_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2326/phi_stmt_2326_sources/type_cast_2329/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2326/phi_stmt_2326_sources/type_cast_2329/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2326/phi_stmt_2326_sources/type_cast_2329/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2326/phi_stmt_2326_sources/type_cast_2329/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_64 )
  type_cast_2331_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2326/phi_stmt_2326_sources/type_cast_2331/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2326/phi_stmt_2326_sources/type_cast_2331/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2326/phi_stmt_2326_sources/type_cast_2331/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2326/phi_stmt_2326_sources/type_cast_2331/SplitProtocol/Update/ca)
  phi_stmt_2326 <=> (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2326/phi_stmt_2326_req branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2326/phi_stmt_2326_req) (branch_block_stmt_1659/merge_stmt_2325_PhiAck/phi_stmt_2326_ack)
  // ($cast ($uint<32>) xx_xlcssa11 )
  type_cast_2335_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2332/phi_stmt_2332_sources/type_cast_2335/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2332/phi_stmt_2332_sources/type_cast_2335/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2332/phi_stmt_2332_sources/type_cast_2335/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2332/phi_stmt_2332_sources/type_cast_2335/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi14 )
  type_cast_2337_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2332/phi_stmt_2332_sources/type_cast_2337/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2332/phi_stmt_2332_sources/type_cast_2337/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2332/phi_stmt_2332_sources/type_cast_2337/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2332/phi_stmt_2332_sources/type_cast_2337/SplitProtocol/Update/ca)
  phi_stmt_2332 <=> (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi25_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2332/phi_stmt_2332_req branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi16_xx_xcritedgex_xix_xi29_PhiReq/phi_stmt_2332/phi_stmt_2332_req) (branch_block_stmt_1659/merge_stmt_2325_PhiAck/phi_stmt_2332_ack)
  // 		iNsTr_112 := (tempx_x0x_xlcssax_xix_xi27 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 874
  // (tempx_x0x_xlcssax_xix_xi27 & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_2343_inst <=> (branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/AND_u32_u32_2343_Sample/rr branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/AND_u32_u32_2343_Update/cr) (branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/AND_u32_u32_2343_Sample/ra branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/AND_u32_u32_2343_Update/ca)
  // 		iNsTr_113 := (expx_x0x_xlcssax_xix_xi26 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 875
  // (expx_x0x_xlcssax_xix_xi26 << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_2349_inst <=> (branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/SHL_u32_u32_2349_Sample/rr branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/SHL_u32_u32_2349_Update/cr) (branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/SHL_u32_u32_2349_Sample/ra branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/SHL_u32_u32_2349_Update/ca)
  // 		iNsTr_114 := (iNsTr_113 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 876
  // (iNsTr_113 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_2355_inst <=> (branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/ADD_u32_u32_2355_Sample/rr branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/ADD_u32_u32_2355_Update/cr) (branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/ADD_u32_u32_2355_Sample/ra branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/ADD_u32_u32_2355_Update/ca)
  // 		iNsTr_115 := (iNsTr_112 | iNsTr_63)
  //  file prog.aa, line 877
  // (iNsTr_112 | iNsTr_63)
  OR_u32_u32_2360_inst <=> (branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/OR_u32_u32_2360_Sample/rr branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/OR_u32_u32_2360_Update/cr) (branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/OR_u32_u32_2360_Sample/ra branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/OR_u32_u32_2360_Update/ca)
  // 		iNsTr_116 := (iNsTr_115 | iNsTr_114)
  //  file prog.aa, line 878
  // (iNsTr_115 | iNsTr_114)
  OR_u32_u32_2365_inst <=> (branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/OR_u32_u32_2365_Sample/rr branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/OR_u32_u32_2365_Update/cr) (branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/OR_u32_u32_2365_Sample/ra branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/OR_u32_u32_2365_Update/ca)
  // 		tmp3x_xix_xi28 := ($bitcast ($float<8,23>) iNsTr_116 )
  //  file prog.aa, line 879
  // ($bitcast ($float<8,23>) iNsTr_116 )
  type_cast_2369_inst <=> (branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/type_cast_2369_Sample/rr branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/type_cast_2369_Update/cr) (branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/type_cast_2369_Sample/ra branch_block_stmt_1659/assign_stmt_2344_to_assign_stmt_2370/type_cast_2369_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 882
  // ($cast ($float<8,23>) tmp3x_xix_xi28 )
  type_cast_2376_inst <=> (branch_block_stmt_1659/xx_xcritedgex_xix_xi29_omega_calcx_xexit_PhiReq/phi_stmt_2373/phi_stmt_2373_sources/type_cast_2376/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_xcritedgex_xix_xi29_omega_calcx_xexit_PhiReq/phi_stmt_2373/phi_stmt_2373_sources/type_cast_2376/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_xcritedgex_xix_xi29_omega_calcx_xexit_PhiReq/phi_stmt_2373/phi_stmt_2373_sources/type_cast_2376/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_xcritedgex_xix_xi29_omega_calcx_xexit_PhiReq/phi_stmt_2373/phi_stmt_2373_sources/type_cast_2376/SplitProtocol/Update/ca)
  phi_stmt_2373 <=> (branch_block_stmt_1659/xx_xcritedgex_xix_xi29_omega_calcx_xexit_PhiReq/phi_stmt_2373/phi_stmt_2373_req branch_block_stmt_1659/bb_11_omega_calcx_xexit_PhiReq/phi_stmt_2373/phi_stmt_2373_req) (branch_block_stmt_1659/merge_stmt_2372_PhiAck/phi_stmt_2373_ack)
  // 		iNsTr_47 := (iNsTr_46 + iNsTr_10)
  //  file prog.aa, line 885
  // (iNsTr_46 + iNsTr_10)
  ADD_f32_f32_2384_inst <=> (branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/ADD_f32_f32_2384_Sample/rr branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/ADD_f32_f32_2384_Update/cr) (branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/ADD_f32_f32_2384_Sample/ra branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/ADD_f32_f32_2384_Update/ca)
  // 		iNsTr_48 := (iNsTr_47 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
  //  file prog.aa, line 886
  // (iNsTr_47 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
  MUL_f32_f32_2390_inst <=> (branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/MUL_f32_f32_2390_Sample/rr branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/MUL_f32_f32_2390_Update/cr) (branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/MUL_f32_f32_2390_Sample/ra branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/MUL_f32_f32_2390_Update/ca)
  // 		iNsTr_49 := (iNsTr_48 + theta_prevx_x0)
  //  file prog.aa, line 887
  // (iNsTr_48 + theta_prevx_x0)
  ADD_f32_f32_2395_inst <=> (branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/ADD_f32_f32_2395_Sample/rr branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/ADD_f32_f32_2395_Update/cr) (branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/ADD_f32_f32_2395_Sample/ra branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/ADD_f32_f32_2395_Update/ca)
  // 		tmp10x_xix_xi := ($bitcast ($uint<32>) torque_refx_x0 )
  //  file prog.aa, line 888
  // ($bitcast ($uint<32>) torque_refx_x0 )
  type_cast_2399_inst <=> (branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/type_cast_2399_Sample/rr branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/type_cast_2399_Update/cr) (branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/type_cast_2399_Sample/ra branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/type_cast_2399_Update/ca)
  // 		iNsTr_50 := (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 890
  // (torque_refx_x0 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_2405_inst <=> (branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/EQ_f32_u1_2405_Sample/rr branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/EQ_f32_u1_2405_Update/cr) (branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/EQ_f32_u1_2405_Sample/ra branch_block_stmt_1659/assign_stmt_2385_to_assign_stmt_2406/EQ_f32_u1_2405_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 891
  if_stmt_2407_branch <=> (branch_block_stmt_1659/if_stmt_2407_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2407_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2407_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 893
  // 		iNsTr_76 := (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 895
  // (tmp10x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_2418_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/LSHR_u32_u32_2418_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/LSHR_u32_u32_2418_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/LSHR_u32_u32_2418_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/LSHR_u32_u32_2418_Update/ca)
  // 		iNsTr_77 := (iNsTr_76 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 896
  // (iNsTr_76 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_2424_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2424_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2424_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2424_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2424_Update/ca)
  // 		iNsTr_78 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 897
  // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_2430_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/LSHR_u32_u32_2430_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/LSHR_u32_u32_2430_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/LSHR_u32_u32_2430_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/LSHR_u32_u32_2430_Update/ca)
  // 		iNsTr_79 := (iNsTr_78 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 898
  // (iNsTr_78 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_2436_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2436_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2436_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2436_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2436_Update/ca)
  // 		iNsTr_80 := (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 899
  // (tmp10x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_2442_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/SHL_u32_u32_2442_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/SHL_u32_u32_2442_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/SHL_u32_u32_2442_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/SHL_u32_u32_2442_Update/ca)
  // 		iNsTr_81 := (iNsTr_80 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 900
  // (iNsTr_80 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_2448_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2448_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2448_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2448_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2448_Update/ca)
  // 		iNsTr_82 := (iNsTr_81 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 901
  // (iNsTr_81 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_2454_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/OR_u32_u32_2454_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/OR_u32_u32_2454_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/OR_u32_u32_2454_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/OR_u32_u32_2454_Update/ca)
  // 		iNsTr_83 := (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 902
  // (tmp6x_xix_xi2 >> ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  LSHR_u32_u32_2460_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/LSHR_u32_u32_2460_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/LSHR_u32_u32_2460_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/LSHR_u32_u32_2460_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/LSHR_u32_u32_2460_Update/ca)
  // 		iNsTr_84 := (iNsTr_83 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  //  file prog.aa, line 903
  // (iNsTr_83 & ($bitcast ($uint<32>) _b00000000000000001111111111111111  ))
  AND_u32_u32_2466_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2466_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2466_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2466_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2466_Update/ca)
  // 		iNsTr_85 := (iNsTr_84 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  //  file prog.aa, line 904
  // (iNsTr_84 | ($bitcast ($uint<32>) _b00000000000000010000000000000000  ))
  OR_u32_u32_2472_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/OR_u32_u32_2472_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/OR_u32_u32_2472_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/OR_u32_u32_2472_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/OR_u32_u32_2472_Update/ca)
  // 		iNsTr_86 := (tmp10x_xix_xi ^ tmp6x_xix_xi2)
  //  file prog.aa, line 905
  // (tmp10x_xix_xi ^ tmp6x_xix_xi2)
  XOR_u32_u32_2477_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/XOR_u32_u32_2477_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/XOR_u32_u32_2477_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/XOR_u32_u32_2477_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/XOR_u32_u32_2477_Update/ca)
  // 		iNsTr_87 := (iNsTr_86 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 906
  // (iNsTr_86 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_2483_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2483_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2483_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2483_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/AND_u32_u32_2483_Update/ca)
  // 		iNsTr_88 := (iNsTr_77 - iNsTr_79)
  //  file prog.aa, line 907
  // (iNsTr_77 - iNsTr_79)
  SUB_u32_u32_2488_inst <=> (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/SUB_u32_u32_2488_Sample/rr branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/SUB_u32_u32_2488_Update/cr) (branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/SUB_u32_u32_2488_Sample/ra branch_block_stmt_1659/assign_stmt_2419_to_assign_stmt_2489/SUB_u32_u32_2488_Update/ca)
  // CP-DP links for switch  
  //  file prog.aa, line 908
  switch_stmt_2490_select_expr_0 <=> (branch_block_stmt_1659/switch_stmt_2490__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_1659/switch_stmt_2490__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_1659/switch_stmt_2490__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_1659/switch_stmt_2490__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_2490_branch_0 <=> (branch_block_stmt_1659/switch_stmt_2490__condition_check__/condition_0/cmp) ($open branch_block_stmt_1659/switch_stmt_2490_choice_0/ack1)
  switch_stmt_2490_select_expr_1 <=> (branch_block_stmt_1659/switch_stmt_2490__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_1659/switch_stmt_2490__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_1659/switch_stmt_2490__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_1659/switch_stmt_2490__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_2490_branch_1 <=> (branch_block_stmt_1659/switch_stmt_2490__condition_check__/condition_1/cmp) ($open branch_block_stmt_1659/switch_stmt_2490_choice_1/ack1)
  switch_stmt_2490_branch_default <=> (branch_block_stmt_1659/switch_stmt_2490__condition_check__/$exit) (branch_block_stmt_1659/switch_stmt_2490_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.aa, line 917
  // CP-DP links for merge  
  //  file prog.aa, line 921
  // ($cast ($uint<32>) iNsTr_153 )
  type_cast_2506_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2503/phi_stmt_2503_sources/type_cast_2506/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2503/phi_stmt_2503_sources/type_cast_2506/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2503/phi_stmt_2503_sources/type_cast_2506/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2503/phi_stmt_2503_sources/type_cast_2506/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_82 )
  type_cast_2508_inst <=> (branch_block_stmt_1659/bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2503/phi_stmt_2503_sources/type_cast_2508/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2503/phi_stmt_2503_sources/type_cast_2508/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2503/phi_stmt_2503_sources/type_cast_2508/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2503/phi_stmt_2503_sources/type_cast_2508/SplitProtocol/Update/ca)
  phi_stmt_2503 <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2503/phi_stmt_2503_req branch_block_stmt_1659/bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2503/phi_stmt_2503_req) (branch_block_stmt_1659/merge_stmt_2502_PhiAck/phi_stmt_2503_ack)
  // ($cast ($uint<32>) iNsTr_152 )
  type_cast_2512_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2509/phi_stmt_2509_sources/type_cast_2512/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2509/phi_stmt_2509_sources/type_cast_2512/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2509/phi_stmt_2509_sources/type_cast_2512/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2509/phi_stmt_2509_sources/type_cast_2512/SplitProtocol/Update/ca)
  phi_stmt_2509 <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2509/phi_stmt_2509_req branch_block_stmt_1659/bbx_xnph7x_xix_xix_xix_xpreheader_bbx_xnph7x_xix_xix_xi_PhiReq/phi_stmt_2509/phi_stmt_2509_req) (branch_block_stmt_1659/merge_stmt_2502_PhiAck/phi_stmt_2509_ack)
  // 		iNsTr_125 := (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 925
  // (xx_x016x_xix_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_2521_inst <=> (branch_block_stmt_1659/assign_stmt_2522_to_assign_stmt_2527/LSHR_u32_u32_2521_Sample/rr branch_block_stmt_1659/assign_stmt_2522_to_assign_stmt_2527/LSHR_u32_u32_2521_Update/cr) (branch_block_stmt_1659/assign_stmt_2522_to_assign_stmt_2527/LSHR_u32_u32_2521_Sample/ra branch_block_stmt_1659/assign_stmt_2522_to_assign_stmt_2527/LSHR_u32_u32_2521_Update/ca)
  // 		iNsTr_126 := (iNsTr_125 > iNsTr_85)
  //  file prog.aa, line 927
  // (iNsTr_125 > iNsTr_85)
  UGT_u32_u1_2526_inst <=> (branch_block_stmt_1659/assign_stmt_2522_to_assign_stmt_2527/UGT_u32_u1_2526_Sample/rr branch_block_stmt_1659/assign_stmt_2522_to_assign_stmt_2527/UGT_u32_u1_2526_Update/cr) (branch_block_stmt_1659/assign_stmt_2522_to_assign_stmt_2527/UGT_u32_u1_2526_Sample/ra branch_block_stmt_1659/assign_stmt_2522_to_assign_stmt_2527/UGT_u32_u1_2526_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 928
  if_stmt_2528_branch <=> (branch_block_stmt_1659/if_stmt_2528_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2528_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2528_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 930
  // CP-DP links for merge  
  //  file prog.aa, line 934
  // ($cast ($uint<32>) iNsTr_183 )
  type_cast_2540_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2537/phi_stmt_2537_sources/type_cast_2540/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2537/phi_stmt_2537_sources/type_cast_2540/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2537/phi_stmt_2537_sources/type_cast_2540/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2537/phi_stmt_2537_sources/type_cast_2540/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_85 )
  type_cast_2542_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2537/phi_stmt_2537_sources/type_cast_2542/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2537/phi_stmt_2537_sources/type_cast_2542/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2537/phi_stmt_2537_sources/type_cast_2542/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2537/phi_stmt_2537_sources/type_cast_2542/SplitProtocol/Update/ca)
  phi_stmt_2537 <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2537/phi_stmt_2537_req branch_block_stmt_1659/bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2537/phi_stmt_2537_req) (branch_block_stmt_1659/merge_stmt_2536_PhiAck/phi_stmt_2537_ack)
  // ($cast ($uint<32>) iNsTr_184 )
  type_cast_2546_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2543/phi_stmt_2543_sources/type_cast_2546/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2543/phi_stmt_2543_sources/type_cast_2546/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2543/phi_stmt_2543_sources/type_cast_2546/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2543/phi_stmt_2543_sources/type_cast_2546/SplitProtocol/Update/ca)
  phi_stmt_2543 <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2543/phi_stmt_2543_req branch_block_stmt_1659/bbx_xnphx_xix_xix_xix_xpreheader_bbx_xnphx_xix_xix_xi_PhiReq/phi_stmt_2543/phi_stmt_2543_req) (branch_block_stmt_1659/merge_stmt_2536_PhiAck/phi_stmt_2543_ack)
  // 		iNsTr_183 := (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 938
  // (shifted_divisorx_x03x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_2555_inst <=> (branch_block_stmt_1659/assign_stmt_2556_to_assign_stmt_2567/SHL_u32_u32_2555_Sample/rr branch_block_stmt_1659/assign_stmt_2556_to_assign_stmt_2567/SHL_u32_u32_2555_Update/cr) (branch_block_stmt_1659/assign_stmt_2556_to_assign_stmt_2567/SHL_u32_u32_2555_Sample/ra branch_block_stmt_1659/assign_stmt_2556_to_assign_stmt_2567/SHL_u32_u32_2555_Update/ca)
  // 		iNsTr_184 := (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 939
  // (curr_quotientx_x02x_xix_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_2561_inst <=> (branch_block_stmt_1659/assign_stmt_2556_to_assign_stmt_2567/SHL_u32_u32_2561_Sample/rr branch_block_stmt_1659/assign_stmt_2556_to_assign_stmt_2567/SHL_u32_u32_2561_Update/cr) (branch_block_stmt_1659/assign_stmt_2556_to_assign_stmt_2567/SHL_u32_u32_2561_Sample/ra branch_block_stmt_1659/assign_stmt_2556_to_assign_stmt_2567/SHL_u32_u32_2561_Update/ca)
  // 		iNsTr_185 := (iNsTr_183 < iNsTr_125)
  //  file prog.aa, line 941
  // (iNsTr_183 < iNsTr_125)
  ULT_u32_u1_2566_inst <=> (branch_block_stmt_1659/assign_stmt_2556_to_assign_stmt_2567/ULT_u32_u1_2566_Sample/rr branch_block_stmt_1659/assign_stmt_2556_to_assign_stmt_2567/ULT_u32_u1_2566_Update/cr) (branch_block_stmt_1659/assign_stmt_2556_to_assign_stmt_2567/ULT_u32_u1_2566_Sample/ra branch_block_stmt_1659/assign_stmt_2556_to_assign_stmt_2567/ULT_u32_u1_2566_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 942
  if_stmt_2568_branch <=> (branch_block_stmt_1659/if_stmt_2568_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2568_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2568_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 944
  // ($cast ($uint<32>) iNsTr_184 )
  type_cast_2578_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2575/phi_stmt_2575_sources/type_cast_2578/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2575/phi_stmt_2575_sources/type_cast_2578/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2575/phi_stmt_2575_sources/type_cast_2578/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2575/phi_stmt_2575_sources/type_cast_2578/SplitProtocol/Update/ca)
  phi_stmt_2575 <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2575/phi_stmt_2575_req) (branch_block_stmt_1659/merge_stmt_2574_PhiAck/phi_stmt_2575_ack)
  // ($cast ($uint<32>) iNsTr_183 )
  type_cast_2582_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2579/phi_stmt_2579_sources/type_cast_2582/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2579/phi_stmt_2579_sources/type_cast_2582/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2579/phi_stmt_2579_sources/type_cast_2582/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2579/phi_stmt_2579_sources/type_cast_2582/SplitProtocol/Update/ca)
  phi_stmt_2579 <=> (branch_block_stmt_1659/bbx_xnphx_xix_xix_xi_xx_x_crit_edgex_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2579/phi_stmt_2579_req) (branch_block_stmt_1659/merge_stmt_2574_PhiAck/phi_stmt_2579_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 950
  // ($cast ($uint<32>) iNsTr_85 )
  type_cast_2589_inst <=> (branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2586/phi_stmt_2586_sources/type_cast_2589/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2586/phi_stmt_2586_sources/type_cast_2589/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2586/phi_stmt_2586_sources/type_cast_2589/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2586/phi_stmt_2586_sources/type_cast_2589/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa7 )
  type_cast_2591_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2586/phi_stmt_2586_sources/type_cast_2591/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2586/phi_stmt_2586_sources/type_cast_2591/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2586/phi_stmt_2586_sources/type_cast_2591/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2586/phi_stmt_2586_sources/type_cast_2591/SplitProtocol/Update/ca)
  phi_stmt_2586 <=> (branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2586/phi_stmt_2586_req branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2586/phi_stmt_2586_req) (branch_block_stmt_1659/merge_stmt_2585_PhiAck/phi_stmt_2586_ack)
  // ($cast ($uint<32>) xx_xlcssa8 )
  type_cast_2598_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2592/phi_stmt_2592_sources/type_cast_2598/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2592/phi_stmt_2592_sources/type_cast_2598/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2592/phi_stmt_2592_sources/type_cast_2598/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2592/phi_stmt_2592_sources/type_cast_2598/SplitProtocol/Update/ca)
  phi_stmt_2592 <=> (branch_block_stmt_1659/bbx_xnph7x_xix_xix_xi_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2592/phi_stmt_2592_req branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xix_xloopexit_xx_x_crit_edgex_xix_xix_xi_PhiReq/phi_stmt_2592/phi_stmt_2592_req) (branch_block_stmt_1659/merge_stmt_2585_PhiAck/phi_stmt_2592_ack)
  // 		iNsTr_152 := (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
  //  file prog.aa, line 954
  // (curr_quotientx_x0x_xlcssax_xix_xix_xi + quotientx_x05x_xix_xix_xi)
  ADD_u32_u32_2603_inst <=> (branch_block_stmt_1659/assign_stmt_2604_to_assign_stmt_2614/ADD_u32_u32_2603_Sample/rr branch_block_stmt_1659/assign_stmt_2604_to_assign_stmt_2614/ADD_u32_u32_2603_Update/cr) (branch_block_stmt_1659/assign_stmt_2604_to_assign_stmt_2614/ADD_u32_u32_2603_Sample/ra branch_block_stmt_1659/assign_stmt_2604_to_assign_stmt_2614/ADD_u32_u32_2603_Update/ca)
  // 		iNsTr_153 := (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
  //  file prog.aa, line 955
  // (xx_x016x_xix_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xix_xi)
  SUB_u32_u32_2608_inst <=> (branch_block_stmt_1659/assign_stmt_2604_to_assign_stmt_2614/SUB_u32_u32_2608_Sample/rr branch_block_stmt_1659/assign_stmt_2604_to_assign_stmt_2614/SUB_u32_u32_2608_Update/cr) (branch_block_stmt_1659/assign_stmt_2604_to_assign_stmt_2614/SUB_u32_u32_2608_Sample/ra branch_block_stmt_1659/assign_stmt_2604_to_assign_stmt_2614/SUB_u32_u32_2608_Update/ca)
  // 		iNsTr_154 := (iNsTr_153 < iNsTr_85)
  //  file prog.aa, line 957
  // (iNsTr_153 < iNsTr_85)
  ULT_u32_u1_2613_inst <=> (branch_block_stmt_1659/assign_stmt_2604_to_assign_stmt_2614/ULT_u32_u1_2613_Sample/rr branch_block_stmt_1659/assign_stmt_2604_to_assign_stmt_2614/ULT_u32_u1_2613_Update/cr) (branch_block_stmt_1659/assign_stmt_2604_to_assign_stmt_2614/ULT_u32_u1_2613_Sample/ra branch_block_stmt_1659/assign_stmt_2604_to_assign_stmt_2614/ULT_u32_u1_2613_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 958
  if_stmt_2615_branch <=> (branch_block_stmt_1659/if_stmt_2615_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2615_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2615_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 960
  // ($cast ($uint<32>) iNsTr_152 )
  type_cast_2625_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2622/phi_stmt_2622_sources/type_cast_2625/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2622/phi_stmt_2622_sources/type_cast_2625/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2622/phi_stmt_2622_sources/type_cast_2625/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2622/phi_stmt_2622_sources/type_cast_2625/SplitProtocol/Update/ca)
  phi_stmt_2622 <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xi_xx_xloopexitx_xix_xix_xix_xloopexit_PhiReq/phi_stmt_2622/phi_stmt_2622_req) (branch_block_stmt_1659/merge_stmt_2621_PhiAck/phi_stmt_2622_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 965
  // ($cast ($uint<32>) xx_xlcssa9 )
  type_cast_2635_inst <=> (branch_block_stmt_1659/xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq/phi_stmt_2629/phi_stmt_2629_sources/type_cast_2635/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq/phi_stmt_2629/phi_stmt_2629_sources/type_cast_2635/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq/phi_stmt_2629/phi_stmt_2629_sources/type_cast_2635/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq/phi_stmt_2629/phi_stmt_2629_sources/type_cast_2635/SplitProtocol/Update/ca)
  phi_stmt_2629 <=> (branch_block_stmt_1659/bb_27_xx_xloopexitx_xix_xix_xi_PhiReq/phi_stmt_2629/phi_stmt_2629_req branch_block_stmt_1659/xx_xloopexitx_xix_xix_xix_xloopexit_xx_xloopexitx_xix_xix_xi_PhiReq/phi_stmt_2629/phi_stmt_2629_req) (branch_block_stmt_1659/merge_stmt_2628_PhiAck/phi_stmt_2629_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 970
  // ($cast ($uint<32>) xx_x0x_xix_xix_xi )
  type_cast_2642_inst <=> (branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_2639/phi_stmt_2639_sources/type_cast_2642/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_2639/phi_stmt_2639_sources/type_cast_2642/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_2639/phi_stmt_2639_sources/type_cast_2642/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_2639/phi_stmt_2639_sources/type_cast_2642/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_82 )
  type_cast_2644_inst <=> (branch_block_stmt_1659/bb_27_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_2639/phi_stmt_2639_sources/type_cast_2644/SplitProtocol/Sample/rr branch_block_stmt_1659/bb_27_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_2639/phi_stmt_2639_sources/type_cast_2644/SplitProtocol/Update/cr) (branch_block_stmt_1659/bb_27_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_2639/phi_stmt_2639_sources/type_cast_2644/SplitProtocol/Sample/ra branch_block_stmt_1659/bb_27_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_2639/phi_stmt_2639_sources/type_cast_2644/SplitProtocol/Update/ca)
  phi_stmt_2639 <=> (branch_block_stmt_1659/xx_xloopexitx_xix_xix_xi_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_2639/phi_stmt_2639_req branch_block_stmt_1659/bb_27_udiv32x_xexitx_xpreheaderx_xix_xi_PhiReq/phi_stmt_2639/phi_stmt_2639_req) (branch_block_stmt_1659/merge_stmt_2638_PhiAck/phi_stmt_2639_ack)
  // 		iNsTr_104 := (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 973
  // (tempx_x0x_xphx_xix_xi & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_2650_inst <=> (branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/AND_u32_u32_2650_Sample/rr branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/AND_u32_u32_2650_Update/cr) (branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/AND_u32_u32_2650_Sample/ra branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/AND_u32_u32_2650_Update/ca)
  // 		iNsTr_105 := (iNsTr_104 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 975
  // (iNsTr_104 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_2656_inst <=> (branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/EQ_u32_u1_2656_Sample/rr branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/EQ_u32_u1_2656_Update/cr) (branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/EQ_u32_u1_2656_Sample/ra branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/EQ_u32_u1_2656_Update/ca)
  // 		iNsTr_106 := (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 977
  // (($bitcast ($int<32>) tempx_x0x_xphx_xix_xi ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) tempx_x0x_xphx_xix_xi )
  type_cast_2660_inst <=> (branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/type_cast_2660_Sample/rr branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/type_cast_2660_Update/cr) (branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/type_cast_2660_Sample/ra branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/type_cast_2660_Update/ca)
  NEQ_i32_u1_2664_inst <=> (branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/NEQ_i32_u1_2664_Sample/rr branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/NEQ_i32_u1_2664_Update/cr) (branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/NEQ_i32_u1_2664_Sample/ra branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/NEQ_i32_u1_2664_Update/ca)
  // 		orx_xcond11x_xix_xi := (iNsTr_105 & iNsTr_106)
  //  file prog.aa, line 978
  // (iNsTr_105 & iNsTr_106)
  AND_u1_u1_2669_inst <=> (branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/AND_u1_u1_2669_Sample/rr branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/AND_u1_u1_2669_Update/cr) (branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/AND_u1_u1_2669_Sample/ra branch_block_stmt_1659/assign_stmt_2651_to_assign_stmt_2670/AND_u1_u1_2669_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 979
  if_stmt_2671_branch <=> (branch_block_stmt_1659/if_stmt_2671_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2671_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2671_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 981
  // CP-DP links for merge  
  //  file prog.aa, line 985
  // ($cast ($uint<32>) indvarx_xnextx_xix_xi )
  type_cast_2683_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2680/phi_stmt_2680_sources/type_cast_2683/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2680/phi_stmt_2680_sources/type_cast_2683/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2680/phi_stmt_2680_sources/type_cast_2683/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2680/phi_stmt_2680_sources/type_cast_2683/SplitProtocol/Update/ca)
  phi_stmt_2680 <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2680/phi_stmt_2680_req branch_block_stmt_1659/udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2680/phi_stmt_2680_req) (branch_block_stmt_1659/merge_stmt_2679_PhiAck/phi_stmt_2680_ack)
  // ($cast ($uint<32>) iNsTr_157 )
  type_cast_2690_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2687/phi_stmt_2687_sources/type_cast_2690/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2687/phi_stmt_2687_sources/type_cast_2690/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2687/phi_stmt_2687_sources/type_cast_2690/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2687/phi_stmt_2687_sources/type_cast_2690/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
  type_cast_2692_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2687/phi_stmt_2687_sources/type_cast_2692/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2687/phi_stmt_2687_sources/type_cast_2692/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2687/phi_stmt_2687_sources/type_cast_2692/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2687/phi_stmt_2687_sources/type_cast_2692/SplitProtocol/Update/ca)
  phi_stmt_2687 <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2687/phi_stmt_2687_req branch_block_stmt_1659/udiv32x_xexitx_xix_xix_xpreheader_udiv32x_xexitx_xix_xi_PhiReq/phi_stmt_2687/phi_stmt_2687_req) (branch_block_stmt_1659/merge_stmt_2679_PhiAck/phi_stmt_2687_ack)
  // 		iNsTr_157 := (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 989
  // (tempx_x012x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_2698_inst <=> (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/SHL_u32_u32_2698_Sample/rr branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/SHL_u32_u32_2698_Update/cr) (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/SHL_u32_u32_2698_Sample/ra branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/SHL_u32_u32_2698_Update/ca)
  // 		iNsTr_158 := (iNsTr_157 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 990
  // (iNsTr_157 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_2704_inst <=> (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/AND_u32_u32_2704_Sample/rr branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/AND_u32_u32_2704_Update/cr) (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/AND_u32_u32_2704_Sample/ra branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/AND_u32_u32_2704_Update/ca)
  // 		iNsTr_159 := (iNsTr_158 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 992
  // (iNsTr_158 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_2710_inst <=> (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/EQ_u32_u1_2710_Sample/rr branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/EQ_u32_u1_2710_Update/cr) (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/EQ_u32_u1_2710_Sample/ra branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/EQ_u32_u1_2710_Update/ca)
  // 		iNsTr_160 := (($bitcast ($int<32>) iNsTr_157 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 994
  // (($bitcast ($int<32>) iNsTr_157 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_157 )
  type_cast_2714_inst <=> (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/type_cast_2714_Sample/rr branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/type_cast_2714_Update/cr) (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/type_cast_2714_Sample/ra branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/type_cast_2714_Update/ca)
  NEQ_i32_u1_2718_inst <=> (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/NEQ_i32_u1_2718_Sample/rr branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/NEQ_i32_u1_2718_Update/cr) (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/NEQ_i32_u1_2718_Sample/ra branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/NEQ_i32_u1_2718_Update/ca)
  // 		orx_xcondx_xix_xi := (iNsTr_159 & iNsTr_160)
  //  file prog.aa, line 995
  // (iNsTr_159 & iNsTr_160)
  AND_u1_u1_2723_inst <=> (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/AND_u1_u1_2723_Sample/rr branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/AND_u1_u1_2723_Update/cr) (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/AND_u1_u1_2723_Sample/ra branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/AND_u1_u1_2723_Update/ca)
  // 		indvarx_xnextx_xix_xi := (iNsTr_156 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 996
  // (iNsTr_156 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_2729_inst <=> (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/ADD_u32_u32_2729_Sample/rr branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/ADD_u32_u32_2729_Update/cr) (branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/ADD_u32_u32_2729_Sample/ra branch_block_stmt_1659/assign_stmt_2699_to_assign_stmt_2730/ADD_u32_u32_2729_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 997
  if_stmt_2731_branch <=> (branch_block_stmt_1659/if_stmt_2731_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2731_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2731_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 999
  // ($cast ($uint<32>) iNsTr_157 )
  type_cast_2741_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_2738/phi_stmt_2738_sources/type_cast_2741/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_2738/phi_stmt_2738_sources/type_cast_2741/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_2738/phi_stmt_2738_sources/type_cast_2741/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_2738/phi_stmt_2738_sources/type_cast_2741/SplitProtocol/Update/ca)
  phi_stmt_2738 <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_2738/phi_stmt_2738_req) (branch_block_stmt_1659/merge_stmt_2737_PhiAck/phi_stmt_2738_ack)
  // ($cast ($uint<32>) iNsTr_156 )
  type_cast_2745_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_2742/phi_stmt_2742_sources/type_cast_2745/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_2742/phi_stmt_2742_sources/type_cast_2745/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_2742/phi_stmt_2742_sources/type_cast_2745/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_2742/phi_stmt_2742_sources/type_cast_2745/SplitProtocol/Update/ca)
  phi_stmt_2742 <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_PhiReq/phi_stmt_2742/phi_stmt_2742_req) (branch_block_stmt_1659/merge_stmt_2737_PhiAck/phi_stmt_2742_ack)
  // 		xx_xnotx_xi := (iNsTr_78 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
  //  file prog.aa, line 1003
  // (iNsTr_78 | ($bitcast ($uint<32>) _b11111111111111111111111100000000  ))
  OR_u32_u32_2751_inst <=> (branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/OR_u32_u32_2751_Sample/rr branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/OR_u32_u32_2751_Update/cr) (branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/OR_u32_u32_2751_Sample/ra branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/OR_u32_u32_2751_Update/ca)
  // 		tmp21x_xix_xi := (xx_xnotx_xi ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 1004
  // (xx_xnotx_xi ^ ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  XOR_u32_u32_2757_inst <=> (branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/XOR_u32_u32_2757_Sample/rr branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/XOR_u32_u32_2757_Update/cr) (branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/XOR_u32_u32_2757_Sample/ra branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/XOR_u32_u32_2757_Update/ca)
  // 		tmp25x_xix_xi := (iNsTr_77 + tmp21x_xix_xi)
  //  file prog.aa, line 1005
  // (iNsTr_77 + tmp21x_xix_xi)
  ADD_u32_u32_2762_inst <=> (branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/ADD_u32_u32_2762_Sample/rr branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/ADD_u32_u32_2762_Update/cr) (branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/ADD_u32_u32_2762_Sample/ra branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/ADD_u32_u32_2762_Update/ca)
  // 		tmp26x_xix_xi := (tmp25x_xix_xi - xx_xlcssa5)
  //  file prog.aa, line 1006
  // (tmp25x_xix_xi - xx_xlcssa5)
  SUB_u32_u32_2767_inst <=> (branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/SUB_u32_u32_2767_Sample/rr branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/SUB_u32_u32_2767_Update/cr) (branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/SUB_u32_u32_2767_Sample/ra branch_block_stmt_1659/assign_stmt_2752_to_assign_stmt_2768/SUB_u32_u32_2767_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 1009
  // ($cast ($uint<32>) tmp26x_xix_xi )
  type_cast_2774_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2771/phi_stmt_2771_sources/type_cast_2774/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2771/phi_stmt_2771_sources/type_cast_2774/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2771/phi_stmt_2771_sources/type_cast_2774/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2771/phi_stmt_2771_sources/type_cast_2774/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_88 )
  type_cast_2776_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2771/phi_stmt_2771_sources/type_cast_2776/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2771/phi_stmt_2771_sources/type_cast_2776/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2771/phi_stmt_2771_sources/type_cast_2776/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2771/phi_stmt_2771_sources/type_cast_2776/SplitProtocol/Update/ca)
  phi_stmt_2771 <=> (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2771/phi_stmt_2771_req branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2771/phi_stmt_2771_req) (branch_block_stmt_1659/merge_stmt_2770_PhiAck/phi_stmt_2771_ack)
  // ($cast ($uint<32>) xx_xlcssa6 )
  type_cast_2780_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2777/phi_stmt_2777_sources/type_cast_2780/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2777/phi_stmt_2777_sources/type_cast_2780/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2777/phi_stmt_2777_sources/type_cast_2780/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2777/phi_stmt_2777_sources/type_cast_2780/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) tempx_x0x_xphx_xix_xi )
  type_cast_2782_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2777/phi_stmt_2777_sources/type_cast_2782/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2777/phi_stmt_2777_sources/type_cast_2782/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2777/phi_stmt_2777_sources/type_cast_2782/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2777/phi_stmt_2777_sources/type_cast_2782/SplitProtocol/Update/ca)
  phi_stmt_2777 <=> (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2777/phi_stmt_2777_req branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xix_xi_xx_xcritedgex_xix_xi_PhiReq/phi_stmt_2777/phi_stmt_2777_req) (branch_block_stmt_1659/merge_stmt_2770_PhiAck/phi_stmt_2777_ack)
  // 		iNsTr_129 := (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 1013
  // (tempx_x0x_xlcssax_xix_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_2788_inst <=> (branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/AND_u32_u32_2788_Sample/rr branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/AND_u32_u32_2788_Update/cr) (branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/AND_u32_u32_2788_Sample/ra branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/AND_u32_u32_2788_Update/ca)
  // 		iNsTr_130 := (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 1014
  // (expx_x0x_xlcssax_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_2794_inst <=> (branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/SHL_u32_u32_2794_Sample/rr branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/SHL_u32_u32_2794_Update/cr) (branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/SHL_u32_u32_2794_Sample/ra branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/SHL_u32_u32_2794_Update/ca)
  // 		iNsTr_131 := (iNsTr_130 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 1015
  // (iNsTr_130 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_2800_inst <=> (branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/ADD_u32_u32_2800_Sample/rr branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/ADD_u32_u32_2800_Update/cr) (branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/ADD_u32_u32_2800_Sample/ra branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/ADD_u32_u32_2800_Update/ca)
  // 		iNsTr_132 := (iNsTr_129 | iNsTr_87)
  //  file prog.aa, line 1016
  // (iNsTr_129 | iNsTr_87)
  OR_u32_u32_2805_inst <=> (branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/OR_u32_u32_2805_Sample/rr branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/OR_u32_u32_2805_Update/cr) (branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/OR_u32_u32_2805_Sample/ra branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/OR_u32_u32_2805_Update/ca)
  // 		iNsTr_133 := (iNsTr_132 | iNsTr_131)
  //  file prog.aa, line 1017
  // (iNsTr_132 | iNsTr_131)
  OR_u32_u32_2810_inst <=> (branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/OR_u32_u32_2810_Sample/rr branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/OR_u32_u32_2810_Update/cr) (branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/OR_u32_u32_2810_Sample/ra branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/OR_u32_u32_2810_Update/ca)
  // 		tmp3x_xix_xi := ($bitcast ($float<8,23>) iNsTr_133 )
  //  file prog.aa, line 1018
  // ($bitcast ($float<8,23>) iNsTr_133 )
  type_cast_2814_inst <=> (branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/type_cast_2814_Sample/rr branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/type_cast_2814_Update/cr) (branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/type_cast_2814_Sample/ra branch_block_stmt_1659/assign_stmt_2789_to_assign_stmt_2815/type_cast_2814_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 1021
  // ($cast ($float<8,23>) tmp3x_xix_xi )
  type_cast_2821_inst <=> (branch_block_stmt_1659/xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq/phi_stmt_2818/phi_stmt_2818_sources/type_cast_2821/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq/phi_stmt_2818/phi_stmt_2818_sources/type_cast_2821/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq/phi_stmt_2818/phi_stmt_2818_sources/type_cast_2821/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq/phi_stmt_2818/phi_stmt_2818_sources/type_cast_2821/SplitProtocol/Update/ca)
  phi_stmt_2818 <=> (branch_block_stmt_1659/xx_xcritedgex_xix_xi_iq_err_calcx_xexit_PhiReq/phi_stmt_2818/phi_stmt_2818_req branch_block_stmt_1659/omega_calcx_xexit_iq_err_calcx_xexit_PhiReq/phi_stmt_2818/phi_stmt_2818_req) (branch_block_stmt_1659/merge_stmt_2817_PhiAck/phi_stmt_2818_ack)
  // 		iNsTr_68 := (iNsTr_39 * ($bitcast ($float<8,23>) _f5.014000e-03 ))
  //  file prog.aa, line 1024
  // (iNsTr_39 * ($bitcast ($float<8,23>) _f5.014000e-03 ))
  MUL_f32_f32_2830_inst <=> (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/MUL_f32_f32_2830_Sample/rr branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/MUL_f32_f32_2830_Update/cr) (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/MUL_f32_f32_2830_Sample/ra branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/MUL_f32_f32_2830_Update/ca)
  // 		iNsTr_69 := (iNsTr_68 + flux_rotor_lpf_prevx_x0)
  //  file prog.aa, line 1025
  // (iNsTr_68 + flux_rotor_lpf_prevx_x0)
  ADD_f32_f32_2835_inst <=> (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/ADD_f32_f32_2835_Sample/rr branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/ADD_f32_f32_2835_Update/cr) (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/ADD_f32_f32_2835_Sample/ra branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/ADD_f32_f32_2835_Update/ca)
  // 		iNsTr_70 := (($bitcast ($float<8,23>) _f3.000000e-01 ) - iNsTr_69)
  //  file prog.aa, line 1026
  // (($bitcast ($float<8,23>) _f3.000000e-01 ) - iNsTr_69)
  SUB_f32_f32_2841_inst <=> (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/SUB_f32_f32_2841_Sample/rr branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/SUB_f32_f32_2841_Update/cr) (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/SUB_f32_f32_2841_Sample/ra branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/SUB_f32_f32_2841_Update/ca)
  // 		iNsTr_71 := (iNsTr_70 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
  //  file prog.aa, line 1027
  // (iNsTr_70 * ($bitcast ($float<8,23>) _f5.000000e-05 ))
  MUL_f32_f32_2847_inst <=> (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/MUL_f32_f32_2847_Sample/rr branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/MUL_f32_f32_2847_Update/cr) (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/MUL_f32_f32_2847_Sample/ra branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/MUL_f32_f32_2847_Update/ca)
  // 		iNsTr_72 := (iNsTr_71 + int_flux_err_temp_2x_x0)
  //  file prog.aa, line 1028
  // (iNsTr_71 + int_flux_err_temp_2x_x0)
  ADD_f32_f32_2852_inst <=> (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/ADD_f32_f32_2852_Sample/rr branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/ADD_f32_f32_2852_Update/cr) (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/ADD_f32_f32_2852_Sample/ra branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/ADD_f32_f32_2852_Update/ca)
  // 		iNsTr_73 := (iNsTr_72 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
  //  file prog.aa, line 1029
  // (iNsTr_72 * ($bitcast ($float<8,23>) _f5.000000e+01 ))
  MUL_f32_f32_2858_inst <=> (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/MUL_f32_f32_2858_Sample/rr branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/MUL_f32_f32_2858_Update/cr) (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/MUL_f32_f32_2858_Sample/ra branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/MUL_f32_f32_2858_Update/ca)
  // 		iNsTr_74 := (iNsTr_73 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
  //  file prog.aa, line 1031
  // (iNsTr_73 < ($bitcast ($float<8,23>) _f-1.000000e+00 ))
  SLT_f32_u1_2864_inst <=> (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/SLT_f32_u1_2864_Sample/rr branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/SLT_f32_u1_2864_Update/cr) (branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/SLT_f32_u1_2864_Sample/ra branch_block_stmt_1659/assign_stmt_2831_to_assign_stmt_2865/SLT_f32_u1_2864_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1032
  if_stmt_2866_branch <=> (branch_block_stmt_1659/if_stmt_2866_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2866_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2866_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1034
  // 		iNsTr_100 := (iNsTr_73 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
  //  file prog.aa, line 1037
  // (iNsTr_73 > ($bitcast ($float<8,23>) _f1.000000e+00 ))
  SGT_f32_u1_2877_inst <=> (branch_block_stmt_1659/assign_stmt_2878/SGT_f32_u1_2877_Sample/rr branch_block_stmt_1659/assign_stmt_2878/SGT_f32_u1_2877_Update/cr) (branch_block_stmt_1659/assign_stmt_2878/SGT_f32_u1_2877_Sample/ra branch_block_stmt_1659/assign_stmt_2878/SGT_f32_u1_2877_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1038
  if_stmt_2879_branch <=> (branch_block_stmt_1659/if_stmt_2879_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2879_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2879_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1040
  // CP-DP links for merge  
  //  file prog.aa, line 1044
  // ($cast ($float<8,23>) iNsTr_73 )
  type_cast_2891_inst <=> (branch_block_stmt_1659/bb_43_bb_44_PhiReq/phi_stmt_2888/phi_stmt_2888_sources/type_cast_2891/SplitProtocol/Sample/rr branch_block_stmt_1659/bb_43_bb_44_PhiReq/phi_stmt_2888/phi_stmt_2888_sources/type_cast_2891/SplitProtocol/Update/cr) (branch_block_stmt_1659/bb_43_bb_44_PhiReq/phi_stmt_2888/phi_stmt_2888_sources/type_cast_2891/SplitProtocol/Sample/ra branch_block_stmt_1659/bb_43_bb_44_PhiReq/phi_stmt_2888/phi_stmt_2888_sources/type_cast_2891/SplitProtocol/Update/ca)
  phi_stmt_2888 <=> (branch_block_stmt_1659/bb_43_bb_44_PhiReq/phi_stmt_2888/phi_stmt_2888_req branch_block_stmt_1659/iq_err_calcx_xexit_bb_44_PhiReq/phi_stmt_2888/phi_stmt_2888_req branch_block_stmt_1659/bb_42_bb_44_PhiReq/phi_stmt_2888/phi_stmt_2888_req) (branch_block_stmt_1659/merge_stmt_2887_PhiAck/phi_stmt_2888_ack)
  // 		iNsTr_96 := (iNsTr_70 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
  //  file prog.aa, line 1047
  // (iNsTr_70 * ($bitcast ($float<8,23>) _f4.000000e+01 ))
  MUL_f32_f32_2903_inst <=> (branch_block_stmt_1659/assign_stmt_2904_to_assign_stmt_2915/MUL_f32_f32_2903_Sample/rr branch_block_stmt_1659/assign_stmt_2904_to_assign_stmt_2915/MUL_f32_f32_2903_Update/cr) (branch_block_stmt_1659/assign_stmt_2904_to_assign_stmt_2915/MUL_f32_f32_2903_Sample/ra branch_block_stmt_1659/assign_stmt_2904_to_assign_stmt_2915/MUL_f32_f32_2903_Update/ca)
  // 		iNsTr_97 := (int_flux_errx_x0 + iNsTr_96)
  //  file prog.aa, line 1048
  // (int_flux_errx_x0 + iNsTr_96)
  ADD_f32_f32_2908_inst <=> (branch_block_stmt_1659/assign_stmt_2904_to_assign_stmt_2915/ADD_f32_f32_2908_Sample/rr branch_block_stmt_1659/assign_stmt_2904_to_assign_stmt_2915/ADD_f32_f32_2908_Update/cr) (branch_block_stmt_1659/assign_stmt_2904_to_assign_stmt_2915/ADD_f32_f32_2908_Sample/ra branch_block_stmt_1659/assign_stmt_2904_to_assign_stmt_2915/ADD_f32_f32_2908_Update/ca)
  // 		iNsTr_98 := (iNsTr_97 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
  //  file prog.aa, line 1050
  // (iNsTr_97 < ($bitcast ($float<8,23>) _f-2.000000e+00 ))
  SLT_f32_u1_2914_inst <=> (branch_block_stmt_1659/assign_stmt_2904_to_assign_stmt_2915/SLT_f32_u1_2914_Sample/rr branch_block_stmt_1659/assign_stmt_2904_to_assign_stmt_2915/SLT_f32_u1_2914_Update/cr) (branch_block_stmt_1659/assign_stmt_2904_to_assign_stmt_2915/SLT_f32_u1_2914_Sample/ra branch_block_stmt_1659/assign_stmt_2904_to_assign_stmt_2915/SLT_f32_u1_2914_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1051
  if_stmt_2916_branch <=> (branch_block_stmt_1659/if_stmt_2916_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2916_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2916_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1053
  // 		iNsTr_122 := (iNsTr_97 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
  //  file prog.aa, line 1056
  // (iNsTr_97 > ($bitcast ($float<8,23>) _f2.000000e+00 ))
  SGT_f32_u1_2927_inst <=> (branch_block_stmt_1659/assign_stmt_2928/SGT_f32_u1_2927_Sample/rr branch_block_stmt_1659/assign_stmt_2928/SGT_f32_u1_2927_Update/cr) (branch_block_stmt_1659/assign_stmt_2928/SGT_f32_u1_2927_Sample/ra branch_block_stmt_1659/assign_stmt_2928/SGT_f32_u1_2927_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1057
  if_stmt_2929_branch <=> (branch_block_stmt_1659/if_stmt_2929_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2929_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2929_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1059
  // 		iNsTr_149 := (iNsTr_97 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  //  file prog.aa, line 1062
  // (iNsTr_97 == ($bitcast ($float<8,23>) _f0.000000e+00 ))
  EQ_f32_u1_2940_inst <=> (branch_block_stmt_1659/assign_stmt_2941/EQ_f32_u1_2940_Sample/rr branch_block_stmt_1659/assign_stmt_2941/EQ_f32_u1_2940_Update/cr) (branch_block_stmt_1659/assign_stmt_2941/EQ_f32_u1_2940_Sample/ra branch_block_stmt_1659/assign_stmt_2941/EQ_f32_u1_2940_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1063
  if_stmt_2942_branch <=> (branch_block_stmt_1659/if_stmt_2942_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_2942_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_2942_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1065
  // ($cast ($float<8,23>) iNsTr_97 )
  type_cast_2952_inst <=> (branch_block_stmt_1659/bb_46_xx_xthread_PhiReq/phi_stmt_2949/phi_stmt_2949_sources/type_cast_2952/SplitProtocol/Sample/rr branch_block_stmt_1659/bb_46_xx_xthread_PhiReq/phi_stmt_2949/phi_stmt_2949_sources/type_cast_2952/SplitProtocol/Update/cr) (branch_block_stmt_1659/bb_46_xx_xthread_PhiReq/phi_stmt_2949/phi_stmt_2949_sources/type_cast_2952/SplitProtocol/Sample/ra branch_block_stmt_1659/bb_46_xx_xthread_PhiReq/phi_stmt_2949/phi_stmt_2949_sources/type_cast_2952/SplitProtocol/Update/ca)
  phi_stmt_2949 <=> (branch_block_stmt_1659/bb_46_xx_xthread_PhiReq/phi_stmt_2949/phi_stmt_2949_req branch_block_stmt_1659/bb_44_xx_xthread_PhiReq/phi_stmt_2949/phi_stmt_2949_req branch_block_stmt_1659/bb_45_xx_xthread_PhiReq/phi_stmt_2949/phi_stmt_2949_req) (branch_block_stmt_1659/merge_stmt_2948_PhiAck/phi_stmt_2949_ack)
  // 		tmp10x_xi35 := ($bitcast ($uint<32>) tmp10x_xi35x_xin )
  //  file prog.aa, line 1068
  // ($bitcast ($uint<32>) tmp10x_xi35x_xin )
  type_cast_2962_inst <=> (branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/type_cast_2962_Sample/rr branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/type_cast_2962_Update/cr) (branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/type_cast_2962_Sample/ra branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/type_cast_2962_Update/ca)
  // 		iNsTr_118 := (tmp10x_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  //  file prog.aa, line 1069
  // (tmp10x_xi35 << ($bitcast ($uint<32>) _b00000000000000000000000000000111  ))
  SHL_u32_u32_2968_inst <=> (branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/SHL_u32_u32_2968_Sample/rr branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/SHL_u32_u32_2968_Update/cr) (branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/SHL_u32_u32_2968_Sample/ra branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/SHL_u32_u32_2968_Update/ca)
  // 		iNsTr_119 := (iNsTr_118 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  //  file prog.aa, line 1070
  // (iNsTr_118 & ($bitcast ($uint<32>) _b00111111111111111111111110000000  ))
  AND_u32_u32_2974_inst <=> (branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/AND_u32_u32_2974_Sample/rr branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/AND_u32_u32_2974_Update/cr) (branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/AND_u32_u32_2974_Sample/ra branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/AND_u32_u32_2974_Update/ca)
  // 		iNsTr_120 := (iNsTr_119 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  //  file prog.aa, line 1071
  // (iNsTr_119 | ($bitcast ($uint<32>) _b01000000000000000000000000000000  ))
  OR_u32_u32_2980_inst <=> (branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/OR_u32_u32_2980_Sample/rr branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/OR_u32_u32_2980_Update/cr) (branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/OR_u32_u32_2980_Sample/ra branch_block_stmt_1659/assign_stmt_2963_to_assign_stmt_2981/OR_u32_u32_2980_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 1074
  // ($cast ($uint<32>) iNsTr_170 )
  type_cast_2987_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2984/phi_stmt_2984_sources/type_cast_2987/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2984/phi_stmt_2984_sources/type_cast_2987/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2984/phi_stmt_2984_sources/type_cast_2987/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2984/phi_stmt_2984_sources/type_cast_2987/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_120 )
  type_cast_2989_inst <=> (branch_block_stmt_1659/xx_xthread_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2984/phi_stmt_2984_sources/type_cast_2989/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_xthread_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2984/phi_stmt_2984_sources/type_cast_2989/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_xthread_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2984/phi_stmt_2984_sources/type_cast_2989/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_xthread_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2984/phi_stmt_2984_sources/type_cast_2989/SplitProtocol/Update/ca)
  phi_stmt_2984 <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2984/phi_stmt_2984_req branch_block_stmt_1659/xx_xthread_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2984/phi_stmt_2984_req) (branch_block_stmt_1659/merge_stmt_2983_PhiAck/phi_stmt_2984_ack)
  // ($cast ($uint<32>) iNsTr_169 )
  type_cast_2993_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2990/phi_stmt_2990_sources/type_cast_2993/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2990/phi_stmt_2990_sources/type_cast_2993/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2990/phi_stmt_2990_sources/type_cast_2993/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2990/phi_stmt_2990_sources/type_cast_2993/SplitProtocol/Update/ca)
  phi_stmt_2990 <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2990/phi_stmt_2990_req branch_block_stmt_1659/xx_xthread_bbx_xnph7x_xix_xi_PhiReq/phi_stmt_2990/phi_stmt_2990_req) (branch_block_stmt_1659/merge_stmt_2983_PhiAck/phi_stmt_2990_ack)
  // 		iNsTr_146 := (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1078
  // (xx_x016x_xix_xi >> ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  LSHR_u32_u32_3002_inst <=> (branch_block_stmt_1659/assign_stmt_3003_to_assign_stmt_3009/LSHR_u32_u32_3002_Sample/rr branch_block_stmt_1659/assign_stmt_3003_to_assign_stmt_3009/LSHR_u32_u32_3002_Update/cr) (branch_block_stmt_1659/assign_stmt_3003_to_assign_stmt_3009/LSHR_u32_u32_3002_Sample/ra branch_block_stmt_1659/assign_stmt_3003_to_assign_stmt_3009/LSHR_u32_u32_3002_Update/ca)
  // 		iNsTr_147 := (iNsTr_146 > ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
  //  file prog.aa, line 1080
  // (iNsTr_146 > ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
  UGT_u32_u1_3008_inst <=> (branch_block_stmt_1659/assign_stmt_3003_to_assign_stmt_3009/UGT_u32_u1_3008_Sample/rr branch_block_stmt_1659/assign_stmt_3003_to_assign_stmt_3009/UGT_u32_u1_3008_Update/cr) (branch_block_stmt_1659/assign_stmt_3003_to_assign_stmt_3009/UGT_u32_u1_3008_Sample/ra branch_block_stmt_1659/assign_stmt_3003_to_assign_stmt_3009/UGT_u32_u1_3008_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1081
  if_stmt_3010_branch <=> (branch_block_stmt_1659/if_stmt_3010_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_3010_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_3010_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1083
  // CP-DP links for merge  
  //  file prog.aa, line 1087
  // ($cast ($uint<32>) iNsTr_190 )
  type_cast_3022_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3019/phi_stmt_3019_sources/type_cast_3022/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3019/phi_stmt_3019_sources/type_cast_3022/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3019/phi_stmt_3019_sources/type_cast_3022/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3019/phi_stmt_3019_sources/type_cast_3022/SplitProtocol/Update/ca)
  phi_stmt_3019 <=> (branch_block_stmt_1659/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3019/phi_stmt_3019_req branch_block_stmt_1659/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3019/phi_stmt_3019_req) (branch_block_stmt_1659/merge_stmt_3018_PhiAck/phi_stmt_3019_ack)
  // ($cast ($uint<32>) iNsTr_191 )
  type_cast_3029_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3026/phi_stmt_3026_sources/type_cast_3029/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3026/phi_stmt_3026_sources/type_cast_3029/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3026/phi_stmt_3026_sources/type_cast_3029/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3026/phi_stmt_3026_sources/type_cast_3029/SplitProtocol/Update/ca)
  phi_stmt_3026 <=> (branch_block_stmt_1659/bbx_xnphx_xix_xi_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3026/phi_stmt_3026_req branch_block_stmt_1659/bbx_xnphx_xix_xix_xpreheader_bbx_xnphx_xix_xi_PhiReq/phi_stmt_3026/phi_stmt_3026_req) (branch_block_stmt_1659/merge_stmt_3018_PhiAck/phi_stmt_3026_ack)
  // 		iNsTr_190 := (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1091
  // (shifted_divisorx_x03x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_3038_inst <=> (branch_block_stmt_1659/assign_stmt_3039_to_assign_stmt_3050/SHL_u32_u32_3038_Sample/rr branch_block_stmt_1659/assign_stmt_3039_to_assign_stmt_3050/SHL_u32_u32_3038_Update/cr) (branch_block_stmt_1659/assign_stmt_3039_to_assign_stmt_3050/SHL_u32_u32_3038_Sample/ra branch_block_stmt_1659/assign_stmt_3039_to_assign_stmt_3050/SHL_u32_u32_3038_Update/ca)
  // 		iNsTr_191 := (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1092
  // (curr_quotientx_x02x_xix_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_3044_inst <=> (branch_block_stmt_1659/assign_stmt_3039_to_assign_stmt_3050/SHL_u32_u32_3044_Sample/rr branch_block_stmt_1659/assign_stmt_3039_to_assign_stmt_3050/SHL_u32_u32_3044_Update/cr) (branch_block_stmt_1659/assign_stmt_3039_to_assign_stmt_3050/SHL_u32_u32_3044_Sample/ra branch_block_stmt_1659/assign_stmt_3039_to_assign_stmt_3050/SHL_u32_u32_3044_Update/ca)
  // 		iNsTr_192 := (iNsTr_190 < iNsTr_146)
  //  file prog.aa, line 1094
  // (iNsTr_190 < iNsTr_146)
  ULT_u32_u1_3049_inst <=> (branch_block_stmt_1659/assign_stmt_3039_to_assign_stmt_3050/ULT_u32_u1_3049_Sample/rr branch_block_stmt_1659/assign_stmt_3039_to_assign_stmt_3050/ULT_u32_u1_3049_Update/cr) (branch_block_stmt_1659/assign_stmt_3039_to_assign_stmt_3050/ULT_u32_u1_3049_Sample/ra branch_block_stmt_1659/assign_stmt_3039_to_assign_stmt_3050/ULT_u32_u1_3049_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1095
  if_stmt_3051_branch <=> (branch_block_stmt_1659/if_stmt_3051_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_3051_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_3051_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1097
  // ($cast ($uint<32>) iNsTr_191 )
  type_cast_3061_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3058/phi_stmt_3058_sources/type_cast_3061/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3058/phi_stmt_3058_sources/type_cast_3061/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3058/phi_stmt_3058_sources/type_cast_3061/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3058/phi_stmt_3058_sources/type_cast_3061/SplitProtocol/Update/ca)
  phi_stmt_3058 <=> (branch_block_stmt_1659/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3058/phi_stmt_3058_req) (branch_block_stmt_1659/merge_stmt_3057_PhiAck/phi_stmt_3058_ack)
  // ($cast ($uint<32>) iNsTr_190 )
  type_cast_3065_inst <=> (branch_block_stmt_1659/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3062/phi_stmt_3062_sources/type_cast_3065/SplitProtocol/Sample/rr branch_block_stmt_1659/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3062/phi_stmt_3062_sources/type_cast_3065/SplitProtocol/Update/cr) (branch_block_stmt_1659/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3062/phi_stmt_3062_sources/type_cast_3065/SplitProtocol/Sample/ra branch_block_stmt_1659/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3062/phi_stmt_3062_sources/type_cast_3065/SplitProtocol/Update/ca)
  phi_stmt_3062 <=> (branch_block_stmt_1659/bbx_xnphx_xix_xi_xx_x_crit_edgex_xix_xix_xloopexit_PhiReq/phi_stmt_3062/phi_stmt_3062_req) (branch_block_stmt_1659/merge_stmt_3057_PhiAck/phi_stmt_3062_ack)
  // CP-DP links for merge  
  //  file prog.aa, line 1103
  // ($cast ($uint<32>) xx_xlcssa2 )
  type_cast_3075_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3069/phi_stmt_3069_sources/type_cast_3075/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3069/phi_stmt_3069_sources/type_cast_3075/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3069/phi_stmt_3069_sources/type_cast_3075/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3069/phi_stmt_3069_sources/type_cast_3075/SplitProtocol/Update/ca)
  phi_stmt_3069 <=> (branch_block_stmt_1659/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3069/phi_stmt_3069_req branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3069/phi_stmt_3069_req) (branch_block_stmt_1659/merge_stmt_3068_PhiAck/phi_stmt_3069_ack)
  // ($cast ($uint<32>) xx_xlcssa3 )
  type_cast_3082_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3076/phi_stmt_3076_sources/type_cast_3082/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3076/phi_stmt_3076_sources/type_cast_3082/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3076/phi_stmt_3076_sources/type_cast_3082/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3076/phi_stmt_3076_sources/type_cast_3082/SplitProtocol/Update/ca)
  phi_stmt_3076 <=> (branch_block_stmt_1659/bbx_xnph7x_xix_xi_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3076/phi_stmt_3076_req branch_block_stmt_1659/xx_x_crit_edgex_xix_xix_xloopexit_xx_x_crit_edgex_xix_xi_PhiReq/phi_stmt_3076/phi_stmt_3076_req) (branch_block_stmt_1659/merge_stmt_3068_PhiAck/phi_stmt_3076_ack)
  // 		iNsTr_169 := (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  //  file prog.aa, line 1107
  // (curr_quotientx_x0x_xlcssax_xix_xi + quotientx_x05x_xix_xi)
  ADD_u32_u32_3087_inst <=> (branch_block_stmt_1659/assign_stmt_3088_to_assign_stmt_3099/ADD_u32_u32_3087_Sample/rr branch_block_stmt_1659/assign_stmt_3088_to_assign_stmt_3099/ADD_u32_u32_3087_Update/cr) (branch_block_stmt_1659/assign_stmt_3088_to_assign_stmt_3099/ADD_u32_u32_3087_Sample/ra branch_block_stmt_1659/assign_stmt_3088_to_assign_stmt_3099/ADD_u32_u32_3087_Update/ca)
  // 		iNsTr_170 := (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  //  file prog.aa, line 1108
  // (xx_x016x_xix_xi - shifted_divisorx_x0x_xlcssax_xix_xi)
  SUB_u32_u32_3092_inst <=> (branch_block_stmt_1659/assign_stmt_3088_to_assign_stmt_3099/SUB_u32_u32_3092_Sample/rr branch_block_stmt_1659/assign_stmt_3088_to_assign_stmt_3099/SUB_u32_u32_3092_Update/cr) (branch_block_stmt_1659/assign_stmt_3088_to_assign_stmt_3099/SUB_u32_u32_3092_Sample/ra branch_block_stmt_1659/assign_stmt_3088_to_assign_stmt_3099/SUB_u32_u32_3092_Update/ca)
  // 		iNsTr_171 := (iNsTr_170 < ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
  //  file prog.aa, line 1110
  // (iNsTr_170 < ($bitcast ($uint<32>) _b00000000000000011001111010000011  ))
  ULT_u32_u1_3098_inst <=> (branch_block_stmt_1659/assign_stmt_3088_to_assign_stmt_3099/ULT_u32_u1_3098_Sample/rr branch_block_stmt_1659/assign_stmt_3088_to_assign_stmt_3099/ULT_u32_u1_3098_Update/cr) (branch_block_stmt_1659/assign_stmt_3088_to_assign_stmt_3099/ULT_u32_u1_3098_Sample/ra branch_block_stmt_1659/assign_stmt_3088_to_assign_stmt_3099/ULT_u32_u1_3098_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1111
  if_stmt_3100_branch <=> (branch_block_stmt_1659/if_stmt_3100_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_3100_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_3100_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1113
  // ($cast ($uint<32>) iNsTr_169 )
  type_cast_3110_inst <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_3107/phi_stmt_3107_sources/type_cast_3110/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_3107/phi_stmt_3107_sources/type_cast_3110/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_3107/phi_stmt_3107_sources/type_cast_3110/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_3107/phi_stmt_3107_sources/type_cast_3110/SplitProtocol/Update/ca)
  phi_stmt_3107 <=> (branch_block_stmt_1659/xx_x_crit_edgex_xix_xi_udiv32x_xexitx_xpreheaderx_xi_PhiReq/phi_stmt_3107/phi_stmt_3107_req) (branch_block_stmt_1659/merge_stmt_3106_PhiAck/phi_stmt_3107_ack)
  // 		iNsTr_194 := (tmp10x_xi35 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 1116
  // (tmp10x_xi35 >> ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  LSHR_u32_u32_3116_inst <=> (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/LSHR_u32_u32_3116_Sample/rr branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/LSHR_u32_u32_3116_Update/cr) (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/LSHR_u32_u32_3116_Sample/ra branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/LSHR_u32_u32_3116_Update/ca)
  // 		iNsTr_195 := (tmp10x_xi35 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  //  file prog.aa, line 1117
  // (tmp10x_xi35 & ($bitcast ($uint<32>) _b10000000000000000000000000000000  ))
  AND_u32_u32_3122_inst <=> (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u32_u32_3122_Sample/rr branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u32_u32_3122_Update/cr) (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u32_u32_3122_Sample/ra branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u32_u32_3122_Update/ca)
  // 		iNsTr_196 := (iNsTr_194 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  //  file prog.aa, line 1118
  // (iNsTr_194 & ($bitcast ($uint<32>) _b00000000000000000000000011111111  ))
  AND_u32_u32_3128_inst <=> (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u32_u32_3128_Sample/rr branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u32_u32_3128_Update/cr) (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u32_u32_3128_Sample/ra branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u32_u32_3128_Update/ca)
  // 		iNsTr_197 := (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000010  ))
  //  file prog.aa, line 1119
  // (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000010  ))
  ADD_u32_u32_3134_inst <=> (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/ADD_u32_u32_3134_Sample/rr branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/ADD_u32_u32_3134_Update/cr) (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/ADD_u32_u32_3134_Sample/ra branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/ADD_u32_u32_3134_Update/ca)
  // 		iNsTr_198 := (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 1120
  // (xx_xlcssa4 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_3140_inst <=> (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u32_u32_3140_Sample/rr branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u32_u32_3140_Update/cr) (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u32_u32_3140_Sample/ra branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u32_u32_3140_Update/ca)
  // 		iNsTr_199 := (iNsTr_198 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 1122
  // (iNsTr_198 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_3146_inst <=> (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/EQ_u32_u1_3146_Sample/rr branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/EQ_u32_u1_3146_Update/cr) (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/EQ_u32_u1_3146_Sample/ra branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/EQ_u32_u1_3146_Update/ca)
  // 		iNsTr_200 := (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 1124
  // (($bitcast ($int<32>) xx_xlcssa4 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) xx_xlcssa4 )
  type_cast_3150_inst <=> (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/type_cast_3150_Sample/rr branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/type_cast_3150_Update/cr) (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/type_cast_3150_Sample/ra branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/type_cast_3150_Update/ca)
  NEQ_i32_u1_3154_inst <=> (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/NEQ_i32_u1_3154_Sample/rr branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/NEQ_i32_u1_3154_Update/cr) (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/NEQ_i32_u1_3154_Sample/ra branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/NEQ_i32_u1_3154_Update/ca)
  // 		orx_xcond11x_xi := (iNsTr_199 & iNsTr_200)
  //  file prog.aa, line 1125
  // (iNsTr_199 & iNsTr_200)
  AND_u1_u1_3159_inst <=> (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u1_u1_3159_Sample/rr branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u1_u1_3159_Update/cr) (branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u1_u1_3159_Sample/ra branch_block_stmt_1659/assign_stmt_3117_to_assign_stmt_3160/AND_u1_u1_3159_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1126
  if_stmt_3161_branch <=> (branch_block_stmt_1659/if_stmt_3161_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_3161_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_3161_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1128
  // CP-DP links for merge  
  //  file prog.aa, line 1132
  // ($cast ($uint<32>) indvarx_xnextx_xi )
  type_cast_3173_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3170/phi_stmt_3170_sources/type_cast_3173/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3170/phi_stmt_3170_sources/type_cast_3173/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3170/phi_stmt_3170_sources/type_cast_3173/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3170/phi_stmt_3170_sources/type_cast_3173/SplitProtocol/Update/ca)
  phi_stmt_3170 <=> (branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3170/phi_stmt_3170_req branch_block_stmt_1659/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_3170/phi_stmt_3170_req) (branch_block_stmt_1659/merge_stmt_3169_PhiAck/phi_stmt_3170_ack)
  // ($cast ($uint<32>) iNsTr_212 )
  type_cast_3180_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3177/phi_stmt_3177_sources/type_cast_3180/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3177/phi_stmt_3177_sources/type_cast_3180/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3177/phi_stmt_3177_sources/type_cast_3180/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3177/phi_stmt_3177_sources/type_cast_3180/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa4 )
  type_cast_3182_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_3177/phi_stmt_3177_sources/type_cast_3182/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_3177/phi_stmt_3177_sources/type_cast_3182/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_3177/phi_stmt_3177_sources/type_cast_3182/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_3177/phi_stmt_3177_sources/type_cast_3182/SplitProtocol/Update/ca)
  phi_stmt_3177 <=> (branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xi_PhiReq/phi_stmt_3177/phi_stmt_3177_req branch_block_stmt_1659/udiv32x_xexitx_xix_xpreheader_udiv32x_xexitx_xi_PhiReq/phi_stmt_3177/phi_stmt_3177_req) (branch_block_stmt_1659/merge_stmt_3169_PhiAck/phi_stmt_3177_ack)
  // 		iNsTr_212 := (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1136
  // (tempx_x012x_xi << ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  SHL_u32_u32_3188_inst <=> (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/SHL_u32_u32_3188_Sample/rr branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/SHL_u32_u32_3188_Update/cr) (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/SHL_u32_u32_3188_Sample/ra branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/SHL_u32_u32_3188_Update/ca)
  // 		iNsTr_213 := (iNsTr_212 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  //  file prog.aa, line 1137
  // (iNsTr_212 & ($bitcast ($uint<32>) _b00000000100000000000000000000000  ))
  AND_u32_u32_3194_inst <=> (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/AND_u32_u32_3194_Sample/rr branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/AND_u32_u32_3194_Update/cr) (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/AND_u32_u32_3194_Sample/ra branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/AND_u32_u32_3194_Update/ca)
  // 		iNsTr_214 := (iNsTr_213 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  //  file prog.aa, line 1139
  // (iNsTr_213 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
  EQ_u32_u1_3200_inst <=> (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/EQ_u32_u1_3200_Sample/rr branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/EQ_u32_u1_3200_Update/cr) (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/EQ_u32_u1_3200_Sample/ra branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/EQ_u32_u1_3200_Update/ca)
  // 		iNsTr_215 := (($bitcast ($int<32>) iNsTr_212 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  //  file prog.aa, line 1141
  // (($bitcast ($int<32>) iNsTr_212 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
  // ($bitcast ($int<32>) iNsTr_212 )
  type_cast_3204_inst <=> (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/type_cast_3204_Sample/rr branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/type_cast_3204_Update/cr) (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/type_cast_3204_Sample/ra branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/type_cast_3204_Update/ca)
  NEQ_i32_u1_3208_inst <=> (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/NEQ_i32_u1_3208_Sample/rr branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/NEQ_i32_u1_3208_Update/cr) (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/NEQ_i32_u1_3208_Sample/ra branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/NEQ_i32_u1_3208_Update/ca)
  // 		orx_xcondx_xi := (iNsTr_214 & iNsTr_215)
  //  file prog.aa, line 1142
  // (iNsTr_214 & iNsTr_215)
  AND_u1_u1_3213_inst <=> (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/AND_u1_u1_3213_Sample/rr branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/AND_u1_u1_3213_Update/cr) (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/AND_u1_u1_3213_Sample/ra branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/AND_u1_u1_3213_Update/ca)
  // 		indvarx_xnextx_xi := (iNsTr_211 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.aa, line 1143
  // (iNsTr_211 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  ADD_u32_u32_3219_inst <=> (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/ADD_u32_u32_3219_Sample/rr branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/ADD_u32_u32_3219_Update/cr) (branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/ADD_u32_u32_3219_Sample/ra branch_block_stmt_1659/assign_stmt_3189_to_assign_stmt_3220/ADD_u32_u32_3219_Update/ca)
  // CP-DP links for if  
  //  file prog.aa, line 1144
  if_stmt_3221_branch <=> (branch_block_stmt_1659/if_stmt_3221_eval_test/branch_req) (branch_block_stmt_1659/if_stmt_3221_else_link/else_choice_transition branch_block_stmt_1659/if_stmt_3221_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.aa, line 1146
  // ($cast ($uint<32>) iNsTr_212 )
  type_cast_3231_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3228/phi_stmt_3228_sources/type_cast_3231/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3228/phi_stmt_3228_sources/type_cast_3231/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3228/phi_stmt_3228_sources/type_cast_3231/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3228/phi_stmt_3228_sources/type_cast_3231/SplitProtocol/Update/ca)
  phi_stmt_3228 <=> (branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3228/phi_stmt_3228_req) (branch_block_stmt_1659/merge_stmt_3227_PhiAck/phi_stmt_3228_ack)
  // ($cast ($uint<32>) iNsTr_211 )
  type_cast_3235_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3232/phi_stmt_3232_sources/type_cast_3235/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3232/phi_stmt_3232_sources/type_cast_3235/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3232/phi_stmt_3232_sources/type_cast_3235/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3232/phi_stmt_3232_sources/type_cast_3235/SplitProtocol/Update/ca)
  phi_stmt_3232 <=> (branch_block_stmt_1659/udiv32x_xexitx_xi_udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_PhiReq/phi_stmt_3232/phi_stmt_3232_req) (branch_block_stmt_1659/merge_stmt_3227_PhiAck/phi_stmt_3232_ack)
  // 		tmp25x_xi := (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000001  ))
  //  file prog.aa, line 1150
  // (iNsTr_196 + ($bitcast ($uint<32>) _b11111111111111111111111110000001  ))
  ADD_u32_u32_3241_inst <=> (branch_block_stmt_1659/assign_stmt_3242_to_assign_stmt_3247/ADD_u32_u32_3241_Sample/rr branch_block_stmt_1659/assign_stmt_3242_to_assign_stmt_3247/ADD_u32_u32_3241_Update/cr) (branch_block_stmt_1659/assign_stmt_3242_to_assign_stmt_3247/ADD_u32_u32_3241_Sample/ra branch_block_stmt_1659/assign_stmt_3242_to_assign_stmt_3247/ADD_u32_u32_3241_Update/ca)
  // 		tmp26x_xi := (tmp25x_xi - xx_xlcssa)
  //  file prog.aa, line 1151
  // (tmp25x_xi - xx_xlcssa)
  SUB_u32_u32_3246_inst <=> (branch_block_stmt_1659/assign_stmt_3242_to_assign_stmt_3247/SUB_u32_u32_3246_Sample/rr branch_block_stmt_1659/assign_stmt_3242_to_assign_stmt_3247/SUB_u32_u32_3246_Update/cr) (branch_block_stmt_1659/assign_stmt_3242_to_assign_stmt_3247/SUB_u32_u32_3246_Sample/ra branch_block_stmt_1659/assign_stmt_3242_to_assign_stmt_3247/SUB_u32_u32_3246_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 1154
  // ($cast ($uint<32>) tmp26x_xi )
  type_cast_3253_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3250/phi_stmt_3250_sources/type_cast_3253/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3250/phi_stmt_3250_sources/type_cast_3253/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3250/phi_stmt_3250_sources/type_cast_3253/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3250/phi_stmt_3250_sources/type_cast_3253/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) iNsTr_197 )
  type_cast_3255_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3250/phi_stmt_3250_sources/type_cast_3255/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3250/phi_stmt_3250_sources/type_cast_3255/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3250/phi_stmt_3250_sources/type_cast_3255/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3250/phi_stmt_3250_sources/type_cast_3255/SplitProtocol/Update/ca)
  phi_stmt_3250 <=> (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3250/phi_stmt_3250_req branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3250/phi_stmt_3250_req) (branch_block_stmt_1659/merge_stmt_3249_PhiAck/phi_stmt_3250_ack)
  // ($cast ($uint<32>) xx_xlcssa1 )
  type_cast_3259_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3256/phi_stmt_3256_sources/type_cast_3259/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3256/phi_stmt_3256_sources/type_cast_3259/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3256/phi_stmt_3256_sources/type_cast_3259/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3256/phi_stmt_3256_sources/type_cast_3259/SplitProtocol/Update/ca)
  // ($cast ($uint<32>) xx_xlcssa4 )
  type_cast_3261_inst <=> (branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3256/phi_stmt_3256_sources/type_cast_3261/SplitProtocol/Sample/rr branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3256/phi_stmt_3256_sources/type_cast_3261/SplitProtocol/Update/cr) (branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3256/phi_stmt_3256_sources/type_cast_3261/SplitProtocol/Sample/ra branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3256/phi_stmt_3256_sources/type_cast_3261/SplitProtocol/Update/ca)
  phi_stmt_3256 <=> (branch_block_stmt_1659/udiv32x_xexitx_xx_xcritedge_crit_edgex_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3256/phi_stmt_3256_req branch_block_stmt_1659/udiv32x_xexitx_xpreheaderx_xi_xx_xcritedgex_xi_PhiReq/phi_stmt_3256/phi_stmt_3256_req) (branch_block_stmt_1659/merge_stmt_3249_PhiAck/phi_stmt_3256_ack)
  // 		iNsTr_205 := (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  //  file prog.aa, line 1158
  // (tempx_x0x_xlcssax_xi & ($bitcast ($uint<32>) _b00000000011111111111111111111111  ))
  AND_u32_u32_3267_inst <=> (branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/AND_u32_u32_3267_Sample/rr branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/AND_u32_u32_3267_Update/cr) (branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/AND_u32_u32_3267_Sample/ra branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/AND_u32_u32_3267_Update/ca)
  // 		iNsTr_206 := (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  //  file prog.aa, line 1159
  // (expx_x0x_xlcssax_xi << ($bitcast ($uint<32>) _b00000000000000000000000000010111  ))
  SHL_u32_u32_3273_inst <=> (branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/SHL_u32_u32_3273_Sample/rr branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/SHL_u32_u32_3273_Update/cr) (branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/SHL_u32_u32_3273_Sample/ra branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/SHL_u32_u32_3273_Update/ca)
  // 		iNsTr_207 := (iNsTr_206 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  //  file prog.aa, line 1160
  // (iNsTr_206 + ($bitcast ($uint<32>) _b01000100000000000000000000000000  ))
  ADD_u32_u32_3279_inst <=> (branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/ADD_u32_u32_3279_Sample/rr branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/ADD_u32_u32_3279_Update/cr) (branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/ADD_u32_u32_3279_Sample/ra branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/ADD_u32_u32_3279_Update/ca)
  // 		iNsTr_208 := (iNsTr_207 | iNsTr_195)
  //  file prog.aa, line 1161
  // (iNsTr_207 | iNsTr_195)
  OR_u32_u32_3284_inst <=> (branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/OR_u32_u32_3284_Sample/rr branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/OR_u32_u32_3284_Update/cr) (branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/OR_u32_u32_3284_Sample/ra branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/OR_u32_u32_3284_Update/ca)
  // 		iNsTr_209 := (iNsTr_208 | iNsTr_205)
  //  file prog.aa, line 1162
  // (iNsTr_208 | iNsTr_205)
  OR_u32_u32_3289_inst <=> (branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/OR_u32_u32_3289_Sample/rr branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/OR_u32_u32_3289_Update/cr) (branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/OR_u32_u32_3289_Sample/ra branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/OR_u32_u32_3289_Update/ca)
  // 		tmp3x_xi := ($bitcast ($float<8,23>) iNsTr_209 )
  //  file prog.aa, line 1163
  // ($bitcast ($float<8,23>) iNsTr_209 )
  type_cast_3293_inst <=> (branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/type_cast_3293_Sample/rr branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/type_cast_3293_Update/cr) (branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/type_cast_3293_Sample/ra branch_block_stmt_1659/assign_stmt_3268_to_assign_stmt_3294/type_cast_3293_Update/ca)
  // CP-DP links for merge  
  //  file prog.aa, line 1166
  // ($cast ($float<8,23>) tmp3x_xi )
  type_cast_3300_inst <=> (branch_block_stmt_1659/xx_xcritedgex_xi_fdiv32x_xexit_PhiReq/phi_stmt_3297/phi_stmt_3297_sources/type_cast_3300/SplitProtocol/Sample/rr branch_block_stmt_1659/xx_xcritedgex_xi_fdiv32x_xexit_PhiReq/phi_stmt_3297/phi_stmt_3297_sources/type_cast_3300/SplitProtocol/Update/cr) (branch_block_stmt_1659/xx_xcritedgex_xi_fdiv32x_xexit_PhiReq/phi_stmt_3297/phi_stmt_3297_sources/type_cast_3300/SplitProtocol/Sample/ra branch_block_stmt_1659/xx_xcritedgex_xi_fdiv32x_xexit_PhiReq/phi_stmt_3297/phi_stmt_3297_sources/type_cast_3300/SplitProtocol/Update/ca)
  phi_stmt_3297 <=> (branch_block_stmt_1659/xx_xcritedgex_xi_fdiv32x_xexit_PhiReq/phi_stmt_3297/phi_stmt_3297_req branch_block_stmt_1659/bb_46_fdiv32x_xexit_PhiReq/phi_stmt_3297/phi_stmt_3297_req) (branch_block_stmt_1659/merge_stmt_3296_PhiAck/phi_stmt_3297_ack)
  // 		out_data := iNsTr_173
  //  file prog.aa, line 1169
  // out_data
  WPIPE_out_data_3305_inst <=> (branch_block_stmt_1659/assign_stmt_3307/WPIPE_out_data_3305_Sample/req branch_block_stmt_1659/assign_stmt_3307/WPIPE_out_data_3305_Update/req) (branch_block_stmt_1659/assign_stmt_3307/WPIPE_out_data_3305_Sample/ack branch_block_stmt_1659/assign_stmt_3307/WPIPE_out_data_3305_Update/ack)
  // 		out_data := iNsTr_67
  //  file prog.aa, line 1170
  // out_data
  WPIPE_out_data_3308_inst <=> (branch_block_stmt_1659/assign_stmt_3310/WPIPE_out_data_3308_Sample/req branch_block_stmt_1659/assign_stmt_3310/WPIPE_out_data_3308_Update/req) (branch_block_stmt_1659/assign_stmt_3310/WPIPE_out_data_3308_Sample/ack branch_block_stmt_1659/assign_stmt_3310/WPIPE_out_data_3308_Update/ack)
  // 		out_data := iNsTr_49
  //  file prog.aa, line 1171
  // out_data
  WPIPE_out_data_3311_inst <=> (branch_block_stmt_1659/assign_stmt_3313/WPIPE_out_data_3311_Sample/req branch_block_stmt_1659/assign_stmt_3313/WPIPE_out_data_3311_Update/req) (branch_block_stmt_1659/assign_stmt_3313/WPIPE_out_data_3311_Sample/ack branch_block_stmt_1659/assign_stmt_3313/WPIPE_out_data_3311_Update/ack)
  // 		out_data := iNsTr_39
  //  file prog.aa, line 1172
  // out_data
  WPIPE_out_data_3314_inst <=> (branch_block_stmt_1659/assign_stmt_3316/WPIPE_out_data_3314_Sample/req branch_block_stmt_1659/assign_stmt_3316/WPIPE_out_data_3314_Update/req) (branch_block_stmt_1659/assign_stmt_3316/WPIPE_out_data_3314_Sample/ack branch_block_stmt_1659/assign_stmt_3316/WPIPE_out_data_3314_Update/ack)
  // 		phitmp := (iNsTr_20 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
  //  file prog.aa, line 1173
  // (iNsTr_20 * ($bitcast ($float<8,23>) _f3.000000e-01 ))
  MUL_f32_f32_3321_inst <=> (branch_block_stmt_1659/assign_stmt_3322_to_assign_stmt_3334/MUL_f32_f32_3321_Sample/rr branch_block_stmt_1659/assign_stmt_3322_to_assign_stmt_3334/MUL_f32_f32_3321_Update/cr) (branch_block_stmt_1659/assign_stmt_3322_to_assign_stmt_3334/MUL_f32_f32_3321_Sample/ra branch_block_stmt_1659/assign_stmt_3322_to_assign_stmt_3334/MUL_f32_f32_3321_Update/ca)
  // 		phitmp31 := (iNsTr_39 * ($bitcast ($float<8,23>) _f9.995200e-01 ))
  //  file prog.aa, line 1174
  // (iNsTr_39 * ($bitcast ($float<8,23>) _f9.995200e-01 ))
  MUL_f32_f32_3327_inst <=> (branch_block_stmt_1659/assign_stmt_3322_to_assign_stmt_3334/MUL_f32_f32_3327_Sample/rr branch_block_stmt_1659/assign_stmt_3322_to_assign_stmt_3334/MUL_f32_f32_3327_Update/cr) (branch_block_stmt_1659/assign_stmt_3322_to_assign_stmt_3334/MUL_f32_f32_3327_Sample/ra branch_block_stmt_1659/assign_stmt_3322_to_assign_stmt_3334/MUL_f32_f32_3327_Update/ca)
  // 		phitmp33 := (iNsTr_69 * ($bitcast ($float<8,23>) _f9.949860e-01 ))
  //  file prog.aa, line 1175
  // (iNsTr_69 * ($bitcast ($float<8,23>) _f9.949860e-01 ))
  MUL_f32_f32_3333_inst <=> (branch_block_stmt_1659/assign_stmt_3322_to_assign_stmt_3334/MUL_f32_f32_3333_Sample/rr branch_block_stmt_1659/assign_stmt_3322_to_assign_stmt_3334/MUL_f32_f32_3333_Update/cr) (branch_block_stmt_1659/assign_stmt_3322_to_assign_stmt_3334/MUL_f32_f32_3333_Sample/ra branch_block_stmt_1659/assign_stmt_3322_to_assign_stmt_3334/MUL_f32_f32_3333_Update/ca)
}
